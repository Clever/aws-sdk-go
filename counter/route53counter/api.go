// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package route53counter

import (
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/route53"
)

// AssociateVPCWithHostedZoneRequest is a passthrough to the underlying AssociateVPCWithHostedZoneRequest.
// It will increment the count of requests made to AssociateVPCWithHostedZone.
func (c *Route53) AssociateVPCWithHostedZoneRequest(input *route53.AssociateVPCWithHostedZoneInput) (req *request.Request, output *route53.AssociateVPCWithHostedZoneOutput) {
	c.inc("AssociateVPCWithHostedZone")
	return c.svc.AssociateVPCWithHostedZoneRequest(input)
}

// AssociateVPCWithHostedZone is a passthrough to the underlying AssociateVPCWithHostedZone method.
// It will increment the count of requests made to AssociateVPCWithHostedZone.
func (c *Route53) AssociateVPCWithHostedZone(input *route53.AssociateVPCWithHostedZoneInput) (*route53.AssociateVPCWithHostedZoneOutput, error) {
	c.inc("AssociateVPCWithHostedZone")
	return c.svc.AssociateVPCWithHostedZone(input)
}

// AssociateVPCWithHostedZoneWithContext is a passthrough to the underlying AssociateVPCWithHostedZoneWithContext method.
// It will increment the count of requests made to AssociateVPCWithHostedZone.
func (c *Route53) AssociateVPCWithHostedZoneWithContext(ctx aws.Context, input *route53.AssociateVPCWithHostedZoneInput, opts ...request.Option) (*route53.AssociateVPCWithHostedZoneOutput, error) {
	c.inc("AssociateVPCWithHostedZone")
	return c.svc.AssociateVPCWithHostedZoneWithContext(ctx, input, opts...)
}

// ChangeResourceRecordSetsRequest is a passthrough to the underlying ChangeResourceRecordSetsRequest.
// It will increment the count of requests made to ChangeResourceRecordSets.
func (c *Route53) ChangeResourceRecordSetsRequest(input *route53.ChangeResourceRecordSetsInput) (req *request.Request, output *route53.ChangeResourceRecordSetsOutput) {
	c.inc("ChangeResourceRecordSets")
	return c.svc.ChangeResourceRecordSetsRequest(input)
}

// ChangeResourceRecordSets is a passthrough to the underlying ChangeResourceRecordSets method.
// It will increment the count of requests made to ChangeResourceRecordSets.
func (c *Route53) ChangeResourceRecordSets(input *route53.ChangeResourceRecordSetsInput) (*route53.ChangeResourceRecordSetsOutput, error) {
	c.inc("ChangeResourceRecordSets")
	return c.svc.ChangeResourceRecordSets(input)
}

// ChangeResourceRecordSetsWithContext is a passthrough to the underlying ChangeResourceRecordSetsWithContext method.
// It will increment the count of requests made to ChangeResourceRecordSets.
func (c *Route53) ChangeResourceRecordSetsWithContext(ctx aws.Context, input *route53.ChangeResourceRecordSetsInput, opts ...request.Option) (*route53.ChangeResourceRecordSetsOutput, error) {
	c.inc("ChangeResourceRecordSets")
	return c.svc.ChangeResourceRecordSetsWithContext(ctx, input, opts...)
}

// ChangeTagsForResourceRequest is a passthrough to the underlying ChangeTagsForResourceRequest.
// It will increment the count of requests made to ChangeTagsForResource.
func (c *Route53) ChangeTagsForResourceRequest(input *route53.ChangeTagsForResourceInput) (req *request.Request, output *route53.ChangeTagsForResourceOutput) {
	c.inc("ChangeTagsForResource")
	return c.svc.ChangeTagsForResourceRequest(input)
}

// ChangeTagsForResource is a passthrough to the underlying ChangeTagsForResource method.
// It will increment the count of requests made to ChangeTagsForResource.
func (c *Route53) ChangeTagsForResource(input *route53.ChangeTagsForResourceInput) (*route53.ChangeTagsForResourceOutput, error) {
	c.inc("ChangeTagsForResource")
	return c.svc.ChangeTagsForResource(input)
}

// ChangeTagsForResourceWithContext is a passthrough to the underlying ChangeTagsForResourceWithContext method.
// It will increment the count of requests made to ChangeTagsForResource.
func (c *Route53) ChangeTagsForResourceWithContext(ctx aws.Context, input *route53.ChangeTagsForResourceInput, opts ...request.Option) (*route53.ChangeTagsForResourceOutput, error) {
	c.inc("ChangeTagsForResource")
	return c.svc.ChangeTagsForResourceWithContext(ctx, input, opts...)
}

// CreateHealthCheckRequest is a passthrough to the underlying CreateHealthCheckRequest.
// It will increment the count of requests made to CreateHealthCheck.
func (c *Route53) CreateHealthCheckRequest(input *route53.CreateHealthCheckInput) (req *request.Request, output *route53.CreateHealthCheckOutput) {
	c.inc("CreateHealthCheck")
	return c.svc.CreateHealthCheckRequest(input)
}

// CreateHealthCheck is a passthrough to the underlying CreateHealthCheck method.
// It will increment the count of requests made to CreateHealthCheck.
func (c *Route53) CreateHealthCheck(input *route53.CreateHealthCheckInput) (*route53.CreateHealthCheckOutput, error) {
	c.inc("CreateHealthCheck")
	return c.svc.CreateHealthCheck(input)
}

// CreateHealthCheckWithContext is a passthrough to the underlying CreateHealthCheckWithContext method.
// It will increment the count of requests made to CreateHealthCheck.
func (c *Route53) CreateHealthCheckWithContext(ctx aws.Context, input *route53.CreateHealthCheckInput, opts ...request.Option) (*route53.CreateHealthCheckOutput, error) {
	c.inc("CreateHealthCheck")
	return c.svc.CreateHealthCheckWithContext(ctx, input, opts...)
}

// CreateHostedZoneRequest is a passthrough to the underlying CreateHostedZoneRequest.
// It will increment the count of requests made to CreateHostedZone.
func (c *Route53) CreateHostedZoneRequest(input *route53.CreateHostedZoneInput) (req *request.Request, output *route53.CreateHostedZoneOutput) {
	c.inc("CreateHostedZone")
	return c.svc.CreateHostedZoneRequest(input)
}

// CreateHostedZone is a passthrough to the underlying CreateHostedZone method.
// It will increment the count of requests made to CreateHostedZone.
func (c *Route53) CreateHostedZone(input *route53.CreateHostedZoneInput) (*route53.CreateHostedZoneOutput, error) {
	c.inc("CreateHostedZone")
	return c.svc.CreateHostedZone(input)
}

// CreateHostedZoneWithContext is a passthrough to the underlying CreateHostedZoneWithContext method.
// It will increment the count of requests made to CreateHostedZone.
func (c *Route53) CreateHostedZoneWithContext(ctx aws.Context, input *route53.CreateHostedZoneInput, opts ...request.Option) (*route53.CreateHostedZoneOutput, error) {
	c.inc("CreateHostedZone")
	return c.svc.CreateHostedZoneWithContext(ctx, input, opts...)
}

// CreateQueryLoggingConfigRequest is a passthrough to the underlying CreateQueryLoggingConfigRequest.
// It will increment the count of requests made to CreateQueryLoggingConfig.
func (c *Route53) CreateQueryLoggingConfigRequest(input *route53.CreateQueryLoggingConfigInput) (req *request.Request, output *route53.CreateQueryLoggingConfigOutput) {
	c.inc("CreateQueryLoggingConfig")
	return c.svc.CreateQueryLoggingConfigRequest(input)
}

// CreateQueryLoggingConfig is a passthrough to the underlying CreateQueryLoggingConfig method.
// It will increment the count of requests made to CreateQueryLoggingConfig.
func (c *Route53) CreateQueryLoggingConfig(input *route53.CreateQueryLoggingConfigInput) (*route53.CreateQueryLoggingConfigOutput, error) {
	c.inc("CreateQueryLoggingConfig")
	return c.svc.CreateQueryLoggingConfig(input)
}

// CreateQueryLoggingConfigWithContext is a passthrough to the underlying CreateQueryLoggingConfigWithContext method.
// It will increment the count of requests made to CreateQueryLoggingConfig.
func (c *Route53) CreateQueryLoggingConfigWithContext(ctx aws.Context, input *route53.CreateQueryLoggingConfigInput, opts ...request.Option) (*route53.CreateQueryLoggingConfigOutput, error) {
	c.inc("CreateQueryLoggingConfig")
	return c.svc.CreateQueryLoggingConfigWithContext(ctx, input, opts...)
}

// CreateReusableDelegationSetRequest is a passthrough to the underlying CreateReusableDelegationSetRequest.
// It will increment the count of requests made to CreateReusableDelegationSet.
func (c *Route53) CreateReusableDelegationSetRequest(input *route53.CreateReusableDelegationSetInput) (req *request.Request, output *route53.CreateReusableDelegationSetOutput) {
	c.inc("CreateReusableDelegationSet")
	return c.svc.CreateReusableDelegationSetRequest(input)
}

// CreateReusableDelegationSet is a passthrough to the underlying CreateReusableDelegationSet method.
// It will increment the count of requests made to CreateReusableDelegationSet.
func (c *Route53) CreateReusableDelegationSet(input *route53.CreateReusableDelegationSetInput) (*route53.CreateReusableDelegationSetOutput, error) {
	c.inc("CreateReusableDelegationSet")
	return c.svc.CreateReusableDelegationSet(input)
}

// CreateReusableDelegationSetWithContext is a passthrough to the underlying CreateReusableDelegationSetWithContext method.
// It will increment the count of requests made to CreateReusableDelegationSet.
func (c *Route53) CreateReusableDelegationSetWithContext(ctx aws.Context, input *route53.CreateReusableDelegationSetInput, opts ...request.Option) (*route53.CreateReusableDelegationSetOutput, error) {
	c.inc("CreateReusableDelegationSet")
	return c.svc.CreateReusableDelegationSetWithContext(ctx, input, opts...)
}

// CreateTrafficPolicyRequest is a passthrough to the underlying CreateTrafficPolicyRequest.
// It will increment the count of requests made to CreateTrafficPolicy.
func (c *Route53) CreateTrafficPolicyRequest(input *route53.CreateTrafficPolicyInput) (req *request.Request, output *route53.CreateTrafficPolicyOutput) {
	c.inc("CreateTrafficPolicy")
	return c.svc.CreateTrafficPolicyRequest(input)
}

// CreateTrafficPolicy is a passthrough to the underlying CreateTrafficPolicy method.
// It will increment the count of requests made to CreateTrafficPolicy.
func (c *Route53) CreateTrafficPolicy(input *route53.CreateTrafficPolicyInput) (*route53.CreateTrafficPolicyOutput, error) {
	c.inc("CreateTrafficPolicy")
	return c.svc.CreateTrafficPolicy(input)
}

// CreateTrafficPolicyWithContext is a passthrough to the underlying CreateTrafficPolicyWithContext method.
// It will increment the count of requests made to CreateTrafficPolicy.
func (c *Route53) CreateTrafficPolicyWithContext(ctx aws.Context, input *route53.CreateTrafficPolicyInput, opts ...request.Option) (*route53.CreateTrafficPolicyOutput, error) {
	c.inc("CreateTrafficPolicy")
	return c.svc.CreateTrafficPolicyWithContext(ctx, input, opts...)
}

// CreateTrafficPolicyInstanceRequest is a passthrough to the underlying CreateTrafficPolicyInstanceRequest.
// It will increment the count of requests made to CreateTrafficPolicyInstance.
func (c *Route53) CreateTrafficPolicyInstanceRequest(input *route53.CreateTrafficPolicyInstanceInput) (req *request.Request, output *route53.CreateTrafficPolicyInstanceOutput) {
	c.inc("CreateTrafficPolicyInstance")
	return c.svc.CreateTrafficPolicyInstanceRequest(input)
}

// CreateTrafficPolicyInstance is a passthrough to the underlying CreateTrafficPolicyInstance method.
// It will increment the count of requests made to CreateTrafficPolicyInstance.
func (c *Route53) CreateTrafficPolicyInstance(input *route53.CreateTrafficPolicyInstanceInput) (*route53.CreateTrafficPolicyInstanceOutput, error) {
	c.inc("CreateTrafficPolicyInstance")
	return c.svc.CreateTrafficPolicyInstance(input)
}

// CreateTrafficPolicyInstanceWithContext is a passthrough to the underlying CreateTrafficPolicyInstanceWithContext method.
// It will increment the count of requests made to CreateTrafficPolicyInstance.
func (c *Route53) CreateTrafficPolicyInstanceWithContext(ctx aws.Context, input *route53.CreateTrafficPolicyInstanceInput, opts ...request.Option) (*route53.CreateTrafficPolicyInstanceOutput, error) {
	c.inc("CreateTrafficPolicyInstance")
	return c.svc.CreateTrafficPolicyInstanceWithContext(ctx, input, opts...)
}

// CreateTrafficPolicyVersionRequest is a passthrough to the underlying CreateTrafficPolicyVersionRequest.
// It will increment the count of requests made to CreateTrafficPolicyVersion.
func (c *Route53) CreateTrafficPolicyVersionRequest(input *route53.CreateTrafficPolicyVersionInput) (req *request.Request, output *route53.CreateTrafficPolicyVersionOutput) {
	c.inc("CreateTrafficPolicyVersion")
	return c.svc.CreateTrafficPolicyVersionRequest(input)
}

// CreateTrafficPolicyVersion is a passthrough to the underlying CreateTrafficPolicyVersion method.
// It will increment the count of requests made to CreateTrafficPolicyVersion.
func (c *Route53) CreateTrafficPolicyVersion(input *route53.CreateTrafficPolicyVersionInput) (*route53.CreateTrafficPolicyVersionOutput, error) {
	c.inc("CreateTrafficPolicyVersion")
	return c.svc.CreateTrafficPolicyVersion(input)
}

// CreateTrafficPolicyVersionWithContext is a passthrough to the underlying CreateTrafficPolicyVersionWithContext method.
// It will increment the count of requests made to CreateTrafficPolicyVersion.
func (c *Route53) CreateTrafficPolicyVersionWithContext(ctx aws.Context, input *route53.CreateTrafficPolicyVersionInput, opts ...request.Option) (*route53.CreateTrafficPolicyVersionOutput, error) {
	c.inc("CreateTrafficPolicyVersion")
	return c.svc.CreateTrafficPolicyVersionWithContext(ctx, input, opts...)
}

// CreateVPCAssociationAuthorizationRequest is a passthrough to the underlying CreateVPCAssociationAuthorizationRequest.
// It will increment the count of requests made to CreateVPCAssociationAuthorization.
func (c *Route53) CreateVPCAssociationAuthorizationRequest(input *route53.CreateVPCAssociationAuthorizationInput) (req *request.Request, output *route53.CreateVPCAssociationAuthorizationOutput) {
	c.inc("CreateVPCAssociationAuthorization")
	return c.svc.CreateVPCAssociationAuthorizationRequest(input)
}

// CreateVPCAssociationAuthorization is a passthrough to the underlying CreateVPCAssociationAuthorization method.
// It will increment the count of requests made to CreateVPCAssociationAuthorization.
func (c *Route53) CreateVPCAssociationAuthorization(input *route53.CreateVPCAssociationAuthorizationInput) (*route53.CreateVPCAssociationAuthorizationOutput, error) {
	c.inc("CreateVPCAssociationAuthorization")
	return c.svc.CreateVPCAssociationAuthorization(input)
}

// CreateVPCAssociationAuthorizationWithContext is a passthrough to the underlying CreateVPCAssociationAuthorizationWithContext method.
// It will increment the count of requests made to CreateVPCAssociationAuthorization.
func (c *Route53) CreateVPCAssociationAuthorizationWithContext(ctx aws.Context, input *route53.CreateVPCAssociationAuthorizationInput, opts ...request.Option) (*route53.CreateVPCAssociationAuthorizationOutput, error) {
	c.inc("CreateVPCAssociationAuthorization")
	return c.svc.CreateVPCAssociationAuthorizationWithContext(ctx, input, opts...)
}

// DeleteHealthCheckRequest is a passthrough to the underlying DeleteHealthCheckRequest.
// It will increment the count of requests made to DeleteHealthCheck.
func (c *Route53) DeleteHealthCheckRequest(input *route53.DeleteHealthCheckInput) (req *request.Request, output *route53.DeleteHealthCheckOutput) {
	c.inc("DeleteHealthCheck")
	return c.svc.DeleteHealthCheckRequest(input)
}

// DeleteHealthCheck is a passthrough to the underlying DeleteHealthCheck method.
// It will increment the count of requests made to DeleteHealthCheck.
func (c *Route53) DeleteHealthCheck(input *route53.DeleteHealthCheckInput) (*route53.DeleteHealthCheckOutput, error) {
	c.inc("DeleteHealthCheck")
	return c.svc.DeleteHealthCheck(input)
}

// DeleteHealthCheckWithContext is a passthrough to the underlying DeleteHealthCheckWithContext method.
// It will increment the count of requests made to DeleteHealthCheck.
func (c *Route53) DeleteHealthCheckWithContext(ctx aws.Context, input *route53.DeleteHealthCheckInput, opts ...request.Option) (*route53.DeleteHealthCheckOutput, error) {
	c.inc("DeleteHealthCheck")
	return c.svc.DeleteHealthCheckWithContext(ctx, input, opts...)
}

// DeleteHostedZoneRequest is a passthrough to the underlying DeleteHostedZoneRequest.
// It will increment the count of requests made to DeleteHostedZone.
func (c *Route53) DeleteHostedZoneRequest(input *route53.DeleteHostedZoneInput) (req *request.Request, output *route53.DeleteHostedZoneOutput) {
	c.inc("DeleteHostedZone")
	return c.svc.DeleteHostedZoneRequest(input)
}

// DeleteHostedZone is a passthrough to the underlying DeleteHostedZone method.
// It will increment the count of requests made to DeleteHostedZone.
func (c *Route53) DeleteHostedZone(input *route53.DeleteHostedZoneInput) (*route53.DeleteHostedZoneOutput, error) {
	c.inc("DeleteHostedZone")
	return c.svc.DeleteHostedZone(input)
}

// DeleteHostedZoneWithContext is a passthrough to the underlying DeleteHostedZoneWithContext method.
// It will increment the count of requests made to DeleteHostedZone.
func (c *Route53) DeleteHostedZoneWithContext(ctx aws.Context, input *route53.DeleteHostedZoneInput, opts ...request.Option) (*route53.DeleteHostedZoneOutput, error) {
	c.inc("DeleteHostedZone")
	return c.svc.DeleteHostedZoneWithContext(ctx, input, opts...)
}

// DeleteQueryLoggingConfigRequest is a passthrough to the underlying DeleteQueryLoggingConfigRequest.
// It will increment the count of requests made to DeleteQueryLoggingConfig.
func (c *Route53) DeleteQueryLoggingConfigRequest(input *route53.DeleteQueryLoggingConfigInput) (req *request.Request, output *route53.DeleteQueryLoggingConfigOutput) {
	c.inc("DeleteQueryLoggingConfig")
	return c.svc.DeleteQueryLoggingConfigRequest(input)
}

// DeleteQueryLoggingConfig is a passthrough to the underlying DeleteQueryLoggingConfig method.
// It will increment the count of requests made to DeleteQueryLoggingConfig.
func (c *Route53) DeleteQueryLoggingConfig(input *route53.DeleteQueryLoggingConfigInput) (*route53.DeleteQueryLoggingConfigOutput, error) {
	c.inc("DeleteQueryLoggingConfig")
	return c.svc.DeleteQueryLoggingConfig(input)
}

// DeleteQueryLoggingConfigWithContext is a passthrough to the underlying DeleteQueryLoggingConfigWithContext method.
// It will increment the count of requests made to DeleteQueryLoggingConfig.
func (c *Route53) DeleteQueryLoggingConfigWithContext(ctx aws.Context, input *route53.DeleteQueryLoggingConfigInput, opts ...request.Option) (*route53.DeleteQueryLoggingConfigOutput, error) {
	c.inc("DeleteQueryLoggingConfig")
	return c.svc.DeleteQueryLoggingConfigWithContext(ctx, input, opts...)
}

// DeleteReusableDelegationSetRequest is a passthrough to the underlying DeleteReusableDelegationSetRequest.
// It will increment the count of requests made to DeleteReusableDelegationSet.
func (c *Route53) DeleteReusableDelegationSetRequest(input *route53.DeleteReusableDelegationSetInput) (req *request.Request, output *route53.DeleteReusableDelegationSetOutput) {
	c.inc("DeleteReusableDelegationSet")
	return c.svc.DeleteReusableDelegationSetRequest(input)
}

// DeleteReusableDelegationSet is a passthrough to the underlying DeleteReusableDelegationSet method.
// It will increment the count of requests made to DeleteReusableDelegationSet.
func (c *Route53) DeleteReusableDelegationSet(input *route53.DeleteReusableDelegationSetInput) (*route53.DeleteReusableDelegationSetOutput, error) {
	c.inc("DeleteReusableDelegationSet")
	return c.svc.DeleteReusableDelegationSet(input)
}

// DeleteReusableDelegationSetWithContext is a passthrough to the underlying DeleteReusableDelegationSetWithContext method.
// It will increment the count of requests made to DeleteReusableDelegationSet.
func (c *Route53) DeleteReusableDelegationSetWithContext(ctx aws.Context, input *route53.DeleteReusableDelegationSetInput, opts ...request.Option) (*route53.DeleteReusableDelegationSetOutput, error) {
	c.inc("DeleteReusableDelegationSet")
	return c.svc.DeleteReusableDelegationSetWithContext(ctx, input, opts...)
}

// DeleteTrafficPolicyRequest is a passthrough to the underlying DeleteTrafficPolicyRequest.
// It will increment the count of requests made to DeleteTrafficPolicy.
func (c *Route53) DeleteTrafficPolicyRequest(input *route53.DeleteTrafficPolicyInput) (req *request.Request, output *route53.DeleteTrafficPolicyOutput) {
	c.inc("DeleteTrafficPolicy")
	return c.svc.DeleteTrafficPolicyRequest(input)
}

// DeleteTrafficPolicy is a passthrough to the underlying DeleteTrafficPolicy method.
// It will increment the count of requests made to DeleteTrafficPolicy.
func (c *Route53) DeleteTrafficPolicy(input *route53.DeleteTrafficPolicyInput) (*route53.DeleteTrafficPolicyOutput, error) {
	c.inc("DeleteTrafficPolicy")
	return c.svc.DeleteTrafficPolicy(input)
}

// DeleteTrafficPolicyWithContext is a passthrough to the underlying DeleteTrafficPolicyWithContext method.
// It will increment the count of requests made to DeleteTrafficPolicy.
func (c *Route53) DeleteTrafficPolicyWithContext(ctx aws.Context, input *route53.DeleteTrafficPolicyInput, opts ...request.Option) (*route53.DeleteTrafficPolicyOutput, error) {
	c.inc("DeleteTrafficPolicy")
	return c.svc.DeleteTrafficPolicyWithContext(ctx, input, opts...)
}

// DeleteTrafficPolicyInstanceRequest is a passthrough to the underlying DeleteTrafficPolicyInstanceRequest.
// It will increment the count of requests made to DeleteTrafficPolicyInstance.
func (c *Route53) DeleteTrafficPolicyInstanceRequest(input *route53.DeleteTrafficPolicyInstanceInput) (req *request.Request, output *route53.DeleteTrafficPolicyInstanceOutput) {
	c.inc("DeleteTrafficPolicyInstance")
	return c.svc.DeleteTrafficPolicyInstanceRequest(input)
}

// DeleteTrafficPolicyInstance is a passthrough to the underlying DeleteTrafficPolicyInstance method.
// It will increment the count of requests made to DeleteTrafficPolicyInstance.
func (c *Route53) DeleteTrafficPolicyInstance(input *route53.DeleteTrafficPolicyInstanceInput) (*route53.DeleteTrafficPolicyInstanceOutput, error) {
	c.inc("DeleteTrafficPolicyInstance")
	return c.svc.DeleteTrafficPolicyInstance(input)
}

// DeleteTrafficPolicyInstanceWithContext is a passthrough to the underlying DeleteTrafficPolicyInstanceWithContext method.
// It will increment the count of requests made to DeleteTrafficPolicyInstance.
func (c *Route53) DeleteTrafficPolicyInstanceWithContext(ctx aws.Context, input *route53.DeleteTrafficPolicyInstanceInput, opts ...request.Option) (*route53.DeleteTrafficPolicyInstanceOutput, error) {
	c.inc("DeleteTrafficPolicyInstance")
	return c.svc.DeleteTrafficPolicyInstanceWithContext(ctx, input, opts...)
}

// DeleteVPCAssociationAuthorizationRequest is a passthrough to the underlying DeleteVPCAssociationAuthorizationRequest.
// It will increment the count of requests made to DeleteVPCAssociationAuthorization.
func (c *Route53) DeleteVPCAssociationAuthorizationRequest(input *route53.DeleteVPCAssociationAuthorizationInput) (req *request.Request, output *route53.DeleteVPCAssociationAuthorizationOutput) {
	c.inc("DeleteVPCAssociationAuthorization")
	return c.svc.DeleteVPCAssociationAuthorizationRequest(input)
}

// DeleteVPCAssociationAuthorization is a passthrough to the underlying DeleteVPCAssociationAuthorization method.
// It will increment the count of requests made to DeleteVPCAssociationAuthorization.
func (c *Route53) DeleteVPCAssociationAuthorization(input *route53.DeleteVPCAssociationAuthorizationInput) (*route53.DeleteVPCAssociationAuthorizationOutput, error) {
	c.inc("DeleteVPCAssociationAuthorization")
	return c.svc.DeleteVPCAssociationAuthorization(input)
}

// DeleteVPCAssociationAuthorizationWithContext is a passthrough to the underlying DeleteVPCAssociationAuthorizationWithContext method.
// It will increment the count of requests made to DeleteVPCAssociationAuthorization.
func (c *Route53) DeleteVPCAssociationAuthorizationWithContext(ctx aws.Context, input *route53.DeleteVPCAssociationAuthorizationInput, opts ...request.Option) (*route53.DeleteVPCAssociationAuthorizationOutput, error) {
	c.inc("DeleteVPCAssociationAuthorization")
	return c.svc.DeleteVPCAssociationAuthorizationWithContext(ctx, input, opts...)
}

// DisassociateVPCFromHostedZoneRequest is a passthrough to the underlying DisassociateVPCFromHostedZoneRequest.
// It will increment the count of requests made to DisassociateVPCFromHostedZone.
func (c *Route53) DisassociateVPCFromHostedZoneRequest(input *route53.DisassociateVPCFromHostedZoneInput) (req *request.Request, output *route53.DisassociateVPCFromHostedZoneOutput) {
	c.inc("DisassociateVPCFromHostedZone")
	return c.svc.DisassociateVPCFromHostedZoneRequest(input)
}

// DisassociateVPCFromHostedZone is a passthrough to the underlying DisassociateVPCFromHostedZone method.
// It will increment the count of requests made to DisassociateVPCFromHostedZone.
func (c *Route53) DisassociateVPCFromHostedZone(input *route53.DisassociateVPCFromHostedZoneInput) (*route53.DisassociateVPCFromHostedZoneOutput, error) {
	c.inc("DisassociateVPCFromHostedZone")
	return c.svc.DisassociateVPCFromHostedZone(input)
}

// DisassociateVPCFromHostedZoneWithContext is a passthrough to the underlying DisassociateVPCFromHostedZoneWithContext method.
// It will increment the count of requests made to DisassociateVPCFromHostedZone.
func (c *Route53) DisassociateVPCFromHostedZoneWithContext(ctx aws.Context, input *route53.DisassociateVPCFromHostedZoneInput, opts ...request.Option) (*route53.DisassociateVPCFromHostedZoneOutput, error) {
	c.inc("DisassociateVPCFromHostedZone")
	return c.svc.DisassociateVPCFromHostedZoneWithContext(ctx, input, opts...)
}

// GetChangeRequest is a passthrough to the underlying GetChangeRequest.
// It will increment the count of requests made to GetChange.
func (c *Route53) GetChangeRequest(input *route53.GetChangeInput) (req *request.Request, output *route53.GetChangeOutput) {
	c.inc("GetChange")
	return c.svc.GetChangeRequest(input)
}

// GetChange is a passthrough to the underlying GetChange method.
// It will increment the count of requests made to GetChange.
func (c *Route53) GetChange(input *route53.GetChangeInput) (*route53.GetChangeOutput, error) {
	c.inc("GetChange")
	return c.svc.GetChange(input)
}

// GetChangeWithContext is a passthrough to the underlying GetChangeWithContext method.
// It will increment the count of requests made to GetChange.
func (c *Route53) GetChangeWithContext(ctx aws.Context, input *route53.GetChangeInput, opts ...request.Option) (*route53.GetChangeOutput, error) {
	c.inc("GetChange")
	return c.svc.GetChangeWithContext(ctx, input, opts...)
}

// GetCheckerIpRangesRequest is a passthrough to the underlying GetCheckerIpRangesRequest.
// It will increment the count of requests made to GetCheckerIpRanges.
func (c *Route53) GetCheckerIpRangesRequest(input *route53.GetCheckerIpRangesInput) (req *request.Request, output *route53.GetCheckerIpRangesOutput) {
	c.inc("GetCheckerIpRanges")
	return c.svc.GetCheckerIpRangesRequest(input)
}

// GetCheckerIpRanges is a passthrough to the underlying GetCheckerIpRanges method.
// It will increment the count of requests made to GetCheckerIpRanges.
func (c *Route53) GetCheckerIpRanges(input *route53.GetCheckerIpRangesInput) (*route53.GetCheckerIpRangesOutput, error) {
	c.inc("GetCheckerIpRanges")
	return c.svc.GetCheckerIpRanges(input)
}

// GetCheckerIpRangesWithContext is a passthrough to the underlying GetCheckerIpRangesWithContext method.
// It will increment the count of requests made to GetCheckerIpRanges.
func (c *Route53) GetCheckerIpRangesWithContext(ctx aws.Context, input *route53.GetCheckerIpRangesInput, opts ...request.Option) (*route53.GetCheckerIpRangesOutput, error) {
	c.inc("GetCheckerIpRanges")
	return c.svc.GetCheckerIpRangesWithContext(ctx, input, opts...)
}

// GetGeoLocationRequest is a passthrough to the underlying GetGeoLocationRequest.
// It will increment the count of requests made to GetGeoLocation.
func (c *Route53) GetGeoLocationRequest(input *route53.GetGeoLocationInput) (req *request.Request, output *route53.GetGeoLocationOutput) {
	c.inc("GetGeoLocation")
	return c.svc.GetGeoLocationRequest(input)
}

// GetGeoLocation is a passthrough to the underlying GetGeoLocation method.
// It will increment the count of requests made to GetGeoLocation.
func (c *Route53) GetGeoLocation(input *route53.GetGeoLocationInput) (*route53.GetGeoLocationOutput, error) {
	c.inc("GetGeoLocation")
	return c.svc.GetGeoLocation(input)
}

// GetGeoLocationWithContext is a passthrough to the underlying GetGeoLocationWithContext method.
// It will increment the count of requests made to GetGeoLocation.
func (c *Route53) GetGeoLocationWithContext(ctx aws.Context, input *route53.GetGeoLocationInput, opts ...request.Option) (*route53.GetGeoLocationOutput, error) {
	c.inc("GetGeoLocation")
	return c.svc.GetGeoLocationWithContext(ctx, input, opts...)
}

// GetHealthCheckRequest is a passthrough to the underlying GetHealthCheckRequest.
// It will increment the count of requests made to GetHealthCheck.
func (c *Route53) GetHealthCheckRequest(input *route53.GetHealthCheckInput) (req *request.Request, output *route53.GetHealthCheckOutput) {
	c.inc("GetHealthCheck")
	return c.svc.GetHealthCheckRequest(input)
}

// GetHealthCheck is a passthrough to the underlying GetHealthCheck method.
// It will increment the count of requests made to GetHealthCheck.
func (c *Route53) GetHealthCheck(input *route53.GetHealthCheckInput) (*route53.GetHealthCheckOutput, error) {
	c.inc("GetHealthCheck")
	return c.svc.GetHealthCheck(input)
}

// GetHealthCheckWithContext is a passthrough to the underlying GetHealthCheckWithContext method.
// It will increment the count of requests made to GetHealthCheck.
func (c *Route53) GetHealthCheckWithContext(ctx aws.Context, input *route53.GetHealthCheckInput, opts ...request.Option) (*route53.GetHealthCheckOutput, error) {
	c.inc("GetHealthCheck")
	return c.svc.GetHealthCheckWithContext(ctx, input, opts...)
}

// GetHealthCheckCountRequest is a passthrough to the underlying GetHealthCheckCountRequest.
// It will increment the count of requests made to GetHealthCheckCount.
func (c *Route53) GetHealthCheckCountRequest(input *route53.GetHealthCheckCountInput) (req *request.Request, output *route53.GetHealthCheckCountOutput) {
	c.inc("GetHealthCheckCount")
	return c.svc.GetHealthCheckCountRequest(input)
}

// GetHealthCheckCount is a passthrough to the underlying GetHealthCheckCount method.
// It will increment the count of requests made to GetHealthCheckCount.
func (c *Route53) GetHealthCheckCount(input *route53.GetHealthCheckCountInput) (*route53.GetHealthCheckCountOutput, error) {
	c.inc("GetHealthCheckCount")
	return c.svc.GetHealthCheckCount(input)
}

// GetHealthCheckCountWithContext is a passthrough to the underlying GetHealthCheckCountWithContext method.
// It will increment the count of requests made to GetHealthCheckCount.
func (c *Route53) GetHealthCheckCountWithContext(ctx aws.Context, input *route53.GetHealthCheckCountInput, opts ...request.Option) (*route53.GetHealthCheckCountOutput, error) {
	c.inc("GetHealthCheckCount")
	return c.svc.GetHealthCheckCountWithContext(ctx, input, opts...)
}

// GetHealthCheckLastFailureReasonRequest is a passthrough to the underlying GetHealthCheckLastFailureReasonRequest.
// It will increment the count of requests made to GetHealthCheckLastFailureReason.
func (c *Route53) GetHealthCheckLastFailureReasonRequest(input *route53.GetHealthCheckLastFailureReasonInput) (req *request.Request, output *route53.GetHealthCheckLastFailureReasonOutput) {
	c.inc("GetHealthCheckLastFailureReason")
	return c.svc.GetHealthCheckLastFailureReasonRequest(input)
}

// GetHealthCheckLastFailureReason is a passthrough to the underlying GetHealthCheckLastFailureReason method.
// It will increment the count of requests made to GetHealthCheckLastFailureReason.
func (c *Route53) GetHealthCheckLastFailureReason(input *route53.GetHealthCheckLastFailureReasonInput) (*route53.GetHealthCheckLastFailureReasonOutput, error) {
	c.inc("GetHealthCheckLastFailureReason")
	return c.svc.GetHealthCheckLastFailureReason(input)
}

// GetHealthCheckLastFailureReasonWithContext is a passthrough to the underlying GetHealthCheckLastFailureReasonWithContext method.
// It will increment the count of requests made to GetHealthCheckLastFailureReason.
func (c *Route53) GetHealthCheckLastFailureReasonWithContext(ctx aws.Context, input *route53.GetHealthCheckLastFailureReasonInput, opts ...request.Option) (*route53.GetHealthCheckLastFailureReasonOutput, error) {
	c.inc("GetHealthCheckLastFailureReason")
	return c.svc.GetHealthCheckLastFailureReasonWithContext(ctx, input, opts...)
}

// GetHealthCheckStatusRequest is a passthrough to the underlying GetHealthCheckStatusRequest.
// It will increment the count of requests made to GetHealthCheckStatus.
func (c *Route53) GetHealthCheckStatusRequest(input *route53.GetHealthCheckStatusInput) (req *request.Request, output *route53.GetHealthCheckStatusOutput) {
	c.inc("GetHealthCheckStatus")
	return c.svc.GetHealthCheckStatusRequest(input)
}

// GetHealthCheckStatus is a passthrough to the underlying GetHealthCheckStatus method.
// It will increment the count of requests made to GetHealthCheckStatus.
func (c *Route53) GetHealthCheckStatus(input *route53.GetHealthCheckStatusInput) (*route53.GetHealthCheckStatusOutput, error) {
	c.inc("GetHealthCheckStatus")
	return c.svc.GetHealthCheckStatus(input)
}

// GetHealthCheckStatusWithContext is a passthrough to the underlying GetHealthCheckStatusWithContext method.
// It will increment the count of requests made to GetHealthCheckStatus.
func (c *Route53) GetHealthCheckStatusWithContext(ctx aws.Context, input *route53.GetHealthCheckStatusInput, opts ...request.Option) (*route53.GetHealthCheckStatusOutput, error) {
	c.inc("GetHealthCheckStatus")
	return c.svc.GetHealthCheckStatusWithContext(ctx, input, opts...)
}

// GetHostedZoneRequest is a passthrough to the underlying GetHostedZoneRequest.
// It will increment the count of requests made to GetHostedZone.
func (c *Route53) GetHostedZoneRequest(input *route53.GetHostedZoneInput) (req *request.Request, output *route53.GetHostedZoneOutput) {
	c.inc("GetHostedZone")
	return c.svc.GetHostedZoneRequest(input)
}

// GetHostedZone is a passthrough to the underlying GetHostedZone method.
// It will increment the count of requests made to GetHostedZone.
func (c *Route53) GetHostedZone(input *route53.GetHostedZoneInput) (*route53.GetHostedZoneOutput, error) {
	c.inc("GetHostedZone")
	return c.svc.GetHostedZone(input)
}

// GetHostedZoneWithContext is a passthrough to the underlying GetHostedZoneWithContext method.
// It will increment the count of requests made to GetHostedZone.
func (c *Route53) GetHostedZoneWithContext(ctx aws.Context, input *route53.GetHostedZoneInput, opts ...request.Option) (*route53.GetHostedZoneOutput, error) {
	c.inc("GetHostedZone")
	return c.svc.GetHostedZoneWithContext(ctx, input, opts...)
}

// GetHostedZoneCountRequest is a passthrough to the underlying GetHostedZoneCountRequest.
// It will increment the count of requests made to GetHostedZoneCount.
func (c *Route53) GetHostedZoneCountRequest(input *route53.GetHostedZoneCountInput) (req *request.Request, output *route53.GetHostedZoneCountOutput) {
	c.inc("GetHostedZoneCount")
	return c.svc.GetHostedZoneCountRequest(input)
}

// GetHostedZoneCount is a passthrough to the underlying GetHostedZoneCount method.
// It will increment the count of requests made to GetHostedZoneCount.
func (c *Route53) GetHostedZoneCount(input *route53.GetHostedZoneCountInput) (*route53.GetHostedZoneCountOutput, error) {
	c.inc("GetHostedZoneCount")
	return c.svc.GetHostedZoneCount(input)
}

// GetHostedZoneCountWithContext is a passthrough to the underlying GetHostedZoneCountWithContext method.
// It will increment the count of requests made to GetHostedZoneCount.
func (c *Route53) GetHostedZoneCountWithContext(ctx aws.Context, input *route53.GetHostedZoneCountInput, opts ...request.Option) (*route53.GetHostedZoneCountOutput, error) {
	c.inc("GetHostedZoneCount")
	return c.svc.GetHostedZoneCountWithContext(ctx, input, opts...)
}

// GetQueryLoggingConfigRequest is a passthrough to the underlying GetQueryLoggingConfigRequest.
// It will increment the count of requests made to GetQueryLoggingConfig.
func (c *Route53) GetQueryLoggingConfigRequest(input *route53.GetQueryLoggingConfigInput) (req *request.Request, output *route53.GetQueryLoggingConfigOutput) {
	c.inc("GetQueryLoggingConfig")
	return c.svc.GetQueryLoggingConfigRequest(input)
}

// GetQueryLoggingConfig is a passthrough to the underlying GetQueryLoggingConfig method.
// It will increment the count of requests made to GetQueryLoggingConfig.
func (c *Route53) GetQueryLoggingConfig(input *route53.GetQueryLoggingConfigInput) (*route53.GetQueryLoggingConfigOutput, error) {
	c.inc("GetQueryLoggingConfig")
	return c.svc.GetQueryLoggingConfig(input)
}

// GetQueryLoggingConfigWithContext is a passthrough to the underlying GetQueryLoggingConfigWithContext method.
// It will increment the count of requests made to GetQueryLoggingConfig.
func (c *Route53) GetQueryLoggingConfigWithContext(ctx aws.Context, input *route53.GetQueryLoggingConfigInput, opts ...request.Option) (*route53.GetQueryLoggingConfigOutput, error) {
	c.inc("GetQueryLoggingConfig")
	return c.svc.GetQueryLoggingConfigWithContext(ctx, input, opts...)
}

// GetReusableDelegationSetRequest is a passthrough to the underlying GetReusableDelegationSetRequest.
// It will increment the count of requests made to GetReusableDelegationSet.
func (c *Route53) GetReusableDelegationSetRequest(input *route53.GetReusableDelegationSetInput) (req *request.Request, output *route53.GetReusableDelegationSetOutput) {
	c.inc("GetReusableDelegationSet")
	return c.svc.GetReusableDelegationSetRequest(input)
}

// GetReusableDelegationSet is a passthrough to the underlying GetReusableDelegationSet method.
// It will increment the count of requests made to GetReusableDelegationSet.
func (c *Route53) GetReusableDelegationSet(input *route53.GetReusableDelegationSetInput) (*route53.GetReusableDelegationSetOutput, error) {
	c.inc("GetReusableDelegationSet")
	return c.svc.GetReusableDelegationSet(input)
}

// GetReusableDelegationSetWithContext is a passthrough to the underlying GetReusableDelegationSetWithContext method.
// It will increment the count of requests made to GetReusableDelegationSet.
func (c *Route53) GetReusableDelegationSetWithContext(ctx aws.Context, input *route53.GetReusableDelegationSetInput, opts ...request.Option) (*route53.GetReusableDelegationSetOutput, error) {
	c.inc("GetReusableDelegationSet")
	return c.svc.GetReusableDelegationSetWithContext(ctx, input, opts...)
}

// GetTrafficPolicyRequest is a passthrough to the underlying GetTrafficPolicyRequest.
// It will increment the count of requests made to GetTrafficPolicy.
func (c *Route53) GetTrafficPolicyRequest(input *route53.GetTrafficPolicyInput) (req *request.Request, output *route53.GetTrafficPolicyOutput) {
	c.inc("GetTrafficPolicy")
	return c.svc.GetTrafficPolicyRequest(input)
}

// GetTrafficPolicy is a passthrough to the underlying GetTrafficPolicy method.
// It will increment the count of requests made to GetTrafficPolicy.
func (c *Route53) GetTrafficPolicy(input *route53.GetTrafficPolicyInput) (*route53.GetTrafficPolicyOutput, error) {
	c.inc("GetTrafficPolicy")
	return c.svc.GetTrafficPolicy(input)
}

// GetTrafficPolicyWithContext is a passthrough to the underlying GetTrafficPolicyWithContext method.
// It will increment the count of requests made to GetTrafficPolicy.
func (c *Route53) GetTrafficPolicyWithContext(ctx aws.Context, input *route53.GetTrafficPolicyInput, opts ...request.Option) (*route53.GetTrafficPolicyOutput, error) {
	c.inc("GetTrafficPolicy")
	return c.svc.GetTrafficPolicyWithContext(ctx, input, opts...)
}

// GetTrafficPolicyInstanceRequest is a passthrough to the underlying GetTrafficPolicyInstanceRequest.
// It will increment the count of requests made to GetTrafficPolicyInstance.
func (c *Route53) GetTrafficPolicyInstanceRequest(input *route53.GetTrafficPolicyInstanceInput) (req *request.Request, output *route53.GetTrafficPolicyInstanceOutput) {
	c.inc("GetTrafficPolicyInstance")
	return c.svc.GetTrafficPolicyInstanceRequest(input)
}

// GetTrafficPolicyInstance is a passthrough to the underlying GetTrafficPolicyInstance method.
// It will increment the count of requests made to GetTrafficPolicyInstance.
func (c *Route53) GetTrafficPolicyInstance(input *route53.GetTrafficPolicyInstanceInput) (*route53.GetTrafficPolicyInstanceOutput, error) {
	c.inc("GetTrafficPolicyInstance")
	return c.svc.GetTrafficPolicyInstance(input)
}

// GetTrafficPolicyInstanceWithContext is a passthrough to the underlying GetTrafficPolicyInstanceWithContext method.
// It will increment the count of requests made to GetTrafficPolicyInstance.
func (c *Route53) GetTrafficPolicyInstanceWithContext(ctx aws.Context, input *route53.GetTrafficPolicyInstanceInput, opts ...request.Option) (*route53.GetTrafficPolicyInstanceOutput, error) {
	c.inc("GetTrafficPolicyInstance")
	return c.svc.GetTrafficPolicyInstanceWithContext(ctx, input, opts...)
}

// GetTrafficPolicyInstanceCountRequest is a passthrough to the underlying GetTrafficPolicyInstanceCountRequest.
// It will increment the count of requests made to GetTrafficPolicyInstanceCount.
func (c *Route53) GetTrafficPolicyInstanceCountRequest(input *route53.GetTrafficPolicyInstanceCountInput) (req *request.Request, output *route53.GetTrafficPolicyInstanceCountOutput) {
	c.inc("GetTrafficPolicyInstanceCount")
	return c.svc.GetTrafficPolicyInstanceCountRequest(input)
}

// GetTrafficPolicyInstanceCount is a passthrough to the underlying GetTrafficPolicyInstanceCount method.
// It will increment the count of requests made to GetTrafficPolicyInstanceCount.
func (c *Route53) GetTrafficPolicyInstanceCount(input *route53.GetTrafficPolicyInstanceCountInput) (*route53.GetTrafficPolicyInstanceCountOutput, error) {
	c.inc("GetTrafficPolicyInstanceCount")
	return c.svc.GetTrafficPolicyInstanceCount(input)
}

// GetTrafficPolicyInstanceCountWithContext is a passthrough to the underlying GetTrafficPolicyInstanceCountWithContext method.
// It will increment the count of requests made to GetTrafficPolicyInstanceCount.
func (c *Route53) GetTrafficPolicyInstanceCountWithContext(ctx aws.Context, input *route53.GetTrafficPolicyInstanceCountInput, opts ...request.Option) (*route53.GetTrafficPolicyInstanceCountOutput, error) {
	c.inc("GetTrafficPolicyInstanceCount")
	return c.svc.GetTrafficPolicyInstanceCountWithContext(ctx, input, opts...)
}

// ListGeoLocationsRequest is a passthrough to the underlying ListGeoLocationsRequest.
// It will increment the count of requests made to ListGeoLocations.
func (c *Route53) ListGeoLocationsRequest(input *route53.ListGeoLocationsInput) (req *request.Request, output *route53.ListGeoLocationsOutput) {
	c.inc("ListGeoLocations")
	return c.svc.ListGeoLocationsRequest(input)
}

// ListGeoLocations is a passthrough to the underlying ListGeoLocations method.
// It will increment the count of requests made to ListGeoLocations.
func (c *Route53) ListGeoLocations(input *route53.ListGeoLocationsInput) (*route53.ListGeoLocationsOutput, error) {
	c.inc("ListGeoLocations")
	return c.svc.ListGeoLocations(input)
}

// ListGeoLocationsWithContext is a passthrough to the underlying ListGeoLocationsWithContext method.
// It will increment the count of requests made to ListGeoLocations.
func (c *Route53) ListGeoLocationsWithContext(ctx aws.Context, input *route53.ListGeoLocationsInput, opts ...request.Option) (*route53.ListGeoLocationsOutput, error) {
	c.inc("ListGeoLocations")
	return c.svc.ListGeoLocationsWithContext(ctx, input, opts...)
}

// ListHealthChecksRequest is a passthrough to the underlying ListHealthChecksRequest.
// It will increment the count of requests made to ListHealthChecks.
func (c *Route53) ListHealthChecksRequest(input *route53.ListHealthChecksInput) (req *request.Request, output *route53.ListHealthChecksOutput) {
	c.inc("ListHealthChecks")
	return c.svc.ListHealthChecksRequest(input)
}

// ListHealthChecks is a passthrough to the underlying ListHealthChecks method.
// It will increment the count of requests made to ListHealthChecks.
func (c *Route53) ListHealthChecks(input *route53.ListHealthChecksInput) (*route53.ListHealthChecksOutput, error) {
	c.inc("ListHealthChecks")
	return c.svc.ListHealthChecks(input)
}

// ListHealthChecksWithContext is a passthrough to the underlying ListHealthChecksWithContext method.
// It will increment the count of requests made to ListHealthChecks.
func (c *Route53) ListHealthChecksWithContext(ctx aws.Context, input *route53.ListHealthChecksInput, opts ...request.Option) (*route53.ListHealthChecksOutput, error) {
	c.inc("ListHealthChecks")
	return c.svc.ListHealthChecksWithContext(ctx, input, opts...)
}

// ListHealthChecksPages is a passthrough to the underlying ListHealthChecksPages method.
// It will increment the count of requests made to ListHealthChecks on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListHealthChecksPagesWithContext to avoid this.
func (c *Route53) ListHealthChecksPages(input *route53.ListHealthChecksInput, fn func(*route53.ListHealthChecksOutput, bool) bool) error {
	wrappedFn := func(page *route53.ListHealthChecksOutput, lastPage bool) bool {
		c.inc("ListHealthChecks")
		return fn(page, lastPage)
	}
	return c.svc.ListHealthChecksPages(input, wrappedFn)
}

// ListHealthChecksPagesWithContext is a passthrough to the underlying ListHealthChecksPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListHealthChecks when applied to the request.
func (c *Route53) ListHealthChecksPagesWithContext(ctx aws.Context, input *route53.ListHealthChecksInput, fn func(*route53.ListHealthChecksOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListHealthChecks"))
	return c.svc.ListHealthChecksPagesWithContext(ctx, input, fn, opts...)
}

// ListHostedZonesRequest is a passthrough to the underlying ListHostedZonesRequest.
// It will increment the count of requests made to ListHostedZones.
func (c *Route53) ListHostedZonesRequest(input *route53.ListHostedZonesInput) (req *request.Request, output *route53.ListHostedZonesOutput) {
	c.inc("ListHostedZones")
	return c.svc.ListHostedZonesRequest(input)
}

// ListHostedZones is a passthrough to the underlying ListHostedZones method.
// It will increment the count of requests made to ListHostedZones.
func (c *Route53) ListHostedZones(input *route53.ListHostedZonesInput) (*route53.ListHostedZonesOutput, error) {
	c.inc("ListHostedZones")
	return c.svc.ListHostedZones(input)
}

// ListHostedZonesWithContext is a passthrough to the underlying ListHostedZonesWithContext method.
// It will increment the count of requests made to ListHostedZones.
func (c *Route53) ListHostedZonesWithContext(ctx aws.Context, input *route53.ListHostedZonesInput, opts ...request.Option) (*route53.ListHostedZonesOutput, error) {
	c.inc("ListHostedZones")
	return c.svc.ListHostedZonesWithContext(ctx, input, opts...)
}

// ListHostedZonesPages is a passthrough to the underlying ListHostedZonesPages method.
// It will increment the count of requests made to ListHostedZones on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListHostedZonesPagesWithContext to avoid this.
func (c *Route53) ListHostedZonesPages(input *route53.ListHostedZonesInput, fn func(*route53.ListHostedZonesOutput, bool) bool) error {
	wrappedFn := func(page *route53.ListHostedZonesOutput, lastPage bool) bool {
		c.inc("ListHostedZones")
		return fn(page, lastPage)
	}
	return c.svc.ListHostedZonesPages(input, wrappedFn)
}

// ListHostedZonesPagesWithContext is a passthrough to the underlying ListHostedZonesPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListHostedZones when applied to the request.
func (c *Route53) ListHostedZonesPagesWithContext(ctx aws.Context, input *route53.ListHostedZonesInput, fn func(*route53.ListHostedZonesOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListHostedZones"))
	return c.svc.ListHostedZonesPagesWithContext(ctx, input, fn, opts...)
}

// ListHostedZonesByNameRequest is a passthrough to the underlying ListHostedZonesByNameRequest.
// It will increment the count of requests made to ListHostedZonesByName.
func (c *Route53) ListHostedZonesByNameRequest(input *route53.ListHostedZonesByNameInput) (req *request.Request, output *route53.ListHostedZonesByNameOutput) {
	c.inc("ListHostedZonesByName")
	return c.svc.ListHostedZonesByNameRequest(input)
}

// ListHostedZonesByName is a passthrough to the underlying ListHostedZonesByName method.
// It will increment the count of requests made to ListHostedZonesByName.
func (c *Route53) ListHostedZonesByName(input *route53.ListHostedZonesByNameInput) (*route53.ListHostedZonesByNameOutput, error) {
	c.inc("ListHostedZonesByName")
	return c.svc.ListHostedZonesByName(input)
}

// ListHostedZonesByNameWithContext is a passthrough to the underlying ListHostedZonesByNameWithContext method.
// It will increment the count of requests made to ListHostedZonesByName.
func (c *Route53) ListHostedZonesByNameWithContext(ctx aws.Context, input *route53.ListHostedZonesByNameInput, opts ...request.Option) (*route53.ListHostedZonesByNameOutput, error) {
	c.inc("ListHostedZonesByName")
	return c.svc.ListHostedZonesByNameWithContext(ctx, input, opts...)
}

// ListQueryLoggingConfigsRequest is a passthrough to the underlying ListQueryLoggingConfigsRequest.
// It will increment the count of requests made to ListQueryLoggingConfigs.
func (c *Route53) ListQueryLoggingConfigsRequest(input *route53.ListQueryLoggingConfigsInput) (req *request.Request, output *route53.ListQueryLoggingConfigsOutput) {
	c.inc("ListQueryLoggingConfigs")
	return c.svc.ListQueryLoggingConfigsRequest(input)
}

// ListQueryLoggingConfigs is a passthrough to the underlying ListQueryLoggingConfigs method.
// It will increment the count of requests made to ListQueryLoggingConfigs.
func (c *Route53) ListQueryLoggingConfigs(input *route53.ListQueryLoggingConfigsInput) (*route53.ListQueryLoggingConfigsOutput, error) {
	c.inc("ListQueryLoggingConfigs")
	return c.svc.ListQueryLoggingConfigs(input)
}

// ListQueryLoggingConfigsWithContext is a passthrough to the underlying ListQueryLoggingConfigsWithContext method.
// It will increment the count of requests made to ListQueryLoggingConfigs.
func (c *Route53) ListQueryLoggingConfigsWithContext(ctx aws.Context, input *route53.ListQueryLoggingConfigsInput, opts ...request.Option) (*route53.ListQueryLoggingConfigsOutput, error) {
	c.inc("ListQueryLoggingConfigs")
	return c.svc.ListQueryLoggingConfigsWithContext(ctx, input, opts...)
}

// ListResourceRecordSetsRequest is a passthrough to the underlying ListResourceRecordSetsRequest.
// It will increment the count of requests made to ListResourceRecordSets.
func (c *Route53) ListResourceRecordSetsRequest(input *route53.ListResourceRecordSetsInput) (req *request.Request, output *route53.ListResourceRecordSetsOutput) {
	c.inc("ListResourceRecordSets")
	return c.svc.ListResourceRecordSetsRequest(input)
}

// ListResourceRecordSets is a passthrough to the underlying ListResourceRecordSets method.
// It will increment the count of requests made to ListResourceRecordSets.
func (c *Route53) ListResourceRecordSets(input *route53.ListResourceRecordSetsInput) (*route53.ListResourceRecordSetsOutput, error) {
	c.inc("ListResourceRecordSets")
	return c.svc.ListResourceRecordSets(input)
}

// ListResourceRecordSetsWithContext is a passthrough to the underlying ListResourceRecordSetsWithContext method.
// It will increment the count of requests made to ListResourceRecordSets.
func (c *Route53) ListResourceRecordSetsWithContext(ctx aws.Context, input *route53.ListResourceRecordSetsInput, opts ...request.Option) (*route53.ListResourceRecordSetsOutput, error) {
	c.inc("ListResourceRecordSets")
	return c.svc.ListResourceRecordSetsWithContext(ctx, input, opts...)
}

// ListResourceRecordSetsPages is a passthrough to the underlying ListResourceRecordSetsPages method.
// It will increment the count of requests made to ListResourceRecordSets on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListResourceRecordSetsPagesWithContext to avoid this.
func (c *Route53) ListResourceRecordSetsPages(input *route53.ListResourceRecordSetsInput, fn func(*route53.ListResourceRecordSetsOutput, bool) bool) error {
	wrappedFn := func(page *route53.ListResourceRecordSetsOutput, lastPage bool) bool {
		c.inc("ListResourceRecordSets")
		return fn(page, lastPage)
	}
	return c.svc.ListResourceRecordSetsPages(input, wrappedFn)
}

// ListResourceRecordSetsPagesWithContext is a passthrough to the underlying ListResourceRecordSetsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListResourceRecordSets when applied to the request.
func (c *Route53) ListResourceRecordSetsPagesWithContext(ctx aws.Context, input *route53.ListResourceRecordSetsInput, fn func(*route53.ListResourceRecordSetsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListResourceRecordSets"))
	return c.svc.ListResourceRecordSetsPagesWithContext(ctx, input, fn, opts...)
}

// ListReusableDelegationSetsRequest is a passthrough to the underlying ListReusableDelegationSetsRequest.
// It will increment the count of requests made to ListReusableDelegationSets.
func (c *Route53) ListReusableDelegationSetsRequest(input *route53.ListReusableDelegationSetsInput) (req *request.Request, output *route53.ListReusableDelegationSetsOutput) {
	c.inc("ListReusableDelegationSets")
	return c.svc.ListReusableDelegationSetsRequest(input)
}

// ListReusableDelegationSets is a passthrough to the underlying ListReusableDelegationSets method.
// It will increment the count of requests made to ListReusableDelegationSets.
func (c *Route53) ListReusableDelegationSets(input *route53.ListReusableDelegationSetsInput) (*route53.ListReusableDelegationSetsOutput, error) {
	c.inc("ListReusableDelegationSets")
	return c.svc.ListReusableDelegationSets(input)
}

// ListReusableDelegationSetsWithContext is a passthrough to the underlying ListReusableDelegationSetsWithContext method.
// It will increment the count of requests made to ListReusableDelegationSets.
func (c *Route53) ListReusableDelegationSetsWithContext(ctx aws.Context, input *route53.ListReusableDelegationSetsInput, opts ...request.Option) (*route53.ListReusableDelegationSetsOutput, error) {
	c.inc("ListReusableDelegationSets")
	return c.svc.ListReusableDelegationSetsWithContext(ctx, input, opts...)
}

// ListTagsForResourceRequest is a passthrough to the underlying ListTagsForResourceRequest.
// It will increment the count of requests made to ListTagsForResource.
func (c *Route53) ListTagsForResourceRequest(input *route53.ListTagsForResourceInput) (req *request.Request, output *route53.ListTagsForResourceOutput) {
	c.inc("ListTagsForResource")
	return c.svc.ListTagsForResourceRequest(input)
}

// ListTagsForResource is a passthrough to the underlying ListTagsForResource method.
// It will increment the count of requests made to ListTagsForResource.
func (c *Route53) ListTagsForResource(input *route53.ListTagsForResourceInput) (*route53.ListTagsForResourceOutput, error) {
	c.inc("ListTagsForResource")
	return c.svc.ListTagsForResource(input)
}

// ListTagsForResourceWithContext is a passthrough to the underlying ListTagsForResourceWithContext method.
// It will increment the count of requests made to ListTagsForResource.
func (c *Route53) ListTagsForResourceWithContext(ctx aws.Context, input *route53.ListTagsForResourceInput, opts ...request.Option) (*route53.ListTagsForResourceOutput, error) {
	c.inc("ListTagsForResource")
	return c.svc.ListTagsForResourceWithContext(ctx, input, opts...)
}

// ListTagsForResourcesRequest is a passthrough to the underlying ListTagsForResourcesRequest.
// It will increment the count of requests made to ListTagsForResources.
func (c *Route53) ListTagsForResourcesRequest(input *route53.ListTagsForResourcesInput) (req *request.Request, output *route53.ListTagsForResourcesOutput) {
	c.inc("ListTagsForResources")
	return c.svc.ListTagsForResourcesRequest(input)
}

// ListTagsForResources is a passthrough to the underlying ListTagsForResources method.
// It will increment the count of requests made to ListTagsForResources.
func (c *Route53) ListTagsForResources(input *route53.ListTagsForResourcesInput) (*route53.ListTagsForResourcesOutput, error) {
	c.inc("ListTagsForResources")
	return c.svc.ListTagsForResources(input)
}

// ListTagsForResourcesWithContext is a passthrough to the underlying ListTagsForResourcesWithContext method.
// It will increment the count of requests made to ListTagsForResources.
func (c *Route53) ListTagsForResourcesWithContext(ctx aws.Context, input *route53.ListTagsForResourcesInput, opts ...request.Option) (*route53.ListTagsForResourcesOutput, error) {
	c.inc("ListTagsForResources")
	return c.svc.ListTagsForResourcesWithContext(ctx, input, opts...)
}

// ListTrafficPoliciesRequest is a passthrough to the underlying ListTrafficPoliciesRequest.
// It will increment the count of requests made to ListTrafficPolicies.
func (c *Route53) ListTrafficPoliciesRequest(input *route53.ListTrafficPoliciesInput) (req *request.Request, output *route53.ListTrafficPoliciesOutput) {
	c.inc("ListTrafficPolicies")
	return c.svc.ListTrafficPoliciesRequest(input)
}

// ListTrafficPolicies is a passthrough to the underlying ListTrafficPolicies method.
// It will increment the count of requests made to ListTrafficPolicies.
func (c *Route53) ListTrafficPolicies(input *route53.ListTrafficPoliciesInput) (*route53.ListTrafficPoliciesOutput, error) {
	c.inc("ListTrafficPolicies")
	return c.svc.ListTrafficPolicies(input)
}

// ListTrafficPoliciesWithContext is a passthrough to the underlying ListTrafficPoliciesWithContext method.
// It will increment the count of requests made to ListTrafficPolicies.
func (c *Route53) ListTrafficPoliciesWithContext(ctx aws.Context, input *route53.ListTrafficPoliciesInput, opts ...request.Option) (*route53.ListTrafficPoliciesOutput, error) {
	c.inc("ListTrafficPolicies")
	return c.svc.ListTrafficPoliciesWithContext(ctx, input, opts...)
}

// ListTrafficPolicyInstancesRequest is a passthrough to the underlying ListTrafficPolicyInstancesRequest.
// It will increment the count of requests made to ListTrafficPolicyInstances.
func (c *Route53) ListTrafficPolicyInstancesRequest(input *route53.ListTrafficPolicyInstancesInput) (req *request.Request, output *route53.ListTrafficPolicyInstancesOutput) {
	c.inc("ListTrafficPolicyInstances")
	return c.svc.ListTrafficPolicyInstancesRequest(input)
}

// ListTrafficPolicyInstances is a passthrough to the underlying ListTrafficPolicyInstances method.
// It will increment the count of requests made to ListTrafficPolicyInstances.
func (c *Route53) ListTrafficPolicyInstances(input *route53.ListTrafficPolicyInstancesInput) (*route53.ListTrafficPolicyInstancesOutput, error) {
	c.inc("ListTrafficPolicyInstances")
	return c.svc.ListTrafficPolicyInstances(input)
}

// ListTrafficPolicyInstancesWithContext is a passthrough to the underlying ListTrafficPolicyInstancesWithContext method.
// It will increment the count of requests made to ListTrafficPolicyInstances.
func (c *Route53) ListTrafficPolicyInstancesWithContext(ctx aws.Context, input *route53.ListTrafficPolicyInstancesInput, opts ...request.Option) (*route53.ListTrafficPolicyInstancesOutput, error) {
	c.inc("ListTrafficPolicyInstances")
	return c.svc.ListTrafficPolicyInstancesWithContext(ctx, input, opts...)
}

// ListTrafficPolicyInstancesByHostedZoneRequest is a passthrough to the underlying ListTrafficPolicyInstancesByHostedZoneRequest.
// It will increment the count of requests made to ListTrafficPolicyInstancesByHostedZone.
func (c *Route53) ListTrafficPolicyInstancesByHostedZoneRequest(input *route53.ListTrafficPolicyInstancesByHostedZoneInput) (req *request.Request, output *route53.ListTrafficPolicyInstancesByHostedZoneOutput) {
	c.inc("ListTrafficPolicyInstancesByHostedZone")
	return c.svc.ListTrafficPolicyInstancesByHostedZoneRequest(input)
}

// ListTrafficPolicyInstancesByHostedZone is a passthrough to the underlying ListTrafficPolicyInstancesByHostedZone method.
// It will increment the count of requests made to ListTrafficPolicyInstancesByHostedZone.
func (c *Route53) ListTrafficPolicyInstancesByHostedZone(input *route53.ListTrafficPolicyInstancesByHostedZoneInput) (*route53.ListTrafficPolicyInstancesByHostedZoneOutput, error) {
	c.inc("ListTrafficPolicyInstancesByHostedZone")
	return c.svc.ListTrafficPolicyInstancesByHostedZone(input)
}

// ListTrafficPolicyInstancesByHostedZoneWithContext is a passthrough to the underlying ListTrafficPolicyInstancesByHostedZoneWithContext method.
// It will increment the count of requests made to ListTrafficPolicyInstancesByHostedZone.
func (c *Route53) ListTrafficPolicyInstancesByHostedZoneWithContext(ctx aws.Context, input *route53.ListTrafficPolicyInstancesByHostedZoneInput, opts ...request.Option) (*route53.ListTrafficPolicyInstancesByHostedZoneOutput, error) {
	c.inc("ListTrafficPolicyInstancesByHostedZone")
	return c.svc.ListTrafficPolicyInstancesByHostedZoneWithContext(ctx, input, opts...)
}

// ListTrafficPolicyInstancesByPolicyRequest is a passthrough to the underlying ListTrafficPolicyInstancesByPolicyRequest.
// It will increment the count of requests made to ListTrafficPolicyInstancesByPolicy.
func (c *Route53) ListTrafficPolicyInstancesByPolicyRequest(input *route53.ListTrafficPolicyInstancesByPolicyInput) (req *request.Request, output *route53.ListTrafficPolicyInstancesByPolicyOutput) {
	c.inc("ListTrafficPolicyInstancesByPolicy")
	return c.svc.ListTrafficPolicyInstancesByPolicyRequest(input)
}

// ListTrafficPolicyInstancesByPolicy is a passthrough to the underlying ListTrafficPolicyInstancesByPolicy method.
// It will increment the count of requests made to ListTrafficPolicyInstancesByPolicy.
func (c *Route53) ListTrafficPolicyInstancesByPolicy(input *route53.ListTrafficPolicyInstancesByPolicyInput) (*route53.ListTrafficPolicyInstancesByPolicyOutput, error) {
	c.inc("ListTrafficPolicyInstancesByPolicy")
	return c.svc.ListTrafficPolicyInstancesByPolicy(input)
}

// ListTrafficPolicyInstancesByPolicyWithContext is a passthrough to the underlying ListTrafficPolicyInstancesByPolicyWithContext method.
// It will increment the count of requests made to ListTrafficPolicyInstancesByPolicy.
func (c *Route53) ListTrafficPolicyInstancesByPolicyWithContext(ctx aws.Context, input *route53.ListTrafficPolicyInstancesByPolicyInput, opts ...request.Option) (*route53.ListTrafficPolicyInstancesByPolicyOutput, error) {
	c.inc("ListTrafficPolicyInstancesByPolicy")
	return c.svc.ListTrafficPolicyInstancesByPolicyWithContext(ctx, input, opts...)
}

// ListTrafficPolicyVersionsRequest is a passthrough to the underlying ListTrafficPolicyVersionsRequest.
// It will increment the count of requests made to ListTrafficPolicyVersions.
func (c *Route53) ListTrafficPolicyVersionsRequest(input *route53.ListTrafficPolicyVersionsInput) (req *request.Request, output *route53.ListTrafficPolicyVersionsOutput) {
	c.inc("ListTrafficPolicyVersions")
	return c.svc.ListTrafficPolicyVersionsRequest(input)
}

// ListTrafficPolicyVersions is a passthrough to the underlying ListTrafficPolicyVersions method.
// It will increment the count of requests made to ListTrafficPolicyVersions.
func (c *Route53) ListTrafficPolicyVersions(input *route53.ListTrafficPolicyVersionsInput) (*route53.ListTrafficPolicyVersionsOutput, error) {
	c.inc("ListTrafficPolicyVersions")
	return c.svc.ListTrafficPolicyVersions(input)
}

// ListTrafficPolicyVersionsWithContext is a passthrough to the underlying ListTrafficPolicyVersionsWithContext method.
// It will increment the count of requests made to ListTrafficPolicyVersions.
func (c *Route53) ListTrafficPolicyVersionsWithContext(ctx aws.Context, input *route53.ListTrafficPolicyVersionsInput, opts ...request.Option) (*route53.ListTrafficPolicyVersionsOutput, error) {
	c.inc("ListTrafficPolicyVersions")
	return c.svc.ListTrafficPolicyVersionsWithContext(ctx, input, opts...)
}

// ListVPCAssociationAuthorizationsRequest is a passthrough to the underlying ListVPCAssociationAuthorizationsRequest.
// It will increment the count of requests made to ListVPCAssociationAuthorizations.
func (c *Route53) ListVPCAssociationAuthorizationsRequest(input *route53.ListVPCAssociationAuthorizationsInput) (req *request.Request, output *route53.ListVPCAssociationAuthorizationsOutput) {
	c.inc("ListVPCAssociationAuthorizations")
	return c.svc.ListVPCAssociationAuthorizationsRequest(input)
}

// ListVPCAssociationAuthorizations is a passthrough to the underlying ListVPCAssociationAuthorizations method.
// It will increment the count of requests made to ListVPCAssociationAuthorizations.
func (c *Route53) ListVPCAssociationAuthorizations(input *route53.ListVPCAssociationAuthorizationsInput) (*route53.ListVPCAssociationAuthorizationsOutput, error) {
	c.inc("ListVPCAssociationAuthorizations")
	return c.svc.ListVPCAssociationAuthorizations(input)
}

// ListVPCAssociationAuthorizationsWithContext is a passthrough to the underlying ListVPCAssociationAuthorizationsWithContext method.
// It will increment the count of requests made to ListVPCAssociationAuthorizations.
func (c *Route53) ListVPCAssociationAuthorizationsWithContext(ctx aws.Context, input *route53.ListVPCAssociationAuthorizationsInput, opts ...request.Option) (*route53.ListVPCAssociationAuthorizationsOutput, error) {
	c.inc("ListVPCAssociationAuthorizations")
	return c.svc.ListVPCAssociationAuthorizationsWithContext(ctx, input, opts...)
}

// TestDNSAnswerRequest is a passthrough to the underlying TestDNSAnswerRequest.
// It will increment the count of requests made to TestDNSAnswer.
func (c *Route53) TestDNSAnswerRequest(input *route53.TestDNSAnswerInput) (req *request.Request, output *route53.TestDNSAnswerOutput) {
	c.inc("TestDNSAnswer")
	return c.svc.TestDNSAnswerRequest(input)
}

// TestDNSAnswer is a passthrough to the underlying TestDNSAnswer method.
// It will increment the count of requests made to TestDNSAnswer.
func (c *Route53) TestDNSAnswer(input *route53.TestDNSAnswerInput) (*route53.TestDNSAnswerOutput, error) {
	c.inc("TestDNSAnswer")
	return c.svc.TestDNSAnswer(input)
}

// TestDNSAnswerWithContext is a passthrough to the underlying TestDNSAnswerWithContext method.
// It will increment the count of requests made to TestDNSAnswer.
func (c *Route53) TestDNSAnswerWithContext(ctx aws.Context, input *route53.TestDNSAnswerInput, opts ...request.Option) (*route53.TestDNSAnswerOutput, error) {
	c.inc("TestDNSAnswer")
	return c.svc.TestDNSAnswerWithContext(ctx, input, opts...)
}

// UpdateHealthCheckRequest is a passthrough to the underlying UpdateHealthCheckRequest.
// It will increment the count of requests made to UpdateHealthCheck.
func (c *Route53) UpdateHealthCheckRequest(input *route53.UpdateHealthCheckInput) (req *request.Request, output *route53.UpdateHealthCheckOutput) {
	c.inc("UpdateHealthCheck")
	return c.svc.UpdateHealthCheckRequest(input)
}

// UpdateHealthCheck is a passthrough to the underlying UpdateHealthCheck method.
// It will increment the count of requests made to UpdateHealthCheck.
func (c *Route53) UpdateHealthCheck(input *route53.UpdateHealthCheckInput) (*route53.UpdateHealthCheckOutput, error) {
	c.inc("UpdateHealthCheck")
	return c.svc.UpdateHealthCheck(input)
}

// UpdateHealthCheckWithContext is a passthrough to the underlying UpdateHealthCheckWithContext method.
// It will increment the count of requests made to UpdateHealthCheck.
func (c *Route53) UpdateHealthCheckWithContext(ctx aws.Context, input *route53.UpdateHealthCheckInput, opts ...request.Option) (*route53.UpdateHealthCheckOutput, error) {
	c.inc("UpdateHealthCheck")
	return c.svc.UpdateHealthCheckWithContext(ctx, input, opts...)
}

// UpdateHostedZoneCommentRequest is a passthrough to the underlying UpdateHostedZoneCommentRequest.
// It will increment the count of requests made to UpdateHostedZoneComment.
func (c *Route53) UpdateHostedZoneCommentRequest(input *route53.UpdateHostedZoneCommentInput) (req *request.Request, output *route53.UpdateHostedZoneCommentOutput) {
	c.inc("UpdateHostedZoneComment")
	return c.svc.UpdateHostedZoneCommentRequest(input)
}

// UpdateHostedZoneComment is a passthrough to the underlying UpdateHostedZoneComment method.
// It will increment the count of requests made to UpdateHostedZoneComment.
func (c *Route53) UpdateHostedZoneComment(input *route53.UpdateHostedZoneCommentInput) (*route53.UpdateHostedZoneCommentOutput, error) {
	c.inc("UpdateHostedZoneComment")
	return c.svc.UpdateHostedZoneComment(input)
}

// UpdateHostedZoneCommentWithContext is a passthrough to the underlying UpdateHostedZoneCommentWithContext method.
// It will increment the count of requests made to UpdateHostedZoneComment.
func (c *Route53) UpdateHostedZoneCommentWithContext(ctx aws.Context, input *route53.UpdateHostedZoneCommentInput, opts ...request.Option) (*route53.UpdateHostedZoneCommentOutput, error) {
	c.inc("UpdateHostedZoneComment")
	return c.svc.UpdateHostedZoneCommentWithContext(ctx, input, opts...)
}

// UpdateTrafficPolicyCommentRequest is a passthrough to the underlying UpdateTrafficPolicyCommentRequest.
// It will increment the count of requests made to UpdateTrafficPolicyComment.
func (c *Route53) UpdateTrafficPolicyCommentRequest(input *route53.UpdateTrafficPolicyCommentInput) (req *request.Request, output *route53.UpdateTrafficPolicyCommentOutput) {
	c.inc("UpdateTrafficPolicyComment")
	return c.svc.UpdateTrafficPolicyCommentRequest(input)
}

// UpdateTrafficPolicyComment is a passthrough to the underlying UpdateTrafficPolicyComment method.
// It will increment the count of requests made to UpdateTrafficPolicyComment.
func (c *Route53) UpdateTrafficPolicyComment(input *route53.UpdateTrafficPolicyCommentInput) (*route53.UpdateTrafficPolicyCommentOutput, error) {
	c.inc("UpdateTrafficPolicyComment")
	return c.svc.UpdateTrafficPolicyComment(input)
}

// UpdateTrafficPolicyCommentWithContext is a passthrough to the underlying UpdateTrafficPolicyCommentWithContext method.
// It will increment the count of requests made to UpdateTrafficPolicyComment.
func (c *Route53) UpdateTrafficPolicyCommentWithContext(ctx aws.Context, input *route53.UpdateTrafficPolicyCommentInput, opts ...request.Option) (*route53.UpdateTrafficPolicyCommentOutput, error) {
	c.inc("UpdateTrafficPolicyComment")
	return c.svc.UpdateTrafficPolicyCommentWithContext(ctx, input, opts...)
}

// UpdateTrafficPolicyInstanceRequest is a passthrough to the underlying UpdateTrafficPolicyInstanceRequest.
// It will increment the count of requests made to UpdateTrafficPolicyInstance.
func (c *Route53) UpdateTrafficPolicyInstanceRequest(input *route53.UpdateTrafficPolicyInstanceInput) (req *request.Request, output *route53.UpdateTrafficPolicyInstanceOutput) {
	c.inc("UpdateTrafficPolicyInstance")
	return c.svc.UpdateTrafficPolicyInstanceRequest(input)
}

// UpdateTrafficPolicyInstance is a passthrough to the underlying UpdateTrafficPolicyInstance method.
// It will increment the count of requests made to UpdateTrafficPolicyInstance.
func (c *Route53) UpdateTrafficPolicyInstance(input *route53.UpdateTrafficPolicyInstanceInput) (*route53.UpdateTrafficPolicyInstanceOutput, error) {
	c.inc("UpdateTrafficPolicyInstance")
	return c.svc.UpdateTrafficPolicyInstance(input)
}

// UpdateTrafficPolicyInstanceWithContext is a passthrough to the underlying UpdateTrafficPolicyInstanceWithContext method.
// It will increment the count of requests made to UpdateTrafficPolicyInstance.
func (c *Route53) UpdateTrafficPolicyInstanceWithContext(ctx aws.Context, input *route53.UpdateTrafficPolicyInstanceInput, opts ...request.Option) (*route53.UpdateTrafficPolicyInstanceOutput, error) {
	c.inc("UpdateTrafficPolicyInstance")
	return c.svc.UpdateTrafficPolicyInstanceWithContext(ctx, input, opts...)
}
