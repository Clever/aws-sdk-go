// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package kmscounter

import (
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/kms"
)

// CancelKeyDeletionRequest is a passthrough to the underlying CancelKeyDeletionRequest.
// It will increment the count of requests made to CancelKeyDeletion.
func (c *KMS) CancelKeyDeletionRequest(input *kms.CancelKeyDeletionInput) (req *request.Request, output *kms.CancelKeyDeletionOutput) {
	c.inc("CancelKeyDeletion")
	return c.svc.CancelKeyDeletionRequest(input)
}

// CancelKeyDeletion is a passthrough to the underlying CancelKeyDeletion method.
// It will increment the count of requests made to CancelKeyDeletion.
func (c *KMS) CancelKeyDeletion(input *kms.CancelKeyDeletionInput) (*kms.CancelKeyDeletionOutput, error) {
	c.inc("CancelKeyDeletion")
	return c.svc.CancelKeyDeletion(input)
}

// CancelKeyDeletionWithContext is a passthrough to the underlying CancelKeyDeletionWithContext method.
// It will increment the count of requests made to CancelKeyDeletion.
func (c *KMS) CancelKeyDeletionWithContext(ctx aws.Context, input *kms.CancelKeyDeletionInput, opts ...request.Option) (*kms.CancelKeyDeletionOutput, error) {
	c.inc("CancelKeyDeletion")
	return c.svc.CancelKeyDeletionWithContext(ctx, input, opts...)
}

// CreateAliasRequest is a passthrough to the underlying CreateAliasRequest.
// It will increment the count of requests made to CreateAlias.
func (c *KMS) CreateAliasRequest(input *kms.CreateAliasInput) (req *request.Request, output *kms.CreateAliasOutput) {
	c.inc("CreateAlias")
	return c.svc.CreateAliasRequest(input)
}

// CreateAlias is a passthrough to the underlying CreateAlias method.
// It will increment the count of requests made to CreateAlias.
func (c *KMS) CreateAlias(input *kms.CreateAliasInput) (*kms.CreateAliasOutput, error) {
	c.inc("CreateAlias")
	return c.svc.CreateAlias(input)
}

// CreateAliasWithContext is a passthrough to the underlying CreateAliasWithContext method.
// It will increment the count of requests made to CreateAlias.
func (c *KMS) CreateAliasWithContext(ctx aws.Context, input *kms.CreateAliasInput, opts ...request.Option) (*kms.CreateAliasOutput, error) {
	c.inc("CreateAlias")
	return c.svc.CreateAliasWithContext(ctx, input, opts...)
}

// CreateGrantRequest is a passthrough to the underlying CreateGrantRequest.
// It will increment the count of requests made to CreateGrant.
func (c *KMS) CreateGrantRequest(input *kms.CreateGrantInput) (req *request.Request, output *kms.CreateGrantOutput) {
	c.inc("CreateGrant")
	return c.svc.CreateGrantRequest(input)
}

// CreateGrant is a passthrough to the underlying CreateGrant method.
// It will increment the count of requests made to CreateGrant.
func (c *KMS) CreateGrant(input *kms.CreateGrantInput) (*kms.CreateGrantOutput, error) {
	c.inc("CreateGrant")
	return c.svc.CreateGrant(input)
}

// CreateGrantWithContext is a passthrough to the underlying CreateGrantWithContext method.
// It will increment the count of requests made to CreateGrant.
func (c *KMS) CreateGrantWithContext(ctx aws.Context, input *kms.CreateGrantInput, opts ...request.Option) (*kms.CreateGrantOutput, error) {
	c.inc("CreateGrant")
	return c.svc.CreateGrantWithContext(ctx, input, opts...)
}

// CreateKeyRequest is a passthrough to the underlying CreateKeyRequest.
// It will increment the count of requests made to CreateKey.
func (c *KMS) CreateKeyRequest(input *kms.CreateKeyInput) (req *request.Request, output *kms.CreateKeyOutput) {
	c.inc("CreateKey")
	return c.svc.CreateKeyRequest(input)
}

// CreateKey is a passthrough to the underlying CreateKey method.
// It will increment the count of requests made to CreateKey.
func (c *KMS) CreateKey(input *kms.CreateKeyInput) (*kms.CreateKeyOutput, error) {
	c.inc("CreateKey")
	return c.svc.CreateKey(input)
}

// CreateKeyWithContext is a passthrough to the underlying CreateKeyWithContext method.
// It will increment the count of requests made to CreateKey.
func (c *KMS) CreateKeyWithContext(ctx aws.Context, input *kms.CreateKeyInput, opts ...request.Option) (*kms.CreateKeyOutput, error) {
	c.inc("CreateKey")
	return c.svc.CreateKeyWithContext(ctx, input, opts...)
}

// DecryptRequest is a passthrough to the underlying DecryptRequest.
// It will increment the count of requests made to Decrypt.
func (c *KMS) DecryptRequest(input *kms.DecryptInput) (req *request.Request, output *kms.DecryptOutput) {
	c.inc("Decrypt")
	return c.svc.DecryptRequest(input)
}

// Decrypt is a passthrough to the underlying Decrypt method.
// It will increment the count of requests made to Decrypt.
func (c *KMS) Decrypt(input *kms.DecryptInput) (*kms.DecryptOutput, error) {
	c.inc("Decrypt")
	return c.svc.Decrypt(input)
}

// DecryptWithContext is a passthrough to the underlying DecryptWithContext method.
// It will increment the count of requests made to Decrypt.
func (c *KMS) DecryptWithContext(ctx aws.Context, input *kms.DecryptInput, opts ...request.Option) (*kms.DecryptOutput, error) {
	c.inc("Decrypt")
	return c.svc.DecryptWithContext(ctx, input, opts...)
}

// DeleteAliasRequest is a passthrough to the underlying DeleteAliasRequest.
// It will increment the count of requests made to DeleteAlias.
func (c *KMS) DeleteAliasRequest(input *kms.DeleteAliasInput) (req *request.Request, output *kms.DeleteAliasOutput) {
	c.inc("DeleteAlias")
	return c.svc.DeleteAliasRequest(input)
}

// DeleteAlias is a passthrough to the underlying DeleteAlias method.
// It will increment the count of requests made to DeleteAlias.
func (c *KMS) DeleteAlias(input *kms.DeleteAliasInput) (*kms.DeleteAliasOutput, error) {
	c.inc("DeleteAlias")
	return c.svc.DeleteAlias(input)
}

// DeleteAliasWithContext is a passthrough to the underlying DeleteAliasWithContext method.
// It will increment the count of requests made to DeleteAlias.
func (c *KMS) DeleteAliasWithContext(ctx aws.Context, input *kms.DeleteAliasInput, opts ...request.Option) (*kms.DeleteAliasOutput, error) {
	c.inc("DeleteAlias")
	return c.svc.DeleteAliasWithContext(ctx, input, opts...)
}

// DeleteImportedKeyMaterialRequest is a passthrough to the underlying DeleteImportedKeyMaterialRequest.
// It will increment the count of requests made to DeleteImportedKeyMaterial.
func (c *KMS) DeleteImportedKeyMaterialRequest(input *kms.DeleteImportedKeyMaterialInput) (req *request.Request, output *kms.DeleteImportedKeyMaterialOutput) {
	c.inc("DeleteImportedKeyMaterial")
	return c.svc.DeleteImportedKeyMaterialRequest(input)
}

// DeleteImportedKeyMaterial is a passthrough to the underlying DeleteImportedKeyMaterial method.
// It will increment the count of requests made to DeleteImportedKeyMaterial.
func (c *KMS) DeleteImportedKeyMaterial(input *kms.DeleteImportedKeyMaterialInput) (*kms.DeleteImportedKeyMaterialOutput, error) {
	c.inc("DeleteImportedKeyMaterial")
	return c.svc.DeleteImportedKeyMaterial(input)
}

// DeleteImportedKeyMaterialWithContext is a passthrough to the underlying DeleteImportedKeyMaterialWithContext method.
// It will increment the count of requests made to DeleteImportedKeyMaterial.
func (c *KMS) DeleteImportedKeyMaterialWithContext(ctx aws.Context, input *kms.DeleteImportedKeyMaterialInput, opts ...request.Option) (*kms.DeleteImportedKeyMaterialOutput, error) {
	c.inc("DeleteImportedKeyMaterial")
	return c.svc.DeleteImportedKeyMaterialWithContext(ctx, input, opts...)
}

// DescribeKeyRequest is a passthrough to the underlying DescribeKeyRequest.
// It will increment the count of requests made to DescribeKey.
func (c *KMS) DescribeKeyRequest(input *kms.DescribeKeyInput) (req *request.Request, output *kms.DescribeKeyOutput) {
	c.inc("DescribeKey")
	return c.svc.DescribeKeyRequest(input)
}

// DescribeKey is a passthrough to the underlying DescribeKey method.
// It will increment the count of requests made to DescribeKey.
func (c *KMS) DescribeKey(input *kms.DescribeKeyInput) (*kms.DescribeKeyOutput, error) {
	c.inc("DescribeKey")
	return c.svc.DescribeKey(input)
}

// DescribeKeyWithContext is a passthrough to the underlying DescribeKeyWithContext method.
// It will increment the count of requests made to DescribeKey.
func (c *KMS) DescribeKeyWithContext(ctx aws.Context, input *kms.DescribeKeyInput, opts ...request.Option) (*kms.DescribeKeyOutput, error) {
	c.inc("DescribeKey")
	return c.svc.DescribeKeyWithContext(ctx, input, opts...)
}

// DisableKeyRequest is a passthrough to the underlying DisableKeyRequest.
// It will increment the count of requests made to DisableKey.
func (c *KMS) DisableKeyRequest(input *kms.DisableKeyInput) (req *request.Request, output *kms.DisableKeyOutput) {
	c.inc("DisableKey")
	return c.svc.DisableKeyRequest(input)
}

// DisableKey is a passthrough to the underlying DisableKey method.
// It will increment the count of requests made to DisableKey.
func (c *KMS) DisableKey(input *kms.DisableKeyInput) (*kms.DisableKeyOutput, error) {
	c.inc("DisableKey")
	return c.svc.DisableKey(input)
}

// DisableKeyWithContext is a passthrough to the underlying DisableKeyWithContext method.
// It will increment the count of requests made to DisableKey.
func (c *KMS) DisableKeyWithContext(ctx aws.Context, input *kms.DisableKeyInput, opts ...request.Option) (*kms.DisableKeyOutput, error) {
	c.inc("DisableKey")
	return c.svc.DisableKeyWithContext(ctx, input, opts...)
}

// DisableKeyRotationRequest is a passthrough to the underlying DisableKeyRotationRequest.
// It will increment the count of requests made to DisableKeyRotation.
func (c *KMS) DisableKeyRotationRequest(input *kms.DisableKeyRotationInput) (req *request.Request, output *kms.DisableKeyRotationOutput) {
	c.inc("DisableKeyRotation")
	return c.svc.DisableKeyRotationRequest(input)
}

// DisableKeyRotation is a passthrough to the underlying DisableKeyRotation method.
// It will increment the count of requests made to DisableKeyRotation.
func (c *KMS) DisableKeyRotation(input *kms.DisableKeyRotationInput) (*kms.DisableKeyRotationOutput, error) {
	c.inc("DisableKeyRotation")
	return c.svc.DisableKeyRotation(input)
}

// DisableKeyRotationWithContext is a passthrough to the underlying DisableKeyRotationWithContext method.
// It will increment the count of requests made to DisableKeyRotation.
func (c *KMS) DisableKeyRotationWithContext(ctx aws.Context, input *kms.DisableKeyRotationInput, opts ...request.Option) (*kms.DisableKeyRotationOutput, error) {
	c.inc("DisableKeyRotation")
	return c.svc.DisableKeyRotationWithContext(ctx, input, opts...)
}

// EnableKeyRequest is a passthrough to the underlying EnableKeyRequest.
// It will increment the count of requests made to EnableKey.
func (c *KMS) EnableKeyRequest(input *kms.EnableKeyInput) (req *request.Request, output *kms.EnableKeyOutput) {
	c.inc("EnableKey")
	return c.svc.EnableKeyRequest(input)
}

// EnableKey is a passthrough to the underlying EnableKey method.
// It will increment the count of requests made to EnableKey.
func (c *KMS) EnableKey(input *kms.EnableKeyInput) (*kms.EnableKeyOutput, error) {
	c.inc("EnableKey")
	return c.svc.EnableKey(input)
}

// EnableKeyWithContext is a passthrough to the underlying EnableKeyWithContext method.
// It will increment the count of requests made to EnableKey.
func (c *KMS) EnableKeyWithContext(ctx aws.Context, input *kms.EnableKeyInput, opts ...request.Option) (*kms.EnableKeyOutput, error) {
	c.inc("EnableKey")
	return c.svc.EnableKeyWithContext(ctx, input, opts...)
}

// EnableKeyRotationRequest is a passthrough to the underlying EnableKeyRotationRequest.
// It will increment the count of requests made to EnableKeyRotation.
func (c *KMS) EnableKeyRotationRequest(input *kms.EnableKeyRotationInput) (req *request.Request, output *kms.EnableKeyRotationOutput) {
	c.inc("EnableKeyRotation")
	return c.svc.EnableKeyRotationRequest(input)
}

// EnableKeyRotation is a passthrough to the underlying EnableKeyRotation method.
// It will increment the count of requests made to EnableKeyRotation.
func (c *KMS) EnableKeyRotation(input *kms.EnableKeyRotationInput) (*kms.EnableKeyRotationOutput, error) {
	c.inc("EnableKeyRotation")
	return c.svc.EnableKeyRotation(input)
}

// EnableKeyRotationWithContext is a passthrough to the underlying EnableKeyRotationWithContext method.
// It will increment the count of requests made to EnableKeyRotation.
func (c *KMS) EnableKeyRotationWithContext(ctx aws.Context, input *kms.EnableKeyRotationInput, opts ...request.Option) (*kms.EnableKeyRotationOutput, error) {
	c.inc("EnableKeyRotation")
	return c.svc.EnableKeyRotationWithContext(ctx, input, opts...)
}

// EncryptRequest is a passthrough to the underlying EncryptRequest.
// It will increment the count of requests made to Encrypt.
func (c *KMS) EncryptRequest(input *kms.EncryptInput) (req *request.Request, output *kms.EncryptOutput) {
	c.inc("Encrypt")
	return c.svc.EncryptRequest(input)
}

// Encrypt is a passthrough to the underlying Encrypt method.
// It will increment the count of requests made to Encrypt.
func (c *KMS) Encrypt(input *kms.EncryptInput) (*kms.EncryptOutput, error) {
	c.inc("Encrypt")
	return c.svc.Encrypt(input)
}

// EncryptWithContext is a passthrough to the underlying EncryptWithContext method.
// It will increment the count of requests made to Encrypt.
func (c *KMS) EncryptWithContext(ctx aws.Context, input *kms.EncryptInput, opts ...request.Option) (*kms.EncryptOutput, error) {
	c.inc("Encrypt")
	return c.svc.EncryptWithContext(ctx, input, opts...)
}

// GenerateDataKeyRequest is a passthrough to the underlying GenerateDataKeyRequest.
// It will increment the count of requests made to GenerateDataKey.
func (c *KMS) GenerateDataKeyRequest(input *kms.GenerateDataKeyInput) (req *request.Request, output *kms.GenerateDataKeyOutput) {
	c.inc("GenerateDataKey")
	return c.svc.GenerateDataKeyRequest(input)
}

// GenerateDataKey is a passthrough to the underlying GenerateDataKey method.
// It will increment the count of requests made to GenerateDataKey.
func (c *KMS) GenerateDataKey(input *kms.GenerateDataKeyInput) (*kms.GenerateDataKeyOutput, error) {
	c.inc("GenerateDataKey")
	return c.svc.GenerateDataKey(input)
}

// GenerateDataKeyWithContext is a passthrough to the underlying GenerateDataKeyWithContext method.
// It will increment the count of requests made to GenerateDataKey.
func (c *KMS) GenerateDataKeyWithContext(ctx aws.Context, input *kms.GenerateDataKeyInput, opts ...request.Option) (*kms.GenerateDataKeyOutput, error) {
	c.inc("GenerateDataKey")
	return c.svc.GenerateDataKeyWithContext(ctx, input, opts...)
}

// GenerateDataKeyWithoutPlaintextRequest is a passthrough to the underlying GenerateDataKeyWithoutPlaintextRequest.
// It will increment the count of requests made to GenerateDataKeyWithoutPlaintext.
func (c *KMS) GenerateDataKeyWithoutPlaintextRequest(input *kms.GenerateDataKeyWithoutPlaintextInput) (req *request.Request, output *kms.GenerateDataKeyWithoutPlaintextOutput) {
	c.inc("GenerateDataKeyWithoutPlaintext")
	return c.svc.GenerateDataKeyWithoutPlaintextRequest(input)
}

// GenerateDataKeyWithoutPlaintext is a passthrough to the underlying GenerateDataKeyWithoutPlaintext method.
// It will increment the count of requests made to GenerateDataKeyWithoutPlaintext.
func (c *KMS) GenerateDataKeyWithoutPlaintext(input *kms.GenerateDataKeyWithoutPlaintextInput) (*kms.GenerateDataKeyWithoutPlaintextOutput, error) {
	c.inc("GenerateDataKeyWithoutPlaintext")
	return c.svc.GenerateDataKeyWithoutPlaintext(input)
}

// GenerateDataKeyWithoutPlaintextWithContext is a passthrough to the underlying GenerateDataKeyWithoutPlaintextWithContext method.
// It will increment the count of requests made to GenerateDataKeyWithoutPlaintext.
func (c *KMS) GenerateDataKeyWithoutPlaintextWithContext(ctx aws.Context, input *kms.GenerateDataKeyWithoutPlaintextInput, opts ...request.Option) (*kms.GenerateDataKeyWithoutPlaintextOutput, error) {
	c.inc("GenerateDataKeyWithoutPlaintext")
	return c.svc.GenerateDataKeyWithoutPlaintextWithContext(ctx, input, opts...)
}

// GenerateRandomRequest is a passthrough to the underlying GenerateRandomRequest.
// It will increment the count of requests made to GenerateRandom.
func (c *KMS) GenerateRandomRequest(input *kms.GenerateRandomInput) (req *request.Request, output *kms.GenerateRandomOutput) {
	c.inc("GenerateRandom")
	return c.svc.GenerateRandomRequest(input)
}

// GenerateRandom is a passthrough to the underlying GenerateRandom method.
// It will increment the count of requests made to GenerateRandom.
func (c *KMS) GenerateRandom(input *kms.GenerateRandomInput) (*kms.GenerateRandomOutput, error) {
	c.inc("GenerateRandom")
	return c.svc.GenerateRandom(input)
}

// GenerateRandomWithContext is a passthrough to the underlying GenerateRandomWithContext method.
// It will increment the count of requests made to GenerateRandom.
func (c *KMS) GenerateRandomWithContext(ctx aws.Context, input *kms.GenerateRandomInput, opts ...request.Option) (*kms.GenerateRandomOutput, error) {
	c.inc("GenerateRandom")
	return c.svc.GenerateRandomWithContext(ctx, input, opts...)
}

// GetKeyPolicyRequest is a passthrough to the underlying GetKeyPolicyRequest.
// It will increment the count of requests made to GetKeyPolicy.
func (c *KMS) GetKeyPolicyRequest(input *kms.GetKeyPolicyInput) (req *request.Request, output *kms.GetKeyPolicyOutput) {
	c.inc("GetKeyPolicy")
	return c.svc.GetKeyPolicyRequest(input)
}

// GetKeyPolicy is a passthrough to the underlying GetKeyPolicy method.
// It will increment the count of requests made to GetKeyPolicy.
func (c *KMS) GetKeyPolicy(input *kms.GetKeyPolicyInput) (*kms.GetKeyPolicyOutput, error) {
	c.inc("GetKeyPolicy")
	return c.svc.GetKeyPolicy(input)
}

// GetKeyPolicyWithContext is a passthrough to the underlying GetKeyPolicyWithContext method.
// It will increment the count of requests made to GetKeyPolicy.
func (c *KMS) GetKeyPolicyWithContext(ctx aws.Context, input *kms.GetKeyPolicyInput, opts ...request.Option) (*kms.GetKeyPolicyOutput, error) {
	c.inc("GetKeyPolicy")
	return c.svc.GetKeyPolicyWithContext(ctx, input, opts...)
}

// GetKeyRotationStatusRequest is a passthrough to the underlying GetKeyRotationStatusRequest.
// It will increment the count of requests made to GetKeyRotationStatus.
func (c *KMS) GetKeyRotationStatusRequest(input *kms.GetKeyRotationStatusInput) (req *request.Request, output *kms.GetKeyRotationStatusOutput) {
	c.inc("GetKeyRotationStatus")
	return c.svc.GetKeyRotationStatusRequest(input)
}

// GetKeyRotationStatus is a passthrough to the underlying GetKeyRotationStatus method.
// It will increment the count of requests made to GetKeyRotationStatus.
func (c *KMS) GetKeyRotationStatus(input *kms.GetKeyRotationStatusInput) (*kms.GetKeyRotationStatusOutput, error) {
	c.inc("GetKeyRotationStatus")
	return c.svc.GetKeyRotationStatus(input)
}

// GetKeyRotationStatusWithContext is a passthrough to the underlying GetKeyRotationStatusWithContext method.
// It will increment the count of requests made to GetKeyRotationStatus.
func (c *KMS) GetKeyRotationStatusWithContext(ctx aws.Context, input *kms.GetKeyRotationStatusInput, opts ...request.Option) (*kms.GetKeyRotationStatusOutput, error) {
	c.inc("GetKeyRotationStatus")
	return c.svc.GetKeyRotationStatusWithContext(ctx, input, opts...)
}

// GetParametersForImportRequest is a passthrough to the underlying GetParametersForImportRequest.
// It will increment the count of requests made to GetParametersForImport.
func (c *KMS) GetParametersForImportRequest(input *kms.GetParametersForImportInput) (req *request.Request, output *kms.GetParametersForImportOutput) {
	c.inc("GetParametersForImport")
	return c.svc.GetParametersForImportRequest(input)
}

// GetParametersForImport is a passthrough to the underlying GetParametersForImport method.
// It will increment the count of requests made to GetParametersForImport.
func (c *KMS) GetParametersForImport(input *kms.GetParametersForImportInput) (*kms.GetParametersForImportOutput, error) {
	c.inc("GetParametersForImport")
	return c.svc.GetParametersForImport(input)
}

// GetParametersForImportWithContext is a passthrough to the underlying GetParametersForImportWithContext method.
// It will increment the count of requests made to GetParametersForImport.
func (c *KMS) GetParametersForImportWithContext(ctx aws.Context, input *kms.GetParametersForImportInput, opts ...request.Option) (*kms.GetParametersForImportOutput, error) {
	c.inc("GetParametersForImport")
	return c.svc.GetParametersForImportWithContext(ctx, input, opts...)
}

// ImportKeyMaterialRequest is a passthrough to the underlying ImportKeyMaterialRequest.
// It will increment the count of requests made to ImportKeyMaterial.
func (c *KMS) ImportKeyMaterialRequest(input *kms.ImportKeyMaterialInput) (req *request.Request, output *kms.ImportKeyMaterialOutput) {
	c.inc("ImportKeyMaterial")
	return c.svc.ImportKeyMaterialRequest(input)
}

// ImportKeyMaterial is a passthrough to the underlying ImportKeyMaterial method.
// It will increment the count of requests made to ImportKeyMaterial.
func (c *KMS) ImportKeyMaterial(input *kms.ImportKeyMaterialInput) (*kms.ImportKeyMaterialOutput, error) {
	c.inc("ImportKeyMaterial")
	return c.svc.ImportKeyMaterial(input)
}

// ImportKeyMaterialWithContext is a passthrough to the underlying ImportKeyMaterialWithContext method.
// It will increment the count of requests made to ImportKeyMaterial.
func (c *KMS) ImportKeyMaterialWithContext(ctx aws.Context, input *kms.ImportKeyMaterialInput, opts ...request.Option) (*kms.ImportKeyMaterialOutput, error) {
	c.inc("ImportKeyMaterial")
	return c.svc.ImportKeyMaterialWithContext(ctx, input, opts...)
}

// ListAliasesRequest is a passthrough to the underlying ListAliasesRequest.
// It will increment the count of requests made to ListAliases.
func (c *KMS) ListAliasesRequest(input *kms.ListAliasesInput) (req *request.Request, output *kms.ListAliasesOutput) {
	c.inc("ListAliases")
	return c.svc.ListAliasesRequest(input)
}

// ListAliases is a passthrough to the underlying ListAliases method.
// It will increment the count of requests made to ListAliases.
func (c *KMS) ListAliases(input *kms.ListAliasesInput) (*kms.ListAliasesOutput, error) {
	c.inc("ListAliases")
	return c.svc.ListAliases(input)
}

// ListAliasesWithContext is a passthrough to the underlying ListAliasesWithContext method.
// It will increment the count of requests made to ListAliases.
func (c *KMS) ListAliasesWithContext(ctx aws.Context, input *kms.ListAliasesInput, opts ...request.Option) (*kms.ListAliasesOutput, error) {
	c.inc("ListAliases")
	return c.svc.ListAliasesWithContext(ctx, input, opts...)
}

// ListAliasesPages is a passthrough to the underlying ListAliasesPages method.
// It will increment the count of requests made to ListAliases on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListAliasesPagesWithContext to avoid this.
func (c *KMS) ListAliasesPages(input *kms.ListAliasesInput, fn func(*kms.ListAliasesOutput, bool) bool) error {
	wrappedFn := func(page *kms.ListAliasesOutput, lastPage bool) bool {
		c.inc("ListAliases")
		return fn(page, lastPage)
	}
	return c.ListAliasesPages(input, wrappedFn)
}

// ListAliasesPagesWithContext is a passthrough to the underlying ListAliasesPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListAliases when applied to the request.
func (c *KMS) ListAliasesPagesWithContext(ctx aws.Context, input *kms.ListAliasesInput, fn func(*kms.ListAliasesOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListAliases"))
	return c.ListAliasesPagesWithContext(ctx, input, fn, opts...)
}

// ListGrantsRequest is a passthrough to the underlying ListGrantsRequest.
// It will increment the count of requests made to ListGrants.
func (c *KMS) ListGrantsRequest(input *kms.ListGrantsInput) (req *request.Request, output *kms.ListGrantsResponse) {
	c.inc("ListGrants")
	return c.svc.ListGrantsRequest(input)
}

// ListGrants is a passthrough to the underlying ListGrants method.
// It will increment the count of requests made to ListGrants.
func (c *KMS) ListGrants(input *kms.ListGrantsInput) (*kms.ListGrantsResponse, error) {
	c.inc("ListGrants")
	return c.svc.ListGrants(input)
}

// ListGrantsWithContext is a passthrough to the underlying ListGrantsWithContext method.
// It will increment the count of requests made to ListGrants.
func (c *KMS) ListGrantsWithContext(ctx aws.Context, input *kms.ListGrantsInput, opts ...request.Option) (*kms.ListGrantsResponse, error) {
	c.inc("ListGrants")
	return c.svc.ListGrantsWithContext(ctx, input, opts...)
}

// ListGrantsPages is a passthrough to the underlying ListGrantsPages method.
// It will increment the count of requests made to ListGrants on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListGrantsPagesWithContext to avoid this.
func (c *KMS) ListGrantsPages(input *kms.ListGrantsInput, fn func(*kms.ListGrantsResponse, bool) bool) error {
	wrappedFn := func(page *kms.ListGrantsResponse, lastPage bool) bool {
		c.inc("ListGrants")
		return fn(page, lastPage)
	}
	return c.ListGrantsPages(input, wrappedFn)
}

// ListGrantsPagesWithContext is a passthrough to the underlying ListGrantsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListGrants when applied to the request.
func (c *KMS) ListGrantsPagesWithContext(ctx aws.Context, input *kms.ListGrantsInput, fn func(*kms.ListGrantsResponse, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListGrants"))
	return c.ListGrantsPagesWithContext(ctx, input, fn, opts...)
}

// ListKeyPoliciesRequest is a passthrough to the underlying ListKeyPoliciesRequest.
// It will increment the count of requests made to ListKeyPolicies.
func (c *KMS) ListKeyPoliciesRequest(input *kms.ListKeyPoliciesInput) (req *request.Request, output *kms.ListKeyPoliciesOutput) {
	c.inc("ListKeyPolicies")
	return c.svc.ListKeyPoliciesRequest(input)
}

// ListKeyPolicies is a passthrough to the underlying ListKeyPolicies method.
// It will increment the count of requests made to ListKeyPolicies.
func (c *KMS) ListKeyPolicies(input *kms.ListKeyPoliciesInput) (*kms.ListKeyPoliciesOutput, error) {
	c.inc("ListKeyPolicies")
	return c.svc.ListKeyPolicies(input)
}

// ListKeyPoliciesWithContext is a passthrough to the underlying ListKeyPoliciesWithContext method.
// It will increment the count of requests made to ListKeyPolicies.
func (c *KMS) ListKeyPoliciesWithContext(ctx aws.Context, input *kms.ListKeyPoliciesInput, opts ...request.Option) (*kms.ListKeyPoliciesOutput, error) {
	c.inc("ListKeyPolicies")
	return c.svc.ListKeyPoliciesWithContext(ctx, input, opts...)
}

// ListKeyPoliciesPages is a passthrough to the underlying ListKeyPoliciesPages method.
// It will increment the count of requests made to ListKeyPolicies on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListKeyPoliciesPagesWithContext to avoid this.
func (c *KMS) ListKeyPoliciesPages(input *kms.ListKeyPoliciesInput, fn func(*kms.ListKeyPoliciesOutput, bool) bool) error {
	wrappedFn := func(page *kms.ListKeyPoliciesOutput, lastPage bool) bool {
		c.inc("ListKeyPolicies")
		return fn(page, lastPage)
	}
	return c.ListKeyPoliciesPages(input, wrappedFn)
}

// ListKeyPoliciesPagesWithContext is a passthrough to the underlying ListKeyPoliciesPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListKeyPolicies when applied to the request.
func (c *KMS) ListKeyPoliciesPagesWithContext(ctx aws.Context, input *kms.ListKeyPoliciesInput, fn func(*kms.ListKeyPoliciesOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListKeyPolicies"))
	return c.ListKeyPoliciesPagesWithContext(ctx, input, fn, opts...)
}

// ListKeysRequest is a passthrough to the underlying ListKeysRequest.
// It will increment the count of requests made to ListKeys.
func (c *KMS) ListKeysRequest(input *kms.ListKeysInput) (req *request.Request, output *kms.ListKeysOutput) {
	c.inc("ListKeys")
	return c.svc.ListKeysRequest(input)
}

// ListKeys is a passthrough to the underlying ListKeys method.
// It will increment the count of requests made to ListKeys.
func (c *KMS) ListKeys(input *kms.ListKeysInput) (*kms.ListKeysOutput, error) {
	c.inc("ListKeys")
	return c.svc.ListKeys(input)
}

// ListKeysWithContext is a passthrough to the underlying ListKeysWithContext method.
// It will increment the count of requests made to ListKeys.
func (c *KMS) ListKeysWithContext(ctx aws.Context, input *kms.ListKeysInput, opts ...request.Option) (*kms.ListKeysOutput, error) {
	c.inc("ListKeys")
	return c.svc.ListKeysWithContext(ctx, input, opts...)
}

// ListKeysPages is a passthrough to the underlying ListKeysPages method.
// It will increment the count of requests made to ListKeys on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListKeysPagesWithContext to avoid this.
func (c *KMS) ListKeysPages(input *kms.ListKeysInput, fn func(*kms.ListKeysOutput, bool) bool) error {
	wrappedFn := func(page *kms.ListKeysOutput, lastPage bool) bool {
		c.inc("ListKeys")
		return fn(page, lastPage)
	}
	return c.ListKeysPages(input, wrappedFn)
}

// ListKeysPagesWithContext is a passthrough to the underlying ListKeysPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListKeys when applied to the request.
func (c *KMS) ListKeysPagesWithContext(ctx aws.Context, input *kms.ListKeysInput, fn func(*kms.ListKeysOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListKeys"))
	return c.ListKeysPagesWithContext(ctx, input, fn, opts...)
}

// ListResourceTagsRequest is a passthrough to the underlying ListResourceTagsRequest.
// It will increment the count of requests made to ListResourceTags.
func (c *KMS) ListResourceTagsRequest(input *kms.ListResourceTagsInput) (req *request.Request, output *kms.ListResourceTagsOutput) {
	c.inc("ListResourceTags")
	return c.svc.ListResourceTagsRequest(input)
}

// ListResourceTags is a passthrough to the underlying ListResourceTags method.
// It will increment the count of requests made to ListResourceTags.
func (c *KMS) ListResourceTags(input *kms.ListResourceTagsInput) (*kms.ListResourceTagsOutput, error) {
	c.inc("ListResourceTags")
	return c.svc.ListResourceTags(input)
}

// ListResourceTagsWithContext is a passthrough to the underlying ListResourceTagsWithContext method.
// It will increment the count of requests made to ListResourceTags.
func (c *KMS) ListResourceTagsWithContext(ctx aws.Context, input *kms.ListResourceTagsInput, opts ...request.Option) (*kms.ListResourceTagsOutput, error) {
	c.inc("ListResourceTags")
	return c.svc.ListResourceTagsWithContext(ctx, input, opts...)
}

// ListRetirableGrantsRequest is a passthrough to the underlying ListRetirableGrantsRequest.
// It will increment the count of requests made to ListRetirableGrants.
func (c *KMS) ListRetirableGrantsRequest(input *kms.ListRetirableGrantsInput) (req *request.Request, output *kms.ListGrantsResponse) {
	c.inc("ListRetirableGrants")
	return c.svc.ListRetirableGrantsRequest(input)
}

// ListRetirableGrants is a passthrough to the underlying ListRetirableGrants method.
// It will increment the count of requests made to ListRetirableGrants.
func (c *KMS) ListRetirableGrants(input *kms.ListRetirableGrantsInput) (*kms.ListGrantsResponse, error) {
	c.inc("ListRetirableGrants")
	return c.svc.ListRetirableGrants(input)
}

// ListRetirableGrantsWithContext is a passthrough to the underlying ListRetirableGrantsWithContext method.
// It will increment the count of requests made to ListRetirableGrants.
func (c *KMS) ListRetirableGrantsWithContext(ctx aws.Context, input *kms.ListRetirableGrantsInput, opts ...request.Option) (*kms.ListGrantsResponse, error) {
	c.inc("ListRetirableGrants")
	return c.svc.ListRetirableGrantsWithContext(ctx, input, opts...)
}

// PutKeyPolicyRequest is a passthrough to the underlying PutKeyPolicyRequest.
// It will increment the count of requests made to PutKeyPolicy.
func (c *KMS) PutKeyPolicyRequest(input *kms.PutKeyPolicyInput) (req *request.Request, output *kms.PutKeyPolicyOutput) {
	c.inc("PutKeyPolicy")
	return c.svc.PutKeyPolicyRequest(input)
}

// PutKeyPolicy is a passthrough to the underlying PutKeyPolicy method.
// It will increment the count of requests made to PutKeyPolicy.
func (c *KMS) PutKeyPolicy(input *kms.PutKeyPolicyInput) (*kms.PutKeyPolicyOutput, error) {
	c.inc("PutKeyPolicy")
	return c.svc.PutKeyPolicy(input)
}

// PutKeyPolicyWithContext is a passthrough to the underlying PutKeyPolicyWithContext method.
// It will increment the count of requests made to PutKeyPolicy.
func (c *KMS) PutKeyPolicyWithContext(ctx aws.Context, input *kms.PutKeyPolicyInput, opts ...request.Option) (*kms.PutKeyPolicyOutput, error) {
	c.inc("PutKeyPolicy")
	return c.svc.PutKeyPolicyWithContext(ctx, input, opts...)
}

// ReEncryptRequest is a passthrough to the underlying ReEncryptRequest.
// It will increment the count of requests made to ReEncrypt.
func (c *KMS) ReEncryptRequest(input *kms.ReEncryptInput) (req *request.Request, output *kms.ReEncryptOutput) {
	c.inc("ReEncrypt")
	return c.svc.ReEncryptRequest(input)
}

// ReEncrypt is a passthrough to the underlying ReEncrypt method.
// It will increment the count of requests made to ReEncrypt.
func (c *KMS) ReEncrypt(input *kms.ReEncryptInput) (*kms.ReEncryptOutput, error) {
	c.inc("ReEncrypt")
	return c.svc.ReEncrypt(input)
}

// ReEncryptWithContext is a passthrough to the underlying ReEncryptWithContext method.
// It will increment the count of requests made to ReEncrypt.
func (c *KMS) ReEncryptWithContext(ctx aws.Context, input *kms.ReEncryptInput, opts ...request.Option) (*kms.ReEncryptOutput, error) {
	c.inc("ReEncrypt")
	return c.svc.ReEncryptWithContext(ctx, input, opts...)
}

// RetireGrantRequest is a passthrough to the underlying RetireGrantRequest.
// It will increment the count of requests made to RetireGrant.
func (c *KMS) RetireGrantRequest(input *kms.RetireGrantInput) (req *request.Request, output *kms.RetireGrantOutput) {
	c.inc("RetireGrant")
	return c.svc.RetireGrantRequest(input)
}

// RetireGrant is a passthrough to the underlying RetireGrant method.
// It will increment the count of requests made to RetireGrant.
func (c *KMS) RetireGrant(input *kms.RetireGrantInput) (*kms.RetireGrantOutput, error) {
	c.inc("RetireGrant")
	return c.svc.RetireGrant(input)
}

// RetireGrantWithContext is a passthrough to the underlying RetireGrantWithContext method.
// It will increment the count of requests made to RetireGrant.
func (c *KMS) RetireGrantWithContext(ctx aws.Context, input *kms.RetireGrantInput, opts ...request.Option) (*kms.RetireGrantOutput, error) {
	c.inc("RetireGrant")
	return c.svc.RetireGrantWithContext(ctx, input, opts...)
}

// RevokeGrantRequest is a passthrough to the underlying RevokeGrantRequest.
// It will increment the count of requests made to RevokeGrant.
func (c *KMS) RevokeGrantRequest(input *kms.RevokeGrantInput) (req *request.Request, output *kms.RevokeGrantOutput) {
	c.inc("RevokeGrant")
	return c.svc.RevokeGrantRequest(input)
}

// RevokeGrant is a passthrough to the underlying RevokeGrant method.
// It will increment the count of requests made to RevokeGrant.
func (c *KMS) RevokeGrant(input *kms.RevokeGrantInput) (*kms.RevokeGrantOutput, error) {
	c.inc("RevokeGrant")
	return c.svc.RevokeGrant(input)
}

// RevokeGrantWithContext is a passthrough to the underlying RevokeGrantWithContext method.
// It will increment the count of requests made to RevokeGrant.
func (c *KMS) RevokeGrantWithContext(ctx aws.Context, input *kms.RevokeGrantInput, opts ...request.Option) (*kms.RevokeGrantOutput, error) {
	c.inc("RevokeGrant")
	return c.svc.RevokeGrantWithContext(ctx, input, opts...)
}

// ScheduleKeyDeletionRequest is a passthrough to the underlying ScheduleKeyDeletionRequest.
// It will increment the count of requests made to ScheduleKeyDeletion.
func (c *KMS) ScheduleKeyDeletionRequest(input *kms.ScheduleKeyDeletionInput) (req *request.Request, output *kms.ScheduleKeyDeletionOutput) {
	c.inc("ScheduleKeyDeletion")
	return c.svc.ScheduleKeyDeletionRequest(input)
}

// ScheduleKeyDeletion is a passthrough to the underlying ScheduleKeyDeletion method.
// It will increment the count of requests made to ScheduleKeyDeletion.
func (c *KMS) ScheduleKeyDeletion(input *kms.ScheduleKeyDeletionInput) (*kms.ScheduleKeyDeletionOutput, error) {
	c.inc("ScheduleKeyDeletion")
	return c.svc.ScheduleKeyDeletion(input)
}

// ScheduleKeyDeletionWithContext is a passthrough to the underlying ScheduleKeyDeletionWithContext method.
// It will increment the count of requests made to ScheduleKeyDeletion.
func (c *KMS) ScheduleKeyDeletionWithContext(ctx aws.Context, input *kms.ScheduleKeyDeletionInput, opts ...request.Option) (*kms.ScheduleKeyDeletionOutput, error) {
	c.inc("ScheduleKeyDeletion")
	return c.svc.ScheduleKeyDeletionWithContext(ctx, input, opts...)
}

// TagResourceRequest is a passthrough to the underlying TagResourceRequest.
// It will increment the count of requests made to TagResource.
func (c *KMS) TagResourceRequest(input *kms.TagResourceInput) (req *request.Request, output *kms.TagResourceOutput) {
	c.inc("TagResource")
	return c.svc.TagResourceRequest(input)
}

// TagResource is a passthrough to the underlying TagResource method.
// It will increment the count of requests made to TagResource.
func (c *KMS) TagResource(input *kms.TagResourceInput) (*kms.TagResourceOutput, error) {
	c.inc("TagResource")
	return c.svc.TagResource(input)
}

// TagResourceWithContext is a passthrough to the underlying TagResourceWithContext method.
// It will increment the count of requests made to TagResource.
func (c *KMS) TagResourceWithContext(ctx aws.Context, input *kms.TagResourceInput, opts ...request.Option) (*kms.TagResourceOutput, error) {
	c.inc("TagResource")
	return c.svc.TagResourceWithContext(ctx, input, opts...)
}

// UntagResourceRequest is a passthrough to the underlying UntagResourceRequest.
// It will increment the count of requests made to UntagResource.
func (c *KMS) UntagResourceRequest(input *kms.UntagResourceInput) (req *request.Request, output *kms.UntagResourceOutput) {
	c.inc("UntagResource")
	return c.svc.UntagResourceRequest(input)
}

// UntagResource is a passthrough to the underlying UntagResource method.
// It will increment the count of requests made to UntagResource.
func (c *KMS) UntagResource(input *kms.UntagResourceInput) (*kms.UntagResourceOutput, error) {
	c.inc("UntagResource")
	return c.svc.UntagResource(input)
}

// UntagResourceWithContext is a passthrough to the underlying UntagResourceWithContext method.
// It will increment the count of requests made to UntagResource.
func (c *KMS) UntagResourceWithContext(ctx aws.Context, input *kms.UntagResourceInput, opts ...request.Option) (*kms.UntagResourceOutput, error) {
	c.inc("UntagResource")
	return c.svc.UntagResourceWithContext(ctx, input, opts...)
}

// UpdateAliasRequest is a passthrough to the underlying UpdateAliasRequest.
// It will increment the count of requests made to UpdateAlias.
func (c *KMS) UpdateAliasRequest(input *kms.UpdateAliasInput) (req *request.Request, output *kms.UpdateAliasOutput) {
	c.inc("UpdateAlias")
	return c.svc.UpdateAliasRequest(input)
}

// UpdateAlias is a passthrough to the underlying UpdateAlias method.
// It will increment the count of requests made to UpdateAlias.
func (c *KMS) UpdateAlias(input *kms.UpdateAliasInput) (*kms.UpdateAliasOutput, error) {
	c.inc("UpdateAlias")
	return c.svc.UpdateAlias(input)
}

// UpdateAliasWithContext is a passthrough to the underlying UpdateAliasWithContext method.
// It will increment the count of requests made to UpdateAlias.
func (c *KMS) UpdateAliasWithContext(ctx aws.Context, input *kms.UpdateAliasInput, opts ...request.Option) (*kms.UpdateAliasOutput, error) {
	c.inc("UpdateAlias")
	return c.svc.UpdateAliasWithContext(ctx, input, opts...)
}

// UpdateKeyDescriptionRequest is a passthrough to the underlying UpdateKeyDescriptionRequest.
// It will increment the count of requests made to UpdateKeyDescription.
func (c *KMS) UpdateKeyDescriptionRequest(input *kms.UpdateKeyDescriptionInput) (req *request.Request, output *kms.UpdateKeyDescriptionOutput) {
	c.inc("UpdateKeyDescription")
	return c.svc.UpdateKeyDescriptionRequest(input)
}

// UpdateKeyDescription is a passthrough to the underlying UpdateKeyDescription method.
// It will increment the count of requests made to UpdateKeyDescription.
func (c *KMS) UpdateKeyDescription(input *kms.UpdateKeyDescriptionInput) (*kms.UpdateKeyDescriptionOutput, error) {
	c.inc("UpdateKeyDescription")
	return c.svc.UpdateKeyDescription(input)
}

// UpdateKeyDescriptionWithContext is a passthrough to the underlying UpdateKeyDescriptionWithContext method.
// It will increment the count of requests made to UpdateKeyDescription.
func (c *KMS) UpdateKeyDescriptionWithContext(ctx aws.Context, input *kms.UpdateKeyDescriptionInput, opts ...request.Option) (*kms.UpdateKeyDescriptionOutput, error) {
	c.inc("UpdateKeyDescription")
	return c.svc.UpdateKeyDescriptionWithContext(ctx, input, opts...)
}
