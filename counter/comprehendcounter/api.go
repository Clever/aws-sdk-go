// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package comprehendcounter

import (
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/comprehend"
)

// BatchDetectDominantLanguageRequest is a passthrough to the underlying BatchDetectDominantLanguageRequest.
// It will increment the count of requests made to BatchDetectDominantLanguage.
func (c *Comprehend) BatchDetectDominantLanguageRequest(input *comprehend.BatchDetectDominantLanguageInput) (req *request.Request, output *comprehend.BatchDetectDominantLanguageOutput) {
	c.inc("BatchDetectDominantLanguage")
	return c.svc.BatchDetectDominantLanguageRequest(input)
}

// BatchDetectDominantLanguage is a passthrough to the underlying BatchDetectDominantLanguage method.
// It will increment the count of requests made to BatchDetectDominantLanguage.
func (c *Comprehend) BatchDetectDominantLanguage(input *comprehend.BatchDetectDominantLanguageInput) (*comprehend.BatchDetectDominantLanguageOutput, error) {
	c.inc("BatchDetectDominantLanguage")
	return c.svc.BatchDetectDominantLanguage(input)
}

// BatchDetectDominantLanguageWithContext is a passthrough to the underlying BatchDetectDominantLanguageWithContext method.
// It will increment the count of requests made to BatchDetectDominantLanguage.
func (c *Comprehend) BatchDetectDominantLanguageWithContext(ctx aws.Context, input *comprehend.BatchDetectDominantLanguageInput, opts ...request.Option) (*comprehend.BatchDetectDominantLanguageOutput, error) {
	c.inc("BatchDetectDominantLanguage")
	return c.svc.BatchDetectDominantLanguageWithContext(ctx, input, opts...)
}

// BatchDetectEntitiesRequest is a passthrough to the underlying BatchDetectEntitiesRequest.
// It will increment the count of requests made to BatchDetectEntities.
func (c *Comprehend) BatchDetectEntitiesRequest(input *comprehend.BatchDetectEntitiesInput) (req *request.Request, output *comprehend.BatchDetectEntitiesOutput) {
	c.inc("BatchDetectEntities")
	return c.svc.BatchDetectEntitiesRequest(input)
}

// BatchDetectEntities is a passthrough to the underlying BatchDetectEntities method.
// It will increment the count of requests made to BatchDetectEntities.
func (c *Comprehend) BatchDetectEntities(input *comprehend.BatchDetectEntitiesInput) (*comprehend.BatchDetectEntitiesOutput, error) {
	c.inc("BatchDetectEntities")
	return c.svc.BatchDetectEntities(input)
}

// BatchDetectEntitiesWithContext is a passthrough to the underlying BatchDetectEntitiesWithContext method.
// It will increment the count of requests made to BatchDetectEntities.
func (c *Comprehend) BatchDetectEntitiesWithContext(ctx aws.Context, input *comprehend.BatchDetectEntitiesInput, opts ...request.Option) (*comprehend.BatchDetectEntitiesOutput, error) {
	c.inc("BatchDetectEntities")
	return c.svc.BatchDetectEntitiesWithContext(ctx, input, opts...)
}

// BatchDetectKeyPhrasesRequest is a passthrough to the underlying BatchDetectKeyPhrasesRequest.
// It will increment the count of requests made to BatchDetectKeyPhrases.
func (c *Comprehend) BatchDetectKeyPhrasesRequest(input *comprehend.BatchDetectKeyPhrasesInput) (req *request.Request, output *comprehend.BatchDetectKeyPhrasesOutput) {
	c.inc("BatchDetectKeyPhrases")
	return c.svc.BatchDetectKeyPhrasesRequest(input)
}

// BatchDetectKeyPhrases is a passthrough to the underlying BatchDetectKeyPhrases method.
// It will increment the count of requests made to BatchDetectKeyPhrases.
func (c *Comprehend) BatchDetectKeyPhrases(input *comprehend.BatchDetectKeyPhrasesInput) (*comprehend.BatchDetectKeyPhrasesOutput, error) {
	c.inc("BatchDetectKeyPhrases")
	return c.svc.BatchDetectKeyPhrases(input)
}

// BatchDetectKeyPhrasesWithContext is a passthrough to the underlying BatchDetectKeyPhrasesWithContext method.
// It will increment the count of requests made to BatchDetectKeyPhrases.
func (c *Comprehend) BatchDetectKeyPhrasesWithContext(ctx aws.Context, input *comprehend.BatchDetectKeyPhrasesInput, opts ...request.Option) (*comprehend.BatchDetectKeyPhrasesOutput, error) {
	c.inc("BatchDetectKeyPhrases")
	return c.svc.BatchDetectKeyPhrasesWithContext(ctx, input, opts...)
}

// BatchDetectSentimentRequest is a passthrough to the underlying BatchDetectSentimentRequest.
// It will increment the count of requests made to BatchDetectSentiment.
func (c *Comprehend) BatchDetectSentimentRequest(input *comprehend.BatchDetectSentimentInput) (req *request.Request, output *comprehend.BatchDetectSentimentOutput) {
	c.inc("BatchDetectSentiment")
	return c.svc.BatchDetectSentimentRequest(input)
}

// BatchDetectSentiment is a passthrough to the underlying BatchDetectSentiment method.
// It will increment the count of requests made to BatchDetectSentiment.
func (c *Comprehend) BatchDetectSentiment(input *comprehend.BatchDetectSentimentInput) (*comprehend.BatchDetectSentimentOutput, error) {
	c.inc("BatchDetectSentiment")
	return c.svc.BatchDetectSentiment(input)
}

// BatchDetectSentimentWithContext is a passthrough to the underlying BatchDetectSentimentWithContext method.
// It will increment the count of requests made to BatchDetectSentiment.
func (c *Comprehend) BatchDetectSentimentWithContext(ctx aws.Context, input *comprehend.BatchDetectSentimentInput, opts ...request.Option) (*comprehend.BatchDetectSentimentOutput, error) {
	c.inc("BatchDetectSentiment")
	return c.svc.BatchDetectSentimentWithContext(ctx, input, opts...)
}

// DescribeTopicsDetectionJobRequest is a passthrough to the underlying DescribeTopicsDetectionJobRequest.
// It will increment the count of requests made to DescribeTopicsDetectionJob.
func (c *Comprehend) DescribeTopicsDetectionJobRequest(input *comprehend.DescribeTopicsDetectionJobInput) (req *request.Request, output *comprehend.DescribeTopicsDetectionJobOutput) {
	c.inc("DescribeTopicsDetectionJob")
	return c.svc.DescribeTopicsDetectionJobRequest(input)
}

// DescribeTopicsDetectionJob is a passthrough to the underlying DescribeTopicsDetectionJob method.
// It will increment the count of requests made to DescribeTopicsDetectionJob.
func (c *Comprehend) DescribeTopicsDetectionJob(input *comprehend.DescribeTopicsDetectionJobInput) (*comprehend.DescribeTopicsDetectionJobOutput, error) {
	c.inc("DescribeTopicsDetectionJob")
	return c.svc.DescribeTopicsDetectionJob(input)
}

// DescribeTopicsDetectionJobWithContext is a passthrough to the underlying DescribeTopicsDetectionJobWithContext method.
// It will increment the count of requests made to DescribeTopicsDetectionJob.
func (c *Comprehend) DescribeTopicsDetectionJobWithContext(ctx aws.Context, input *comprehend.DescribeTopicsDetectionJobInput, opts ...request.Option) (*comprehend.DescribeTopicsDetectionJobOutput, error) {
	c.inc("DescribeTopicsDetectionJob")
	return c.svc.DescribeTopicsDetectionJobWithContext(ctx, input, opts...)
}

// DetectDominantLanguageRequest is a passthrough to the underlying DetectDominantLanguageRequest.
// It will increment the count of requests made to DetectDominantLanguage.
func (c *Comprehend) DetectDominantLanguageRequest(input *comprehend.DetectDominantLanguageInput) (req *request.Request, output *comprehend.DetectDominantLanguageOutput) {
	c.inc("DetectDominantLanguage")
	return c.svc.DetectDominantLanguageRequest(input)
}

// DetectDominantLanguage is a passthrough to the underlying DetectDominantLanguage method.
// It will increment the count of requests made to DetectDominantLanguage.
func (c *Comprehend) DetectDominantLanguage(input *comprehend.DetectDominantLanguageInput) (*comprehend.DetectDominantLanguageOutput, error) {
	c.inc("DetectDominantLanguage")
	return c.svc.DetectDominantLanguage(input)
}

// DetectDominantLanguageWithContext is a passthrough to the underlying DetectDominantLanguageWithContext method.
// It will increment the count of requests made to DetectDominantLanguage.
func (c *Comprehend) DetectDominantLanguageWithContext(ctx aws.Context, input *comprehend.DetectDominantLanguageInput, opts ...request.Option) (*comprehend.DetectDominantLanguageOutput, error) {
	c.inc("DetectDominantLanguage")
	return c.svc.DetectDominantLanguageWithContext(ctx, input, opts...)
}

// DetectEntitiesRequest is a passthrough to the underlying DetectEntitiesRequest.
// It will increment the count of requests made to DetectEntities.
func (c *Comprehend) DetectEntitiesRequest(input *comprehend.DetectEntitiesInput) (req *request.Request, output *comprehend.DetectEntitiesOutput) {
	c.inc("DetectEntities")
	return c.svc.DetectEntitiesRequest(input)
}

// DetectEntities is a passthrough to the underlying DetectEntities method.
// It will increment the count of requests made to DetectEntities.
func (c *Comprehend) DetectEntities(input *comprehend.DetectEntitiesInput) (*comprehend.DetectEntitiesOutput, error) {
	c.inc("DetectEntities")
	return c.svc.DetectEntities(input)
}

// DetectEntitiesWithContext is a passthrough to the underlying DetectEntitiesWithContext method.
// It will increment the count of requests made to DetectEntities.
func (c *Comprehend) DetectEntitiesWithContext(ctx aws.Context, input *comprehend.DetectEntitiesInput, opts ...request.Option) (*comprehend.DetectEntitiesOutput, error) {
	c.inc("DetectEntities")
	return c.svc.DetectEntitiesWithContext(ctx, input, opts...)
}

// DetectKeyPhrasesRequest is a passthrough to the underlying DetectKeyPhrasesRequest.
// It will increment the count of requests made to DetectKeyPhrases.
func (c *Comprehend) DetectKeyPhrasesRequest(input *comprehend.DetectKeyPhrasesInput) (req *request.Request, output *comprehend.DetectKeyPhrasesOutput) {
	c.inc("DetectKeyPhrases")
	return c.svc.DetectKeyPhrasesRequest(input)
}

// DetectKeyPhrases is a passthrough to the underlying DetectKeyPhrases method.
// It will increment the count of requests made to DetectKeyPhrases.
func (c *Comprehend) DetectKeyPhrases(input *comprehend.DetectKeyPhrasesInput) (*comprehend.DetectKeyPhrasesOutput, error) {
	c.inc("DetectKeyPhrases")
	return c.svc.DetectKeyPhrases(input)
}

// DetectKeyPhrasesWithContext is a passthrough to the underlying DetectKeyPhrasesWithContext method.
// It will increment the count of requests made to DetectKeyPhrases.
func (c *Comprehend) DetectKeyPhrasesWithContext(ctx aws.Context, input *comprehend.DetectKeyPhrasesInput, opts ...request.Option) (*comprehend.DetectKeyPhrasesOutput, error) {
	c.inc("DetectKeyPhrases")
	return c.svc.DetectKeyPhrasesWithContext(ctx, input, opts...)
}

// DetectSentimentRequest is a passthrough to the underlying DetectSentimentRequest.
// It will increment the count of requests made to DetectSentiment.
func (c *Comprehend) DetectSentimentRequest(input *comprehend.DetectSentimentInput) (req *request.Request, output *comprehend.DetectSentimentOutput) {
	c.inc("DetectSentiment")
	return c.svc.DetectSentimentRequest(input)
}

// DetectSentiment is a passthrough to the underlying DetectSentiment method.
// It will increment the count of requests made to DetectSentiment.
func (c *Comprehend) DetectSentiment(input *comprehend.DetectSentimentInput) (*comprehend.DetectSentimentOutput, error) {
	c.inc("DetectSentiment")
	return c.svc.DetectSentiment(input)
}

// DetectSentimentWithContext is a passthrough to the underlying DetectSentimentWithContext method.
// It will increment the count of requests made to DetectSentiment.
func (c *Comprehend) DetectSentimentWithContext(ctx aws.Context, input *comprehend.DetectSentimentInput, opts ...request.Option) (*comprehend.DetectSentimentOutput, error) {
	c.inc("DetectSentiment")
	return c.svc.DetectSentimentWithContext(ctx, input, opts...)
}

// ListTopicsDetectionJobsRequest is a passthrough to the underlying ListTopicsDetectionJobsRequest.
// It will increment the count of requests made to ListTopicsDetectionJobs.
func (c *Comprehend) ListTopicsDetectionJobsRequest(input *comprehend.ListTopicsDetectionJobsInput) (req *request.Request, output *comprehend.ListTopicsDetectionJobsOutput) {
	c.inc("ListTopicsDetectionJobs")
	return c.svc.ListTopicsDetectionJobsRequest(input)
}

// ListTopicsDetectionJobs is a passthrough to the underlying ListTopicsDetectionJobs method.
// It will increment the count of requests made to ListTopicsDetectionJobs.
func (c *Comprehend) ListTopicsDetectionJobs(input *comprehend.ListTopicsDetectionJobsInput) (*comprehend.ListTopicsDetectionJobsOutput, error) {
	c.inc("ListTopicsDetectionJobs")
	return c.svc.ListTopicsDetectionJobs(input)
}

// ListTopicsDetectionJobsWithContext is a passthrough to the underlying ListTopicsDetectionJobsWithContext method.
// It will increment the count of requests made to ListTopicsDetectionJobs.
func (c *Comprehend) ListTopicsDetectionJobsWithContext(ctx aws.Context, input *comprehend.ListTopicsDetectionJobsInput, opts ...request.Option) (*comprehend.ListTopicsDetectionJobsOutput, error) {
	c.inc("ListTopicsDetectionJobs")
	return c.svc.ListTopicsDetectionJobsWithContext(ctx, input, opts...)
}

// ListTopicsDetectionJobsPages is a passthrough to the underlying ListTopicsDetectionJobsPages method.
// It will increment the count of requests made to ListTopicsDetectionJobs on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListTopicsDetectionJobsPagesWithContext to avoid this.
func (c *Comprehend) ListTopicsDetectionJobsPages(input *comprehend.ListTopicsDetectionJobsInput, fn func(*comprehend.ListTopicsDetectionJobsOutput, bool) bool) error {
	wrappedFn := func(page *comprehend.ListTopicsDetectionJobsOutput, lastPage bool) bool {
		c.inc("ListTopicsDetectionJobs")
		return fn(page, lastPage)
	}
	return c.svc.ListTopicsDetectionJobsPages(input, wrappedFn)
}

// ListTopicsDetectionJobsPagesWithContext is a passthrough to the underlying ListTopicsDetectionJobsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListTopicsDetectionJobs when applied to the request.
func (c *Comprehend) ListTopicsDetectionJobsPagesWithContext(ctx aws.Context, input *comprehend.ListTopicsDetectionJobsInput, fn func(*comprehend.ListTopicsDetectionJobsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListTopicsDetectionJobs"))
	return c.svc.ListTopicsDetectionJobsPagesWithContext(ctx, input, fn, opts...)
}

// StartTopicsDetectionJobRequest is a passthrough to the underlying StartTopicsDetectionJobRequest.
// It will increment the count of requests made to StartTopicsDetectionJob.
func (c *Comprehend) StartTopicsDetectionJobRequest(input *comprehend.StartTopicsDetectionJobInput) (req *request.Request, output *comprehend.StartTopicsDetectionJobOutput) {
	c.inc("StartTopicsDetectionJob")
	return c.svc.StartTopicsDetectionJobRequest(input)
}

// StartTopicsDetectionJob is a passthrough to the underlying StartTopicsDetectionJob method.
// It will increment the count of requests made to StartTopicsDetectionJob.
func (c *Comprehend) StartTopicsDetectionJob(input *comprehend.StartTopicsDetectionJobInput) (*comprehend.StartTopicsDetectionJobOutput, error) {
	c.inc("StartTopicsDetectionJob")
	return c.svc.StartTopicsDetectionJob(input)
}

// StartTopicsDetectionJobWithContext is a passthrough to the underlying StartTopicsDetectionJobWithContext method.
// It will increment the count of requests made to StartTopicsDetectionJob.
func (c *Comprehend) StartTopicsDetectionJobWithContext(ctx aws.Context, input *comprehend.StartTopicsDetectionJobInput, opts ...request.Option) (*comprehend.StartTopicsDetectionJobOutput, error) {
	c.inc("StartTopicsDetectionJob")
	return c.svc.StartTopicsDetectionJobWithContext(ctx, input, opts...)
}
