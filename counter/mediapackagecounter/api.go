// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package mediapackagecounter

import (
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/mediapackage"
)

// CreateChannelRequest is a passthrough to the underlying CreateChannelRequest.
// It will increment the count of requests made to CreateChannel.
func (c *MediaPackage) CreateChannelRequest(input *mediapackage.CreateChannelInput) (req *request.Request, output *mediapackage.CreateChannelOutput) {
	c.inc("CreateChannel")
	return c.svc.CreateChannelRequest(input)
}

// CreateChannel is a passthrough to the underlying CreateChannel method.
// It will increment the count of requests made to CreateChannel.
func (c *MediaPackage) CreateChannel(input *mediapackage.CreateChannelInput) (*mediapackage.CreateChannelOutput, error) {
	c.inc("CreateChannel")
	return c.svc.CreateChannel(input)
}

// CreateChannelWithContext is a passthrough to the underlying CreateChannelWithContext method.
// It will increment the count of requests made to CreateChannel.
func (c *MediaPackage) CreateChannelWithContext(ctx aws.Context, input *mediapackage.CreateChannelInput, opts ...request.Option) (*mediapackage.CreateChannelOutput, error) {
	c.inc("CreateChannel")
	return c.svc.CreateChannelWithContext(ctx, input, opts...)
}

// CreateOriginEndpointRequest is a passthrough to the underlying CreateOriginEndpointRequest.
// It will increment the count of requests made to CreateOriginEndpoint.
func (c *MediaPackage) CreateOriginEndpointRequest(input *mediapackage.CreateOriginEndpointInput) (req *request.Request, output *mediapackage.CreateOriginEndpointOutput) {
	c.inc("CreateOriginEndpoint")
	return c.svc.CreateOriginEndpointRequest(input)
}

// CreateOriginEndpoint is a passthrough to the underlying CreateOriginEndpoint method.
// It will increment the count of requests made to CreateOriginEndpoint.
func (c *MediaPackage) CreateOriginEndpoint(input *mediapackage.CreateOriginEndpointInput) (*mediapackage.CreateOriginEndpointOutput, error) {
	c.inc("CreateOriginEndpoint")
	return c.svc.CreateOriginEndpoint(input)
}

// CreateOriginEndpointWithContext is a passthrough to the underlying CreateOriginEndpointWithContext method.
// It will increment the count of requests made to CreateOriginEndpoint.
func (c *MediaPackage) CreateOriginEndpointWithContext(ctx aws.Context, input *mediapackage.CreateOriginEndpointInput, opts ...request.Option) (*mediapackage.CreateOriginEndpointOutput, error) {
	c.inc("CreateOriginEndpoint")
	return c.svc.CreateOriginEndpointWithContext(ctx, input, opts...)
}

// DeleteChannelRequest is a passthrough to the underlying DeleteChannelRequest.
// It will increment the count of requests made to DeleteChannel.
func (c *MediaPackage) DeleteChannelRequest(input *mediapackage.DeleteChannelInput) (req *request.Request, output *mediapackage.DeleteChannelOutput) {
	c.inc("DeleteChannel")
	return c.svc.DeleteChannelRequest(input)
}

// DeleteChannel is a passthrough to the underlying DeleteChannel method.
// It will increment the count of requests made to DeleteChannel.
func (c *MediaPackage) DeleteChannel(input *mediapackage.DeleteChannelInput) (*mediapackage.DeleteChannelOutput, error) {
	c.inc("DeleteChannel")
	return c.svc.DeleteChannel(input)
}

// DeleteChannelWithContext is a passthrough to the underlying DeleteChannelWithContext method.
// It will increment the count of requests made to DeleteChannel.
func (c *MediaPackage) DeleteChannelWithContext(ctx aws.Context, input *mediapackage.DeleteChannelInput, opts ...request.Option) (*mediapackage.DeleteChannelOutput, error) {
	c.inc("DeleteChannel")
	return c.svc.DeleteChannelWithContext(ctx, input, opts...)
}

// DeleteOriginEndpointRequest is a passthrough to the underlying DeleteOriginEndpointRequest.
// It will increment the count of requests made to DeleteOriginEndpoint.
func (c *MediaPackage) DeleteOriginEndpointRequest(input *mediapackage.DeleteOriginEndpointInput) (req *request.Request, output *mediapackage.DeleteOriginEndpointOutput) {
	c.inc("DeleteOriginEndpoint")
	return c.svc.DeleteOriginEndpointRequest(input)
}

// DeleteOriginEndpoint is a passthrough to the underlying DeleteOriginEndpoint method.
// It will increment the count of requests made to DeleteOriginEndpoint.
func (c *MediaPackage) DeleteOriginEndpoint(input *mediapackage.DeleteOriginEndpointInput) (*mediapackage.DeleteOriginEndpointOutput, error) {
	c.inc("DeleteOriginEndpoint")
	return c.svc.DeleteOriginEndpoint(input)
}

// DeleteOriginEndpointWithContext is a passthrough to the underlying DeleteOriginEndpointWithContext method.
// It will increment the count of requests made to DeleteOriginEndpoint.
func (c *MediaPackage) DeleteOriginEndpointWithContext(ctx aws.Context, input *mediapackage.DeleteOriginEndpointInput, opts ...request.Option) (*mediapackage.DeleteOriginEndpointOutput, error) {
	c.inc("DeleteOriginEndpoint")
	return c.svc.DeleteOriginEndpointWithContext(ctx, input, opts...)
}

// DescribeChannelRequest is a passthrough to the underlying DescribeChannelRequest.
// It will increment the count of requests made to DescribeChannel.
func (c *MediaPackage) DescribeChannelRequest(input *mediapackage.DescribeChannelInput) (req *request.Request, output *mediapackage.DescribeChannelOutput) {
	c.inc("DescribeChannel")
	return c.svc.DescribeChannelRequest(input)
}

// DescribeChannel is a passthrough to the underlying DescribeChannel method.
// It will increment the count of requests made to DescribeChannel.
func (c *MediaPackage) DescribeChannel(input *mediapackage.DescribeChannelInput) (*mediapackage.DescribeChannelOutput, error) {
	c.inc("DescribeChannel")
	return c.svc.DescribeChannel(input)
}

// DescribeChannelWithContext is a passthrough to the underlying DescribeChannelWithContext method.
// It will increment the count of requests made to DescribeChannel.
func (c *MediaPackage) DescribeChannelWithContext(ctx aws.Context, input *mediapackage.DescribeChannelInput, opts ...request.Option) (*mediapackage.DescribeChannelOutput, error) {
	c.inc("DescribeChannel")
	return c.svc.DescribeChannelWithContext(ctx, input, opts...)
}

// DescribeOriginEndpointRequest is a passthrough to the underlying DescribeOriginEndpointRequest.
// It will increment the count of requests made to DescribeOriginEndpoint.
func (c *MediaPackage) DescribeOriginEndpointRequest(input *mediapackage.DescribeOriginEndpointInput) (req *request.Request, output *mediapackage.DescribeOriginEndpointOutput) {
	c.inc("DescribeOriginEndpoint")
	return c.svc.DescribeOriginEndpointRequest(input)
}

// DescribeOriginEndpoint is a passthrough to the underlying DescribeOriginEndpoint method.
// It will increment the count of requests made to DescribeOriginEndpoint.
func (c *MediaPackage) DescribeOriginEndpoint(input *mediapackage.DescribeOriginEndpointInput) (*mediapackage.DescribeOriginEndpointOutput, error) {
	c.inc("DescribeOriginEndpoint")
	return c.svc.DescribeOriginEndpoint(input)
}

// DescribeOriginEndpointWithContext is a passthrough to the underlying DescribeOriginEndpointWithContext method.
// It will increment the count of requests made to DescribeOriginEndpoint.
func (c *MediaPackage) DescribeOriginEndpointWithContext(ctx aws.Context, input *mediapackage.DescribeOriginEndpointInput, opts ...request.Option) (*mediapackage.DescribeOriginEndpointOutput, error) {
	c.inc("DescribeOriginEndpoint")
	return c.svc.DescribeOriginEndpointWithContext(ctx, input, opts...)
}

// ListChannelsRequest is a passthrough to the underlying ListChannelsRequest.
// It will increment the count of requests made to ListChannels.
func (c *MediaPackage) ListChannelsRequest(input *mediapackage.ListChannelsInput) (req *request.Request, output *mediapackage.ListChannelsOutput) {
	c.inc("ListChannels")
	return c.svc.ListChannelsRequest(input)
}

// ListChannels is a passthrough to the underlying ListChannels method.
// It will increment the count of requests made to ListChannels.
func (c *MediaPackage) ListChannels(input *mediapackage.ListChannelsInput) (*mediapackage.ListChannelsOutput, error) {
	c.inc("ListChannels")
	return c.svc.ListChannels(input)
}

// ListChannelsWithContext is a passthrough to the underlying ListChannelsWithContext method.
// It will increment the count of requests made to ListChannels.
func (c *MediaPackage) ListChannelsWithContext(ctx aws.Context, input *mediapackage.ListChannelsInput, opts ...request.Option) (*mediapackage.ListChannelsOutput, error) {
	c.inc("ListChannels")
	return c.svc.ListChannelsWithContext(ctx, input, opts...)
}

// ListChannelsPages is a passthrough to the underlying ListChannelsPages method.
// It will increment the count of requests made to ListChannels on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListChannelsPagesWithContext to avoid this.
func (c *MediaPackage) ListChannelsPages(input *mediapackage.ListChannelsInput, fn func(*mediapackage.ListChannelsOutput, bool) bool) error {
	wrappedFn := func(page *mediapackage.ListChannelsOutput, lastPage bool) bool {
		c.inc("ListChannels")
		return fn(page, lastPage)
	}
	return c.svc.ListChannelsPages(input, wrappedFn)
}

// ListChannelsPagesWithContext is a passthrough to the underlying ListChannelsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListChannels when applied to the request.
func (c *MediaPackage) ListChannelsPagesWithContext(ctx aws.Context, input *mediapackage.ListChannelsInput, fn func(*mediapackage.ListChannelsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListChannels"))
	return c.svc.ListChannelsPagesWithContext(ctx, input, fn, opts...)
}

// ListOriginEndpointsRequest is a passthrough to the underlying ListOriginEndpointsRequest.
// It will increment the count of requests made to ListOriginEndpoints.
func (c *MediaPackage) ListOriginEndpointsRequest(input *mediapackage.ListOriginEndpointsInput) (req *request.Request, output *mediapackage.ListOriginEndpointsOutput) {
	c.inc("ListOriginEndpoints")
	return c.svc.ListOriginEndpointsRequest(input)
}

// ListOriginEndpoints is a passthrough to the underlying ListOriginEndpoints method.
// It will increment the count of requests made to ListOriginEndpoints.
func (c *MediaPackage) ListOriginEndpoints(input *mediapackage.ListOriginEndpointsInput) (*mediapackage.ListOriginEndpointsOutput, error) {
	c.inc("ListOriginEndpoints")
	return c.svc.ListOriginEndpoints(input)
}

// ListOriginEndpointsWithContext is a passthrough to the underlying ListOriginEndpointsWithContext method.
// It will increment the count of requests made to ListOriginEndpoints.
func (c *MediaPackage) ListOriginEndpointsWithContext(ctx aws.Context, input *mediapackage.ListOriginEndpointsInput, opts ...request.Option) (*mediapackage.ListOriginEndpointsOutput, error) {
	c.inc("ListOriginEndpoints")
	return c.svc.ListOriginEndpointsWithContext(ctx, input, opts...)
}

// ListOriginEndpointsPages is a passthrough to the underlying ListOriginEndpointsPages method.
// It will increment the count of requests made to ListOriginEndpoints on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListOriginEndpointsPagesWithContext to avoid this.
func (c *MediaPackage) ListOriginEndpointsPages(input *mediapackage.ListOriginEndpointsInput, fn func(*mediapackage.ListOriginEndpointsOutput, bool) bool) error {
	wrappedFn := func(page *mediapackage.ListOriginEndpointsOutput, lastPage bool) bool {
		c.inc("ListOriginEndpoints")
		return fn(page, lastPage)
	}
	return c.svc.ListOriginEndpointsPages(input, wrappedFn)
}

// ListOriginEndpointsPagesWithContext is a passthrough to the underlying ListOriginEndpointsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListOriginEndpoints when applied to the request.
func (c *MediaPackage) ListOriginEndpointsPagesWithContext(ctx aws.Context, input *mediapackage.ListOriginEndpointsInput, fn func(*mediapackage.ListOriginEndpointsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListOriginEndpoints"))
	return c.svc.ListOriginEndpointsPagesWithContext(ctx, input, fn, opts...)
}

// RotateChannelCredentialsRequest is a passthrough to the underlying RotateChannelCredentialsRequest.
// It will increment the count of requests made to RotateChannelCredentials.
func (c *MediaPackage) RotateChannelCredentialsRequest(input *mediapackage.RotateChannelCredentialsInput) (req *request.Request, output *mediapackage.RotateChannelCredentialsOutput) {
	c.inc("RotateChannelCredentials")
	return c.svc.RotateChannelCredentialsRequest(input)
}

// RotateChannelCredentials is a passthrough to the underlying RotateChannelCredentials method.
// It will increment the count of requests made to RotateChannelCredentials.
func (c *MediaPackage) RotateChannelCredentials(input *mediapackage.RotateChannelCredentialsInput) (*mediapackage.RotateChannelCredentialsOutput, error) {
	c.inc("RotateChannelCredentials")
	return c.svc.RotateChannelCredentials(input)
}

// RotateChannelCredentialsWithContext is a passthrough to the underlying RotateChannelCredentialsWithContext method.
// It will increment the count of requests made to RotateChannelCredentials.
func (c *MediaPackage) RotateChannelCredentialsWithContext(ctx aws.Context, input *mediapackage.RotateChannelCredentialsInput, opts ...request.Option) (*mediapackage.RotateChannelCredentialsOutput, error) {
	c.inc("RotateChannelCredentials")
	return c.svc.RotateChannelCredentialsWithContext(ctx, input, opts...)
}

// UpdateChannelRequest is a passthrough to the underlying UpdateChannelRequest.
// It will increment the count of requests made to UpdateChannel.
func (c *MediaPackage) UpdateChannelRequest(input *mediapackage.UpdateChannelInput) (req *request.Request, output *mediapackage.UpdateChannelOutput) {
	c.inc("UpdateChannel")
	return c.svc.UpdateChannelRequest(input)
}

// UpdateChannel is a passthrough to the underlying UpdateChannel method.
// It will increment the count of requests made to UpdateChannel.
func (c *MediaPackage) UpdateChannel(input *mediapackage.UpdateChannelInput) (*mediapackage.UpdateChannelOutput, error) {
	c.inc("UpdateChannel")
	return c.svc.UpdateChannel(input)
}

// UpdateChannelWithContext is a passthrough to the underlying UpdateChannelWithContext method.
// It will increment the count of requests made to UpdateChannel.
func (c *MediaPackage) UpdateChannelWithContext(ctx aws.Context, input *mediapackage.UpdateChannelInput, opts ...request.Option) (*mediapackage.UpdateChannelOutput, error) {
	c.inc("UpdateChannel")
	return c.svc.UpdateChannelWithContext(ctx, input, opts...)
}

// UpdateOriginEndpointRequest is a passthrough to the underlying UpdateOriginEndpointRequest.
// It will increment the count of requests made to UpdateOriginEndpoint.
func (c *MediaPackage) UpdateOriginEndpointRequest(input *mediapackage.UpdateOriginEndpointInput) (req *request.Request, output *mediapackage.UpdateOriginEndpointOutput) {
	c.inc("UpdateOriginEndpoint")
	return c.svc.UpdateOriginEndpointRequest(input)
}

// UpdateOriginEndpoint is a passthrough to the underlying UpdateOriginEndpoint method.
// It will increment the count of requests made to UpdateOriginEndpoint.
func (c *MediaPackage) UpdateOriginEndpoint(input *mediapackage.UpdateOriginEndpointInput) (*mediapackage.UpdateOriginEndpointOutput, error) {
	c.inc("UpdateOriginEndpoint")
	return c.svc.UpdateOriginEndpoint(input)
}

// UpdateOriginEndpointWithContext is a passthrough to the underlying UpdateOriginEndpointWithContext method.
// It will increment the count of requests made to UpdateOriginEndpoint.
func (c *MediaPackage) UpdateOriginEndpointWithContext(ctx aws.Context, input *mediapackage.UpdateOriginEndpointInput, opts ...request.Option) (*mediapackage.UpdateOriginEndpointOutput, error) {
	c.inc("UpdateOriginEndpoint")
	return c.svc.UpdateOriginEndpointWithContext(ctx, input, opts...)
}
