// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package iotjobsdataplanecounter

import (
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/iotjobsdataplane"
)

// DescribeJobExecutionRequest is a passthrough to the underlying DescribeJobExecutionRequest.
// It will increment the count of requests made to DescribeJobExecution.
func (c *IoTJobsDataPlane) DescribeJobExecutionRequest(input *iotjobsdataplane.DescribeJobExecutionInput) (req *request.Request, output *iotjobsdataplane.DescribeJobExecutionOutput) {
	c.inc("DescribeJobExecution")
	return c.svc.DescribeJobExecutionRequest(input)
}

// DescribeJobExecution is a passthrough to the underlying DescribeJobExecution method.
// It will increment the count of requests made to DescribeJobExecution.
func (c *IoTJobsDataPlane) DescribeJobExecution(input *iotjobsdataplane.DescribeJobExecutionInput) (*iotjobsdataplane.DescribeJobExecutionOutput, error) {
	c.inc("DescribeJobExecution")
	return c.svc.DescribeJobExecution(input)
}

// DescribeJobExecutionWithContext is a passthrough to the underlying DescribeJobExecutionWithContext method.
// It will increment the count of requests made to DescribeJobExecution.
func (c *IoTJobsDataPlane) DescribeJobExecutionWithContext(ctx aws.Context, input *iotjobsdataplane.DescribeJobExecutionInput, opts ...request.Option) (*iotjobsdataplane.DescribeJobExecutionOutput, error) {
	c.inc("DescribeJobExecution")
	return c.svc.DescribeJobExecutionWithContext(ctx, input, opts...)
}

// GetPendingJobExecutionsRequest is a passthrough to the underlying GetPendingJobExecutionsRequest.
// It will increment the count of requests made to GetPendingJobExecutions.
func (c *IoTJobsDataPlane) GetPendingJobExecutionsRequest(input *iotjobsdataplane.GetPendingJobExecutionsInput) (req *request.Request, output *iotjobsdataplane.GetPendingJobExecutionsOutput) {
	c.inc("GetPendingJobExecutions")
	return c.svc.GetPendingJobExecutionsRequest(input)
}

// GetPendingJobExecutions is a passthrough to the underlying GetPendingJobExecutions method.
// It will increment the count of requests made to GetPendingJobExecutions.
func (c *IoTJobsDataPlane) GetPendingJobExecutions(input *iotjobsdataplane.GetPendingJobExecutionsInput) (*iotjobsdataplane.GetPendingJobExecutionsOutput, error) {
	c.inc("GetPendingJobExecutions")
	return c.svc.GetPendingJobExecutions(input)
}

// GetPendingJobExecutionsWithContext is a passthrough to the underlying GetPendingJobExecutionsWithContext method.
// It will increment the count of requests made to GetPendingJobExecutions.
func (c *IoTJobsDataPlane) GetPendingJobExecutionsWithContext(ctx aws.Context, input *iotjobsdataplane.GetPendingJobExecutionsInput, opts ...request.Option) (*iotjobsdataplane.GetPendingJobExecutionsOutput, error) {
	c.inc("GetPendingJobExecutions")
	return c.svc.GetPendingJobExecutionsWithContext(ctx, input, opts...)
}

// StartNextPendingJobExecutionRequest is a passthrough to the underlying StartNextPendingJobExecutionRequest.
// It will increment the count of requests made to StartNextPendingJobExecution.
func (c *IoTJobsDataPlane) StartNextPendingJobExecutionRequest(input *iotjobsdataplane.StartNextPendingJobExecutionInput) (req *request.Request, output *iotjobsdataplane.StartNextPendingJobExecutionOutput) {
	c.inc("StartNextPendingJobExecution")
	return c.svc.StartNextPendingJobExecutionRequest(input)
}

// StartNextPendingJobExecution is a passthrough to the underlying StartNextPendingJobExecution method.
// It will increment the count of requests made to StartNextPendingJobExecution.
func (c *IoTJobsDataPlane) StartNextPendingJobExecution(input *iotjobsdataplane.StartNextPendingJobExecutionInput) (*iotjobsdataplane.StartNextPendingJobExecutionOutput, error) {
	c.inc("StartNextPendingJobExecution")
	return c.svc.StartNextPendingJobExecution(input)
}

// StartNextPendingJobExecutionWithContext is a passthrough to the underlying StartNextPendingJobExecutionWithContext method.
// It will increment the count of requests made to StartNextPendingJobExecution.
func (c *IoTJobsDataPlane) StartNextPendingJobExecutionWithContext(ctx aws.Context, input *iotjobsdataplane.StartNextPendingJobExecutionInput, opts ...request.Option) (*iotjobsdataplane.StartNextPendingJobExecutionOutput, error) {
	c.inc("StartNextPendingJobExecution")
	return c.svc.StartNextPendingJobExecutionWithContext(ctx, input, opts...)
}

// UpdateJobExecutionRequest is a passthrough to the underlying UpdateJobExecutionRequest.
// It will increment the count of requests made to UpdateJobExecution.
func (c *IoTJobsDataPlane) UpdateJobExecutionRequest(input *iotjobsdataplane.UpdateJobExecutionInput) (req *request.Request, output *iotjobsdataplane.UpdateJobExecutionOutput) {
	c.inc("UpdateJobExecution")
	return c.svc.UpdateJobExecutionRequest(input)
}

// UpdateJobExecution is a passthrough to the underlying UpdateJobExecution method.
// It will increment the count of requests made to UpdateJobExecution.
func (c *IoTJobsDataPlane) UpdateJobExecution(input *iotjobsdataplane.UpdateJobExecutionInput) (*iotjobsdataplane.UpdateJobExecutionOutput, error) {
	c.inc("UpdateJobExecution")
	return c.svc.UpdateJobExecution(input)
}

// UpdateJobExecutionWithContext is a passthrough to the underlying UpdateJobExecutionWithContext method.
// It will increment the count of requests made to UpdateJobExecution.
func (c *IoTJobsDataPlane) UpdateJobExecutionWithContext(ctx aws.Context, input *iotjobsdataplane.UpdateJobExecutionInput, opts ...request.Option) (*iotjobsdataplane.UpdateJobExecutionOutput, error) {
	c.inc("UpdateJobExecution")
	return c.svc.UpdateJobExecutionWithContext(ctx, input, opts...)
}
