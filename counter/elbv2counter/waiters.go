// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package elbv2counter

import (
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/elbv2"
)

// WaitUntilLoadBalancerAvailable calls WaitUntilLoadBalancerAvailableWithContext with aws.BackgroundContext().
func (c *ELBV2) WaitUntilLoadBalancerAvailable(input *elbv2.DescribeLoadBalancersInput) error {
	return c.WaitUntilLoadBalancerAvailableWithContext(aws.BackgroundContext(), input)
}

// WaitUntilLoadBalancerAvailableWithContext calls the underlying client method with a request option that
// will count DescribeLoadBalancers requests.
func (c *ELBV2) WaitUntilLoadBalancerAvailableWithContext(ctx aws.Context, input *elbv2.DescribeLoadBalancersInput, opts ...request.WaiterOption) error {
	opts = append(opts, request.WithWaiterRequestOptions(c.incViaRequestOption("DescribeLoadBalancers")))
	return c.svc.WaitUntilLoadBalancerAvailableWithContext(ctx, input, opts...)
}

// WaitUntilLoadBalancerExists calls WaitUntilLoadBalancerExistsWithContext with aws.BackgroundContext().
func (c *ELBV2) WaitUntilLoadBalancerExists(input *elbv2.DescribeLoadBalancersInput) error {
	return c.WaitUntilLoadBalancerExistsWithContext(aws.BackgroundContext(), input)
}

// WaitUntilLoadBalancerExistsWithContext calls the underlying client method with a request option that
// will count DescribeLoadBalancers requests.
func (c *ELBV2) WaitUntilLoadBalancerExistsWithContext(ctx aws.Context, input *elbv2.DescribeLoadBalancersInput, opts ...request.WaiterOption) error {
	opts = append(opts, request.WithWaiterRequestOptions(c.incViaRequestOption("DescribeLoadBalancers")))
	return c.svc.WaitUntilLoadBalancerExistsWithContext(ctx, input, opts...)
}

// WaitUntilLoadBalancersDeleted calls WaitUntilLoadBalancersDeletedWithContext with aws.BackgroundContext().
func (c *ELBV2) WaitUntilLoadBalancersDeleted(input *elbv2.DescribeLoadBalancersInput) error {
	return c.WaitUntilLoadBalancersDeletedWithContext(aws.BackgroundContext(), input)
}

// WaitUntilLoadBalancersDeletedWithContext calls the underlying client method with a request option that
// will count DescribeLoadBalancers requests.
func (c *ELBV2) WaitUntilLoadBalancersDeletedWithContext(ctx aws.Context, input *elbv2.DescribeLoadBalancersInput, opts ...request.WaiterOption) error {
	opts = append(opts, request.WithWaiterRequestOptions(c.incViaRequestOption("DescribeLoadBalancers")))
	return c.svc.WaitUntilLoadBalancersDeletedWithContext(ctx, input, opts...)
}

// WaitUntilTargetDeregistered calls WaitUntilTargetDeregisteredWithContext with aws.BackgroundContext().
func (c *ELBV2) WaitUntilTargetDeregistered(input *elbv2.DescribeTargetHealthInput) error {
	return c.WaitUntilTargetDeregisteredWithContext(aws.BackgroundContext(), input)
}

// WaitUntilTargetDeregisteredWithContext calls the underlying client method with a request option that
// will count DescribeTargetHealth requests.
func (c *ELBV2) WaitUntilTargetDeregisteredWithContext(ctx aws.Context, input *elbv2.DescribeTargetHealthInput, opts ...request.WaiterOption) error {
	opts = append(opts, request.WithWaiterRequestOptions(c.incViaRequestOption("DescribeTargetHealth")))
	return c.svc.WaitUntilTargetDeregisteredWithContext(ctx, input, opts...)
}

// WaitUntilTargetInService calls WaitUntilTargetInServiceWithContext with aws.BackgroundContext().
func (c *ELBV2) WaitUntilTargetInService(input *elbv2.DescribeTargetHealthInput) error {
	return c.WaitUntilTargetInServiceWithContext(aws.BackgroundContext(), input)
}

// WaitUntilTargetInServiceWithContext calls the underlying client method with a request option that
// will count DescribeTargetHealth requests.
func (c *ELBV2) WaitUntilTargetInServiceWithContext(ctx aws.Context, input *elbv2.DescribeTargetHealthInput, opts ...request.WaiterOption) error {
	opts = append(opts, request.WithWaiterRequestOptions(c.incViaRequestOption("DescribeTargetHealth")))
	return c.svc.WaitUntilTargetInServiceWithContext(ctx, input, opts...)
}
