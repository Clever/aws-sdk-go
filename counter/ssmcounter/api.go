// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package ssmcounter

import (
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/ssm"
)

// AddTagsToResourceRequest is a passthrough to the underlying AddTagsToResourceRequest.
// It will increment the count of requests made to AddTagsToResource.
func (c *SSM) AddTagsToResourceRequest(input *ssm.AddTagsToResourceInput) (req *request.Request, output *ssm.AddTagsToResourceOutput) {
	c.inc("AddTagsToResource")
	return c.svc.AddTagsToResourceRequest(input)
}

// AddTagsToResource is a passthrough to the underlying AddTagsToResource method.
// It will increment the count of requests made to AddTagsToResource.
func (c *SSM) AddTagsToResource(input *ssm.AddTagsToResourceInput) (*ssm.AddTagsToResourceOutput, error) {
	c.inc("AddTagsToResource")
	return c.svc.AddTagsToResource(input)
}

// AddTagsToResourceWithContext is a passthrough to the underlying AddTagsToResourceWithContext method.
// It will increment the count of requests made to AddTagsToResource.
func (c *SSM) AddTagsToResourceWithContext(ctx aws.Context, input *ssm.AddTagsToResourceInput, opts ...request.Option) (*ssm.AddTagsToResourceOutput, error) {
	c.inc("AddTagsToResource")
	return c.svc.AddTagsToResourceWithContext(ctx, input, opts...)
}

// CancelCommandRequest is a passthrough to the underlying CancelCommandRequest.
// It will increment the count of requests made to CancelCommand.
func (c *SSM) CancelCommandRequest(input *ssm.CancelCommandInput) (req *request.Request, output *ssm.CancelCommandOutput) {
	c.inc("CancelCommand")
	return c.svc.CancelCommandRequest(input)
}

// CancelCommand is a passthrough to the underlying CancelCommand method.
// It will increment the count of requests made to CancelCommand.
func (c *SSM) CancelCommand(input *ssm.CancelCommandInput) (*ssm.CancelCommandOutput, error) {
	c.inc("CancelCommand")
	return c.svc.CancelCommand(input)
}

// CancelCommandWithContext is a passthrough to the underlying CancelCommandWithContext method.
// It will increment the count of requests made to CancelCommand.
func (c *SSM) CancelCommandWithContext(ctx aws.Context, input *ssm.CancelCommandInput, opts ...request.Option) (*ssm.CancelCommandOutput, error) {
	c.inc("CancelCommand")
	return c.svc.CancelCommandWithContext(ctx, input, opts...)
}

// CreateActivationRequest is a passthrough to the underlying CreateActivationRequest.
// It will increment the count of requests made to CreateActivation.
func (c *SSM) CreateActivationRequest(input *ssm.CreateActivationInput) (req *request.Request, output *ssm.CreateActivationOutput) {
	c.inc("CreateActivation")
	return c.svc.CreateActivationRequest(input)
}

// CreateActivation is a passthrough to the underlying CreateActivation method.
// It will increment the count of requests made to CreateActivation.
func (c *SSM) CreateActivation(input *ssm.CreateActivationInput) (*ssm.CreateActivationOutput, error) {
	c.inc("CreateActivation")
	return c.svc.CreateActivation(input)
}

// CreateActivationWithContext is a passthrough to the underlying CreateActivationWithContext method.
// It will increment the count of requests made to CreateActivation.
func (c *SSM) CreateActivationWithContext(ctx aws.Context, input *ssm.CreateActivationInput, opts ...request.Option) (*ssm.CreateActivationOutput, error) {
	c.inc("CreateActivation")
	return c.svc.CreateActivationWithContext(ctx, input, opts...)
}

// CreateAssociationRequest is a passthrough to the underlying CreateAssociationRequest.
// It will increment the count of requests made to CreateAssociation.
func (c *SSM) CreateAssociationRequest(input *ssm.CreateAssociationInput) (req *request.Request, output *ssm.CreateAssociationOutput) {
	c.inc("CreateAssociation")
	return c.svc.CreateAssociationRequest(input)
}

// CreateAssociation is a passthrough to the underlying CreateAssociation method.
// It will increment the count of requests made to CreateAssociation.
func (c *SSM) CreateAssociation(input *ssm.CreateAssociationInput) (*ssm.CreateAssociationOutput, error) {
	c.inc("CreateAssociation")
	return c.svc.CreateAssociation(input)
}

// CreateAssociationWithContext is a passthrough to the underlying CreateAssociationWithContext method.
// It will increment the count of requests made to CreateAssociation.
func (c *SSM) CreateAssociationWithContext(ctx aws.Context, input *ssm.CreateAssociationInput, opts ...request.Option) (*ssm.CreateAssociationOutput, error) {
	c.inc("CreateAssociation")
	return c.svc.CreateAssociationWithContext(ctx, input, opts...)
}

// CreateAssociationBatchRequest is a passthrough to the underlying CreateAssociationBatchRequest.
// It will increment the count of requests made to CreateAssociationBatch.
func (c *SSM) CreateAssociationBatchRequest(input *ssm.CreateAssociationBatchInput) (req *request.Request, output *ssm.CreateAssociationBatchOutput) {
	c.inc("CreateAssociationBatch")
	return c.svc.CreateAssociationBatchRequest(input)
}

// CreateAssociationBatch is a passthrough to the underlying CreateAssociationBatch method.
// It will increment the count of requests made to CreateAssociationBatch.
func (c *SSM) CreateAssociationBatch(input *ssm.CreateAssociationBatchInput) (*ssm.CreateAssociationBatchOutput, error) {
	c.inc("CreateAssociationBatch")
	return c.svc.CreateAssociationBatch(input)
}

// CreateAssociationBatchWithContext is a passthrough to the underlying CreateAssociationBatchWithContext method.
// It will increment the count of requests made to CreateAssociationBatch.
func (c *SSM) CreateAssociationBatchWithContext(ctx aws.Context, input *ssm.CreateAssociationBatchInput, opts ...request.Option) (*ssm.CreateAssociationBatchOutput, error) {
	c.inc("CreateAssociationBatch")
	return c.svc.CreateAssociationBatchWithContext(ctx, input, opts...)
}

// CreateDocumentRequest is a passthrough to the underlying CreateDocumentRequest.
// It will increment the count of requests made to CreateDocument.
func (c *SSM) CreateDocumentRequest(input *ssm.CreateDocumentInput) (req *request.Request, output *ssm.CreateDocumentOutput) {
	c.inc("CreateDocument")
	return c.svc.CreateDocumentRequest(input)
}

// CreateDocument is a passthrough to the underlying CreateDocument method.
// It will increment the count of requests made to CreateDocument.
func (c *SSM) CreateDocument(input *ssm.CreateDocumentInput) (*ssm.CreateDocumentOutput, error) {
	c.inc("CreateDocument")
	return c.svc.CreateDocument(input)
}

// CreateDocumentWithContext is a passthrough to the underlying CreateDocumentWithContext method.
// It will increment the count of requests made to CreateDocument.
func (c *SSM) CreateDocumentWithContext(ctx aws.Context, input *ssm.CreateDocumentInput, opts ...request.Option) (*ssm.CreateDocumentOutput, error) {
	c.inc("CreateDocument")
	return c.svc.CreateDocumentWithContext(ctx, input, opts...)
}

// CreateMaintenanceWindowRequest is a passthrough to the underlying CreateMaintenanceWindowRequest.
// It will increment the count of requests made to CreateMaintenanceWindow.
func (c *SSM) CreateMaintenanceWindowRequest(input *ssm.CreateMaintenanceWindowInput) (req *request.Request, output *ssm.CreateMaintenanceWindowOutput) {
	c.inc("CreateMaintenanceWindow")
	return c.svc.CreateMaintenanceWindowRequest(input)
}

// CreateMaintenanceWindow is a passthrough to the underlying CreateMaintenanceWindow method.
// It will increment the count of requests made to CreateMaintenanceWindow.
func (c *SSM) CreateMaintenanceWindow(input *ssm.CreateMaintenanceWindowInput) (*ssm.CreateMaintenanceWindowOutput, error) {
	c.inc("CreateMaintenanceWindow")
	return c.svc.CreateMaintenanceWindow(input)
}

// CreateMaintenanceWindowWithContext is a passthrough to the underlying CreateMaintenanceWindowWithContext method.
// It will increment the count of requests made to CreateMaintenanceWindow.
func (c *SSM) CreateMaintenanceWindowWithContext(ctx aws.Context, input *ssm.CreateMaintenanceWindowInput, opts ...request.Option) (*ssm.CreateMaintenanceWindowOutput, error) {
	c.inc("CreateMaintenanceWindow")
	return c.svc.CreateMaintenanceWindowWithContext(ctx, input, opts...)
}

// CreatePatchBaselineRequest is a passthrough to the underlying CreatePatchBaselineRequest.
// It will increment the count of requests made to CreatePatchBaseline.
func (c *SSM) CreatePatchBaselineRequest(input *ssm.CreatePatchBaselineInput) (req *request.Request, output *ssm.CreatePatchBaselineOutput) {
	c.inc("CreatePatchBaseline")
	return c.svc.CreatePatchBaselineRequest(input)
}

// CreatePatchBaseline is a passthrough to the underlying CreatePatchBaseline method.
// It will increment the count of requests made to CreatePatchBaseline.
func (c *SSM) CreatePatchBaseline(input *ssm.CreatePatchBaselineInput) (*ssm.CreatePatchBaselineOutput, error) {
	c.inc("CreatePatchBaseline")
	return c.svc.CreatePatchBaseline(input)
}

// CreatePatchBaselineWithContext is a passthrough to the underlying CreatePatchBaselineWithContext method.
// It will increment the count of requests made to CreatePatchBaseline.
func (c *SSM) CreatePatchBaselineWithContext(ctx aws.Context, input *ssm.CreatePatchBaselineInput, opts ...request.Option) (*ssm.CreatePatchBaselineOutput, error) {
	c.inc("CreatePatchBaseline")
	return c.svc.CreatePatchBaselineWithContext(ctx, input, opts...)
}

// CreateResourceDataSyncRequest is a passthrough to the underlying CreateResourceDataSyncRequest.
// It will increment the count of requests made to CreateResourceDataSync.
func (c *SSM) CreateResourceDataSyncRequest(input *ssm.CreateResourceDataSyncInput) (req *request.Request, output *ssm.CreateResourceDataSyncOutput) {
	c.inc("CreateResourceDataSync")
	return c.svc.CreateResourceDataSyncRequest(input)
}

// CreateResourceDataSync is a passthrough to the underlying CreateResourceDataSync method.
// It will increment the count of requests made to CreateResourceDataSync.
func (c *SSM) CreateResourceDataSync(input *ssm.CreateResourceDataSyncInput) (*ssm.CreateResourceDataSyncOutput, error) {
	c.inc("CreateResourceDataSync")
	return c.svc.CreateResourceDataSync(input)
}

// CreateResourceDataSyncWithContext is a passthrough to the underlying CreateResourceDataSyncWithContext method.
// It will increment the count of requests made to CreateResourceDataSync.
func (c *SSM) CreateResourceDataSyncWithContext(ctx aws.Context, input *ssm.CreateResourceDataSyncInput, opts ...request.Option) (*ssm.CreateResourceDataSyncOutput, error) {
	c.inc("CreateResourceDataSync")
	return c.svc.CreateResourceDataSyncWithContext(ctx, input, opts...)
}

// DeleteActivationRequest is a passthrough to the underlying DeleteActivationRequest.
// It will increment the count of requests made to DeleteActivation.
func (c *SSM) DeleteActivationRequest(input *ssm.DeleteActivationInput) (req *request.Request, output *ssm.DeleteActivationOutput) {
	c.inc("DeleteActivation")
	return c.svc.DeleteActivationRequest(input)
}

// DeleteActivation is a passthrough to the underlying DeleteActivation method.
// It will increment the count of requests made to DeleteActivation.
func (c *SSM) DeleteActivation(input *ssm.DeleteActivationInput) (*ssm.DeleteActivationOutput, error) {
	c.inc("DeleteActivation")
	return c.svc.DeleteActivation(input)
}

// DeleteActivationWithContext is a passthrough to the underlying DeleteActivationWithContext method.
// It will increment the count of requests made to DeleteActivation.
func (c *SSM) DeleteActivationWithContext(ctx aws.Context, input *ssm.DeleteActivationInput, opts ...request.Option) (*ssm.DeleteActivationOutput, error) {
	c.inc("DeleteActivation")
	return c.svc.DeleteActivationWithContext(ctx, input, opts...)
}

// DeleteAssociationRequest is a passthrough to the underlying DeleteAssociationRequest.
// It will increment the count of requests made to DeleteAssociation.
func (c *SSM) DeleteAssociationRequest(input *ssm.DeleteAssociationInput) (req *request.Request, output *ssm.DeleteAssociationOutput) {
	c.inc("DeleteAssociation")
	return c.svc.DeleteAssociationRequest(input)
}

// DeleteAssociation is a passthrough to the underlying DeleteAssociation method.
// It will increment the count of requests made to DeleteAssociation.
func (c *SSM) DeleteAssociation(input *ssm.DeleteAssociationInput) (*ssm.DeleteAssociationOutput, error) {
	c.inc("DeleteAssociation")
	return c.svc.DeleteAssociation(input)
}

// DeleteAssociationWithContext is a passthrough to the underlying DeleteAssociationWithContext method.
// It will increment the count of requests made to DeleteAssociation.
func (c *SSM) DeleteAssociationWithContext(ctx aws.Context, input *ssm.DeleteAssociationInput, opts ...request.Option) (*ssm.DeleteAssociationOutput, error) {
	c.inc("DeleteAssociation")
	return c.svc.DeleteAssociationWithContext(ctx, input, opts...)
}

// DeleteDocumentRequest is a passthrough to the underlying DeleteDocumentRequest.
// It will increment the count of requests made to DeleteDocument.
func (c *SSM) DeleteDocumentRequest(input *ssm.DeleteDocumentInput) (req *request.Request, output *ssm.DeleteDocumentOutput) {
	c.inc("DeleteDocument")
	return c.svc.DeleteDocumentRequest(input)
}

// DeleteDocument is a passthrough to the underlying DeleteDocument method.
// It will increment the count of requests made to DeleteDocument.
func (c *SSM) DeleteDocument(input *ssm.DeleteDocumentInput) (*ssm.DeleteDocumentOutput, error) {
	c.inc("DeleteDocument")
	return c.svc.DeleteDocument(input)
}

// DeleteDocumentWithContext is a passthrough to the underlying DeleteDocumentWithContext method.
// It will increment the count of requests made to DeleteDocument.
func (c *SSM) DeleteDocumentWithContext(ctx aws.Context, input *ssm.DeleteDocumentInput, opts ...request.Option) (*ssm.DeleteDocumentOutput, error) {
	c.inc("DeleteDocument")
	return c.svc.DeleteDocumentWithContext(ctx, input, opts...)
}

// DeleteMaintenanceWindowRequest is a passthrough to the underlying DeleteMaintenanceWindowRequest.
// It will increment the count of requests made to DeleteMaintenanceWindow.
func (c *SSM) DeleteMaintenanceWindowRequest(input *ssm.DeleteMaintenanceWindowInput) (req *request.Request, output *ssm.DeleteMaintenanceWindowOutput) {
	c.inc("DeleteMaintenanceWindow")
	return c.svc.DeleteMaintenanceWindowRequest(input)
}

// DeleteMaintenanceWindow is a passthrough to the underlying DeleteMaintenanceWindow method.
// It will increment the count of requests made to DeleteMaintenanceWindow.
func (c *SSM) DeleteMaintenanceWindow(input *ssm.DeleteMaintenanceWindowInput) (*ssm.DeleteMaintenanceWindowOutput, error) {
	c.inc("DeleteMaintenanceWindow")
	return c.svc.DeleteMaintenanceWindow(input)
}

// DeleteMaintenanceWindowWithContext is a passthrough to the underlying DeleteMaintenanceWindowWithContext method.
// It will increment the count of requests made to DeleteMaintenanceWindow.
func (c *SSM) DeleteMaintenanceWindowWithContext(ctx aws.Context, input *ssm.DeleteMaintenanceWindowInput, opts ...request.Option) (*ssm.DeleteMaintenanceWindowOutput, error) {
	c.inc("DeleteMaintenanceWindow")
	return c.svc.DeleteMaintenanceWindowWithContext(ctx, input, opts...)
}

// DeleteParameterRequest is a passthrough to the underlying DeleteParameterRequest.
// It will increment the count of requests made to DeleteParameter.
func (c *SSM) DeleteParameterRequest(input *ssm.DeleteParameterInput) (req *request.Request, output *ssm.DeleteParameterOutput) {
	c.inc("DeleteParameter")
	return c.svc.DeleteParameterRequest(input)
}

// DeleteParameter is a passthrough to the underlying DeleteParameter method.
// It will increment the count of requests made to DeleteParameter.
func (c *SSM) DeleteParameter(input *ssm.DeleteParameterInput) (*ssm.DeleteParameterOutput, error) {
	c.inc("DeleteParameter")
	return c.svc.DeleteParameter(input)
}

// DeleteParameterWithContext is a passthrough to the underlying DeleteParameterWithContext method.
// It will increment the count of requests made to DeleteParameter.
func (c *SSM) DeleteParameterWithContext(ctx aws.Context, input *ssm.DeleteParameterInput, opts ...request.Option) (*ssm.DeleteParameterOutput, error) {
	c.inc("DeleteParameter")
	return c.svc.DeleteParameterWithContext(ctx, input, opts...)
}

// DeleteParametersRequest is a passthrough to the underlying DeleteParametersRequest.
// It will increment the count of requests made to DeleteParameters.
func (c *SSM) DeleteParametersRequest(input *ssm.DeleteParametersInput) (req *request.Request, output *ssm.DeleteParametersOutput) {
	c.inc("DeleteParameters")
	return c.svc.DeleteParametersRequest(input)
}

// DeleteParameters is a passthrough to the underlying DeleteParameters method.
// It will increment the count of requests made to DeleteParameters.
func (c *SSM) DeleteParameters(input *ssm.DeleteParametersInput) (*ssm.DeleteParametersOutput, error) {
	c.inc("DeleteParameters")
	return c.svc.DeleteParameters(input)
}

// DeleteParametersWithContext is a passthrough to the underlying DeleteParametersWithContext method.
// It will increment the count of requests made to DeleteParameters.
func (c *SSM) DeleteParametersWithContext(ctx aws.Context, input *ssm.DeleteParametersInput, opts ...request.Option) (*ssm.DeleteParametersOutput, error) {
	c.inc("DeleteParameters")
	return c.svc.DeleteParametersWithContext(ctx, input, opts...)
}

// DeletePatchBaselineRequest is a passthrough to the underlying DeletePatchBaselineRequest.
// It will increment the count of requests made to DeletePatchBaseline.
func (c *SSM) DeletePatchBaselineRequest(input *ssm.DeletePatchBaselineInput) (req *request.Request, output *ssm.DeletePatchBaselineOutput) {
	c.inc("DeletePatchBaseline")
	return c.svc.DeletePatchBaselineRequest(input)
}

// DeletePatchBaseline is a passthrough to the underlying DeletePatchBaseline method.
// It will increment the count of requests made to DeletePatchBaseline.
func (c *SSM) DeletePatchBaseline(input *ssm.DeletePatchBaselineInput) (*ssm.DeletePatchBaselineOutput, error) {
	c.inc("DeletePatchBaseline")
	return c.svc.DeletePatchBaseline(input)
}

// DeletePatchBaselineWithContext is a passthrough to the underlying DeletePatchBaselineWithContext method.
// It will increment the count of requests made to DeletePatchBaseline.
func (c *SSM) DeletePatchBaselineWithContext(ctx aws.Context, input *ssm.DeletePatchBaselineInput, opts ...request.Option) (*ssm.DeletePatchBaselineOutput, error) {
	c.inc("DeletePatchBaseline")
	return c.svc.DeletePatchBaselineWithContext(ctx, input, opts...)
}

// DeleteResourceDataSyncRequest is a passthrough to the underlying DeleteResourceDataSyncRequest.
// It will increment the count of requests made to DeleteResourceDataSync.
func (c *SSM) DeleteResourceDataSyncRequest(input *ssm.DeleteResourceDataSyncInput) (req *request.Request, output *ssm.DeleteResourceDataSyncOutput) {
	c.inc("DeleteResourceDataSync")
	return c.svc.DeleteResourceDataSyncRequest(input)
}

// DeleteResourceDataSync is a passthrough to the underlying DeleteResourceDataSync method.
// It will increment the count of requests made to DeleteResourceDataSync.
func (c *SSM) DeleteResourceDataSync(input *ssm.DeleteResourceDataSyncInput) (*ssm.DeleteResourceDataSyncOutput, error) {
	c.inc("DeleteResourceDataSync")
	return c.svc.DeleteResourceDataSync(input)
}

// DeleteResourceDataSyncWithContext is a passthrough to the underlying DeleteResourceDataSyncWithContext method.
// It will increment the count of requests made to DeleteResourceDataSync.
func (c *SSM) DeleteResourceDataSyncWithContext(ctx aws.Context, input *ssm.DeleteResourceDataSyncInput, opts ...request.Option) (*ssm.DeleteResourceDataSyncOutput, error) {
	c.inc("DeleteResourceDataSync")
	return c.svc.DeleteResourceDataSyncWithContext(ctx, input, opts...)
}

// DeregisterManagedInstanceRequest is a passthrough to the underlying DeregisterManagedInstanceRequest.
// It will increment the count of requests made to DeregisterManagedInstance.
func (c *SSM) DeregisterManagedInstanceRequest(input *ssm.DeregisterManagedInstanceInput) (req *request.Request, output *ssm.DeregisterManagedInstanceOutput) {
	c.inc("DeregisterManagedInstance")
	return c.svc.DeregisterManagedInstanceRequest(input)
}

// DeregisterManagedInstance is a passthrough to the underlying DeregisterManagedInstance method.
// It will increment the count of requests made to DeregisterManagedInstance.
func (c *SSM) DeregisterManagedInstance(input *ssm.DeregisterManagedInstanceInput) (*ssm.DeregisterManagedInstanceOutput, error) {
	c.inc("DeregisterManagedInstance")
	return c.svc.DeregisterManagedInstance(input)
}

// DeregisterManagedInstanceWithContext is a passthrough to the underlying DeregisterManagedInstanceWithContext method.
// It will increment the count of requests made to DeregisterManagedInstance.
func (c *SSM) DeregisterManagedInstanceWithContext(ctx aws.Context, input *ssm.DeregisterManagedInstanceInput, opts ...request.Option) (*ssm.DeregisterManagedInstanceOutput, error) {
	c.inc("DeregisterManagedInstance")
	return c.svc.DeregisterManagedInstanceWithContext(ctx, input, opts...)
}

// DeregisterPatchBaselineForPatchGroupRequest is a passthrough to the underlying DeregisterPatchBaselineForPatchGroupRequest.
// It will increment the count of requests made to DeregisterPatchBaselineForPatchGroup.
func (c *SSM) DeregisterPatchBaselineForPatchGroupRequest(input *ssm.DeregisterPatchBaselineForPatchGroupInput) (req *request.Request, output *ssm.DeregisterPatchBaselineForPatchGroupOutput) {
	c.inc("DeregisterPatchBaselineForPatchGroup")
	return c.svc.DeregisterPatchBaselineForPatchGroupRequest(input)
}

// DeregisterPatchBaselineForPatchGroup is a passthrough to the underlying DeregisterPatchBaselineForPatchGroup method.
// It will increment the count of requests made to DeregisterPatchBaselineForPatchGroup.
func (c *SSM) DeregisterPatchBaselineForPatchGroup(input *ssm.DeregisterPatchBaselineForPatchGroupInput) (*ssm.DeregisterPatchBaselineForPatchGroupOutput, error) {
	c.inc("DeregisterPatchBaselineForPatchGroup")
	return c.svc.DeregisterPatchBaselineForPatchGroup(input)
}

// DeregisterPatchBaselineForPatchGroupWithContext is a passthrough to the underlying DeregisterPatchBaselineForPatchGroupWithContext method.
// It will increment the count of requests made to DeregisterPatchBaselineForPatchGroup.
func (c *SSM) DeregisterPatchBaselineForPatchGroupWithContext(ctx aws.Context, input *ssm.DeregisterPatchBaselineForPatchGroupInput, opts ...request.Option) (*ssm.DeregisterPatchBaselineForPatchGroupOutput, error) {
	c.inc("DeregisterPatchBaselineForPatchGroup")
	return c.svc.DeregisterPatchBaselineForPatchGroupWithContext(ctx, input, opts...)
}

// DeregisterTargetFromMaintenanceWindowRequest is a passthrough to the underlying DeregisterTargetFromMaintenanceWindowRequest.
// It will increment the count of requests made to DeregisterTargetFromMaintenanceWindow.
func (c *SSM) DeregisterTargetFromMaintenanceWindowRequest(input *ssm.DeregisterTargetFromMaintenanceWindowInput) (req *request.Request, output *ssm.DeregisterTargetFromMaintenanceWindowOutput) {
	c.inc("DeregisterTargetFromMaintenanceWindow")
	return c.svc.DeregisterTargetFromMaintenanceWindowRequest(input)
}

// DeregisterTargetFromMaintenanceWindow is a passthrough to the underlying DeregisterTargetFromMaintenanceWindow method.
// It will increment the count of requests made to DeregisterTargetFromMaintenanceWindow.
func (c *SSM) DeregisterTargetFromMaintenanceWindow(input *ssm.DeregisterTargetFromMaintenanceWindowInput) (*ssm.DeregisterTargetFromMaintenanceWindowOutput, error) {
	c.inc("DeregisterTargetFromMaintenanceWindow")
	return c.svc.DeregisterTargetFromMaintenanceWindow(input)
}

// DeregisterTargetFromMaintenanceWindowWithContext is a passthrough to the underlying DeregisterTargetFromMaintenanceWindowWithContext method.
// It will increment the count of requests made to DeregisterTargetFromMaintenanceWindow.
func (c *SSM) DeregisterTargetFromMaintenanceWindowWithContext(ctx aws.Context, input *ssm.DeregisterTargetFromMaintenanceWindowInput, opts ...request.Option) (*ssm.DeregisterTargetFromMaintenanceWindowOutput, error) {
	c.inc("DeregisterTargetFromMaintenanceWindow")
	return c.svc.DeregisterTargetFromMaintenanceWindowWithContext(ctx, input, opts...)
}

// DeregisterTaskFromMaintenanceWindowRequest is a passthrough to the underlying DeregisterTaskFromMaintenanceWindowRequest.
// It will increment the count of requests made to DeregisterTaskFromMaintenanceWindow.
func (c *SSM) DeregisterTaskFromMaintenanceWindowRequest(input *ssm.DeregisterTaskFromMaintenanceWindowInput) (req *request.Request, output *ssm.DeregisterTaskFromMaintenanceWindowOutput) {
	c.inc("DeregisterTaskFromMaintenanceWindow")
	return c.svc.DeregisterTaskFromMaintenanceWindowRequest(input)
}

// DeregisterTaskFromMaintenanceWindow is a passthrough to the underlying DeregisterTaskFromMaintenanceWindow method.
// It will increment the count of requests made to DeregisterTaskFromMaintenanceWindow.
func (c *SSM) DeregisterTaskFromMaintenanceWindow(input *ssm.DeregisterTaskFromMaintenanceWindowInput) (*ssm.DeregisterTaskFromMaintenanceWindowOutput, error) {
	c.inc("DeregisterTaskFromMaintenanceWindow")
	return c.svc.DeregisterTaskFromMaintenanceWindow(input)
}

// DeregisterTaskFromMaintenanceWindowWithContext is a passthrough to the underlying DeregisterTaskFromMaintenanceWindowWithContext method.
// It will increment the count of requests made to DeregisterTaskFromMaintenanceWindow.
func (c *SSM) DeregisterTaskFromMaintenanceWindowWithContext(ctx aws.Context, input *ssm.DeregisterTaskFromMaintenanceWindowInput, opts ...request.Option) (*ssm.DeregisterTaskFromMaintenanceWindowOutput, error) {
	c.inc("DeregisterTaskFromMaintenanceWindow")
	return c.svc.DeregisterTaskFromMaintenanceWindowWithContext(ctx, input, opts...)
}

// DescribeActivationsRequest is a passthrough to the underlying DescribeActivationsRequest.
// It will increment the count of requests made to DescribeActivations.
func (c *SSM) DescribeActivationsRequest(input *ssm.DescribeActivationsInput) (req *request.Request, output *ssm.DescribeActivationsOutput) {
	c.inc("DescribeActivations")
	return c.svc.DescribeActivationsRequest(input)
}

// DescribeActivations is a passthrough to the underlying DescribeActivations method.
// It will increment the count of requests made to DescribeActivations.
func (c *SSM) DescribeActivations(input *ssm.DescribeActivationsInput) (*ssm.DescribeActivationsOutput, error) {
	c.inc("DescribeActivations")
	return c.svc.DescribeActivations(input)
}

// DescribeActivationsWithContext is a passthrough to the underlying DescribeActivationsWithContext method.
// It will increment the count of requests made to DescribeActivations.
func (c *SSM) DescribeActivationsWithContext(ctx aws.Context, input *ssm.DescribeActivationsInput, opts ...request.Option) (*ssm.DescribeActivationsOutput, error) {
	c.inc("DescribeActivations")
	return c.svc.DescribeActivationsWithContext(ctx, input, opts...)
}

// DescribeActivationsPages is a passthrough to the underlying DescribeActivationsPages method.
// It will increment the count of requests made to DescribeActivations on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeActivationsPagesWithContext to avoid this.
func (c *SSM) DescribeActivationsPages(input *ssm.DescribeActivationsInput, fn func(*ssm.DescribeActivationsOutput, bool) bool) error {
	wrappedFn := func(page *ssm.DescribeActivationsOutput, lastPage bool) bool {
		c.inc("DescribeActivations")
		return fn(page, lastPage)
	}
	return c.DescribeActivationsPages(input, wrappedFn)
}

// DescribeActivationsPagesWithContext is a passthrough to the underlying DescribeActivationsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeActivations when applied to the request.
func (c *SSM) DescribeActivationsPagesWithContext(ctx aws.Context, input *ssm.DescribeActivationsInput, fn func(*ssm.DescribeActivationsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeActivations"))
	return c.DescribeActivationsPagesWithContext(ctx, input, fn, opts...)
}

// DescribeAssociationRequest is a passthrough to the underlying DescribeAssociationRequest.
// It will increment the count of requests made to DescribeAssociation.
func (c *SSM) DescribeAssociationRequest(input *ssm.DescribeAssociationInput) (req *request.Request, output *ssm.DescribeAssociationOutput) {
	c.inc("DescribeAssociation")
	return c.svc.DescribeAssociationRequest(input)
}

// DescribeAssociation is a passthrough to the underlying DescribeAssociation method.
// It will increment the count of requests made to DescribeAssociation.
func (c *SSM) DescribeAssociation(input *ssm.DescribeAssociationInput) (*ssm.DescribeAssociationOutput, error) {
	c.inc("DescribeAssociation")
	return c.svc.DescribeAssociation(input)
}

// DescribeAssociationWithContext is a passthrough to the underlying DescribeAssociationWithContext method.
// It will increment the count of requests made to DescribeAssociation.
func (c *SSM) DescribeAssociationWithContext(ctx aws.Context, input *ssm.DescribeAssociationInput, opts ...request.Option) (*ssm.DescribeAssociationOutput, error) {
	c.inc("DescribeAssociation")
	return c.svc.DescribeAssociationWithContext(ctx, input, opts...)
}

// DescribeAutomationExecutionsRequest is a passthrough to the underlying DescribeAutomationExecutionsRequest.
// It will increment the count of requests made to DescribeAutomationExecutions.
func (c *SSM) DescribeAutomationExecutionsRequest(input *ssm.DescribeAutomationExecutionsInput) (req *request.Request, output *ssm.DescribeAutomationExecutionsOutput) {
	c.inc("DescribeAutomationExecutions")
	return c.svc.DescribeAutomationExecutionsRequest(input)
}

// DescribeAutomationExecutions is a passthrough to the underlying DescribeAutomationExecutions method.
// It will increment the count of requests made to DescribeAutomationExecutions.
func (c *SSM) DescribeAutomationExecutions(input *ssm.DescribeAutomationExecutionsInput) (*ssm.DescribeAutomationExecutionsOutput, error) {
	c.inc("DescribeAutomationExecutions")
	return c.svc.DescribeAutomationExecutions(input)
}

// DescribeAutomationExecutionsWithContext is a passthrough to the underlying DescribeAutomationExecutionsWithContext method.
// It will increment the count of requests made to DescribeAutomationExecutions.
func (c *SSM) DescribeAutomationExecutionsWithContext(ctx aws.Context, input *ssm.DescribeAutomationExecutionsInput, opts ...request.Option) (*ssm.DescribeAutomationExecutionsOutput, error) {
	c.inc("DescribeAutomationExecutions")
	return c.svc.DescribeAutomationExecutionsWithContext(ctx, input, opts...)
}

// DescribeAvailablePatchesRequest is a passthrough to the underlying DescribeAvailablePatchesRequest.
// It will increment the count of requests made to DescribeAvailablePatches.
func (c *SSM) DescribeAvailablePatchesRequest(input *ssm.DescribeAvailablePatchesInput) (req *request.Request, output *ssm.DescribeAvailablePatchesOutput) {
	c.inc("DescribeAvailablePatches")
	return c.svc.DescribeAvailablePatchesRequest(input)
}

// DescribeAvailablePatches is a passthrough to the underlying DescribeAvailablePatches method.
// It will increment the count of requests made to DescribeAvailablePatches.
func (c *SSM) DescribeAvailablePatches(input *ssm.DescribeAvailablePatchesInput) (*ssm.DescribeAvailablePatchesOutput, error) {
	c.inc("DescribeAvailablePatches")
	return c.svc.DescribeAvailablePatches(input)
}

// DescribeAvailablePatchesWithContext is a passthrough to the underlying DescribeAvailablePatchesWithContext method.
// It will increment the count of requests made to DescribeAvailablePatches.
func (c *SSM) DescribeAvailablePatchesWithContext(ctx aws.Context, input *ssm.DescribeAvailablePatchesInput, opts ...request.Option) (*ssm.DescribeAvailablePatchesOutput, error) {
	c.inc("DescribeAvailablePatches")
	return c.svc.DescribeAvailablePatchesWithContext(ctx, input, opts...)
}

// DescribeDocumentRequest is a passthrough to the underlying DescribeDocumentRequest.
// It will increment the count of requests made to DescribeDocument.
func (c *SSM) DescribeDocumentRequest(input *ssm.DescribeDocumentInput) (req *request.Request, output *ssm.DescribeDocumentOutput) {
	c.inc("DescribeDocument")
	return c.svc.DescribeDocumentRequest(input)
}

// DescribeDocument is a passthrough to the underlying DescribeDocument method.
// It will increment the count of requests made to DescribeDocument.
func (c *SSM) DescribeDocument(input *ssm.DescribeDocumentInput) (*ssm.DescribeDocumentOutput, error) {
	c.inc("DescribeDocument")
	return c.svc.DescribeDocument(input)
}

// DescribeDocumentWithContext is a passthrough to the underlying DescribeDocumentWithContext method.
// It will increment the count of requests made to DescribeDocument.
func (c *SSM) DescribeDocumentWithContext(ctx aws.Context, input *ssm.DescribeDocumentInput, opts ...request.Option) (*ssm.DescribeDocumentOutput, error) {
	c.inc("DescribeDocument")
	return c.svc.DescribeDocumentWithContext(ctx, input, opts...)
}

// DescribeDocumentPermissionRequest is a passthrough to the underlying DescribeDocumentPermissionRequest.
// It will increment the count of requests made to DescribeDocumentPermission.
func (c *SSM) DescribeDocumentPermissionRequest(input *ssm.DescribeDocumentPermissionInput) (req *request.Request, output *ssm.DescribeDocumentPermissionOutput) {
	c.inc("DescribeDocumentPermission")
	return c.svc.DescribeDocumentPermissionRequest(input)
}

// DescribeDocumentPermission is a passthrough to the underlying DescribeDocumentPermission method.
// It will increment the count of requests made to DescribeDocumentPermission.
func (c *SSM) DescribeDocumentPermission(input *ssm.DescribeDocumentPermissionInput) (*ssm.DescribeDocumentPermissionOutput, error) {
	c.inc("DescribeDocumentPermission")
	return c.svc.DescribeDocumentPermission(input)
}

// DescribeDocumentPermissionWithContext is a passthrough to the underlying DescribeDocumentPermissionWithContext method.
// It will increment the count of requests made to DescribeDocumentPermission.
func (c *SSM) DescribeDocumentPermissionWithContext(ctx aws.Context, input *ssm.DescribeDocumentPermissionInput, opts ...request.Option) (*ssm.DescribeDocumentPermissionOutput, error) {
	c.inc("DescribeDocumentPermission")
	return c.svc.DescribeDocumentPermissionWithContext(ctx, input, opts...)
}

// DescribeEffectiveInstanceAssociationsRequest is a passthrough to the underlying DescribeEffectiveInstanceAssociationsRequest.
// It will increment the count of requests made to DescribeEffectiveInstanceAssociations.
func (c *SSM) DescribeEffectiveInstanceAssociationsRequest(input *ssm.DescribeEffectiveInstanceAssociationsInput) (req *request.Request, output *ssm.DescribeEffectiveInstanceAssociationsOutput) {
	c.inc("DescribeEffectiveInstanceAssociations")
	return c.svc.DescribeEffectiveInstanceAssociationsRequest(input)
}

// DescribeEffectiveInstanceAssociations is a passthrough to the underlying DescribeEffectiveInstanceAssociations method.
// It will increment the count of requests made to DescribeEffectiveInstanceAssociations.
func (c *SSM) DescribeEffectiveInstanceAssociations(input *ssm.DescribeEffectiveInstanceAssociationsInput) (*ssm.DescribeEffectiveInstanceAssociationsOutput, error) {
	c.inc("DescribeEffectiveInstanceAssociations")
	return c.svc.DescribeEffectiveInstanceAssociations(input)
}

// DescribeEffectiveInstanceAssociationsWithContext is a passthrough to the underlying DescribeEffectiveInstanceAssociationsWithContext method.
// It will increment the count of requests made to DescribeEffectiveInstanceAssociations.
func (c *SSM) DescribeEffectiveInstanceAssociationsWithContext(ctx aws.Context, input *ssm.DescribeEffectiveInstanceAssociationsInput, opts ...request.Option) (*ssm.DescribeEffectiveInstanceAssociationsOutput, error) {
	c.inc("DescribeEffectiveInstanceAssociations")
	return c.svc.DescribeEffectiveInstanceAssociationsWithContext(ctx, input, opts...)
}

// DescribeEffectivePatchesForPatchBaselineRequest is a passthrough to the underlying DescribeEffectivePatchesForPatchBaselineRequest.
// It will increment the count of requests made to DescribeEffectivePatchesForPatchBaseline.
func (c *SSM) DescribeEffectivePatchesForPatchBaselineRequest(input *ssm.DescribeEffectivePatchesForPatchBaselineInput) (req *request.Request, output *ssm.DescribeEffectivePatchesForPatchBaselineOutput) {
	c.inc("DescribeEffectivePatchesForPatchBaseline")
	return c.svc.DescribeEffectivePatchesForPatchBaselineRequest(input)
}

// DescribeEffectivePatchesForPatchBaseline is a passthrough to the underlying DescribeEffectivePatchesForPatchBaseline method.
// It will increment the count of requests made to DescribeEffectivePatchesForPatchBaseline.
func (c *SSM) DescribeEffectivePatchesForPatchBaseline(input *ssm.DescribeEffectivePatchesForPatchBaselineInput) (*ssm.DescribeEffectivePatchesForPatchBaselineOutput, error) {
	c.inc("DescribeEffectivePatchesForPatchBaseline")
	return c.svc.DescribeEffectivePatchesForPatchBaseline(input)
}

// DescribeEffectivePatchesForPatchBaselineWithContext is a passthrough to the underlying DescribeEffectivePatchesForPatchBaselineWithContext method.
// It will increment the count of requests made to DescribeEffectivePatchesForPatchBaseline.
func (c *SSM) DescribeEffectivePatchesForPatchBaselineWithContext(ctx aws.Context, input *ssm.DescribeEffectivePatchesForPatchBaselineInput, opts ...request.Option) (*ssm.DescribeEffectivePatchesForPatchBaselineOutput, error) {
	c.inc("DescribeEffectivePatchesForPatchBaseline")
	return c.svc.DescribeEffectivePatchesForPatchBaselineWithContext(ctx, input, opts...)
}

// DescribeInstanceAssociationsStatusRequest is a passthrough to the underlying DescribeInstanceAssociationsStatusRequest.
// It will increment the count of requests made to DescribeInstanceAssociationsStatus.
func (c *SSM) DescribeInstanceAssociationsStatusRequest(input *ssm.DescribeInstanceAssociationsStatusInput) (req *request.Request, output *ssm.DescribeInstanceAssociationsStatusOutput) {
	c.inc("DescribeInstanceAssociationsStatus")
	return c.svc.DescribeInstanceAssociationsStatusRequest(input)
}

// DescribeInstanceAssociationsStatus is a passthrough to the underlying DescribeInstanceAssociationsStatus method.
// It will increment the count of requests made to DescribeInstanceAssociationsStatus.
func (c *SSM) DescribeInstanceAssociationsStatus(input *ssm.DescribeInstanceAssociationsStatusInput) (*ssm.DescribeInstanceAssociationsStatusOutput, error) {
	c.inc("DescribeInstanceAssociationsStatus")
	return c.svc.DescribeInstanceAssociationsStatus(input)
}

// DescribeInstanceAssociationsStatusWithContext is a passthrough to the underlying DescribeInstanceAssociationsStatusWithContext method.
// It will increment the count of requests made to DescribeInstanceAssociationsStatus.
func (c *SSM) DescribeInstanceAssociationsStatusWithContext(ctx aws.Context, input *ssm.DescribeInstanceAssociationsStatusInput, opts ...request.Option) (*ssm.DescribeInstanceAssociationsStatusOutput, error) {
	c.inc("DescribeInstanceAssociationsStatus")
	return c.svc.DescribeInstanceAssociationsStatusWithContext(ctx, input, opts...)
}

// DescribeInstanceInformationRequest is a passthrough to the underlying DescribeInstanceInformationRequest.
// It will increment the count of requests made to DescribeInstanceInformation.
func (c *SSM) DescribeInstanceInformationRequest(input *ssm.DescribeInstanceInformationInput) (req *request.Request, output *ssm.DescribeInstanceInformationOutput) {
	c.inc("DescribeInstanceInformation")
	return c.svc.DescribeInstanceInformationRequest(input)
}

// DescribeInstanceInformation is a passthrough to the underlying DescribeInstanceInformation method.
// It will increment the count of requests made to DescribeInstanceInformation.
func (c *SSM) DescribeInstanceInformation(input *ssm.DescribeInstanceInformationInput) (*ssm.DescribeInstanceInformationOutput, error) {
	c.inc("DescribeInstanceInformation")
	return c.svc.DescribeInstanceInformation(input)
}

// DescribeInstanceInformationWithContext is a passthrough to the underlying DescribeInstanceInformationWithContext method.
// It will increment the count of requests made to DescribeInstanceInformation.
func (c *SSM) DescribeInstanceInformationWithContext(ctx aws.Context, input *ssm.DescribeInstanceInformationInput, opts ...request.Option) (*ssm.DescribeInstanceInformationOutput, error) {
	c.inc("DescribeInstanceInformation")
	return c.svc.DescribeInstanceInformationWithContext(ctx, input, opts...)
}

// DescribeInstanceInformationPages is a passthrough to the underlying DescribeInstanceInformationPages method.
// It will increment the count of requests made to DescribeInstanceInformation on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeInstanceInformationPagesWithContext to avoid this.
func (c *SSM) DescribeInstanceInformationPages(input *ssm.DescribeInstanceInformationInput, fn func(*ssm.DescribeInstanceInformationOutput, bool) bool) error {
	wrappedFn := func(page *ssm.DescribeInstanceInformationOutput, lastPage bool) bool {
		c.inc("DescribeInstanceInformation")
		return fn(page, lastPage)
	}
	return c.DescribeInstanceInformationPages(input, wrappedFn)
}

// DescribeInstanceInformationPagesWithContext is a passthrough to the underlying DescribeInstanceInformationPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeInstanceInformation when applied to the request.
func (c *SSM) DescribeInstanceInformationPagesWithContext(ctx aws.Context, input *ssm.DescribeInstanceInformationInput, fn func(*ssm.DescribeInstanceInformationOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeInstanceInformation"))
	return c.DescribeInstanceInformationPagesWithContext(ctx, input, fn, opts...)
}

// DescribeInstancePatchStatesRequest is a passthrough to the underlying DescribeInstancePatchStatesRequest.
// It will increment the count of requests made to DescribeInstancePatchStates.
func (c *SSM) DescribeInstancePatchStatesRequest(input *ssm.DescribeInstancePatchStatesInput) (req *request.Request, output *ssm.DescribeInstancePatchStatesOutput) {
	c.inc("DescribeInstancePatchStates")
	return c.svc.DescribeInstancePatchStatesRequest(input)
}

// DescribeInstancePatchStates is a passthrough to the underlying DescribeInstancePatchStates method.
// It will increment the count of requests made to DescribeInstancePatchStates.
func (c *SSM) DescribeInstancePatchStates(input *ssm.DescribeInstancePatchStatesInput) (*ssm.DescribeInstancePatchStatesOutput, error) {
	c.inc("DescribeInstancePatchStates")
	return c.svc.DescribeInstancePatchStates(input)
}

// DescribeInstancePatchStatesWithContext is a passthrough to the underlying DescribeInstancePatchStatesWithContext method.
// It will increment the count of requests made to DescribeInstancePatchStates.
func (c *SSM) DescribeInstancePatchStatesWithContext(ctx aws.Context, input *ssm.DescribeInstancePatchStatesInput, opts ...request.Option) (*ssm.DescribeInstancePatchStatesOutput, error) {
	c.inc("DescribeInstancePatchStates")
	return c.svc.DescribeInstancePatchStatesWithContext(ctx, input, opts...)
}

// DescribeInstancePatchStatesForPatchGroupRequest is a passthrough to the underlying DescribeInstancePatchStatesForPatchGroupRequest.
// It will increment the count of requests made to DescribeInstancePatchStatesForPatchGroup.
func (c *SSM) DescribeInstancePatchStatesForPatchGroupRequest(input *ssm.DescribeInstancePatchStatesForPatchGroupInput) (req *request.Request, output *ssm.DescribeInstancePatchStatesForPatchGroupOutput) {
	c.inc("DescribeInstancePatchStatesForPatchGroup")
	return c.svc.DescribeInstancePatchStatesForPatchGroupRequest(input)
}

// DescribeInstancePatchStatesForPatchGroup is a passthrough to the underlying DescribeInstancePatchStatesForPatchGroup method.
// It will increment the count of requests made to DescribeInstancePatchStatesForPatchGroup.
func (c *SSM) DescribeInstancePatchStatesForPatchGroup(input *ssm.DescribeInstancePatchStatesForPatchGroupInput) (*ssm.DescribeInstancePatchStatesForPatchGroupOutput, error) {
	c.inc("DescribeInstancePatchStatesForPatchGroup")
	return c.svc.DescribeInstancePatchStatesForPatchGroup(input)
}

// DescribeInstancePatchStatesForPatchGroupWithContext is a passthrough to the underlying DescribeInstancePatchStatesForPatchGroupWithContext method.
// It will increment the count of requests made to DescribeInstancePatchStatesForPatchGroup.
func (c *SSM) DescribeInstancePatchStatesForPatchGroupWithContext(ctx aws.Context, input *ssm.DescribeInstancePatchStatesForPatchGroupInput, opts ...request.Option) (*ssm.DescribeInstancePatchStatesForPatchGroupOutput, error) {
	c.inc("DescribeInstancePatchStatesForPatchGroup")
	return c.svc.DescribeInstancePatchStatesForPatchGroupWithContext(ctx, input, opts...)
}

// DescribeInstancePatchesRequest is a passthrough to the underlying DescribeInstancePatchesRequest.
// It will increment the count of requests made to DescribeInstancePatches.
func (c *SSM) DescribeInstancePatchesRequest(input *ssm.DescribeInstancePatchesInput) (req *request.Request, output *ssm.DescribeInstancePatchesOutput) {
	c.inc("DescribeInstancePatches")
	return c.svc.DescribeInstancePatchesRequest(input)
}

// DescribeInstancePatches is a passthrough to the underlying DescribeInstancePatches method.
// It will increment the count of requests made to DescribeInstancePatches.
func (c *SSM) DescribeInstancePatches(input *ssm.DescribeInstancePatchesInput) (*ssm.DescribeInstancePatchesOutput, error) {
	c.inc("DescribeInstancePatches")
	return c.svc.DescribeInstancePatches(input)
}

// DescribeInstancePatchesWithContext is a passthrough to the underlying DescribeInstancePatchesWithContext method.
// It will increment the count of requests made to DescribeInstancePatches.
func (c *SSM) DescribeInstancePatchesWithContext(ctx aws.Context, input *ssm.DescribeInstancePatchesInput, opts ...request.Option) (*ssm.DescribeInstancePatchesOutput, error) {
	c.inc("DescribeInstancePatches")
	return c.svc.DescribeInstancePatchesWithContext(ctx, input, opts...)
}

// DescribeMaintenanceWindowExecutionTaskInvocationsRequest is a passthrough to the underlying DescribeMaintenanceWindowExecutionTaskInvocationsRequest.
// It will increment the count of requests made to DescribeMaintenanceWindowExecutionTaskInvocations.
func (c *SSM) DescribeMaintenanceWindowExecutionTaskInvocationsRequest(input *ssm.DescribeMaintenanceWindowExecutionTaskInvocationsInput) (req *request.Request, output *ssm.DescribeMaintenanceWindowExecutionTaskInvocationsOutput) {
	c.inc("DescribeMaintenanceWindowExecutionTaskInvocations")
	return c.svc.DescribeMaintenanceWindowExecutionTaskInvocationsRequest(input)
}

// DescribeMaintenanceWindowExecutionTaskInvocations is a passthrough to the underlying DescribeMaintenanceWindowExecutionTaskInvocations method.
// It will increment the count of requests made to DescribeMaintenanceWindowExecutionTaskInvocations.
func (c *SSM) DescribeMaintenanceWindowExecutionTaskInvocations(input *ssm.DescribeMaintenanceWindowExecutionTaskInvocationsInput) (*ssm.DescribeMaintenanceWindowExecutionTaskInvocationsOutput, error) {
	c.inc("DescribeMaintenanceWindowExecutionTaskInvocations")
	return c.svc.DescribeMaintenanceWindowExecutionTaskInvocations(input)
}

// DescribeMaintenanceWindowExecutionTaskInvocationsWithContext is a passthrough to the underlying DescribeMaintenanceWindowExecutionTaskInvocationsWithContext method.
// It will increment the count of requests made to DescribeMaintenanceWindowExecutionTaskInvocations.
func (c *SSM) DescribeMaintenanceWindowExecutionTaskInvocationsWithContext(ctx aws.Context, input *ssm.DescribeMaintenanceWindowExecutionTaskInvocationsInput, opts ...request.Option) (*ssm.DescribeMaintenanceWindowExecutionTaskInvocationsOutput, error) {
	c.inc("DescribeMaintenanceWindowExecutionTaskInvocations")
	return c.svc.DescribeMaintenanceWindowExecutionTaskInvocationsWithContext(ctx, input, opts...)
}

// DescribeMaintenanceWindowExecutionTasksRequest is a passthrough to the underlying DescribeMaintenanceWindowExecutionTasksRequest.
// It will increment the count of requests made to DescribeMaintenanceWindowExecutionTasks.
func (c *SSM) DescribeMaintenanceWindowExecutionTasksRequest(input *ssm.DescribeMaintenanceWindowExecutionTasksInput) (req *request.Request, output *ssm.DescribeMaintenanceWindowExecutionTasksOutput) {
	c.inc("DescribeMaintenanceWindowExecutionTasks")
	return c.svc.DescribeMaintenanceWindowExecutionTasksRequest(input)
}

// DescribeMaintenanceWindowExecutionTasks is a passthrough to the underlying DescribeMaintenanceWindowExecutionTasks method.
// It will increment the count of requests made to DescribeMaintenanceWindowExecutionTasks.
func (c *SSM) DescribeMaintenanceWindowExecutionTasks(input *ssm.DescribeMaintenanceWindowExecutionTasksInput) (*ssm.DescribeMaintenanceWindowExecutionTasksOutput, error) {
	c.inc("DescribeMaintenanceWindowExecutionTasks")
	return c.svc.DescribeMaintenanceWindowExecutionTasks(input)
}

// DescribeMaintenanceWindowExecutionTasksWithContext is a passthrough to the underlying DescribeMaintenanceWindowExecutionTasksWithContext method.
// It will increment the count of requests made to DescribeMaintenanceWindowExecutionTasks.
func (c *SSM) DescribeMaintenanceWindowExecutionTasksWithContext(ctx aws.Context, input *ssm.DescribeMaintenanceWindowExecutionTasksInput, opts ...request.Option) (*ssm.DescribeMaintenanceWindowExecutionTasksOutput, error) {
	c.inc("DescribeMaintenanceWindowExecutionTasks")
	return c.svc.DescribeMaintenanceWindowExecutionTasksWithContext(ctx, input, opts...)
}

// DescribeMaintenanceWindowExecutionsRequest is a passthrough to the underlying DescribeMaintenanceWindowExecutionsRequest.
// It will increment the count of requests made to DescribeMaintenanceWindowExecutions.
func (c *SSM) DescribeMaintenanceWindowExecutionsRequest(input *ssm.DescribeMaintenanceWindowExecutionsInput) (req *request.Request, output *ssm.DescribeMaintenanceWindowExecutionsOutput) {
	c.inc("DescribeMaintenanceWindowExecutions")
	return c.svc.DescribeMaintenanceWindowExecutionsRequest(input)
}

// DescribeMaintenanceWindowExecutions is a passthrough to the underlying DescribeMaintenanceWindowExecutions method.
// It will increment the count of requests made to DescribeMaintenanceWindowExecutions.
func (c *SSM) DescribeMaintenanceWindowExecutions(input *ssm.DescribeMaintenanceWindowExecutionsInput) (*ssm.DescribeMaintenanceWindowExecutionsOutput, error) {
	c.inc("DescribeMaintenanceWindowExecutions")
	return c.svc.DescribeMaintenanceWindowExecutions(input)
}

// DescribeMaintenanceWindowExecutionsWithContext is a passthrough to the underlying DescribeMaintenanceWindowExecutionsWithContext method.
// It will increment the count of requests made to DescribeMaintenanceWindowExecutions.
func (c *SSM) DescribeMaintenanceWindowExecutionsWithContext(ctx aws.Context, input *ssm.DescribeMaintenanceWindowExecutionsInput, opts ...request.Option) (*ssm.DescribeMaintenanceWindowExecutionsOutput, error) {
	c.inc("DescribeMaintenanceWindowExecutions")
	return c.svc.DescribeMaintenanceWindowExecutionsWithContext(ctx, input, opts...)
}

// DescribeMaintenanceWindowTargetsRequest is a passthrough to the underlying DescribeMaintenanceWindowTargetsRequest.
// It will increment the count of requests made to DescribeMaintenanceWindowTargets.
func (c *SSM) DescribeMaintenanceWindowTargetsRequest(input *ssm.DescribeMaintenanceWindowTargetsInput) (req *request.Request, output *ssm.DescribeMaintenanceWindowTargetsOutput) {
	c.inc("DescribeMaintenanceWindowTargets")
	return c.svc.DescribeMaintenanceWindowTargetsRequest(input)
}

// DescribeMaintenanceWindowTargets is a passthrough to the underlying DescribeMaintenanceWindowTargets method.
// It will increment the count of requests made to DescribeMaintenanceWindowTargets.
func (c *SSM) DescribeMaintenanceWindowTargets(input *ssm.DescribeMaintenanceWindowTargetsInput) (*ssm.DescribeMaintenanceWindowTargetsOutput, error) {
	c.inc("DescribeMaintenanceWindowTargets")
	return c.svc.DescribeMaintenanceWindowTargets(input)
}

// DescribeMaintenanceWindowTargetsWithContext is a passthrough to the underlying DescribeMaintenanceWindowTargetsWithContext method.
// It will increment the count of requests made to DescribeMaintenanceWindowTargets.
func (c *SSM) DescribeMaintenanceWindowTargetsWithContext(ctx aws.Context, input *ssm.DescribeMaintenanceWindowTargetsInput, opts ...request.Option) (*ssm.DescribeMaintenanceWindowTargetsOutput, error) {
	c.inc("DescribeMaintenanceWindowTargets")
	return c.svc.DescribeMaintenanceWindowTargetsWithContext(ctx, input, opts...)
}

// DescribeMaintenanceWindowTasksRequest is a passthrough to the underlying DescribeMaintenanceWindowTasksRequest.
// It will increment the count of requests made to DescribeMaintenanceWindowTasks.
func (c *SSM) DescribeMaintenanceWindowTasksRequest(input *ssm.DescribeMaintenanceWindowTasksInput) (req *request.Request, output *ssm.DescribeMaintenanceWindowTasksOutput) {
	c.inc("DescribeMaintenanceWindowTasks")
	return c.svc.DescribeMaintenanceWindowTasksRequest(input)
}

// DescribeMaintenanceWindowTasks is a passthrough to the underlying DescribeMaintenanceWindowTasks method.
// It will increment the count of requests made to DescribeMaintenanceWindowTasks.
func (c *SSM) DescribeMaintenanceWindowTasks(input *ssm.DescribeMaintenanceWindowTasksInput) (*ssm.DescribeMaintenanceWindowTasksOutput, error) {
	c.inc("DescribeMaintenanceWindowTasks")
	return c.svc.DescribeMaintenanceWindowTasks(input)
}

// DescribeMaintenanceWindowTasksWithContext is a passthrough to the underlying DescribeMaintenanceWindowTasksWithContext method.
// It will increment the count of requests made to DescribeMaintenanceWindowTasks.
func (c *SSM) DescribeMaintenanceWindowTasksWithContext(ctx aws.Context, input *ssm.DescribeMaintenanceWindowTasksInput, opts ...request.Option) (*ssm.DescribeMaintenanceWindowTasksOutput, error) {
	c.inc("DescribeMaintenanceWindowTasks")
	return c.svc.DescribeMaintenanceWindowTasksWithContext(ctx, input, opts...)
}

// DescribeMaintenanceWindowsRequest is a passthrough to the underlying DescribeMaintenanceWindowsRequest.
// It will increment the count of requests made to DescribeMaintenanceWindows.
func (c *SSM) DescribeMaintenanceWindowsRequest(input *ssm.DescribeMaintenanceWindowsInput) (req *request.Request, output *ssm.DescribeMaintenanceWindowsOutput) {
	c.inc("DescribeMaintenanceWindows")
	return c.svc.DescribeMaintenanceWindowsRequest(input)
}

// DescribeMaintenanceWindows is a passthrough to the underlying DescribeMaintenanceWindows method.
// It will increment the count of requests made to DescribeMaintenanceWindows.
func (c *SSM) DescribeMaintenanceWindows(input *ssm.DescribeMaintenanceWindowsInput) (*ssm.DescribeMaintenanceWindowsOutput, error) {
	c.inc("DescribeMaintenanceWindows")
	return c.svc.DescribeMaintenanceWindows(input)
}

// DescribeMaintenanceWindowsWithContext is a passthrough to the underlying DescribeMaintenanceWindowsWithContext method.
// It will increment the count of requests made to DescribeMaintenanceWindows.
func (c *SSM) DescribeMaintenanceWindowsWithContext(ctx aws.Context, input *ssm.DescribeMaintenanceWindowsInput, opts ...request.Option) (*ssm.DescribeMaintenanceWindowsOutput, error) {
	c.inc("DescribeMaintenanceWindows")
	return c.svc.DescribeMaintenanceWindowsWithContext(ctx, input, opts...)
}

// DescribeParametersRequest is a passthrough to the underlying DescribeParametersRequest.
// It will increment the count of requests made to DescribeParameters.
func (c *SSM) DescribeParametersRequest(input *ssm.DescribeParametersInput) (req *request.Request, output *ssm.DescribeParametersOutput) {
	c.inc("DescribeParameters")
	return c.svc.DescribeParametersRequest(input)
}

// DescribeParameters is a passthrough to the underlying DescribeParameters method.
// It will increment the count of requests made to DescribeParameters.
func (c *SSM) DescribeParameters(input *ssm.DescribeParametersInput) (*ssm.DescribeParametersOutput, error) {
	c.inc("DescribeParameters")
	return c.svc.DescribeParameters(input)
}

// DescribeParametersWithContext is a passthrough to the underlying DescribeParametersWithContext method.
// It will increment the count of requests made to DescribeParameters.
func (c *SSM) DescribeParametersWithContext(ctx aws.Context, input *ssm.DescribeParametersInput, opts ...request.Option) (*ssm.DescribeParametersOutput, error) {
	c.inc("DescribeParameters")
	return c.svc.DescribeParametersWithContext(ctx, input, opts...)
}

// DescribeParametersPages is a passthrough to the underlying DescribeParametersPages method.
// It will increment the count of requests made to DescribeParameters on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeParametersPagesWithContext to avoid this.
func (c *SSM) DescribeParametersPages(input *ssm.DescribeParametersInput, fn func(*ssm.DescribeParametersOutput, bool) bool) error {
	wrappedFn := func(page *ssm.DescribeParametersOutput, lastPage bool) bool {
		c.inc("DescribeParameters")
		return fn(page, lastPage)
	}
	return c.DescribeParametersPages(input, wrappedFn)
}

// DescribeParametersPagesWithContext is a passthrough to the underlying DescribeParametersPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeParameters when applied to the request.
func (c *SSM) DescribeParametersPagesWithContext(ctx aws.Context, input *ssm.DescribeParametersInput, fn func(*ssm.DescribeParametersOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeParameters"))
	return c.DescribeParametersPagesWithContext(ctx, input, fn, opts...)
}

// DescribePatchBaselinesRequest is a passthrough to the underlying DescribePatchBaselinesRequest.
// It will increment the count of requests made to DescribePatchBaselines.
func (c *SSM) DescribePatchBaselinesRequest(input *ssm.DescribePatchBaselinesInput) (req *request.Request, output *ssm.DescribePatchBaselinesOutput) {
	c.inc("DescribePatchBaselines")
	return c.svc.DescribePatchBaselinesRequest(input)
}

// DescribePatchBaselines is a passthrough to the underlying DescribePatchBaselines method.
// It will increment the count of requests made to DescribePatchBaselines.
func (c *SSM) DescribePatchBaselines(input *ssm.DescribePatchBaselinesInput) (*ssm.DescribePatchBaselinesOutput, error) {
	c.inc("DescribePatchBaselines")
	return c.svc.DescribePatchBaselines(input)
}

// DescribePatchBaselinesWithContext is a passthrough to the underlying DescribePatchBaselinesWithContext method.
// It will increment the count of requests made to DescribePatchBaselines.
func (c *SSM) DescribePatchBaselinesWithContext(ctx aws.Context, input *ssm.DescribePatchBaselinesInput, opts ...request.Option) (*ssm.DescribePatchBaselinesOutput, error) {
	c.inc("DescribePatchBaselines")
	return c.svc.DescribePatchBaselinesWithContext(ctx, input, opts...)
}

// DescribePatchGroupStateRequest is a passthrough to the underlying DescribePatchGroupStateRequest.
// It will increment the count of requests made to DescribePatchGroupState.
func (c *SSM) DescribePatchGroupStateRequest(input *ssm.DescribePatchGroupStateInput) (req *request.Request, output *ssm.DescribePatchGroupStateOutput) {
	c.inc("DescribePatchGroupState")
	return c.svc.DescribePatchGroupStateRequest(input)
}

// DescribePatchGroupState is a passthrough to the underlying DescribePatchGroupState method.
// It will increment the count of requests made to DescribePatchGroupState.
func (c *SSM) DescribePatchGroupState(input *ssm.DescribePatchGroupStateInput) (*ssm.DescribePatchGroupStateOutput, error) {
	c.inc("DescribePatchGroupState")
	return c.svc.DescribePatchGroupState(input)
}

// DescribePatchGroupStateWithContext is a passthrough to the underlying DescribePatchGroupStateWithContext method.
// It will increment the count of requests made to DescribePatchGroupState.
func (c *SSM) DescribePatchGroupStateWithContext(ctx aws.Context, input *ssm.DescribePatchGroupStateInput, opts ...request.Option) (*ssm.DescribePatchGroupStateOutput, error) {
	c.inc("DescribePatchGroupState")
	return c.svc.DescribePatchGroupStateWithContext(ctx, input, opts...)
}

// DescribePatchGroupsRequest is a passthrough to the underlying DescribePatchGroupsRequest.
// It will increment the count of requests made to DescribePatchGroups.
func (c *SSM) DescribePatchGroupsRequest(input *ssm.DescribePatchGroupsInput) (req *request.Request, output *ssm.DescribePatchGroupsOutput) {
	c.inc("DescribePatchGroups")
	return c.svc.DescribePatchGroupsRequest(input)
}

// DescribePatchGroups is a passthrough to the underlying DescribePatchGroups method.
// It will increment the count of requests made to DescribePatchGroups.
func (c *SSM) DescribePatchGroups(input *ssm.DescribePatchGroupsInput) (*ssm.DescribePatchGroupsOutput, error) {
	c.inc("DescribePatchGroups")
	return c.svc.DescribePatchGroups(input)
}

// DescribePatchGroupsWithContext is a passthrough to the underlying DescribePatchGroupsWithContext method.
// It will increment the count of requests made to DescribePatchGroups.
func (c *SSM) DescribePatchGroupsWithContext(ctx aws.Context, input *ssm.DescribePatchGroupsInput, opts ...request.Option) (*ssm.DescribePatchGroupsOutput, error) {
	c.inc("DescribePatchGroups")
	return c.svc.DescribePatchGroupsWithContext(ctx, input, opts...)
}

// GetAutomationExecutionRequest is a passthrough to the underlying GetAutomationExecutionRequest.
// It will increment the count of requests made to GetAutomationExecution.
func (c *SSM) GetAutomationExecutionRequest(input *ssm.GetAutomationExecutionInput) (req *request.Request, output *ssm.GetAutomationExecutionOutput) {
	c.inc("GetAutomationExecution")
	return c.svc.GetAutomationExecutionRequest(input)
}

// GetAutomationExecution is a passthrough to the underlying GetAutomationExecution method.
// It will increment the count of requests made to GetAutomationExecution.
func (c *SSM) GetAutomationExecution(input *ssm.GetAutomationExecutionInput) (*ssm.GetAutomationExecutionOutput, error) {
	c.inc("GetAutomationExecution")
	return c.svc.GetAutomationExecution(input)
}

// GetAutomationExecutionWithContext is a passthrough to the underlying GetAutomationExecutionWithContext method.
// It will increment the count of requests made to GetAutomationExecution.
func (c *SSM) GetAutomationExecutionWithContext(ctx aws.Context, input *ssm.GetAutomationExecutionInput, opts ...request.Option) (*ssm.GetAutomationExecutionOutput, error) {
	c.inc("GetAutomationExecution")
	return c.svc.GetAutomationExecutionWithContext(ctx, input, opts...)
}

// GetCommandInvocationRequest is a passthrough to the underlying GetCommandInvocationRequest.
// It will increment the count of requests made to GetCommandInvocation.
func (c *SSM) GetCommandInvocationRequest(input *ssm.GetCommandInvocationInput) (req *request.Request, output *ssm.GetCommandInvocationOutput) {
	c.inc("GetCommandInvocation")
	return c.svc.GetCommandInvocationRequest(input)
}

// GetCommandInvocation is a passthrough to the underlying GetCommandInvocation method.
// It will increment the count of requests made to GetCommandInvocation.
func (c *SSM) GetCommandInvocation(input *ssm.GetCommandInvocationInput) (*ssm.GetCommandInvocationOutput, error) {
	c.inc("GetCommandInvocation")
	return c.svc.GetCommandInvocation(input)
}

// GetCommandInvocationWithContext is a passthrough to the underlying GetCommandInvocationWithContext method.
// It will increment the count of requests made to GetCommandInvocation.
func (c *SSM) GetCommandInvocationWithContext(ctx aws.Context, input *ssm.GetCommandInvocationInput, opts ...request.Option) (*ssm.GetCommandInvocationOutput, error) {
	c.inc("GetCommandInvocation")
	return c.svc.GetCommandInvocationWithContext(ctx, input, opts...)
}

// GetDefaultPatchBaselineRequest is a passthrough to the underlying GetDefaultPatchBaselineRequest.
// It will increment the count of requests made to GetDefaultPatchBaseline.
func (c *SSM) GetDefaultPatchBaselineRequest(input *ssm.GetDefaultPatchBaselineInput) (req *request.Request, output *ssm.GetDefaultPatchBaselineOutput) {
	c.inc("GetDefaultPatchBaseline")
	return c.svc.GetDefaultPatchBaselineRequest(input)
}

// GetDefaultPatchBaseline is a passthrough to the underlying GetDefaultPatchBaseline method.
// It will increment the count of requests made to GetDefaultPatchBaseline.
func (c *SSM) GetDefaultPatchBaseline(input *ssm.GetDefaultPatchBaselineInput) (*ssm.GetDefaultPatchBaselineOutput, error) {
	c.inc("GetDefaultPatchBaseline")
	return c.svc.GetDefaultPatchBaseline(input)
}

// GetDefaultPatchBaselineWithContext is a passthrough to the underlying GetDefaultPatchBaselineWithContext method.
// It will increment the count of requests made to GetDefaultPatchBaseline.
func (c *SSM) GetDefaultPatchBaselineWithContext(ctx aws.Context, input *ssm.GetDefaultPatchBaselineInput, opts ...request.Option) (*ssm.GetDefaultPatchBaselineOutput, error) {
	c.inc("GetDefaultPatchBaseline")
	return c.svc.GetDefaultPatchBaselineWithContext(ctx, input, opts...)
}

// GetDeployablePatchSnapshotForInstanceRequest is a passthrough to the underlying GetDeployablePatchSnapshotForInstanceRequest.
// It will increment the count of requests made to GetDeployablePatchSnapshotForInstance.
func (c *SSM) GetDeployablePatchSnapshotForInstanceRequest(input *ssm.GetDeployablePatchSnapshotForInstanceInput) (req *request.Request, output *ssm.GetDeployablePatchSnapshotForInstanceOutput) {
	c.inc("GetDeployablePatchSnapshotForInstance")
	return c.svc.GetDeployablePatchSnapshotForInstanceRequest(input)
}

// GetDeployablePatchSnapshotForInstance is a passthrough to the underlying GetDeployablePatchSnapshotForInstance method.
// It will increment the count of requests made to GetDeployablePatchSnapshotForInstance.
func (c *SSM) GetDeployablePatchSnapshotForInstance(input *ssm.GetDeployablePatchSnapshotForInstanceInput) (*ssm.GetDeployablePatchSnapshotForInstanceOutput, error) {
	c.inc("GetDeployablePatchSnapshotForInstance")
	return c.svc.GetDeployablePatchSnapshotForInstance(input)
}

// GetDeployablePatchSnapshotForInstanceWithContext is a passthrough to the underlying GetDeployablePatchSnapshotForInstanceWithContext method.
// It will increment the count of requests made to GetDeployablePatchSnapshotForInstance.
func (c *SSM) GetDeployablePatchSnapshotForInstanceWithContext(ctx aws.Context, input *ssm.GetDeployablePatchSnapshotForInstanceInput, opts ...request.Option) (*ssm.GetDeployablePatchSnapshotForInstanceOutput, error) {
	c.inc("GetDeployablePatchSnapshotForInstance")
	return c.svc.GetDeployablePatchSnapshotForInstanceWithContext(ctx, input, opts...)
}

// GetDocumentRequest is a passthrough to the underlying GetDocumentRequest.
// It will increment the count of requests made to GetDocument.
func (c *SSM) GetDocumentRequest(input *ssm.GetDocumentInput) (req *request.Request, output *ssm.GetDocumentOutput) {
	c.inc("GetDocument")
	return c.svc.GetDocumentRequest(input)
}

// GetDocument is a passthrough to the underlying GetDocument method.
// It will increment the count of requests made to GetDocument.
func (c *SSM) GetDocument(input *ssm.GetDocumentInput) (*ssm.GetDocumentOutput, error) {
	c.inc("GetDocument")
	return c.svc.GetDocument(input)
}

// GetDocumentWithContext is a passthrough to the underlying GetDocumentWithContext method.
// It will increment the count of requests made to GetDocument.
func (c *SSM) GetDocumentWithContext(ctx aws.Context, input *ssm.GetDocumentInput, opts ...request.Option) (*ssm.GetDocumentOutput, error) {
	c.inc("GetDocument")
	return c.svc.GetDocumentWithContext(ctx, input, opts...)
}

// GetInventoryRequest is a passthrough to the underlying GetInventoryRequest.
// It will increment the count of requests made to GetInventory.
func (c *SSM) GetInventoryRequest(input *ssm.GetInventoryInput) (req *request.Request, output *ssm.GetInventoryOutput) {
	c.inc("GetInventory")
	return c.svc.GetInventoryRequest(input)
}

// GetInventory is a passthrough to the underlying GetInventory method.
// It will increment the count of requests made to GetInventory.
func (c *SSM) GetInventory(input *ssm.GetInventoryInput) (*ssm.GetInventoryOutput, error) {
	c.inc("GetInventory")
	return c.svc.GetInventory(input)
}

// GetInventoryWithContext is a passthrough to the underlying GetInventoryWithContext method.
// It will increment the count of requests made to GetInventory.
func (c *SSM) GetInventoryWithContext(ctx aws.Context, input *ssm.GetInventoryInput, opts ...request.Option) (*ssm.GetInventoryOutput, error) {
	c.inc("GetInventory")
	return c.svc.GetInventoryWithContext(ctx, input, opts...)
}

// GetInventorySchemaRequest is a passthrough to the underlying GetInventorySchemaRequest.
// It will increment the count of requests made to GetInventorySchema.
func (c *SSM) GetInventorySchemaRequest(input *ssm.GetInventorySchemaInput) (req *request.Request, output *ssm.GetInventorySchemaOutput) {
	c.inc("GetInventorySchema")
	return c.svc.GetInventorySchemaRequest(input)
}

// GetInventorySchema is a passthrough to the underlying GetInventorySchema method.
// It will increment the count of requests made to GetInventorySchema.
func (c *SSM) GetInventorySchema(input *ssm.GetInventorySchemaInput) (*ssm.GetInventorySchemaOutput, error) {
	c.inc("GetInventorySchema")
	return c.svc.GetInventorySchema(input)
}

// GetInventorySchemaWithContext is a passthrough to the underlying GetInventorySchemaWithContext method.
// It will increment the count of requests made to GetInventorySchema.
func (c *SSM) GetInventorySchemaWithContext(ctx aws.Context, input *ssm.GetInventorySchemaInput, opts ...request.Option) (*ssm.GetInventorySchemaOutput, error) {
	c.inc("GetInventorySchema")
	return c.svc.GetInventorySchemaWithContext(ctx, input, opts...)
}

// GetMaintenanceWindowRequest is a passthrough to the underlying GetMaintenanceWindowRequest.
// It will increment the count of requests made to GetMaintenanceWindow.
func (c *SSM) GetMaintenanceWindowRequest(input *ssm.GetMaintenanceWindowInput) (req *request.Request, output *ssm.GetMaintenanceWindowOutput) {
	c.inc("GetMaintenanceWindow")
	return c.svc.GetMaintenanceWindowRequest(input)
}

// GetMaintenanceWindow is a passthrough to the underlying GetMaintenanceWindow method.
// It will increment the count of requests made to GetMaintenanceWindow.
func (c *SSM) GetMaintenanceWindow(input *ssm.GetMaintenanceWindowInput) (*ssm.GetMaintenanceWindowOutput, error) {
	c.inc("GetMaintenanceWindow")
	return c.svc.GetMaintenanceWindow(input)
}

// GetMaintenanceWindowWithContext is a passthrough to the underlying GetMaintenanceWindowWithContext method.
// It will increment the count of requests made to GetMaintenanceWindow.
func (c *SSM) GetMaintenanceWindowWithContext(ctx aws.Context, input *ssm.GetMaintenanceWindowInput, opts ...request.Option) (*ssm.GetMaintenanceWindowOutput, error) {
	c.inc("GetMaintenanceWindow")
	return c.svc.GetMaintenanceWindowWithContext(ctx, input, opts...)
}

// GetMaintenanceWindowExecutionRequest is a passthrough to the underlying GetMaintenanceWindowExecutionRequest.
// It will increment the count of requests made to GetMaintenanceWindowExecution.
func (c *SSM) GetMaintenanceWindowExecutionRequest(input *ssm.GetMaintenanceWindowExecutionInput) (req *request.Request, output *ssm.GetMaintenanceWindowExecutionOutput) {
	c.inc("GetMaintenanceWindowExecution")
	return c.svc.GetMaintenanceWindowExecutionRequest(input)
}

// GetMaintenanceWindowExecution is a passthrough to the underlying GetMaintenanceWindowExecution method.
// It will increment the count of requests made to GetMaintenanceWindowExecution.
func (c *SSM) GetMaintenanceWindowExecution(input *ssm.GetMaintenanceWindowExecutionInput) (*ssm.GetMaintenanceWindowExecutionOutput, error) {
	c.inc("GetMaintenanceWindowExecution")
	return c.svc.GetMaintenanceWindowExecution(input)
}

// GetMaintenanceWindowExecutionWithContext is a passthrough to the underlying GetMaintenanceWindowExecutionWithContext method.
// It will increment the count of requests made to GetMaintenanceWindowExecution.
func (c *SSM) GetMaintenanceWindowExecutionWithContext(ctx aws.Context, input *ssm.GetMaintenanceWindowExecutionInput, opts ...request.Option) (*ssm.GetMaintenanceWindowExecutionOutput, error) {
	c.inc("GetMaintenanceWindowExecution")
	return c.svc.GetMaintenanceWindowExecutionWithContext(ctx, input, opts...)
}

// GetMaintenanceWindowExecutionTaskRequest is a passthrough to the underlying GetMaintenanceWindowExecutionTaskRequest.
// It will increment the count of requests made to GetMaintenanceWindowExecutionTask.
func (c *SSM) GetMaintenanceWindowExecutionTaskRequest(input *ssm.GetMaintenanceWindowExecutionTaskInput) (req *request.Request, output *ssm.GetMaintenanceWindowExecutionTaskOutput) {
	c.inc("GetMaintenanceWindowExecutionTask")
	return c.svc.GetMaintenanceWindowExecutionTaskRequest(input)
}

// GetMaintenanceWindowExecutionTask is a passthrough to the underlying GetMaintenanceWindowExecutionTask method.
// It will increment the count of requests made to GetMaintenanceWindowExecutionTask.
func (c *SSM) GetMaintenanceWindowExecutionTask(input *ssm.GetMaintenanceWindowExecutionTaskInput) (*ssm.GetMaintenanceWindowExecutionTaskOutput, error) {
	c.inc("GetMaintenanceWindowExecutionTask")
	return c.svc.GetMaintenanceWindowExecutionTask(input)
}

// GetMaintenanceWindowExecutionTaskWithContext is a passthrough to the underlying GetMaintenanceWindowExecutionTaskWithContext method.
// It will increment the count of requests made to GetMaintenanceWindowExecutionTask.
func (c *SSM) GetMaintenanceWindowExecutionTaskWithContext(ctx aws.Context, input *ssm.GetMaintenanceWindowExecutionTaskInput, opts ...request.Option) (*ssm.GetMaintenanceWindowExecutionTaskOutput, error) {
	c.inc("GetMaintenanceWindowExecutionTask")
	return c.svc.GetMaintenanceWindowExecutionTaskWithContext(ctx, input, opts...)
}

// GetMaintenanceWindowExecutionTaskInvocationRequest is a passthrough to the underlying GetMaintenanceWindowExecutionTaskInvocationRequest.
// It will increment the count of requests made to GetMaintenanceWindowExecutionTaskInvocation.
func (c *SSM) GetMaintenanceWindowExecutionTaskInvocationRequest(input *ssm.GetMaintenanceWindowExecutionTaskInvocationInput) (req *request.Request, output *ssm.GetMaintenanceWindowExecutionTaskInvocationOutput) {
	c.inc("GetMaintenanceWindowExecutionTaskInvocation")
	return c.svc.GetMaintenanceWindowExecutionTaskInvocationRequest(input)
}

// GetMaintenanceWindowExecutionTaskInvocation is a passthrough to the underlying GetMaintenanceWindowExecutionTaskInvocation method.
// It will increment the count of requests made to GetMaintenanceWindowExecutionTaskInvocation.
func (c *SSM) GetMaintenanceWindowExecutionTaskInvocation(input *ssm.GetMaintenanceWindowExecutionTaskInvocationInput) (*ssm.GetMaintenanceWindowExecutionTaskInvocationOutput, error) {
	c.inc("GetMaintenanceWindowExecutionTaskInvocation")
	return c.svc.GetMaintenanceWindowExecutionTaskInvocation(input)
}

// GetMaintenanceWindowExecutionTaskInvocationWithContext is a passthrough to the underlying GetMaintenanceWindowExecutionTaskInvocationWithContext method.
// It will increment the count of requests made to GetMaintenanceWindowExecutionTaskInvocation.
func (c *SSM) GetMaintenanceWindowExecutionTaskInvocationWithContext(ctx aws.Context, input *ssm.GetMaintenanceWindowExecutionTaskInvocationInput, opts ...request.Option) (*ssm.GetMaintenanceWindowExecutionTaskInvocationOutput, error) {
	c.inc("GetMaintenanceWindowExecutionTaskInvocation")
	return c.svc.GetMaintenanceWindowExecutionTaskInvocationWithContext(ctx, input, opts...)
}

// GetMaintenanceWindowTaskRequest is a passthrough to the underlying GetMaintenanceWindowTaskRequest.
// It will increment the count of requests made to GetMaintenanceWindowTask.
func (c *SSM) GetMaintenanceWindowTaskRequest(input *ssm.GetMaintenanceWindowTaskInput) (req *request.Request, output *ssm.GetMaintenanceWindowTaskOutput) {
	c.inc("GetMaintenanceWindowTask")
	return c.svc.GetMaintenanceWindowTaskRequest(input)
}

// GetMaintenanceWindowTask is a passthrough to the underlying GetMaintenanceWindowTask method.
// It will increment the count of requests made to GetMaintenanceWindowTask.
func (c *SSM) GetMaintenanceWindowTask(input *ssm.GetMaintenanceWindowTaskInput) (*ssm.GetMaintenanceWindowTaskOutput, error) {
	c.inc("GetMaintenanceWindowTask")
	return c.svc.GetMaintenanceWindowTask(input)
}

// GetMaintenanceWindowTaskWithContext is a passthrough to the underlying GetMaintenanceWindowTaskWithContext method.
// It will increment the count of requests made to GetMaintenanceWindowTask.
func (c *SSM) GetMaintenanceWindowTaskWithContext(ctx aws.Context, input *ssm.GetMaintenanceWindowTaskInput, opts ...request.Option) (*ssm.GetMaintenanceWindowTaskOutput, error) {
	c.inc("GetMaintenanceWindowTask")
	return c.svc.GetMaintenanceWindowTaskWithContext(ctx, input, opts...)
}

// GetParameterRequest is a passthrough to the underlying GetParameterRequest.
// It will increment the count of requests made to GetParameter.
func (c *SSM) GetParameterRequest(input *ssm.GetParameterInput) (req *request.Request, output *ssm.GetParameterOutput) {
	c.inc("GetParameter")
	return c.svc.GetParameterRequest(input)
}

// GetParameter is a passthrough to the underlying GetParameter method.
// It will increment the count of requests made to GetParameter.
func (c *SSM) GetParameter(input *ssm.GetParameterInput) (*ssm.GetParameterOutput, error) {
	c.inc("GetParameter")
	return c.svc.GetParameter(input)
}

// GetParameterWithContext is a passthrough to the underlying GetParameterWithContext method.
// It will increment the count of requests made to GetParameter.
func (c *SSM) GetParameterWithContext(ctx aws.Context, input *ssm.GetParameterInput, opts ...request.Option) (*ssm.GetParameterOutput, error) {
	c.inc("GetParameter")
	return c.svc.GetParameterWithContext(ctx, input, opts...)
}

// GetParameterHistoryRequest is a passthrough to the underlying GetParameterHistoryRequest.
// It will increment the count of requests made to GetParameterHistory.
func (c *SSM) GetParameterHistoryRequest(input *ssm.GetParameterHistoryInput) (req *request.Request, output *ssm.GetParameterHistoryOutput) {
	c.inc("GetParameterHistory")
	return c.svc.GetParameterHistoryRequest(input)
}

// GetParameterHistory is a passthrough to the underlying GetParameterHistory method.
// It will increment the count of requests made to GetParameterHistory.
func (c *SSM) GetParameterHistory(input *ssm.GetParameterHistoryInput) (*ssm.GetParameterHistoryOutput, error) {
	c.inc("GetParameterHistory")
	return c.svc.GetParameterHistory(input)
}

// GetParameterHistoryWithContext is a passthrough to the underlying GetParameterHistoryWithContext method.
// It will increment the count of requests made to GetParameterHistory.
func (c *SSM) GetParameterHistoryWithContext(ctx aws.Context, input *ssm.GetParameterHistoryInput, opts ...request.Option) (*ssm.GetParameterHistoryOutput, error) {
	c.inc("GetParameterHistory")
	return c.svc.GetParameterHistoryWithContext(ctx, input, opts...)
}

// GetParameterHistoryPages is a passthrough to the underlying GetParameterHistoryPages method.
// It will increment the count of requests made to GetParameterHistory on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use GetParameterHistoryPagesWithContext to avoid this.
func (c *SSM) GetParameterHistoryPages(input *ssm.GetParameterHistoryInput, fn func(*ssm.GetParameterHistoryOutput, bool) bool) error {
	wrappedFn := func(page *ssm.GetParameterHistoryOutput, lastPage bool) bool {
		c.inc("GetParameterHistory")
		return fn(page, lastPage)
	}
	return c.GetParameterHistoryPages(input, wrappedFn)
}

// GetParameterHistoryPagesWithContext is a passthrough to the underlying GetParameterHistoryPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to GetParameterHistory when applied to the request.
func (c *SSM) GetParameterHistoryPagesWithContext(ctx aws.Context, input *ssm.GetParameterHistoryInput, fn func(*ssm.GetParameterHistoryOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("GetParameterHistory"))
	return c.GetParameterHistoryPagesWithContext(ctx, input, fn, opts...)
}

// GetParametersRequest is a passthrough to the underlying GetParametersRequest.
// It will increment the count of requests made to GetParameters.
func (c *SSM) GetParametersRequest(input *ssm.GetParametersInput) (req *request.Request, output *ssm.GetParametersOutput) {
	c.inc("GetParameters")
	return c.svc.GetParametersRequest(input)
}

// GetParameters is a passthrough to the underlying GetParameters method.
// It will increment the count of requests made to GetParameters.
func (c *SSM) GetParameters(input *ssm.GetParametersInput) (*ssm.GetParametersOutput, error) {
	c.inc("GetParameters")
	return c.svc.GetParameters(input)
}

// GetParametersWithContext is a passthrough to the underlying GetParametersWithContext method.
// It will increment the count of requests made to GetParameters.
func (c *SSM) GetParametersWithContext(ctx aws.Context, input *ssm.GetParametersInput, opts ...request.Option) (*ssm.GetParametersOutput, error) {
	c.inc("GetParameters")
	return c.svc.GetParametersWithContext(ctx, input, opts...)
}

// GetParametersByPathRequest is a passthrough to the underlying GetParametersByPathRequest.
// It will increment the count of requests made to GetParametersByPath.
func (c *SSM) GetParametersByPathRequest(input *ssm.GetParametersByPathInput) (req *request.Request, output *ssm.GetParametersByPathOutput) {
	c.inc("GetParametersByPath")
	return c.svc.GetParametersByPathRequest(input)
}

// GetParametersByPath is a passthrough to the underlying GetParametersByPath method.
// It will increment the count of requests made to GetParametersByPath.
func (c *SSM) GetParametersByPath(input *ssm.GetParametersByPathInput) (*ssm.GetParametersByPathOutput, error) {
	c.inc("GetParametersByPath")
	return c.svc.GetParametersByPath(input)
}

// GetParametersByPathWithContext is a passthrough to the underlying GetParametersByPathWithContext method.
// It will increment the count of requests made to GetParametersByPath.
func (c *SSM) GetParametersByPathWithContext(ctx aws.Context, input *ssm.GetParametersByPathInput, opts ...request.Option) (*ssm.GetParametersByPathOutput, error) {
	c.inc("GetParametersByPath")
	return c.svc.GetParametersByPathWithContext(ctx, input, opts...)
}

// GetParametersByPathPages is a passthrough to the underlying GetParametersByPathPages method.
// It will increment the count of requests made to GetParametersByPath on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use GetParametersByPathPagesWithContext to avoid this.
func (c *SSM) GetParametersByPathPages(input *ssm.GetParametersByPathInput, fn func(*ssm.GetParametersByPathOutput, bool) bool) error {
	wrappedFn := func(page *ssm.GetParametersByPathOutput, lastPage bool) bool {
		c.inc("GetParametersByPath")
		return fn(page, lastPage)
	}
	return c.GetParametersByPathPages(input, wrappedFn)
}

// GetParametersByPathPagesWithContext is a passthrough to the underlying GetParametersByPathPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to GetParametersByPath when applied to the request.
func (c *SSM) GetParametersByPathPagesWithContext(ctx aws.Context, input *ssm.GetParametersByPathInput, fn func(*ssm.GetParametersByPathOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("GetParametersByPath"))
	return c.GetParametersByPathPagesWithContext(ctx, input, fn, opts...)
}

// GetPatchBaselineRequest is a passthrough to the underlying GetPatchBaselineRequest.
// It will increment the count of requests made to GetPatchBaseline.
func (c *SSM) GetPatchBaselineRequest(input *ssm.GetPatchBaselineInput) (req *request.Request, output *ssm.GetPatchBaselineOutput) {
	c.inc("GetPatchBaseline")
	return c.svc.GetPatchBaselineRequest(input)
}

// GetPatchBaseline is a passthrough to the underlying GetPatchBaseline method.
// It will increment the count of requests made to GetPatchBaseline.
func (c *SSM) GetPatchBaseline(input *ssm.GetPatchBaselineInput) (*ssm.GetPatchBaselineOutput, error) {
	c.inc("GetPatchBaseline")
	return c.svc.GetPatchBaseline(input)
}

// GetPatchBaselineWithContext is a passthrough to the underlying GetPatchBaselineWithContext method.
// It will increment the count of requests made to GetPatchBaseline.
func (c *SSM) GetPatchBaselineWithContext(ctx aws.Context, input *ssm.GetPatchBaselineInput, opts ...request.Option) (*ssm.GetPatchBaselineOutput, error) {
	c.inc("GetPatchBaseline")
	return c.svc.GetPatchBaselineWithContext(ctx, input, opts...)
}

// GetPatchBaselineForPatchGroupRequest is a passthrough to the underlying GetPatchBaselineForPatchGroupRequest.
// It will increment the count of requests made to GetPatchBaselineForPatchGroup.
func (c *SSM) GetPatchBaselineForPatchGroupRequest(input *ssm.GetPatchBaselineForPatchGroupInput) (req *request.Request, output *ssm.GetPatchBaselineForPatchGroupOutput) {
	c.inc("GetPatchBaselineForPatchGroup")
	return c.svc.GetPatchBaselineForPatchGroupRequest(input)
}

// GetPatchBaselineForPatchGroup is a passthrough to the underlying GetPatchBaselineForPatchGroup method.
// It will increment the count of requests made to GetPatchBaselineForPatchGroup.
func (c *SSM) GetPatchBaselineForPatchGroup(input *ssm.GetPatchBaselineForPatchGroupInput) (*ssm.GetPatchBaselineForPatchGroupOutput, error) {
	c.inc("GetPatchBaselineForPatchGroup")
	return c.svc.GetPatchBaselineForPatchGroup(input)
}

// GetPatchBaselineForPatchGroupWithContext is a passthrough to the underlying GetPatchBaselineForPatchGroupWithContext method.
// It will increment the count of requests made to GetPatchBaselineForPatchGroup.
func (c *SSM) GetPatchBaselineForPatchGroupWithContext(ctx aws.Context, input *ssm.GetPatchBaselineForPatchGroupInput, opts ...request.Option) (*ssm.GetPatchBaselineForPatchGroupOutput, error) {
	c.inc("GetPatchBaselineForPatchGroup")
	return c.svc.GetPatchBaselineForPatchGroupWithContext(ctx, input, opts...)
}

// ListAssociationVersionsRequest is a passthrough to the underlying ListAssociationVersionsRequest.
// It will increment the count of requests made to ListAssociationVersions.
func (c *SSM) ListAssociationVersionsRequest(input *ssm.ListAssociationVersionsInput) (req *request.Request, output *ssm.ListAssociationVersionsOutput) {
	c.inc("ListAssociationVersions")
	return c.svc.ListAssociationVersionsRequest(input)
}

// ListAssociationVersions is a passthrough to the underlying ListAssociationVersions method.
// It will increment the count of requests made to ListAssociationVersions.
func (c *SSM) ListAssociationVersions(input *ssm.ListAssociationVersionsInput) (*ssm.ListAssociationVersionsOutput, error) {
	c.inc("ListAssociationVersions")
	return c.svc.ListAssociationVersions(input)
}

// ListAssociationVersionsWithContext is a passthrough to the underlying ListAssociationVersionsWithContext method.
// It will increment the count of requests made to ListAssociationVersions.
func (c *SSM) ListAssociationVersionsWithContext(ctx aws.Context, input *ssm.ListAssociationVersionsInput, opts ...request.Option) (*ssm.ListAssociationVersionsOutput, error) {
	c.inc("ListAssociationVersions")
	return c.svc.ListAssociationVersionsWithContext(ctx, input, opts...)
}

// ListAssociationsRequest is a passthrough to the underlying ListAssociationsRequest.
// It will increment the count of requests made to ListAssociations.
func (c *SSM) ListAssociationsRequest(input *ssm.ListAssociationsInput) (req *request.Request, output *ssm.ListAssociationsOutput) {
	c.inc("ListAssociations")
	return c.svc.ListAssociationsRequest(input)
}

// ListAssociations is a passthrough to the underlying ListAssociations method.
// It will increment the count of requests made to ListAssociations.
func (c *SSM) ListAssociations(input *ssm.ListAssociationsInput) (*ssm.ListAssociationsOutput, error) {
	c.inc("ListAssociations")
	return c.svc.ListAssociations(input)
}

// ListAssociationsWithContext is a passthrough to the underlying ListAssociationsWithContext method.
// It will increment the count of requests made to ListAssociations.
func (c *SSM) ListAssociationsWithContext(ctx aws.Context, input *ssm.ListAssociationsInput, opts ...request.Option) (*ssm.ListAssociationsOutput, error) {
	c.inc("ListAssociations")
	return c.svc.ListAssociationsWithContext(ctx, input, opts...)
}

// ListAssociationsPages is a passthrough to the underlying ListAssociationsPages method.
// It will increment the count of requests made to ListAssociations on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListAssociationsPagesWithContext to avoid this.
func (c *SSM) ListAssociationsPages(input *ssm.ListAssociationsInput, fn func(*ssm.ListAssociationsOutput, bool) bool) error {
	wrappedFn := func(page *ssm.ListAssociationsOutput, lastPage bool) bool {
		c.inc("ListAssociations")
		return fn(page, lastPage)
	}
	return c.ListAssociationsPages(input, wrappedFn)
}

// ListAssociationsPagesWithContext is a passthrough to the underlying ListAssociationsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListAssociations when applied to the request.
func (c *SSM) ListAssociationsPagesWithContext(ctx aws.Context, input *ssm.ListAssociationsInput, fn func(*ssm.ListAssociationsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListAssociations"))
	return c.ListAssociationsPagesWithContext(ctx, input, fn, opts...)
}

// ListCommandInvocationsRequest is a passthrough to the underlying ListCommandInvocationsRequest.
// It will increment the count of requests made to ListCommandInvocations.
func (c *SSM) ListCommandInvocationsRequest(input *ssm.ListCommandInvocationsInput) (req *request.Request, output *ssm.ListCommandInvocationsOutput) {
	c.inc("ListCommandInvocations")
	return c.svc.ListCommandInvocationsRequest(input)
}

// ListCommandInvocations is a passthrough to the underlying ListCommandInvocations method.
// It will increment the count of requests made to ListCommandInvocations.
func (c *SSM) ListCommandInvocations(input *ssm.ListCommandInvocationsInput) (*ssm.ListCommandInvocationsOutput, error) {
	c.inc("ListCommandInvocations")
	return c.svc.ListCommandInvocations(input)
}

// ListCommandInvocationsWithContext is a passthrough to the underlying ListCommandInvocationsWithContext method.
// It will increment the count of requests made to ListCommandInvocations.
func (c *SSM) ListCommandInvocationsWithContext(ctx aws.Context, input *ssm.ListCommandInvocationsInput, opts ...request.Option) (*ssm.ListCommandInvocationsOutput, error) {
	c.inc("ListCommandInvocations")
	return c.svc.ListCommandInvocationsWithContext(ctx, input, opts...)
}

// ListCommandInvocationsPages is a passthrough to the underlying ListCommandInvocationsPages method.
// It will increment the count of requests made to ListCommandInvocations on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListCommandInvocationsPagesWithContext to avoid this.
func (c *SSM) ListCommandInvocationsPages(input *ssm.ListCommandInvocationsInput, fn func(*ssm.ListCommandInvocationsOutput, bool) bool) error {
	wrappedFn := func(page *ssm.ListCommandInvocationsOutput, lastPage bool) bool {
		c.inc("ListCommandInvocations")
		return fn(page, lastPage)
	}
	return c.ListCommandInvocationsPages(input, wrappedFn)
}

// ListCommandInvocationsPagesWithContext is a passthrough to the underlying ListCommandInvocationsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListCommandInvocations when applied to the request.
func (c *SSM) ListCommandInvocationsPagesWithContext(ctx aws.Context, input *ssm.ListCommandInvocationsInput, fn func(*ssm.ListCommandInvocationsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListCommandInvocations"))
	return c.ListCommandInvocationsPagesWithContext(ctx, input, fn, opts...)
}

// ListCommandsRequest is a passthrough to the underlying ListCommandsRequest.
// It will increment the count of requests made to ListCommands.
func (c *SSM) ListCommandsRequest(input *ssm.ListCommandsInput) (req *request.Request, output *ssm.ListCommandsOutput) {
	c.inc("ListCommands")
	return c.svc.ListCommandsRequest(input)
}

// ListCommands is a passthrough to the underlying ListCommands method.
// It will increment the count of requests made to ListCommands.
func (c *SSM) ListCommands(input *ssm.ListCommandsInput) (*ssm.ListCommandsOutput, error) {
	c.inc("ListCommands")
	return c.svc.ListCommands(input)
}

// ListCommandsWithContext is a passthrough to the underlying ListCommandsWithContext method.
// It will increment the count of requests made to ListCommands.
func (c *SSM) ListCommandsWithContext(ctx aws.Context, input *ssm.ListCommandsInput, opts ...request.Option) (*ssm.ListCommandsOutput, error) {
	c.inc("ListCommands")
	return c.svc.ListCommandsWithContext(ctx, input, opts...)
}

// ListCommandsPages is a passthrough to the underlying ListCommandsPages method.
// It will increment the count of requests made to ListCommands on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListCommandsPagesWithContext to avoid this.
func (c *SSM) ListCommandsPages(input *ssm.ListCommandsInput, fn func(*ssm.ListCommandsOutput, bool) bool) error {
	wrappedFn := func(page *ssm.ListCommandsOutput, lastPage bool) bool {
		c.inc("ListCommands")
		return fn(page, lastPage)
	}
	return c.ListCommandsPages(input, wrappedFn)
}

// ListCommandsPagesWithContext is a passthrough to the underlying ListCommandsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListCommands when applied to the request.
func (c *SSM) ListCommandsPagesWithContext(ctx aws.Context, input *ssm.ListCommandsInput, fn func(*ssm.ListCommandsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListCommands"))
	return c.ListCommandsPagesWithContext(ctx, input, fn, opts...)
}

// ListComplianceItemsRequest is a passthrough to the underlying ListComplianceItemsRequest.
// It will increment the count of requests made to ListComplianceItems.
func (c *SSM) ListComplianceItemsRequest(input *ssm.ListComplianceItemsInput) (req *request.Request, output *ssm.ListComplianceItemsOutput) {
	c.inc("ListComplianceItems")
	return c.svc.ListComplianceItemsRequest(input)
}

// ListComplianceItems is a passthrough to the underlying ListComplianceItems method.
// It will increment the count of requests made to ListComplianceItems.
func (c *SSM) ListComplianceItems(input *ssm.ListComplianceItemsInput) (*ssm.ListComplianceItemsOutput, error) {
	c.inc("ListComplianceItems")
	return c.svc.ListComplianceItems(input)
}

// ListComplianceItemsWithContext is a passthrough to the underlying ListComplianceItemsWithContext method.
// It will increment the count of requests made to ListComplianceItems.
func (c *SSM) ListComplianceItemsWithContext(ctx aws.Context, input *ssm.ListComplianceItemsInput, opts ...request.Option) (*ssm.ListComplianceItemsOutput, error) {
	c.inc("ListComplianceItems")
	return c.svc.ListComplianceItemsWithContext(ctx, input, opts...)
}

// ListComplianceSummariesRequest is a passthrough to the underlying ListComplianceSummariesRequest.
// It will increment the count of requests made to ListComplianceSummaries.
func (c *SSM) ListComplianceSummariesRequest(input *ssm.ListComplianceSummariesInput) (req *request.Request, output *ssm.ListComplianceSummariesOutput) {
	c.inc("ListComplianceSummaries")
	return c.svc.ListComplianceSummariesRequest(input)
}

// ListComplianceSummaries is a passthrough to the underlying ListComplianceSummaries method.
// It will increment the count of requests made to ListComplianceSummaries.
func (c *SSM) ListComplianceSummaries(input *ssm.ListComplianceSummariesInput) (*ssm.ListComplianceSummariesOutput, error) {
	c.inc("ListComplianceSummaries")
	return c.svc.ListComplianceSummaries(input)
}

// ListComplianceSummariesWithContext is a passthrough to the underlying ListComplianceSummariesWithContext method.
// It will increment the count of requests made to ListComplianceSummaries.
func (c *SSM) ListComplianceSummariesWithContext(ctx aws.Context, input *ssm.ListComplianceSummariesInput, opts ...request.Option) (*ssm.ListComplianceSummariesOutput, error) {
	c.inc("ListComplianceSummaries")
	return c.svc.ListComplianceSummariesWithContext(ctx, input, opts...)
}

// ListDocumentVersionsRequest is a passthrough to the underlying ListDocumentVersionsRequest.
// It will increment the count of requests made to ListDocumentVersions.
func (c *SSM) ListDocumentVersionsRequest(input *ssm.ListDocumentVersionsInput) (req *request.Request, output *ssm.ListDocumentVersionsOutput) {
	c.inc("ListDocumentVersions")
	return c.svc.ListDocumentVersionsRequest(input)
}

// ListDocumentVersions is a passthrough to the underlying ListDocumentVersions method.
// It will increment the count of requests made to ListDocumentVersions.
func (c *SSM) ListDocumentVersions(input *ssm.ListDocumentVersionsInput) (*ssm.ListDocumentVersionsOutput, error) {
	c.inc("ListDocumentVersions")
	return c.svc.ListDocumentVersions(input)
}

// ListDocumentVersionsWithContext is a passthrough to the underlying ListDocumentVersionsWithContext method.
// It will increment the count of requests made to ListDocumentVersions.
func (c *SSM) ListDocumentVersionsWithContext(ctx aws.Context, input *ssm.ListDocumentVersionsInput, opts ...request.Option) (*ssm.ListDocumentVersionsOutput, error) {
	c.inc("ListDocumentVersions")
	return c.svc.ListDocumentVersionsWithContext(ctx, input, opts...)
}

// ListDocumentsRequest is a passthrough to the underlying ListDocumentsRequest.
// It will increment the count of requests made to ListDocuments.
func (c *SSM) ListDocumentsRequest(input *ssm.ListDocumentsInput) (req *request.Request, output *ssm.ListDocumentsOutput) {
	c.inc("ListDocuments")
	return c.svc.ListDocumentsRequest(input)
}

// ListDocuments is a passthrough to the underlying ListDocuments method.
// It will increment the count of requests made to ListDocuments.
func (c *SSM) ListDocuments(input *ssm.ListDocumentsInput) (*ssm.ListDocumentsOutput, error) {
	c.inc("ListDocuments")
	return c.svc.ListDocuments(input)
}

// ListDocumentsWithContext is a passthrough to the underlying ListDocumentsWithContext method.
// It will increment the count of requests made to ListDocuments.
func (c *SSM) ListDocumentsWithContext(ctx aws.Context, input *ssm.ListDocumentsInput, opts ...request.Option) (*ssm.ListDocumentsOutput, error) {
	c.inc("ListDocuments")
	return c.svc.ListDocumentsWithContext(ctx, input, opts...)
}

// ListDocumentsPages is a passthrough to the underlying ListDocumentsPages method.
// It will increment the count of requests made to ListDocuments on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListDocumentsPagesWithContext to avoid this.
func (c *SSM) ListDocumentsPages(input *ssm.ListDocumentsInput, fn func(*ssm.ListDocumentsOutput, bool) bool) error {
	wrappedFn := func(page *ssm.ListDocumentsOutput, lastPage bool) bool {
		c.inc("ListDocuments")
		return fn(page, lastPage)
	}
	return c.ListDocumentsPages(input, wrappedFn)
}

// ListDocumentsPagesWithContext is a passthrough to the underlying ListDocumentsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListDocuments when applied to the request.
func (c *SSM) ListDocumentsPagesWithContext(ctx aws.Context, input *ssm.ListDocumentsInput, fn func(*ssm.ListDocumentsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListDocuments"))
	return c.ListDocumentsPagesWithContext(ctx, input, fn, opts...)
}

// ListInventoryEntriesRequest is a passthrough to the underlying ListInventoryEntriesRequest.
// It will increment the count of requests made to ListInventoryEntries.
func (c *SSM) ListInventoryEntriesRequest(input *ssm.ListInventoryEntriesInput) (req *request.Request, output *ssm.ListInventoryEntriesOutput) {
	c.inc("ListInventoryEntries")
	return c.svc.ListInventoryEntriesRequest(input)
}

// ListInventoryEntries is a passthrough to the underlying ListInventoryEntries method.
// It will increment the count of requests made to ListInventoryEntries.
func (c *SSM) ListInventoryEntries(input *ssm.ListInventoryEntriesInput) (*ssm.ListInventoryEntriesOutput, error) {
	c.inc("ListInventoryEntries")
	return c.svc.ListInventoryEntries(input)
}

// ListInventoryEntriesWithContext is a passthrough to the underlying ListInventoryEntriesWithContext method.
// It will increment the count of requests made to ListInventoryEntries.
func (c *SSM) ListInventoryEntriesWithContext(ctx aws.Context, input *ssm.ListInventoryEntriesInput, opts ...request.Option) (*ssm.ListInventoryEntriesOutput, error) {
	c.inc("ListInventoryEntries")
	return c.svc.ListInventoryEntriesWithContext(ctx, input, opts...)
}

// ListResourceComplianceSummariesRequest is a passthrough to the underlying ListResourceComplianceSummariesRequest.
// It will increment the count of requests made to ListResourceComplianceSummaries.
func (c *SSM) ListResourceComplianceSummariesRequest(input *ssm.ListResourceComplianceSummariesInput) (req *request.Request, output *ssm.ListResourceComplianceSummariesOutput) {
	c.inc("ListResourceComplianceSummaries")
	return c.svc.ListResourceComplianceSummariesRequest(input)
}

// ListResourceComplianceSummaries is a passthrough to the underlying ListResourceComplianceSummaries method.
// It will increment the count of requests made to ListResourceComplianceSummaries.
func (c *SSM) ListResourceComplianceSummaries(input *ssm.ListResourceComplianceSummariesInput) (*ssm.ListResourceComplianceSummariesOutput, error) {
	c.inc("ListResourceComplianceSummaries")
	return c.svc.ListResourceComplianceSummaries(input)
}

// ListResourceComplianceSummariesWithContext is a passthrough to the underlying ListResourceComplianceSummariesWithContext method.
// It will increment the count of requests made to ListResourceComplianceSummaries.
func (c *SSM) ListResourceComplianceSummariesWithContext(ctx aws.Context, input *ssm.ListResourceComplianceSummariesInput, opts ...request.Option) (*ssm.ListResourceComplianceSummariesOutput, error) {
	c.inc("ListResourceComplianceSummaries")
	return c.svc.ListResourceComplianceSummariesWithContext(ctx, input, opts...)
}

// ListResourceDataSyncRequest is a passthrough to the underlying ListResourceDataSyncRequest.
// It will increment the count of requests made to ListResourceDataSync.
func (c *SSM) ListResourceDataSyncRequest(input *ssm.ListResourceDataSyncInput) (req *request.Request, output *ssm.ListResourceDataSyncOutput) {
	c.inc("ListResourceDataSync")
	return c.svc.ListResourceDataSyncRequest(input)
}

// ListResourceDataSync is a passthrough to the underlying ListResourceDataSync method.
// It will increment the count of requests made to ListResourceDataSync.
func (c *SSM) ListResourceDataSync(input *ssm.ListResourceDataSyncInput) (*ssm.ListResourceDataSyncOutput, error) {
	c.inc("ListResourceDataSync")
	return c.svc.ListResourceDataSync(input)
}

// ListResourceDataSyncWithContext is a passthrough to the underlying ListResourceDataSyncWithContext method.
// It will increment the count of requests made to ListResourceDataSync.
func (c *SSM) ListResourceDataSyncWithContext(ctx aws.Context, input *ssm.ListResourceDataSyncInput, opts ...request.Option) (*ssm.ListResourceDataSyncOutput, error) {
	c.inc("ListResourceDataSync")
	return c.svc.ListResourceDataSyncWithContext(ctx, input, opts...)
}

// ListTagsForResourceRequest is a passthrough to the underlying ListTagsForResourceRequest.
// It will increment the count of requests made to ListTagsForResource.
func (c *SSM) ListTagsForResourceRequest(input *ssm.ListTagsForResourceInput) (req *request.Request, output *ssm.ListTagsForResourceOutput) {
	c.inc("ListTagsForResource")
	return c.svc.ListTagsForResourceRequest(input)
}

// ListTagsForResource is a passthrough to the underlying ListTagsForResource method.
// It will increment the count of requests made to ListTagsForResource.
func (c *SSM) ListTagsForResource(input *ssm.ListTagsForResourceInput) (*ssm.ListTagsForResourceOutput, error) {
	c.inc("ListTagsForResource")
	return c.svc.ListTagsForResource(input)
}

// ListTagsForResourceWithContext is a passthrough to the underlying ListTagsForResourceWithContext method.
// It will increment the count of requests made to ListTagsForResource.
func (c *SSM) ListTagsForResourceWithContext(ctx aws.Context, input *ssm.ListTagsForResourceInput, opts ...request.Option) (*ssm.ListTagsForResourceOutput, error) {
	c.inc("ListTagsForResource")
	return c.svc.ListTagsForResourceWithContext(ctx, input, opts...)
}

// ModifyDocumentPermissionRequest is a passthrough to the underlying ModifyDocumentPermissionRequest.
// It will increment the count of requests made to ModifyDocumentPermission.
func (c *SSM) ModifyDocumentPermissionRequest(input *ssm.ModifyDocumentPermissionInput) (req *request.Request, output *ssm.ModifyDocumentPermissionOutput) {
	c.inc("ModifyDocumentPermission")
	return c.svc.ModifyDocumentPermissionRequest(input)
}

// ModifyDocumentPermission is a passthrough to the underlying ModifyDocumentPermission method.
// It will increment the count of requests made to ModifyDocumentPermission.
func (c *SSM) ModifyDocumentPermission(input *ssm.ModifyDocumentPermissionInput) (*ssm.ModifyDocumentPermissionOutput, error) {
	c.inc("ModifyDocumentPermission")
	return c.svc.ModifyDocumentPermission(input)
}

// ModifyDocumentPermissionWithContext is a passthrough to the underlying ModifyDocumentPermissionWithContext method.
// It will increment the count of requests made to ModifyDocumentPermission.
func (c *SSM) ModifyDocumentPermissionWithContext(ctx aws.Context, input *ssm.ModifyDocumentPermissionInput, opts ...request.Option) (*ssm.ModifyDocumentPermissionOutput, error) {
	c.inc("ModifyDocumentPermission")
	return c.svc.ModifyDocumentPermissionWithContext(ctx, input, opts...)
}

// PutComplianceItemsRequest is a passthrough to the underlying PutComplianceItemsRequest.
// It will increment the count of requests made to PutComplianceItems.
func (c *SSM) PutComplianceItemsRequest(input *ssm.PutComplianceItemsInput) (req *request.Request, output *ssm.PutComplianceItemsOutput) {
	c.inc("PutComplianceItems")
	return c.svc.PutComplianceItemsRequest(input)
}

// PutComplianceItems is a passthrough to the underlying PutComplianceItems method.
// It will increment the count of requests made to PutComplianceItems.
func (c *SSM) PutComplianceItems(input *ssm.PutComplianceItemsInput) (*ssm.PutComplianceItemsOutput, error) {
	c.inc("PutComplianceItems")
	return c.svc.PutComplianceItems(input)
}

// PutComplianceItemsWithContext is a passthrough to the underlying PutComplianceItemsWithContext method.
// It will increment the count of requests made to PutComplianceItems.
func (c *SSM) PutComplianceItemsWithContext(ctx aws.Context, input *ssm.PutComplianceItemsInput, opts ...request.Option) (*ssm.PutComplianceItemsOutput, error) {
	c.inc("PutComplianceItems")
	return c.svc.PutComplianceItemsWithContext(ctx, input, opts...)
}

// PutInventoryRequest is a passthrough to the underlying PutInventoryRequest.
// It will increment the count of requests made to PutInventory.
func (c *SSM) PutInventoryRequest(input *ssm.PutInventoryInput) (req *request.Request, output *ssm.PutInventoryOutput) {
	c.inc("PutInventory")
	return c.svc.PutInventoryRequest(input)
}

// PutInventory is a passthrough to the underlying PutInventory method.
// It will increment the count of requests made to PutInventory.
func (c *SSM) PutInventory(input *ssm.PutInventoryInput) (*ssm.PutInventoryOutput, error) {
	c.inc("PutInventory")
	return c.svc.PutInventory(input)
}

// PutInventoryWithContext is a passthrough to the underlying PutInventoryWithContext method.
// It will increment the count of requests made to PutInventory.
func (c *SSM) PutInventoryWithContext(ctx aws.Context, input *ssm.PutInventoryInput, opts ...request.Option) (*ssm.PutInventoryOutput, error) {
	c.inc("PutInventory")
	return c.svc.PutInventoryWithContext(ctx, input, opts...)
}

// PutParameterRequest is a passthrough to the underlying PutParameterRequest.
// It will increment the count of requests made to PutParameter.
func (c *SSM) PutParameterRequest(input *ssm.PutParameterInput) (req *request.Request, output *ssm.PutParameterOutput) {
	c.inc("PutParameter")
	return c.svc.PutParameterRequest(input)
}

// PutParameter is a passthrough to the underlying PutParameter method.
// It will increment the count of requests made to PutParameter.
func (c *SSM) PutParameter(input *ssm.PutParameterInput) (*ssm.PutParameterOutput, error) {
	c.inc("PutParameter")
	return c.svc.PutParameter(input)
}

// PutParameterWithContext is a passthrough to the underlying PutParameterWithContext method.
// It will increment the count of requests made to PutParameter.
func (c *SSM) PutParameterWithContext(ctx aws.Context, input *ssm.PutParameterInput, opts ...request.Option) (*ssm.PutParameterOutput, error) {
	c.inc("PutParameter")
	return c.svc.PutParameterWithContext(ctx, input, opts...)
}

// RegisterDefaultPatchBaselineRequest is a passthrough to the underlying RegisterDefaultPatchBaselineRequest.
// It will increment the count of requests made to RegisterDefaultPatchBaseline.
func (c *SSM) RegisterDefaultPatchBaselineRequest(input *ssm.RegisterDefaultPatchBaselineInput) (req *request.Request, output *ssm.RegisterDefaultPatchBaselineOutput) {
	c.inc("RegisterDefaultPatchBaseline")
	return c.svc.RegisterDefaultPatchBaselineRequest(input)
}

// RegisterDefaultPatchBaseline is a passthrough to the underlying RegisterDefaultPatchBaseline method.
// It will increment the count of requests made to RegisterDefaultPatchBaseline.
func (c *SSM) RegisterDefaultPatchBaseline(input *ssm.RegisterDefaultPatchBaselineInput) (*ssm.RegisterDefaultPatchBaselineOutput, error) {
	c.inc("RegisterDefaultPatchBaseline")
	return c.svc.RegisterDefaultPatchBaseline(input)
}

// RegisterDefaultPatchBaselineWithContext is a passthrough to the underlying RegisterDefaultPatchBaselineWithContext method.
// It will increment the count of requests made to RegisterDefaultPatchBaseline.
func (c *SSM) RegisterDefaultPatchBaselineWithContext(ctx aws.Context, input *ssm.RegisterDefaultPatchBaselineInput, opts ...request.Option) (*ssm.RegisterDefaultPatchBaselineOutput, error) {
	c.inc("RegisterDefaultPatchBaseline")
	return c.svc.RegisterDefaultPatchBaselineWithContext(ctx, input, opts...)
}

// RegisterPatchBaselineForPatchGroupRequest is a passthrough to the underlying RegisterPatchBaselineForPatchGroupRequest.
// It will increment the count of requests made to RegisterPatchBaselineForPatchGroup.
func (c *SSM) RegisterPatchBaselineForPatchGroupRequest(input *ssm.RegisterPatchBaselineForPatchGroupInput) (req *request.Request, output *ssm.RegisterPatchBaselineForPatchGroupOutput) {
	c.inc("RegisterPatchBaselineForPatchGroup")
	return c.svc.RegisterPatchBaselineForPatchGroupRequest(input)
}

// RegisterPatchBaselineForPatchGroup is a passthrough to the underlying RegisterPatchBaselineForPatchGroup method.
// It will increment the count of requests made to RegisterPatchBaselineForPatchGroup.
func (c *SSM) RegisterPatchBaselineForPatchGroup(input *ssm.RegisterPatchBaselineForPatchGroupInput) (*ssm.RegisterPatchBaselineForPatchGroupOutput, error) {
	c.inc("RegisterPatchBaselineForPatchGroup")
	return c.svc.RegisterPatchBaselineForPatchGroup(input)
}

// RegisterPatchBaselineForPatchGroupWithContext is a passthrough to the underlying RegisterPatchBaselineForPatchGroupWithContext method.
// It will increment the count of requests made to RegisterPatchBaselineForPatchGroup.
func (c *SSM) RegisterPatchBaselineForPatchGroupWithContext(ctx aws.Context, input *ssm.RegisterPatchBaselineForPatchGroupInput, opts ...request.Option) (*ssm.RegisterPatchBaselineForPatchGroupOutput, error) {
	c.inc("RegisterPatchBaselineForPatchGroup")
	return c.svc.RegisterPatchBaselineForPatchGroupWithContext(ctx, input, opts...)
}

// RegisterTargetWithMaintenanceWindowRequest is a passthrough to the underlying RegisterTargetWithMaintenanceWindowRequest.
// It will increment the count of requests made to RegisterTargetWithMaintenanceWindow.
func (c *SSM) RegisterTargetWithMaintenanceWindowRequest(input *ssm.RegisterTargetWithMaintenanceWindowInput) (req *request.Request, output *ssm.RegisterTargetWithMaintenanceWindowOutput) {
	c.inc("RegisterTargetWithMaintenanceWindow")
	return c.svc.RegisterTargetWithMaintenanceWindowRequest(input)
}

// RegisterTargetWithMaintenanceWindow is a passthrough to the underlying RegisterTargetWithMaintenanceWindow method.
// It will increment the count of requests made to RegisterTargetWithMaintenanceWindow.
func (c *SSM) RegisterTargetWithMaintenanceWindow(input *ssm.RegisterTargetWithMaintenanceWindowInput) (*ssm.RegisterTargetWithMaintenanceWindowOutput, error) {
	c.inc("RegisterTargetWithMaintenanceWindow")
	return c.svc.RegisterTargetWithMaintenanceWindow(input)
}

// RegisterTargetWithMaintenanceWindowWithContext is a passthrough to the underlying RegisterTargetWithMaintenanceWindowWithContext method.
// It will increment the count of requests made to RegisterTargetWithMaintenanceWindow.
func (c *SSM) RegisterTargetWithMaintenanceWindowWithContext(ctx aws.Context, input *ssm.RegisterTargetWithMaintenanceWindowInput, opts ...request.Option) (*ssm.RegisterTargetWithMaintenanceWindowOutput, error) {
	c.inc("RegisterTargetWithMaintenanceWindow")
	return c.svc.RegisterTargetWithMaintenanceWindowWithContext(ctx, input, opts...)
}

// RegisterTaskWithMaintenanceWindowRequest is a passthrough to the underlying RegisterTaskWithMaintenanceWindowRequest.
// It will increment the count of requests made to RegisterTaskWithMaintenanceWindow.
func (c *SSM) RegisterTaskWithMaintenanceWindowRequest(input *ssm.RegisterTaskWithMaintenanceWindowInput) (req *request.Request, output *ssm.RegisterTaskWithMaintenanceWindowOutput) {
	c.inc("RegisterTaskWithMaintenanceWindow")
	return c.svc.RegisterTaskWithMaintenanceWindowRequest(input)
}

// RegisterTaskWithMaintenanceWindow is a passthrough to the underlying RegisterTaskWithMaintenanceWindow method.
// It will increment the count of requests made to RegisterTaskWithMaintenanceWindow.
func (c *SSM) RegisterTaskWithMaintenanceWindow(input *ssm.RegisterTaskWithMaintenanceWindowInput) (*ssm.RegisterTaskWithMaintenanceWindowOutput, error) {
	c.inc("RegisterTaskWithMaintenanceWindow")
	return c.svc.RegisterTaskWithMaintenanceWindow(input)
}

// RegisterTaskWithMaintenanceWindowWithContext is a passthrough to the underlying RegisterTaskWithMaintenanceWindowWithContext method.
// It will increment the count of requests made to RegisterTaskWithMaintenanceWindow.
func (c *SSM) RegisterTaskWithMaintenanceWindowWithContext(ctx aws.Context, input *ssm.RegisterTaskWithMaintenanceWindowInput, opts ...request.Option) (*ssm.RegisterTaskWithMaintenanceWindowOutput, error) {
	c.inc("RegisterTaskWithMaintenanceWindow")
	return c.svc.RegisterTaskWithMaintenanceWindowWithContext(ctx, input, opts...)
}

// RemoveTagsFromResourceRequest is a passthrough to the underlying RemoveTagsFromResourceRequest.
// It will increment the count of requests made to RemoveTagsFromResource.
func (c *SSM) RemoveTagsFromResourceRequest(input *ssm.RemoveTagsFromResourceInput) (req *request.Request, output *ssm.RemoveTagsFromResourceOutput) {
	c.inc("RemoveTagsFromResource")
	return c.svc.RemoveTagsFromResourceRequest(input)
}

// RemoveTagsFromResource is a passthrough to the underlying RemoveTagsFromResource method.
// It will increment the count of requests made to RemoveTagsFromResource.
func (c *SSM) RemoveTagsFromResource(input *ssm.RemoveTagsFromResourceInput) (*ssm.RemoveTagsFromResourceOutput, error) {
	c.inc("RemoveTagsFromResource")
	return c.svc.RemoveTagsFromResource(input)
}

// RemoveTagsFromResourceWithContext is a passthrough to the underlying RemoveTagsFromResourceWithContext method.
// It will increment the count of requests made to RemoveTagsFromResource.
func (c *SSM) RemoveTagsFromResourceWithContext(ctx aws.Context, input *ssm.RemoveTagsFromResourceInput, opts ...request.Option) (*ssm.RemoveTagsFromResourceOutput, error) {
	c.inc("RemoveTagsFromResource")
	return c.svc.RemoveTagsFromResourceWithContext(ctx, input, opts...)
}

// SendAutomationSignalRequest is a passthrough to the underlying SendAutomationSignalRequest.
// It will increment the count of requests made to SendAutomationSignal.
func (c *SSM) SendAutomationSignalRequest(input *ssm.SendAutomationSignalInput) (req *request.Request, output *ssm.SendAutomationSignalOutput) {
	c.inc("SendAutomationSignal")
	return c.svc.SendAutomationSignalRequest(input)
}

// SendAutomationSignal is a passthrough to the underlying SendAutomationSignal method.
// It will increment the count of requests made to SendAutomationSignal.
func (c *SSM) SendAutomationSignal(input *ssm.SendAutomationSignalInput) (*ssm.SendAutomationSignalOutput, error) {
	c.inc("SendAutomationSignal")
	return c.svc.SendAutomationSignal(input)
}

// SendAutomationSignalWithContext is a passthrough to the underlying SendAutomationSignalWithContext method.
// It will increment the count of requests made to SendAutomationSignal.
func (c *SSM) SendAutomationSignalWithContext(ctx aws.Context, input *ssm.SendAutomationSignalInput, opts ...request.Option) (*ssm.SendAutomationSignalOutput, error) {
	c.inc("SendAutomationSignal")
	return c.svc.SendAutomationSignalWithContext(ctx, input, opts...)
}

// SendCommandRequest is a passthrough to the underlying SendCommandRequest.
// It will increment the count of requests made to SendCommand.
func (c *SSM) SendCommandRequest(input *ssm.SendCommandInput) (req *request.Request, output *ssm.SendCommandOutput) {
	c.inc("SendCommand")
	return c.svc.SendCommandRequest(input)
}

// SendCommand is a passthrough to the underlying SendCommand method.
// It will increment the count of requests made to SendCommand.
func (c *SSM) SendCommand(input *ssm.SendCommandInput) (*ssm.SendCommandOutput, error) {
	c.inc("SendCommand")
	return c.svc.SendCommand(input)
}

// SendCommandWithContext is a passthrough to the underlying SendCommandWithContext method.
// It will increment the count of requests made to SendCommand.
func (c *SSM) SendCommandWithContext(ctx aws.Context, input *ssm.SendCommandInput, opts ...request.Option) (*ssm.SendCommandOutput, error) {
	c.inc("SendCommand")
	return c.svc.SendCommandWithContext(ctx, input, opts...)
}

// StartAutomationExecutionRequest is a passthrough to the underlying StartAutomationExecutionRequest.
// It will increment the count of requests made to StartAutomationExecution.
func (c *SSM) StartAutomationExecutionRequest(input *ssm.StartAutomationExecutionInput) (req *request.Request, output *ssm.StartAutomationExecutionOutput) {
	c.inc("StartAutomationExecution")
	return c.svc.StartAutomationExecutionRequest(input)
}

// StartAutomationExecution is a passthrough to the underlying StartAutomationExecution method.
// It will increment the count of requests made to StartAutomationExecution.
func (c *SSM) StartAutomationExecution(input *ssm.StartAutomationExecutionInput) (*ssm.StartAutomationExecutionOutput, error) {
	c.inc("StartAutomationExecution")
	return c.svc.StartAutomationExecution(input)
}

// StartAutomationExecutionWithContext is a passthrough to the underlying StartAutomationExecutionWithContext method.
// It will increment the count of requests made to StartAutomationExecution.
func (c *SSM) StartAutomationExecutionWithContext(ctx aws.Context, input *ssm.StartAutomationExecutionInput, opts ...request.Option) (*ssm.StartAutomationExecutionOutput, error) {
	c.inc("StartAutomationExecution")
	return c.svc.StartAutomationExecutionWithContext(ctx, input, opts...)
}

// StopAutomationExecutionRequest is a passthrough to the underlying StopAutomationExecutionRequest.
// It will increment the count of requests made to StopAutomationExecution.
func (c *SSM) StopAutomationExecutionRequest(input *ssm.StopAutomationExecutionInput) (req *request.Request, output *ssm.StopAutomationExecutionOutput) {
	c.inc("StopAutomationExecution")
	return c.svc.StopAutomationExecutionRequest(input)
}

// StopAutomationExecution is a passthrough to the underlying StopAutomationExecution method.
// It will increment the count of requests made to StopAutomationExecution.
func (c *SSM) StopAutomationExecution(input *ssm.StopAutomationExecutionInput) (*ssm.StopAutomationExecutionOutput, error) {
	c.inc("StopAutomationExecution")
	return c.svc.StopAutomationExecution(input)
}

// StopAutomationExecutionWithContext is a passthrough to the underlying StopAutomationExecutionWithContext method.
// It will increment the count of requests made to StopAutomationExecution.
func (c *SSM) StopAutomationExecutionWithContext(ctx aws.Context, input *ssm.StopAutomationExecutionInput, opts ...request.Option) (*ssm.StopAutomationExecutionOutput, error) {
	c.inc("StopAutomationExecution")
	return c.svc.StopAutomationExecutionWithContext(ctx, input, opts...)
}

// UpdateAssociationRequest is a passthrough to the underlying UpdateAssociationRequest.
// It will increment the count of requests made to UpdateAssociation.
func (c *SSM) UpdateAssociationRequest(input *ssm.UpdateAssociationInput) (req *request.Request, output *ssm.UpdateAssociationOutput) {
	c.inc("UpdateAssociation")
	return c.svc.UpdateAssociationRequest(input)
}

// UpdateAssociation is a passthrough to the underlying UpdateAssociation method.
// It will increment the count of requests made to UpdateAssociation.
func (c *SSM) UpdateAssociation(input *ssm.UpdateAssociationInput) (*ssm.UpdateAssociationOutput, error) {
	c.inc("UpdateAssociation")
	return c.svc.UpdateAssociation(input)
}

// UpdateAssociationWithContext is a passthrough to the underlying UpdateAssociationWithContext method.
// It will increment the count of requests made to UpdateAssociation.
func (c *SSM) UpdateAssociationWithContext(ctx aws.Context, input *ssm.UpdateAssociationInput, opts ...request.Option) (*ssm.UpdateAssociationOutput, error) {
	c.inc("UpdateAssociation")
	return c.svc.UpdateAssociationWithContext(ctx, input, opts...)
}

// UpdateAssociationStatusRequest is a passthrough to the underlying UpdateAssociationStatusRequest.
// It will increment the count of requests made to UpdateAssociationStatus.
func (c *SSM) UpdateAssociationStatusRequest(input *ssm.UpdateAssociationStatusInput) (req *request.Request, output *ssm.UpdateAssociationStatusOutput) {
	c.inc("UpdateAssociationStatus")
	return c.svc.UpdateAssociationStatusRequest(input)
}

// UpdateAssociationStatus is a passthrough to the underlying UpdateAssociationStatus method.
// It will increment the count of requests made to UpdateAssociationStatus.
func (c *SSM) UpdateAssociationStatus(input *ssm.UpdateAssociationStatusInput) (*ssm.UpdateAssociationStatusOutput, error) {
	c.inc("UpdateAssociationStatus")
	return c.svc.UpdateAssociationStatus(input)
}

// UpdateAssociationStatusWithContext is a passthrough to the underlying UpdateAssociationStatusWithContext method.
// It will increment the count of requests made to UpdateAssociationStatus.
func (c *SSM) UpdateAssociationStatusWithContext(ctx aws.Context, input *ssm.UpdateAssociationStatusInput, opts ...request.Option) (*ssm.UpdateAssociationStatusOutput, error) {
	c.inc("UpdateAssociationStatus")
	return c.svc.UpdateAssociationStatusWithContext(ctx, input, opts...)
}

// UpdateDocumentRequest is a passthrough to the underlying UpdateDocumentRequest.
// It will increment the count of requests made to UpdateDocument.
func (c *SSM) UpdateDocumentRequest(input *ssm.UpdateDocumentInput) (req *request.Request, output *ssm.UpdateDocumentOutput) {
	c.inc("UpdateDocument")
	return c.svc.UpdateDocumentRequest(input)
}

// UpdateDocument is a passthrough to the underlying UpdateDocument method.
// It will increment the count of requests made to UpdateDocument.
func (c *SSM) UpdateDocument(input *ssm.UpdateDocumentInput) (*ssm.UpdateDocumentOutput, error) {
	c.inc("UpdateDocument")
	return c.svc.UpdateDocument(input)
}

// UpdateDocumentWithContext is a passthrough to the underlying UpdateDocumentWithContext method.
// It will increment the count of requests made to UpdateDocument.
func (c *SSM) UpdateDocumentWithContext(ctx aws.Context, input *ssm.UpdateDocumentInput, opts ...request.Option) (*ssm.UpdateDocumentOutput, error) {
	c.inc("UpdateDocument")
	return c.svc.UpdateDocumentWithContext(ctx, input, opts...)
}

// UpdateDocumentDefaultVersionRequest is a passthrough to the underlying UpdateDocumentDefaultVersionRequest.
// It will increment the count of requests made to UpdateDocumentDefaultVersion.
func (c *SSM) UpdateDocumentDefaultVersionRequest(input *ssm.UpdateDocumentDefaultVersionInput) (req *request.Request, output *ssm.UpdateDocumentDefaultVersionOutput) {
	c.inc("UpdateDocumentDefaultVersion")
	return c.svc.UpdateDocumentDefaultVersionRequest(input)
}

// UpdateDocumentDefaultVersion is a passthrough to the underlying UpdateDocumentDefaultVersion method.
// It will increment the count of requests made to UpdateDocumentDefaultVersion.
func (c *SSM) UpdateDocumentDefaultVersion(input *ssm.UpdateDocumentDefaultVersionInput) (*ssm.UpdateDocumentDefaultVersionOutput, error) {
	c.inc("UpdateDocumentDefaultVersion")
	return c.svc.UpdateDocumentDefaultVersion(input)
}

// UpdateDocumentDefaultVersionWithContext is a passthrough to the underlying UpdateDocumentDefaultVersionWithContext method.
// It will increment the count of requests made to UpdateDocumentDefaultVersion.
func (c *SSM) UpdateDocumentDefaultVersionWithContext(ctx aws.Context, input *ssm.UpdateDocumentDefaultVersionInput, opts ...request.Option) (*ssm.UpdateDocumentDefaultVersionOutput, error) {
	c.inc("UpdateDocumentDefaultVersion")
	return c.svc.UpdateDocumentDefaultVersionWithContext(ctx, input, opts...)
}

// UpdateMaintenanceWindowRequest is a passthrough to the underlying UpdateMaintenanceWindowRequest.
// It will increment the count of requests made to UpdateMaintenanceWindow.
func (c *SSM) UpdateMaintenanceWindowRequest(input *ssm.UpdateMaintenanceWindowInput) (req *request.Request, output *ssm.UpdateMaintenanceWindowOutput) {
	c.inc("UpdateMaintenanceWindow")
	return c.svc.UpdateMaintenanceWindowRequest(input)
}

// UpdateMaintenanceWindow is a passthrough to the underlying UpdateMaintenanceWindow method.
// It will increment the count of requests made to UpdateMaintenanceWindow.
func (c *SSM) UpdateMaintenanceWindow(input *ssm.UpdateMaintenanceWindowInput) (*ssm.UpdateMaintenanceWindowOutput, error) {
	c.inc("UpdateMaintenanceWindow")
	return c.svc.UpdateMaintenanceWindow(input)
}

// UpdateMaintenanceWindowWithContext is a passthrough to the underlying UpdateMaintenanceWindowWithContext method.
// It will increment the count of requests made to UpdateMaintenanceWindow.
func (c *SSM) UpdateMaintenanceWindowWithContext(ctx aws.Context, input *ssm.UpdateMaintenanceWindowInput, opts ...request.Option) (*ssm.UpdateMaintenanceWindowOutput, error) {
	c.inc("UpdateMaintenanceWindow")
	return c.svc.UpdateMaintenanceWindowWithContext(ctx, input, opts...)
}

// UpdateMaintenanceWindowTargetRequest is a passthrough to the underlying UpdateMaintenanceWindowTargetRequest.
// It will increment the count of requests made to UpdateMaintenanceWindowTarget.
func (c *SSM) UpdateMaintenanceWindowTargetRequest(input *ssm.UpdateMaintenanceWindowTargetInput) (req *request.Request, output *ssm.UpdateMaintenanceWindowTargetOutput) {
	c.inc("UpdateMaintenanceWindowTarget")
	return c.svc.UpdateMaintenanceWindowTargetRequest(input)
}

// UpdateMaintenanceWindowTarget is a passthrough to the underlying UpdateMaintenanceWindowTarget method.
// It will increment the count of requests made to UpdateMaintenanceWindowTarget.
func (c *SSM) UpdateMaintenanceWindowTarget(input *ssm.UpdateMaintenanceWindowTargetInput) (*ssm.UpdateMaintenanceWindowTargetOutput, error) {
	c.inc("UpdateMaintenanceWindowTarget")
	return c.svc.UpdateMaintenanceWindowTarget(input)
}

// UpdateMaintenanceWindowTargetWithContext is a passthrough to the underlying UpdateMaintenanceWindowTargetWithContext method.
// It will increment the count of requests made to UpdateMaintenanceWindowTarget.
func (c *SSM) UpdateMaintenanceWindowTargetWithContext(ctx aws.Context, input *ssm.UpdateMaintenanceWindowTargetInput, opts ...request.Option) (*ssm.UpdateMaintenanceWindowTargetOutput, error) {
	c.inc("UpdateMaintenanceWindowTarget")
	return c.svc.UpdateMaintenanceWindowTargetWithContext(ctx, input, opts...)
}

// UpdateMaintenanceWindowTaskRequest is a passthrough to the underlying UpdateMaintenanceWindowTaskRequest.
// It will increment the count of requests made to UpdateMaintenanceWindowTask.
func (c *SSM) UpdateMaintenanceWindowTaskRequest(input *ssm.UpdateMaintenanceWindowTaskInput) (req *request.Request, output *ssm.UpdateMaintenanceWindowTaskOutput) {
	c.inc("UpdateMaintenanceWindowTask")
	return c.svc.UpdateMaintenanceWindowTaskRequest(input)
}

// UpdateMaintenanceWindowTask is a passthrough to the underlying UpdateMaintenanceWindowTask method.
// It will increment the count of requests made to UpdateMaintenanceWindowTask.
func (c *SSM) UpdateMaintenanceWindowTask(input *ssm.UpdateMaintenanceWindowTaskInput) (*ssm.UpdateMaintenanceWindowTaskOutput, error) {
	c.inc("UpdateMaintenanceWindowTask")
	return c.svc.UpdateMaintenanceWindowTask(input)
}

// UpdateMaintenanceWindowTaskWithContext is a passthrough to the underlying UpdateMaintenanceWindowTaskWithContext method.
// It will increment the count of requests made to UpdateMaintenanceWindowTask.
func (c *SSM) UpdateMaintenanceWindowTaskWithContext(ctx aws.Context, input *ssm.UpdateMaintenanceWindowTaskInput, opts ...request.Option) (*ssm.UpdateMaintenanceWindowTaskOutput, error) {
	c.inc("UpdateMaintenanceWindowTask")
	return c.svc.UpdateMaintenanceWindowTaskWithContext(ctx, input, opts...)
}

// UpdateManagedInstanceRoleRequest is a passthrough to the underlying UpdateManagedInstanceRoleRequest.
// It will increment the count of requests made to UpdateManagedInstanceRole.
func (c *SSM) UpdateManagedInstanceRoleRequest(input *ssm.UpdateManagedInstanceRoleInput) (req *request.Request, output *ssm.UpdateManagedInstanceRoleOutput) {
	c.inc("UpdateManagedInstanceRole")
	return c.svc.UpdateManagedInstanceRoleRequest(input)
}

// UpdateManagedInstanceRole is a passthrough to the underlying UpdateManagedInstanceRole method.
// It will increment the count of requests made to UpdateManagedInstanceRole.
func (c *SSM) UpdateManagedInstanceRole(input *ssm.UpdateManagedInstanceRoleInput) (*ssm.UpdateManagedInstanceRoleOutput, error) {
	c.inc("UpdateManagedInstanceRole")
	return c.svc.UpdateManagedInstanceRole(input)
}

// UpdateManagedInstanceRoleWithContext is a passthrough to the underlying UpdateManagedInstanceRoleWithContext method.
// It will increment the count of requests made to UpdateManagedInstanceRole.
func (c *SSM) UpdateManagedInstanceRoleWithContext(ctx aws.Context, input *ssm.UpdateManagedInstanceRoleInput, opts ...request.Option) (*ssm.UpdateManagedInstanceRoleOutput, error) {
	c.inc("UpdateManagedInstanceRole")
	return c.svc.UpdateManagedInstanceRoleWithContext(ctx, input, opts...)
}

// UpdatePatchBaselineRequest is a passthrough to the underlying UpdatePatchBaselineRequest.
// It will increment the count of requests made to UpdatePatchBaseline.
func (c *SSM) UpdatePatchBaselineRequest(input *ssm.UpdatePatchBaselineInput) (req *request.Request, output *ssm.UpdatePatchBaselineOutput) {
	c.inc("UpdatePatchBaseline")
	return c.svc.UpdatePatchBaselineRequest(input)
}

// UpdatePatchBaseline is a passthrough to the underlying UpdatePatchBaseline method.
// It will increment the count of requests made to UpdatePatchBaseline.
func (c *SSM) UpdatePatchBaseline(input *ssm.UpdatePatchBaselineInput) (*ssm.UpdatePatchBaselineOutput, error) {
	c.inc("UpdatePatchBaseline")
	return c.svc.UpdatePatchBaseline(input)
}

// UpdatePatchBaselineWithContext is a passthrough to the underlying UpdatePatchBaselineWithContext method.
// It will increment the count of requests made to UpdatePatchBaseline.
func (c *SSM) UpdatePatchBaselineWithContext(ctx aws.Context, input *ssm.UpdatePatchBaselineInput, opts ...request.Option) (*ssm.UpdatePatchBaselineOutput, error) {
	c.inc("UpdatePatchBaseline")
	return c.svc.UpdatePatchBaselineWithContext(ctx, input, opts...)
}
