// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package iotcounter

import (
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/iot"
)

// AcceptCertificateTransferRequest is a passthrough to the underlying AcceptCertificateTransferRequest.
// It will increment the count of requests made to AcceptCertificateTransfer.
func (c *IoT) AcceptCertificateTransferRequest(input *iot.AcceptCertificateTransferInput) (req *request.Request, output *iot.AcceptCertificateTransferOutput) {
	c.inc("AcceptCertificateTransfer")
	return c.svc.AcceptCertificateTransferRequest(input)
}

// AcceptCertificateTransfer is a passthrough to the underlying AcceptCertificateTransfer method.
// It will increment the count of requests made to AcceptCertificateTransfer.
func (c *IoT) AcceptCertificateTransfer(input *iot.AcceptCertificateTransferInput) (*iot.AcceptCertificateTransferOutput, error) {
	c.inc("AcceptCertificateTransfer")
	return c.svc.AcceptCertificateTransfer(input)
}

// AcceptCertificateTransferWithContext is a passthrough to the underlying AcceptCertificateTransferWithContext method.
// It will increment the count of requests made to AcceptCertificateTransfer.
func (c *IoT) AcceptCertificateTransferWithContext(ctx aws.Context, input *iot.AcceptCertificateTransferInput, opts ...request.Option) (*iot.AcceptCertificateTransferOutput, error) {
	c.inc("AcceptCertificateTransfer")
	return c.svc.AcceptCertificateTransferWithContext(ctx, input, opts...)
}

// AttachPrincipalPolicyRequest is a passthrough to the underlying AttachPrincipalPolicyRequest.
// It will increment the count of requests made to AttachPrincipalPolicy.
func (c *IoT) AttachPrincipalPolicyRequest(input *iot.AttachPrincipalPolicyInput) (req *request.Request, output *iot.AttachPrincipalPolicyOutput) {
	c.inc("AttachPrincipalPolicy")
	return c.svc.AttachPrincipalPolicyRequest(input)
}

// AttachPrincipalPolicy is a passthrough to the underlying AttachPrincipalPolicy method.
// It will increment the count of requests made to AttachPrincipalPolicy.
func (c *IoT) AttachPrincipalPolicy(input *iot.AttachPrincipalPolicyInput) (*iot.AttachPrincipalPolicyOutput, error) {
	c.inc("AttachPrincipalPolicy")
	return c.svc.AttachPrincipalPolicy(input)
}

// AttachPrincipalPolicyWithContext is a passthrough to the underlying AttachPrincipalPolicyWithContext method.
// It will increment the count of requests made to AttachPrincipalPolicy.
func (c *IoT) AttachPrincipalPolicyWithContext(ctx aws.Context, input *iot.AttachPrincipalPolicyInput, opts ...request.Option) (*iot.AttachPrincipalPolicyOutput, error) {
	c.inc("AttachPrincipalPolicy")
	return c.svc.AttachPrincipalPolicyWithContext(ctx, input, opts...)
}

// AttachThingPrincipalRequest is a passthrough to the underlying AttachThingPrincipalRequest.
// It will increment the count of requests made to AttachThingPrincipal.
func (c *IoT) AttachThingPrincipalRequest(input *iot.AttachThingPrincipalInput) (req *request.Request, output *iot.AttachThingPrincipalOutput) {
	c.inc("AttachThingPrincipal")
	return c.svc.AttachThingPrincipalRequest(input)
}

// AttachThingPrincipal is a passthrough to the underlying AttachThingPrincipal method.
// It will increment the count of requests made to AttachThingPrincipal.
func (c *IoT) AttachThingPrincipal(input *iot.AttachThingPrincipalInput) (*iot.AttachThingPrincipalOutput, error) {
	c.inc("AttachThingPrincipal")
	return c.svc.AttachThingPrincipal(input)
}

// AttachThingPrincipalWithContext is a passthrough to the underlying AttachThingPrincipalWithContext method.
// It will increment the count of requests made to AttachThingPrincipal.
func (c *IoT) AttachThingPrincipalWithContext(ctx aws.Context, input *iot.AttachThingPrincipalInput, opts ...request.Option) (*iot.AttachThingPrincipalOutput, error) {
	c.inc("AttachThingPrincipal")
	return c.svc.AttachThingPrincipalWithContext(ctx, input, opts...)
}

// CancelCertificateTransferRequest is a passthrough to the underlying CancelCertificateTransferRequest.
// It will increment the count of requests made to CancelCertificateTransfer.
func (c *IoT) CancelCertificateTransferRequest(input *iot.CancelCertificateTransferInput) (req *request.Request, output *iot.CancelCertificateTransferOutput) {
	c.inc("CancelCertificateTransfer")
	return c.svc.CancelCertificateTransferRequest(input)
}

// CancelCertificateTransfer is a passthrough to the underlying CancelCertificateTransfer method.
// It will increment the count of requests made to CancelCertificateTransfer.
func (c *IoT) CancelCertificateTransfer(input *iot.CancelCertificateTransferInput) (*iot.CancelCertificateTransferOutput, error) {
	c.inc("CancelCertificateTransfer")
	return c.svc.CancelCertificateTransfer(input)
}

// CancelCertificateTransferWithContext is a passthrough to the underlying CancelCertificateTransferWithContext method.
// It will increment the count of requests made to CancelCertificateTransfer.
func (c *IoT) CancelCertificateTransferWithContext(ctx aws.Context, input *iot.CancelCertificateTransferInput, opts ...request.Option) (*iot.CancelCertificateTransferOutput, error) {
	c.inc("CancelCertificateTransfer")
	return c.svc.CancelCertificateTransferWithContext(ctx, input, opts...)
}

// CreateCertificateFromCsrRequest is a passthrough to the underlying CreateCertificateFromCsrRequest.
// It will increment the count of requests made to CreateCertificateFromCsr.
func (c *IoT) CreateCertificateFromCsrRequest(input *iot.CreateCertificateFromCsrInput) (req *request.Request, output *iot.CreateCertificateFromCsrOutput) {
	c.inc("CreateCertificateFromCsr")
	return c.svc.CreateCertificateFromCsrRequest(input)
}

// CreateCertificateFromCsr is a passthrough to the underlying CreateCertificateFromCsr method.
// It will increment the count of requests made to CreateCertificateFromCsr.
func (c *IoT) CreateCertificateFromCsr(input *iot.CreateCertificateFromCsrInput) (*iot.CreateCertificateFromCsrOutput, error) {
	c.inc("CreateCertificateFromCsr")
	return c.svc.CreateCertificateFromCsr(input)
}

// CreateCertificateFromCsrWithContext is a passthrough to the underlying CreateCertificateFromCsrWithContext method.
// It will increment the count of requests made to CreateCertificateFromCsr.
func (c *IoT) CreateCertificateFromCsrWithContext(ctx aws.Context, input *iot.CreateCertificateFromCsrInput, opts ...request.Option) (*iot.CreateCertificateFromCsrOutput, error) {
	c.inc("CreateCertificateFromCsr")
	return c.svc.CreateCertificateFromCsrWithContext(ctx, input, opts...)
}

// CreateKeysAndCertificateRequest is a passthrough to the underlying CreateKeysAndCertificateRequest.
// It will increment the count of requests made to CreateKeysAndCertificate.
func (c *IoT) CreateKeysAndCertificateRequest(input *iot.CreateKeysAndCertificateInput) (req *request.Request, output *iot.CreateKeysAndCertificateOutput) {
	c.inc("CreateKeysAndCertificate")
	return c.svc.CreateKeysAndCertificateRequest(input)
}

// CreateKeysAndCertificate is a passthrough to the underlying CreateKeysAndCertificate method.
// It will increment the count of requests made to CreateKeysAndCertificate.
func (c *IoT) CreateKeysAndCertificate(input *iot.CreateKeysAndCertificateInput) (*iot.CreateKeysAndCertificateOutput, error) {
	c.inc("CreateKeysAndCertificate")
	return c.svc.CreateKeysAndCertificate(input)
}

// CreateKeysAndCertificateWithContext is a passthrough to the underlying CreateKeysAndCertificateWithContext method.
// It will increment the count of requests made to CreateKeysAndCertificate.
func (c *IoT) CreateKeysAndCertificateWithContext(ctx aws.Context, input *iot.CreateKeysAndCertificateInput, opts ...request.Option) (*iot.CreateKeysAndCertificateOutput, error) {
	c.inc("CreateKeysAndCertificate")
	return c.svc.CreateKeysAndCertificateWithContext(ctx, input, opts...)
}

// CreatePolicyRequest is a passthrough to the underlying CreatePolicyRequest.
// It will increment the count of requests made to CreatePolicy.
func (c *IoT) CreatePolicyRequest(input *iot.CreatePolicyInput) (req *request.Request, output *iot.CreatePolicyOutput) {
	c.inc("CreatePolicy")
	return c.svc.CreatePolicyRequest(input)
}

// CreatePolicy is a passthrough to the underlying CreatePolicy method.
// It will increment the count of requests made to CreatePolicy.
func (c *IoT) CreatePolicy(input *iot.CreatePolicyInput) (*iot.CreatePolicyOutput, error) {
	c.inc("CreatePolicy")
	return c.svc.CreatePolicy(input)
}

// CreatePolicyWithContext is a passthrough to the underlying CreatePolicyWithContext method.
// It will increment the count of requests made to CreatePolicy.
func (c *IoT) CreatePolicyWithContext(ctx aws.Context, input *iot.CreatePolicyInput, opts ...request.Option) (*iot.CreatePolicyOutput, error) {
	c.inc("CreatePolicy")
	return c.svc.CreatePolicyWithContext(ctx, input, opts...)
}

// CreatePolicyVersionRequest is a passthrough to the underlying CreatePolicyVersionRequest.
// It will increment the count of requests made to CreatePolicyVersion.
func (c *IoT) CreatePolicyVersionRequest(input *iot.CreatePolicyVersionInput) (req *request.Request, output *iot.CreatePolicyVersionOutput) {
	c.inc("CreatePolicyVersion")
	return c.svc.CreatePolicyVersionRequest(input)
}

// CreatePolicyVersion is a passthrough to the underlying CreatePolicyVersion method.
// It will increment the count of requests made to CreatePolicyVersion.
func (c *IoT) CreatePolicyVersion(input *iot.CreatePolicyVersionInput) (*iot.CreatePolicyVersionOutput, error) {
	c.inc("CreatePolicyVersion")
	return c.svc.CreatePolicyVersion(input)
}

// CreatePolicyVersionWithContext is a passthrough to the underlying CreatePolicyVersionWithContext method.
// It will increment the count of requests made to CreatePolicyVersion.
func (c *IoT) CreatePolicyVersionWithContext(ctx aws.Context, input *iot.CreatePolicyVersionInput, opts ...request.Option) (*iot.CreatePolicyVersionOutput, error) {
	c.inc("CreatePolicyVersion")
	return c.svc.CreatePolicyVersionWithContext(ctx, input, opts...)
}

// CreateThingRequest is a passthrough to the underlying CreateThingRequest.
// It will increment the count of requests made to CreateThing.
func (c *IoT) CreateThingRequest(input *iot.CreateThingInput) (req *request.Request, output *iot.CreateThingOutput) {
	c.inc("CreateThing")
	return c.svc.CreateThingRequest(input)
}

// CreateThing is a passthrough to the underlying CreateThing method.
// It will increment the count of requests made to CreateThing.
func (c *IoT) CreateThing(input *iot.CreateThingInput) (*iot.CreateThingOutput, error) {
	c.inc("CreateThing")
	return c.svc.CreateThing(input)
}

// CreateThingWithContext is a passthrough to the underlying CreateThingWithContext method.
// It will increment the count of requests made to CreateThing.
func (c *IoT) CreateThingWithContext(ctx aws.Context, input *iot.CreateThingInput, opts ...request.Option) (*iot.CreateThingOutput, error) {
	c.inc("CreateThing")
	return c.svc.CreateThingWithContext(ctx, input, opts...)
}

// CreateThingTypeRequest is a passthrough to the underlying CreateThingTypeRequest.
// It will increment the count of requests made to CreateThingType.
func (c *IoT) CreateThingTypeRequest(input *iot.CreateThingTypeInput) (req *request.Request, output *iot.CreateThingTypeOutput) {
	c.inc("CreateThingType")
	return c.svc.CreateThingTypeRequest(input)
}

// CreateThingType is a passthrough to the underlying CreateThingType method.
// It will increment the count of requests made to CreateThingType.
func (c *IoT) CreateThingType(input *iot.CreateThingTypeInput) (*iot.CreateThingTypeOutput, error) {
	c.inc("CreateThingType")
	return c.svc.CreateThingType(input)
}

// CreateThingTypeWithContext is a passthrough to the underlying CreateThingTypeWithContext method.
// It will increment the count of requests made to CreateThingType.
func (c *IoT) CreateThingTypeWithContext(ctx aws.Context, input *iot.CreateThingTypeInput, opts ...request.Option) (*iot.CreateThingTypeOutput, error) {
	c.inc("CreateThingType")
	return c.svc.CreateThingTypeWithContext(ctx, input, opts...)
}

// CreateTopicRuleRequest is a passthrough to the underlying CreateTopicRuleRequest.
// It will increment the count of requests made to CreateTopicRule.
func (c *IoT) CreateTopicRuleRequest(input *iot.CreateTopicRuleInput) (req *request.Request, output *iot.CreateTopicRuleOutput) {
	c.inc("CreateTopicRule")
	return c.svc.CreateTopicRuleRequest(input)
}

// CreateTopicRule is a passthrough to the underlying CreateTopicRule method.
// It will increment the count of requests made to CreateTopicRule.
func (c *IoT) CreateTopicRule(input *iot.CreateTopicRuleInput) (*iot.CreateTopicRuleOutput, error) {
	c.inc("CreateTopicRule")
	return c.svc.CreateTopicRule(input)
}

// CreateTopicRuleWithContext is a passthrough to the underlying CreateTopicRuleWithContext method.
// It will increment the count of requests made to CreateTopicRule.
func (c *IoT) CreateTopicRuleWithContext(ctx aws.Context, input *iot.CreateTopicRuleInput, opts ...request.Option) (*iot.CreateTopicRuleOutput, error) {
	c.inc("CreateTopicRule")
	return c.svc.CreateTopicRuleWithContext(ctx, input, opts...)
}

// DeleteCACertificateRequest is a passthrough to the underlying DeleteCACertificateRequest.
// It will increment the count of requests made to DeleteCACertificate.
func (c *IoT) DeleteCACertificateRequest(input *iot.DeleteCACertificateInput) (req *request.Request, output *iot.DeleteCACertificateOutput) {
	c.inc("DeleteCACertificate")
	return c.svc.DeleteCACertificateRequest(input)
}

// DeleteCACertificate is a passthrough to the underlying DeleteCACertificate method.
// It will increment the count of requests made to DeleteCACertificate.
func (c *IoT) DeleteCACertificate(input *iot.DeleteCACertificateInput) (*iot.DeleteCACertificateOutput, error) {
	c.inc("DeleteCACertificate")
	return c.svc.DeleteCACertificate(input)
}

// DeleteCACertificateWithContext is a passthrough to the underlying DeleteCACertificateWithContext method.
// It will increment the count of requests made to DeleteCACertificate.
func (c *IoT) DeleteCACertificateWithContext(ctx aws.Context, input *iot.DeleteCACertificateInput, opts ...request.Option) (*iot.DeleteCACertificateOutput, error) {
	c.inc("DeleteCACertificate")
	return c.svc.DeleteCACertificateWithContext(ctx, input, opts...)
}

// DeleteCertificateRequest is a passthrough to the underlying DeleteCertificateRequest.
// It will increment the count of requests made to DeleteCertificate.
func (c *IoT) DeleteCertificateRequest(input *iot.DeleteCertificateInput) (req *request.Request, output *iot.DeleteCertificateOutput) {
	c.inc("DeleteCertificate")
	return c.svc.DeleteCertificateRequest(input)
}

// DeleteCertificate is a passthrough to the underlying DeleteCertificate method.
// It will increment the count of requests made to DeleteCertificate.
func (c *IoT) DeleteCertificate(input *iot.DeleteCertificateInput) (*iot.DeleteCertificateOutput, error) {
	c.inc("DeleteCertificate")
	return c.svc.DeleteCertificate(input)
}

// DeleteCertificateWithContext is a passthrough to the underlying DeleteCertificateWithContext method.
// It will increment the count of requests made to DeleteCertificate.
func (c *IoT) DeleteCertificateWithContext(ctx aws.Context, input *iot.DeleteCertificateInput, opts ...request.Option) (*iot.DeleteCertificateOutput, error) {
	c.inc("DeleteCertificate")
	return c.svc.DeleteCertificateWithContext(ctx, input, opts...)
}

// DeletePolicyRequest is a passthrough to the underlying DeletePolicyRequest.
// It will increment the count of requests made to DeletePolicy.
func (c *IoT) DeletePolicyRequest(input *iot.DeletePolicyInput) (req *request.Request, output *iot.DeletePolicyOutput) {
	c.inc("DeletePolicy")
	return c.svc.DeletePolicyRequest(input)
}

// DeletePolicy is a passthrough to the underlying DeletePolicy method.
// It will increment the count of requests made to DeletePolicy.
func (c *IoT) DeletePolicy(input *iot.DeletePolicyInput) (*iot.DeletePolicyOutput, error) {
	c.inc("DeletePolicy")
	return c.svc.DeletePolicy(input)
}

// DeletePolicyWithContext is a passthrough to the underlying DeletePolicyWithContext method.
// It will increment the count of requests made to DeletePolicy.
func (c *IoT) DeletePolicyWithContext(ctx aws.Context, input *iot.DeletePolicyInput, opts ...request.Option) (*iot.DeletePolicyOutput, error) {
	c.inc("DeletePolicy")
	return c.svc.DeletePolicyWithContext(ctx, input, opts...)
}

// DeletePolicyVersionRequest is a passthrough to the underlying DeletePolicyVersionRequest.
// It will increment the count of requests made to DeletePolicyVersion.
func (c *IoT) DeletePolicyVersionRequest(input *iot.DeletePolicyVersionInput) (req *request.Request, output *iot.DeletePolicyVersionOutput) {
	c.inc("DeletePolicyVersion")
	return c.svc.DeletePolicyVersionRequest(input)
}

// DeletePolicyVersion is a passthrough to the underlying DeletePolicyVersion method.
// It will increment the count of requests made to DeletePolicyVersion.
func (c *IoT) DeletePolicyVersion(input *iot.DeletePolicyVersionInput) (*iot.DeletePolicyVersionOutput, error) {
	c.inc("DeletePolicyVersion")
	return c.svc.DeletePolicyVersion(input)
}

// DeletePolicyVersionWithContext is a passthrough to the underlying DeletePolicyVersionWithContext method.
// It will increment the count of requests made to DeletePolicyVersion.
func (c *IoT) DeletePolicyVersionWithContext(ctx aws.Context, input *iot.DeletePolicyVersionInput, opts ...request.Option) (*iot.DeletePolicyVersionOutput, error) {
	c.inc("DeletePolicyVersion")
	return c.svc.DeletePolicyVersionWithContext(ctx, input, opts...)
}

// DeleteRegistrationCodeRequest is a passthrough to the underlying DeleteRegistrationCodeRequest.
// It will increment the count of requests made to DeleteRegistrationCode.
func (c *IoT) DeleteRegistrationCodeRequest(input *iot.DeleteRegistrationCodeInput) (req *request.Request, output *iot.DeleteRegistrationCodeOutput) {
	c.inc("DeleteRegistrationCode")
	return c.svc.DeleteRegistrationCodeRequest(input)
}

// DeleteRegistrationCode is a passthrough to the underlying DeleteRegistrationCode method.
// It will increment the count of requests made to DeleteRegistrationCode.
func (c *IoT) DeleteRegistrationCode(input *iot.DeleteRegistrationCodeInput) (*iot.DeleteRegistrationCodeOutput, error) {
	c.inc("DeleteRegistrationCode")
	return c.svc.DeleteRegistrationCode(input)
}

// DeleteRegistrationCodeWithContext is a passthrough to the underlying DeleteRegistrationCodeWithContext method.
// It will increment the count of requests made to DeleteRegistrationCode.
func (c *IoT) DeleteRegistrationCodeWithContext(ctx aws.Context, input *iot.DeleteRegistrationCodeInput, opts ...request.Option) (*iot.DeleteRegistrationCodeOutput, error) {
	c.inc("DeleteRegistrationCode")
	return c.svc.DeleteRegistrationCodeWithContext(ctx, input, opts...)
}

// DeleteThingRequest is a passthrough to the underlying DeleteThingRequest.
// It will increment the count of requests made to DeleteThing.
func (c *IoT) DeleteThingRequest(input *iot.DeleteThingInput) (req *request.Request, output *iot.DeleteThingOutput) {
	c.inc("DeleteThing")
	return c.svc.DeleteThingRequest(input)
}

// DeleteThing is a passthrough to the underlying DeleteThing method.
// It will increment the count of requests made to DeleteThing.
func (c *IoT) DeleteThing(input *iot.DeleteThingInput) (*iot.DeleteThingOutput, error) {
	c.inc("DeleteThing")
	return c.svc.DeleteThing(input)
}

// DeleteThingWithContext is a passthrough to the underlying DeleteThingWithContext method.
// It will increment the count of requests made to DeleteThing.
func (c *IoT) DeleteThingWithContext(ctx aws.Context, input *iot.DeleteThingInput, opts ...request.Option) (*iot.DeleteThingOutput, error) {
	c.inc("DeleteThing")
	return c.svc.DeleteThingWithContext(ctx, input, opts...)
}

// DeleteThingTypeRequest is a passthrough to the underlying DeleteThingTypeRequest.
// It will increment the count of requests made to DeleteThingType.
func (c *IoT) DeleteThingTypeRequest(input *iot.DeleteThingTypeInput) (req *request.Request, output *iot.DeleteThingTypeOutput) {
	c.inc("DeleteThingType")
	return c.svc.DeleteThingTypeRequest(input)
}

// DeleteThingType is a passthrough to the underlying DeleteThingType method.
// It will increment the count of requests made to DeleteThingType.
func (c *IoT) DeleteThingType(input *iot.DeleteThingTypeInput) (*iot.DeleteThingTypeOutput, error) {
	c.inc("DeleteThingType")
	return c.svc.DeleteThingType(input)
}

// DeleteThingTypeWithContext is a passthrough to the underlying DeleteThingTypeWithContext method.
// It will increment the count of requests made to DeleteThingType.
func (c *IoT) DeleteThingTypeWithContext(ctx aws.Context, input *iot.DeleteThingTypeInput, opts ...request.Option) (*iot.DeleteThingTypeOutput, error) {
	c.inc("DeleteThingType")
	return c.svc.DeleteThingTypeWithContext(ctx, input, opts...)
}

// DeleteTopicRuleRequest is a passthrough to the underlying DeleteTopicRuleRequest.
// It will increment the count of requests made to DeleteTopicRule.
func (c *IoT) DeleteTopicRuleRequest(input *iot.DeleteTopicRuleInput) (req *request.Request, output *iot.DeleteTopicRuleOutput) {
	c.inc("DeleteTopicRule")
	return c.svc.DeleteTopicRuleRequest(input)
}

// DeleteTopicRule is a passthrough to the underlying DeleteTopicRule method.
// It will increment the count of requests made to DeleteTopicRule.
func (c *IoT) DeleteTopicRule(input *iot.DeleteTopicRuleInput) (*iot.DeleteTopicRuleOutput, error) {
	c.inc("DeleteTopicRule")
	return c.svc.DeleteTopicRule(input)
}

// DeleteTopicRuleWithContext is a passthrough to the underlying DeleteTopicRuleWithContext method.
// It will increment the count of requests made to DeleteTopicRule.
func (c *IoT) DeleteTopicRuleWithContext(ctx aws.Context, input *iot.DeleteTopicRuleInput, opts ...request.Option) (*iot.DeleteTopicRuleOutput, error) {
	c.inc("DeleteTopicRule")
	return c.svc.DeleteTopicRuleWithContext(ctx, input, opts...)
}

// DeprecateThingTypeRequest is a passthrough to the underlying DeprecateThingTypeRequest.
// It will increment the count of requests made to DeprecateThingType.
func (c *IoT) DeprecateThingTypeRequest(input *iot.DeprecateThingTypeInput) (req *request.Request, output *iot.DeprecateThingTypeOutput) {
	c.inc("DeprecateThingType")
	return c.svc.DeprecateThingTypeRequest(input)
}

// DeprecateThingType is a passthrough to the underlying DeprecateThingType method.
// It will increment the count of requests made to DeprecateThingType.
func (c *IoT) DeprecateThingType(input *iot.DeprecateThingTypeInput) (*iot.DeprecateThingTypeOutput, error) {
	c.inc("DeprecateThingType")
	return c.svc.DeprecateThingType(input)
}

// DeprecateThingTypeWithContext is a passthrough to the underlying DeprecateThingTypeWithContext method.
// It will increment the count of requests made to DeprecateThingType.
func (c *IoT) DeprecateThingTypeWithContext(ctx aws.Context, input *iot.DeprecateThingTypeInput, opts ...request.Option) (*iot.DeprecateThingTypeOutput, error) {
	c.inc("DeprecateThingType")
	return c.svc.DeprecateThingTypeWithContext(ctx, input, opts...)
}

// DescribeCACertificateRequest is a passthrough to the underlying DescribeCACertificateRequest.
// It will increment the count of requests made to DescribeCACertificate.
func (c *IoT) DescribeCACertificateRequest(input *iot.DescribeCACertificateInput) (req *request.Request, output *iot.DescribeCACertificateOutput) {
	c.inc("DescribeCACertificate")
	return c.svc.DescribeCACertificateRequest(input)
}

// DescribeCACertificate is a passthrough to the underlying DescribeCACertificate method.
// It will increment the count of requests made to DescribeCACertificate.
func (c *IoT) DescribeCACertificate(input *iot.DescribeCACertificateInput) (*iot.DescribeCACertificateOutput, error) {
	c.inc("DescribeCACertificate")
	return c.svc.DescribeCACertificate(input)
}

// DescribeCACertificateWithContext is a passthrough to the underlying DescribeCACertificateWithContext method.
// It will increment the count of requests made to DescribeCACertificate.
func (c *IoT) DescribeCACertificateWithContext(ctx aws.Context, input *iot.DescribeCACertificateInput, opts ...request.Option) (*iot.DescribeCACertificateOutput, error) {
	c.inc("DescribeCACertificate")
	return c.svc.DescribeCACertificateWithContext(ctx, input, opts...)
}

// DescribeCertificateRequest is a passthrough to the underlying DescribeCertificateRequest.
// It will increment the count of requests made to DescribeCertificate.
func (c *IoT) DescribeCertificateRequest(input *iot.DescribeCertificateInput) (req *request.Request, output *iot.DescribeCertificateOutput) {
	c.inc("DescribeCertificate")
	return c.svc.DescribeCertificateRequest(input)
}

// DescribeCertificate is a passthrough to the underlying DescribeCertificate method.
// It will increment the count of requests made to DescribeCertificate.
func (c *IoT) DescribeCertificate(input *iot.DescribeCertificateInput) (*iot.DescribeCertificateOutput, error) {
	c.inc("DescribeCertificate")
	return c.svc.DescribeCertificate(input)
}

// DescribeCertificateWithContext is a passthrough to the underlying DescribeCertificateWithContext method.
// It will increment the count of requests made to DescribeCertificate.
func (c *IoT) DescribeCertificateWithContext(ctx aws.Context, input *iot.DescribeCertificateInput, opts ...request.Option) (*iot.DescribeCertificateOutput, error) {
	c.inc("DescribeCertificate")
	return c.svc.DescribeCertificateWithContext(ctx, input, opts...)
}

// DescribeEndpointRequest is a passthrough to the underlying DescribeEndpointRequest.
// It will increment the count of requests made to DescribeEndpoint.
func (c *IoT) DescribeEndpointRequest(input *iot.DescribeEndpointInput) (req *request.Request, output *iot.DescribeEndpointOutput) {
	c.inc("DescribeEndpoint")
	return c.svc.DescribeEndpointRequest(input)
}

// DescribeEndpoint is a passthrough to the underlying DescribeEndpoint method.
// It will increment the count of requests made to DescribeEndpoint.
func (c *IoT) DescribeEndpoint(input *iot.DescribeEndpointInput) (*iot.DescribeEndpointOutput, error) {
	c.inc("DescribeEndpoint")
	return c.svc.DescribeEndpoint(input)
}

// DescribeEndpointWithContext is a passthrough to the underlying DescribeEndpointWithContext method.
// It will increment the count of requests made to DescribeEndpoint.
func (c *IoT) DescribeEndpointWithContext(ctx aws.Context, input *iot.DescribeEndpointInput, opts ...request.Option) (*iot.DescribeEndpointOutput, error) {
	c.inc("DescribeEndpoint")
	return c.svc.DescribeEndpointWithContext(ctx, input, opts...)
}

// DescribeThingRequest is a passthrough to the underlying DescribeThingRequest.
// It will increment the count of requests made to DescribeThing.
func (c *IoT) DescribeThingRequest(input *iot.DescribeThingInput) (req *request.Request, output *iot.DescribeThingOutput) {
	c.inc("DescribeThing")
	return c.svc.DescribeThingRequest(input)
}

// DescribeThing is a passthrough to the underlying DescribeThing method.
// It will increment the count of requests made to DescribeThing.
func (c *IoT) DescribeThing(input *iot.DescribeThingInput) (*iot.DescribeThingOutput, error) {
	c.inc("DescribeThing")
	return c.svc.DescribeThing(input)
}

// DescribeThingWithContext is a passthrough to the underlying DescribeThingWithContext method.
// It will increment the count of requests made to DescribeThing.
func (c *IoT) DescribeThingWithContext(ctx aws.Context, input *iot.DescribeThingInput, opts ...request.Option) (*iot.DescribeThingOutput, error) {
	c.inc("DescribeThing")
	return c.svc.DescribeThingWithContext(ctx, input, opts...)
}

// DescribeThingTypeRequest is a passthrough to the underlying DescribeThingTypeRequest.
// It will increment the count of requests made to DescribeThingType.
func (c *IoT) DescribeThingTypeRequest(input *iot.DescribeThingTypeInput) (req *request.Request, output *iot.DescribeThingTypeOutput) {
	c.inc("DescribeThingType")
	return c.svc.DescribeThingTypeRequest(input)
}

// DescribeThingType is a passthrough to the underlying DescribeThingType method.
// It will increment the count of requests made to DescribeThingType.
func (c *IoT) DescribeThingType(input *iot.DescribeThingTypeInput) (*iot.DescribeThingTypeOutput, error) {
	c.inc("DescribeThingType")
	return c.svc.DescribeThingType(input)
}

// DescribeThingTypeWithContext is a passthrough to the underlying DescribeThingTypeWithContext method.
// It will increment the count of requests made to DescribeThingType.
func (c *IoT) DescribeThingTypeWithContext(ctx aws.Context, input *iot.DescribeThingTypeInput, opts ...request.Option) (*iot.DescribeThingTypeOutput, error) {
	c.inc("DescribeThingType")
	return c.svc.DescribeThingTypeWithContext(ctx, input, opts...)
}

// DetachPrincipalPolicyRequest is a passthrough to the underlying DetachPrincipalPolicyRequest.
// It will increment the count of requests made to DetachPrincipalPolicy.
func (c *IoT) DetachPrincipalPolicyRequest(input *iot.DetachPrincipalPolicyInput) (req *request.Request, output *iot.DetachPrincipalPolicyOutput) {
	c.inc("DetachPrincipalPolicy")
	return c.svc.DetachPrincipalPolicyRequest(input)
}

// DetachPrincipalPolicy is a passthrough to the underlying DetachPrincipalPolicy method.
// It will increment the count of requests made to DetachPrincipalPolicy.
func (c *IoT) DetachPrincipalPolicy(input *iot.DetachPrincipalPolicyInput) (*iot.DetachPrincipalPolicyOutput, error) {
	c.inc("DetachPrincipalPolicy")
	return c.svc.DetachPrincipalPolicy(input)
}

// DetachPrincipalPolicyWithContext is a passthrough to the underlying DetachPrincipalPolicyWithContext method.
// It will increment the count of requests made to DetachPrincipalPolicy.
func (c *IoT) DetachPrincipalPolicyWithContext(ctx aws.Context, input *iot.DetachPrincipalPolicyInput, opts ...request.Option) (*iot.DetachPrincipalPolicyOutput, error) {
	c.inc("DetachPrincipalPolicy")
	return c.svc.DetachPrincipalPolicyWithContext(ctx, input, opts...)
}

// DetachThingPrincipalRequest is a passthrough to the underlying DetachThingPrincipalRequest.
// It will increment the count of requests made to DetachThingPrincipal.
func (c *IoT) DetachThingPrincipalRequest(input *iot.DetachThingPrincipalInput) (req *request.Request, output *iot.DetachThingPrincipalOutput) {
	c.inc("DetachThingPrincipal")
	return c.svc.DetachThingPrincipalRequest(input)
}

// DetachThingPrincipal is a passthrough to the underlying DetachThingPrincipal method.
// It will increment the count of requests made to DetachThingPrincipal.
func (c *IoT) DetachThingPrincipal(input *iot.DetachThingPrincipalInput) (*iot.DetachThingPrincipalOutput, error) {
	c.inc("DetachThingPrincipal")
	return c.svc.DetachThingPrincipal(input)
}

// DetachThingPrincipalWithContext is a passthrough to the underlying DetachThingPrincipalWithContext method.
// It will increment the count of requests made to DetachThingPrincipal.
func (c *IoT) DetachThingPrincipalWithContext(ctx aws.Context, input *iot.DetachThingPrincipalInput, opts ...request.Option) (*iot.DetachThingPrincipalOutput, error) {
	c.inc("DetachThingPrincipal")
	return c.svc.DetachThingPrincipalWithContext(ctx, input, opts...)
}

// DisableTopicRuleRequest is a passthrough to the underlying DisableTopicRuleRequest.
// It will increment the count of requests made to DisableTopicRule.
func (c *IoT) DisableTopicRuleRequest(input *iot.DisableTopicRuleInput) (req *request.Request, output *iot.DisableTopicRuleOutput) {
	c.inc("DisableTopicRule")
	return c.svc.DisableTopicRuleRequest(input)
}

// DisableTopicRule is a passthrough to the underlying DisableTopicRule method.
// It will increment the count of requests made to DisableTopicRule.
func (c *IoT) DisableTopicRule(input *iot.DisableTopicRuleInput) (*iot.DisableTopicRuleOutput, error) {
	c.inc("DisableTopicRule")
	return c.svc.DisableTopicRule(input)
}

// DisableTopicRuleWithContext is a passthrough to the underlying DisableTopicRuleWithContext method.
// It will increment the count of requests made to DisableTopicRule.
func (c *IoT) DisableTopicRuleWithContext(ctx aws.Context, input *iot.DisableTopicRuleInput, opts ...request.Option) (*iot.DisableTopicRuleOutput, error) {
	c.inc("DisableTopicRule")
	return c.svc.DisableTopicRuleWithContext(ctx, input, opts...)
}

// EnableTopicRuleRequest is a passthrough to the underlying EnableTopicRuleRequest.
// It will increment the count of requests made to EnableTopicRule.
func (c *IoT) EnableTopicRuleRequest(input *iot.EnableTopicRuleInput) (req *request.Request, output *iot.EnableTopicRuleOutput) {
	c.inc("EnableTopicRule")
	return c.svc.EnableTopicRuleRequest(input)
}

// EnableTopicRule is a passthrough to the underlying EnableTopicRule method.
// It will increment the count of requests made to EnableTopicRule.
func (c *IoT) EnableTopicRule(input *iot.EnableTopicRuleInput) (*iot.EnableTopicRuleOutput, error) {
	c.inc("EnableTopicRule")
	return c.svc.EnableTopicRule(input)
}

// EnableTopicRuleWithContext is a passthrough to the underlying EnableTopicRuleWithContext method.
// It will increment the count of requests made to EnableTopicRule.
func (c *IoT) EnableTopicRuleWithContext(ctx aws.Context, input *iot.EnableTopicRuleInput, opts ...request.Option) (*iot.EnableTopicRuleOutput, error) {
	c.inc("EnableTopicRule")
	return c.svc.EnableTopicRuleWithContext(ctx, input, opts...)
}

// GetLoggingOptionsRequest is a passthrough to the underlying GetLoggingOptionsRequest.
// It will increment the count of requests made to GetLoggingOptions.
func (c *IoT) GetLoggingOptionsRequest(input *iot.GetLoggingOptionsInput) (req *request.Request, output *iot.GetLoggingOptionsOutput) {
	c.inc("GetLoggingOptions")
	return c.svc.GetLoggingOptionsRequest(input)
}

// GetLoggingOptions is a passthrough to the underlying GetLoggingOptions method.
// It will increment the count of requests made to GetLoggingOptions.
func (c *IoT) GetLoggingOptions(input *iot.GetLoggingOptionsInput) (*iot.GetLoggingOptionsOutput, error) {
	c.inc("GetLoggingOptions")
	return c.svc.GetLoggingOptions(input)
}

// GetLoggingOptionsWithContext is a passthrough to the underlying GetLoggingOptionsWithContext method.
// It will increment the count of requests made to GetLoggingOptions.
func (c *IoT) GetLoggingOptionsWithContext(ctx aws.Context, input *iot.GetLoggingOptionsInput, opts ...request.Option) (*iot.GetLoggingOptionsOutput, error) {
	c.inc("GetLoggingOptions")
	return c.svc.GetLoggingOptionsWithContext(ctx, input, opts...)
}

// GetPolicyRequest is a passthrough to the underlying GetPolicyRequest.
// It will increment the count of requests made to GetPolicy.
func (c *IoT) GetPolicyRequest(input *iot.GetPolicyInput) (req *request.Request, output *iot.GetPolicyOutput) {
	c.inc("GetPolicy")
	return c.svc.GetPolicyRequest(input)
}

// GetPolicy is a passthrough to the underlying GetPolicy method.
// It will increment the count of requests made to GetPolicy.
func (c *IoT) GetPolicy(input *iot.GetPolicyInput) (*iot.GetPolicyOutput, error) {
	c.inc("GetPolicy")
	return c.svc.GetPolicy(input)
}

// GetPolicyWithContext is a passthrough to the underlying GetPolicyWithContext method.
// It will increment the count of requests made to GetPolicy.
func (c *IoT) GetPolicyWithContext(ctx aws.Context, input *iot.GetPolicyInput, opts ...request.Option) (*iot.GetPolicyOutput, error) {
	c.inc("GetPolicy")
	return c.svc.GetPolicyWithContext(ctx, input, opts...)
}

// GetPolicyVersionRequest is a passthrough to the underlying GetPolicyVersionRequest.
// It will increment the count of requests made to GetPolicyVersion.
func (c *IoT) GetPolicyVersionRequest(input *iot.GetPolicyVersionInput) (req *request.Request, output *iot.GetPolicyVersionOutput) {
	c.inc("GetPolicyVersion")
	return c.svc.GetPolicyVersionRequest(input)
}

// GetPolicyVersion is a passthrough to the underlying GetPolicyVersion method.
// It will increment the count of requests made to GetPolicyVersion.
func (c *IoT) GetPolicyVersion(input *iot.GetPolicyVersionInput) (*iot.GetPolicyVersionOutput, error) {
	c.inc("GetPolicyVersion")
	return c.svc.GetPolicyVersion(input)
}

// GetPolicyVersionWithContext is a passthrough to the underlying GetPolicyVersionWithContext method.
// It will increment the count of requests made to GetPolicyVersion.
func (c *IoT) GetPolicyVersionWithContext(ctx aws.Context, input *iot.GetPolicyVersionInput, opts ...request.Option) (*iot.GetPolicyVersionOutput, error) {
	c.inc("GetPolicyVersion")
	return c.svc.GetPolicyVersionWithContext(ctx, input, opts...)
}

// GetRegistrationCodeRequest is a passthrough to the underlying GetRegistrationCodeRequest.
// It will increment the count of requests made to GetRegistrationCode.
func (c *IoT) GetRegistrationCodeRequest(input *iot.GetRegistrationCodeInput) (req *request.Request, output *iot.GetRegistrationCodeOutput) {
	c.inc("GetRegistrationCode")
	return c.svc.GetRegistrationCodeRequest(input)
}

// GetRegistrationCode is a passthrough to the underlying GetRegistrationCode method.
// It will increment the count of requests made to GetRegistrationCode.
func (c *IoT) GetRegistrationCode(input *iot.GetRegistrationCodeInput) (*iot.GetRegistrationCodeOutput, error) {
	c.inc("GetRegistrationCode")
	return c.svc.GetRegistrationCode(input)
}

// GetRegistrationCodeWithContext is a passthrough to the underlying GetRegistrationCodeWithContext method.
// It will increment the count of requests made to GetRegistrationCode.
func (c *IoT) GetRegistrationCodeWithContext(ctx aws.Context, input *iot.GetRegistrationCodeInput, opts ...request.Option) (*iot.GetRegistrationCodeOutput, error) {
	c.inc("GetRegistrationCode")
	return c.svc.GetRegistrationCodeWithContext(ctx, input, opts...)
}

// GetTopicRuleRequest is a passthrough to the underlying GetTopicRuleRequest.
// It will increment the count of requests made to GetTopicRule.
func (c *IoT) GetTopicRuleRequest(input *iot.GetTopicRuleInput) (req *request.Request, output *iot.GetTopicRuleOutput) {
	c.inc("GetTopicRule")
	return c.svc.GetTopicRuleRequest(input)
}

// GetTopicRule is a passthrough to the underlying GetTopicRule method.
// It will increment the count of requests made to GetTopicRule.
func (c *IoT) GetTopicRule(input *iot.GetTopicRuleInput) (*iot.GetTopicRuleOutput, error) {
	c.inc("GetTopicRule")
	return c.svc.GetTopicRule(input)
}

// GetTopicRuleWithContext is a passthrough to the underlying GetTopicRuleWithContext method.
// It will increment the count of requests made to GetTopicRule.
func (c *IoT) GetTopicRuleWithContext(ctx aws.Context, input *iot.GetTopicRuleInput, opts ...request.Option) (*iot.GetTopicRuleOutput, error) {
	c.inc("GetTopicRule")
	return c.svc.GetTopicRuleWithContext(ctx, input, opts...)
}

// ListCACertificatesRequest is a passthrough to the underlying ListCACertificatesRequest.
// It will increment the count of requests made to ListCACertificates.
func (c *IoT) ListCACertificatesRequest(input *iot.ListCACertificatesInput) (req *request.Request, output *iot.ListCACertificatesOutput) {
	c.inc("ListCACertificates")
	return c.svc.ListCACertificatesRequest(input)
}

// ListCACertificates is a passthrough to the underlying ListCACertificates method.
// It will increment the count of requests made to ListCACertificates.
func (c *IoT) ListCACertificates(input *iot.ListCACertificatesInput) (*iot.ListCACertificatesOutput, error) {
	c.inc("ListCACertificates")
	return c.svc.ListCACertificates(input)
}

// ListCACertificatesWithContext is a passthrough to the underlying ListCACertificatesWithContext method.
// It will increment the count of requests made to ListCACertificates.
func (c *IoT) ListCACertificatesWithContext(ctx aws.Context, input *iot.ListCACertificatesInput, opts ...request.Option) (*iot.ListCACertificatesOutput, error) {
	c.inc("ListCACertificates")
	return c.svc.ListCACertificatesWithContext(ctx, input, opts...)
}

// ListCertificatesRequest is a passthrough to the underlying ListCertificatesRequest.
// It will increment the count of requests made to ListCertificates.
func (c *IoT) ListCertificatesRequest(input *iot.ListCertificatesInput) (req *request.Request, output *iot.ListCertificatesOutput) {
	c.inc("ListCertificates")
	return c.svc.ListCertificatesRequest(input)
}

// ListCertificates is a passthrough to the underlying ListCertificates method.
// It will increment the count of requests made to ListCertificates.
func (c *IoT) ListCertificates(input *iot.ListCertificatesInput) (*iot.ListCertificatesOutput, error) {
	c.inc("ListCertificates")
	return c.svc.ListCertificates(input)
}

// ListCertificatesWithContext is a passthrough to the underlying ListCertificatesWithContext method.
// It will increment the count of requests made to ListCertificates.
func (c *IoT) ListCertificatesWithContext(ctx aws.Context, input *iot.ListCertificatesInput, opts ...request.Option) (*iot.ListCertificatesOutput, error) {
	c.inc("ListCertificates")
	return c.svc.ListCertificatesWithContext(ctx, input, opts...)
}

// ListCertificatesByCARequest is a passthrough to the underlying ListCertificatesByCARequest.
// It will increment the count of requests made to ListCertificatesByCA.
func (c *IoT) ListCertificatesByCARequest(input *iot.ListCertificatesByCAInput) (req *request.Request, output *iot.ListCertificatesByCAOutput) {
	c.inc("ListCertificatesByCA")
	return c.svc.ListCertificatesByCARequest(input)
}

// ListCertificatesByCA is a passthrough to the underlying ListCertificatesByCA method.
// It will increment the count of requests made to ListCertificatesByCA.
func (c *IoT) ListCertificatesByCA(input *iot.ListCertificatesByCAInput) (*iot.ListCertificatesByCAOutput, error) {
	c.inc("ListCertificatesByCA")
	return c.svc.ListCertificatesByCA(input)
}

// ListCertificatesByCAWithContext is a passthrough to the underlying ListCertificatesByCAWithContext method.
// It will increment the count of requests made to ListCertificatesByCA.
func (c *IoT) ListCertificatesByCAWithContext(ctx aws.Context, input *iot.ListCertificatesByCAInput, opts ...request.Option) (*iot.ListCertificatesByCAOutput, error) {
	c.inc("ListCertificatesByCA")
	return c.svc.ListCertificatesByCAWithContext(ctx, input, opts...)
}

// ListOutgoingCertificatesRequest is a passthrough to the underlying ListOutgoingCertificatesRequest.
// It will increment the count of requests made to ListOutgoingCertificates.
func (c *IoT) ListOutgoingCertificatesRequest(input *iot.ListOutgoingCertificatesInput) (req *request.Request, output *iot.ListOutgoingCertificatesOutput) {
	c.inc("ListOutgoingCertificates")
	return c.svc.ListOutgoingCertificatesRequest(input)
}

// ListOutgoingCertificates is a passthrough to the underlying ListOutgoingCertificates method.
// It will increment the count of requests made to ListOutgoingCertificates.
func (c *IoT) ListOutgoingCertificates(input *iot.ListOutgoingCertificatesInput) (*iot.ListOutgoingCertificatesOutput, error) {
	c.inc("ListOutgoingCertificates")
	return c.svc.ListOutgoingCertificates(input)
}

// ListOutgoingCertificatesWithContext is a passthrough to the underlying ListOutgoingCertificatesWithContext method.
// It will increment the count of requests made to ListOutgoingCertificates.
func (c *IoT) ListOutgoingCertificatesWithContext(ctx aws.Context, input *iot.ListOutgoingCertificatesInput, opts ...request.Option) (*iot.ListOutgoingCertificatesOutput, error) {
	c.inc("ListOutgoingCertificates")
	return c.svc.ListOutgoingCertificatesWithContext(ctx, input, opts...)
}

// ListPoliciesRequest is a passthrough to the underlying ListPoliciesRequest.
// It will increment the count of requests made to ListPolicies.
func (c *IoT) ListPoliciesRequest(input *iot.ListPoliciesInput) (req *request.Request, output *iot.ListPoliciesOutput) {
	c.inc("ListPolicies")
	return c.svc.ListPoliciesRequest(input)
}

// ListPolicies is a passthrough to the underlying ListPolicies method.
// It will increment the count of requests made to ListPolicies.
func (c *IoT) ListPolicies(input *iot.ListPoliciesInput) (*iot.ListPoliciesOutput, error) {
	c.inc("ListPolicies")
	return c.svc.ListPolicies(input)
}

// ListPoliciesWithContext is a passthrough to the underlying ListPoliciesWithContext method.
// It will increment the count of requests made to ListPolicies.
func (c *IoT) ListPoliciesWithContext(ctx aws.Context, input *iot.ListPoliciesInput, opts ...request.Option) (*iot.ListPoliciesOutput, error) {
	c.inc("ListPolicies")
	return c.svc.ListPoliciesWithContext(ctx, input, opts...)
}

// ListPolicyPrincipalsRequest is a passthrough to the underlying ListPolicyPrincipalsRequest.
// It will increment the count of requests made to ListPolicyPrincipals.
func (c *IoT) ListPolicyPrincipalsRequest(input *iot.ListPolicyPrincipalsInput) (req *request.Request, output *iot.ListPolicyPrincipalsOutput) {
	c.inc("ListPolicyPrincipals")
	return c.svc.ListPolicyPrincipalsRequest(input)
}

// ListPolicyPrincipals is a passthrough to the underlying ListPolicyPrincipals method.
// It will increment the count of requests made to ListPolicyPrincipals.
func (c *IoT) ListPolicyPrincipals(input *iot.ListPolicyPrincipalsInput) (*iot.ListPolicyPrincipalsOutput, error) {
	c.inc("ListPolicyPrincipals")
	return c.svc.ListPolicyPrincipals(input)
}

// ListPolicyPrincipalsWithContext is a passthrough to the underlying ListPolicyPrincipalsWithContext method.
// It will increment the count of requests made to ListPolicyPrincipals.
func (c *IoT) ListPolicyPrincipalsWithContext(ctx aws.Context, input *iot.ListPolicyPrincipalsInput, opts ...request.Option) (*iot.ListPolicyPrincipalsOutput, error) {
	c.inc("ListPolicyPrincipals")
	return c.svc.ListPolicyPrincipalsWithContext(ctx, input, opts...)
}

// ListPolicyVersionsRequest is a passthrough to the underlying ListPolicyVersionsRequest.
// It will increment the count of requests made to ListPolicyVersions.
func (c *IoT) ListPolicyVersionsRequest(input *iot.ListPolicyVersionsInput) (req *request.Request, output *iot.ListPolicyVersionsOutput) {
	c.inc("ListPolicyVersions")
	return c.svc.ListPolicyVersionsRequest(input)
}

// ListPolicyVersions is a passthrough to the underlying ListPolicyVersions method.
// It will increment the count of requests made to ListPolicyVersions.
func (c *IoT) ListPolicyVersions(input *iot.ListPolicyVersionsInput) (*iot.ListPolicyVersionsOutput, error) {
	c.inc("ListPolicyVersions")
	return c.svc.ListPolicyVersions(input)
}

// ListPolicyVersionsWithContext is a passthrough to the underlying ListPolicyVersionsWithContext method.
// It will increment the count of requests made to ListPolicyVersions.
func (c *IoT) ListPolicyVersionsWithContext(ctx aws.Context, input *iot.ListPolicyVersionsInput, opts ...request.Option) (*iot.ListPolicyVersionsOutput, error) {
	c.inc("ListPolicyVersions")
	return c.svc.ListPolicyVersionsWithContext(ctx, input, opts...)
}

// ListPrincipalPoliciesRequest is a passthrough to the underlying ListPrincipalPoliciesRequest.
// It will increment the count of requests made to ListPrincipalPolicies.
func (c *IoT) ListPrincipalPoliciesRequest(input *iot.ListPrincipalPoliciesInput) (req *request.Request, output *iot.ListPrincipalPoliciesOutput) {
	c.inc("ListPrincipalPolicies")
	return c.svc.ListPrincipalPoliciesRequest(input)
}

// ListPrincipalPolicies is a passthrough to the underlying ListPrincipalPolicies method.
// It will increment the count of requests made to ListPrincipalPolicies.
func (c *IoT) ListPrincipalPolicies(input *iot.ListPrincipalPoliciesInput) (*iot.ListPrincipalPoliciesOutput, error) {
	c.inc("ListPrincipalPolicies")
	return c.svc.ListPrincipalPolicies(input)
}

// ListPrincipalPoliciesWithContext is a passthrough to the underlying ListPrincipalPoliciesWithContext method.
// It will increment the count of requests made to ListPrincipalPolicies.
func (c *IoT) ListPrincipalPoliciesWithContext(ctx aws.Context, input *iot.ListPrincipalPoliciesInput, opts ...request.Option) (*iot.ListPrincipalPoliciesOutput, error) {
	c.inc("ListPrincipalPolicies")
	return c.svc.ListPrincipalPoliciesWithContext(ctx, input, opts...)
}

// ListPrincipalThingsRequest is a passthrough to the underlying ListPrincipalThingsRequest.
// It will increment the count of requests made to ListPrincipalThings.
func (c *IoT) ListPrincipalThingsRequest(input *iot.ListPrincipalThingsInput) (req *request.Request, output *iot.ListPrincipalThingsOutput) {
	c.inc("ListPrincipalThings")
	return c.svc.ListPrincipalThingsRequest(input)
}

// ListPrincipalThings is a passthrough to the underlying ListPrincipalThings method.
// It will increment the count of requests made to ListPrincipalThings.
func (c *IoT) ListPrincipalThings(input *iot.ListPrincipalThingsInput) (*iot.ListPrincipalThingsOutput, error) {
	c.inc("ListPrincipalThings")
	return c.svc.ListPrincipalThings(input)
}

// ListPrincipalThingsWithContext is a passthrough to the underlying ListPrincipalThingsWithContext method.
// It will increment the count of requests made to ListPrincipalThings.
func (c *IoT) ListPrincipalThingsWithContext(ctx aws.Context, input *iot.ListPrincipalThingsInput, opts ...request.Option) (*iot.ListPrincipalThingsOutput, error) {
	c.inc("ListPrincipalThings")
	return c.svc.ListPrincipalThingsWithContext(ctx, input, opts...)
}

// ListThingPrincipalsRequest is a passthrough to the underlying ListThingPrincipalsRequest.
// It will increment the count of requests made to ListThingPrincipals.
func (c *IoT) ListThingPrincipalsRequest(input *iot.ListThingPrincipalsInput) (req *request.Request, output *iot.ListThingPrincipalsOutput) {
	c.inc("ListThingPrincipals")
	return c.svc.ListThingPrincipalsRequest(input)
}

// ListThingPrincipals is a passthrough to the underlying ListThingPrincipals method.
// It will increment the count of requests made to ListThingPrincipals.
func (c *IoT) ListThingPrincipals(input *iot.ListThingPrincipalsInput) (*iot.ListThingPrincipalsOutput, error) {
	c.inc("ListThingPrincipals")
	return c.svc.ListThingPrincipals(input)
}

// ListThingPrincipalsWithContext is a passthrough to the underlying ListThingPrincipalsWithContext method.
// It will increment the count of requests made to ListThingPrincipals.
func (c *IoT) ListThingPrincipalsWithContext(ctx aws.Context, input *iot.ListThingPrincipalsInput, opts ...request.Option) (*iot.ListThingPrincipalsOutput, error) {
	c.inc("ListThingPrincipals")
	return c.svc.ListThingPrincipalsWithContext(ctx, input, opts...)
}

// ListThingTypesRequest is a passthrough to the underlying ListThingTypesRequest.
// It will increment the count of requests made to ListThingTypes.
func (c *IoT) ListThingTypesRequest(input *iot.ListThingTypesInput) (req *request.Request, output *iot.ListThingTypesOutput) {
	c.inc("ListThingTypes")
	return c.svc.ListThingTypesRequest(input)
}

// ListThingTypes is a passthrough to the underlying ListThingTypes method.
// It will increment the count of requests made to ListThingTypes.
func (c *IoT) ListThingTypes(input *iot.ListThingTypesInput) (*iot.ListThingTypesOutput, error) {
	c.inc("ListThingTypes")
	return c.svc.ListThingTypes(input)
}

// ListThingTypesWithContext is a passthrough to the underlying ListThingTypesWithContext method.
// It will increment the count of requests made to ListThingTypes.
func (c *IoT) ListThingTypesWithContext(ctx aws.Context, input *iot.ListThingTypesInput, opts ...request.Option) (*iot.ListThingTypesOutput, error) {
	c.inc("ListThingTypes")
	return c.svc.ListThingTypesWithContext(ctx, input, opts...)
}

// ListThingsRequest is a passthrough to the underlying ListThingsRequest.
// It will increment the count of requests made to ListThings.
func (c *IoT) ListThingsRequest(input *iot.ListThingsInput) (req *request.Request, output *iot.ListThingsOutput) {
	c.inc("ListThings")
	return c.svc.ListThingsRequest(input)
}

// ListThings is a passthrough to the underlying ListThings method.
// It will increment the count of requests made to ListThings.
func (c *IoT) ListThings(input *iot.ListThingsInput) (*iot.ListThingsOutput, error) {
	c.inc("ListThings")
	return c.svc.ListThings(input)
}

// ListThingsWithContext is a passthrough to the underlying ListThingsWithContext method.
// It will increment the count of requests made to ListThings.
func (c *IoT) ListThingsWithContext(ctx aws.Context, input *iot.ListThingsInput, opts ...request.Option) (*iot.ListThingsOutput, error) {
	c.inc("ListThings")
	return c.svc.ListThingsWithContext(ctx, input, opts...)
}

// ListTopicRulesRequest is a passthrough to the underlying ListTopicRulesRequest.
// It will increment the count of requests made to ListTopicRules.
func (c *IoT) ListTopicRulesRequest(input *iot.ListTopicRulesInput) (req *request.Request, output *iot.ListTopicRulesOutput) {
	c.inc("ListTopicRules")
	return c.svc.ListTopicRulesRequest(input)
}

// ListTopicRules is a passthrough to the underlying ListTopicRules method.
// It will increment the count of requests made to ListTopicRules.
func (c *IoT) ListTopicRules(input *iot.ListTopicRulesInput) (*iot.ListTopicRulesOutput, error) {
	c.inc("ListTopicRules")
	return c.svc.ListTopicRules(input)
}

// ListTopicRulesWithContext is a passthrough to the underlying ListTopicRulesWithContext method.
// It will increment the count of requests made to ListTopicRules.
func (c *IoT) ListTopicRulesWithContext(ctx aws.Context, input *iot.ListTopicRulesInput, opts ...request.Option) (*iot.ListTopicRulesOutput, error) {
	c.inc("ListTopicRules")
	return c.svc.ListTopicRulesWithContext(ctx, input, opts...)
}

// RegisterCACertificateRequest is a passthrough to the underlying RegisterCACertificateRequest.
// It will increment the count of requests made to RegisterCACertificate.
func (c *IoT) RegisterCACertificateRequest(input *iot.RegisterCACertificateInput) (req *request.Request, output *iot.RegisterCACertificateOutput) {
	c.inc("RegisterCACertificate")
	return c.svc.RegisterCACertificateRequest(input)
}

// RegisterCACertificate is a passthrough to the underlying RegisterCACertificate method.
// It will increment the count of requests made to RegisterCACertificate.
func (c *IoT) RegisterCACertificate(input *iot.RegisterCACertificateInput) (*iot.RegisterCACertificateOutput, error) {
	c.inc("RegisterCACertificate")
	return c.svc.RegisterCACertificate(input)
}

// RegisterCACertificateWithContext is a passthrough to the underlying RegisterCACertificateWithContext method.
// It will increment the count of requests made to RegisterCACertificate.
func (c *IoT) RegisterCACertificateWithContext(ctx aws.Context, input *iot.RegisterCACertificateInput, opts ...request.Option) (*iot.RegisterCACertificateOutput, error) {
	c.inc("RegisterCACertificate")
	return c.svc.RegisterCACertificateWithContext(ctx, input, opts...)
}

// RegisterCertificateRequest is a passthrough to the underlying RegisterCertificateRequest.
// It will increment the count of requests made to RegisterCertificate.
func (c *IoT) RegisterCertificateRequest(input *iot.RegisterCertificateInput) (req *request.Request, output *iot.RegisterCertificateOutput) {
	c.inc("RegisterCertificate")
	return c.svc.RegisterCertificateRequest(input)
}

// RegisterCertificate is a passthrough to the underlying RegisterCertificate method.
// It will increment the count of requests made to RegisterCertificate.
func (c *IoT) RegisterCertificate(input *iot.RegisterCertificateInput) (*iot.RegisterCertificateOutput, error) {
	c.inc("RegisterCertificate")
	return c.svc.RegisterCertificate(input)
}

// RegisterCertificateWithContext is a passthrough to the underlying RegisterCertificateWithContext method.
// It will increment the count of requests made to RegisterCertificate.
func (c *IoT) RegisterCertificateWithContext(ctx aws.Context, input *iot.RegisterCertificateInput, opts ...request.Option) (*iot.RegisterCertificateOutput, error) {
	c.inc("RegisterCertificate")
	return c.svc.RegisterCertificateWithContext(ctx, input, opts...)
}

// RejectCertificateTransferRequest is a passthrough to the underlying RejectCertificateTransferRequest.
// It will increment the count of requests made to RejectCertificateTransfer.
func (c *IoT) RejectCertificateTransferRequest(input *iot.RejectCertificateTransferInput) (req *request.Request, output *iot.RejectCertificateTransferOutput) {
	c.inc("RejectCertificateTransfer")
	return c.svc.RejectCertificateTransferRequest(input)
}

// RejectCertificateTransfer is a passthrough to the underlying RejectCertificateTransfer method.
// It will increment the count of requests made to RejectCertificateTransfer.
func (c *IoT) RejectCertificateTransfer(input *iot.RejectCertificateTransferInput) (*iot.RejectCertificateTransferOutput, error) {
	c.inc("RejectCertificateTransfer")
	return c.svc.RejectCertificateTransfer(input)
}

// RejectCertificateTransferWithContext is a passthrough to the underlying RejectCertificateTransferWithContext method.
// It will increment the count of requests made to RejectCertificateTransfer.
func (c *IoT) RejectCertificateTransferWithContext(ctx aws.Context, input *iot.RejectCertificateTransferInput, opts ...request.Option) (*iot.RejectCertificateTransferOutput, error) {
	c.inc("RejectCertificateTransfer")
	return c.svc.RejectCertificateTransferWithContext(ctx, input, opts...)
}

// ReplaceTopicRuleRequest is a passthrough to the underlying ReplaceTopicRuleRequest.
// It will increment the count of requests made to ReplaceTopicRule.
func (c *IoT) ReplaceTopicRuleRequest(input *iot.ReplaceTopicRuleInput) (req *request.Request, output *iot.ReplaceTopicRuleOutput) {
	c.inc("ReplaceTopicRule")
	return c.svc.ReplaceTopicRuleRequest(input)
}

// ReplaceTopicRule is a passthrough to the underlying ReplaceTopicRule method.
// It will increment the count of requests made to ReplaceTopicRule.
func (c *IoT) ReplaceTopicRule(input *iot.ReplaceTopicRuleInput) (*iot.ReplaceTopicRuleOutput, error) {
	c.inc("ReplaceTopicRule")
	return c.svc.ReplaceTopicRule(input)
}

// ReplaceTopicRuleWithContext is a passthrough to the underlying ReplaceTopicRuleWithContext method.
// It will increment the count of requests made to ReplaceTopicRule.
func (c *IoT) ReplaceTopicRuleWithContext(ctx aws.Context, input *iot.ReplaceTopicRuleInput, opts ...request.Option) (*iot.ReplaceTopicRuleOutput, error) {
	c.inc("ReplaceTopicRule")
	return c.svc.ReplaceTopicRuleWithContext(ctx, input, opts...)
}

// SetDefaultPolicyVersionRequest is a passthrough to the underlying SetDefaultPolicyVersionRequest.
// It will increment the count of requests made to SetDefaultPolicyVersion.
func (c *IoT) SetDefaultPolicyVersionRequest(input *iot.SetDefaultPolicyVersionInput) (req *request.Request, output *iot.SetDefaultPolicyVersionOutput) {
	c.inc("SetDefaultPolicyVersion")
	return c.svc.SetDefaultPolicyVersionRequest(input)
}

// SetDefaultPolicyVersion is a passthrough to the underlying SetDefaultPolicyVersion method.
// It will increment the count of requests made to SetDefaultPolicyVersion.
func (c *IoT) SetDefaultPolicyVersion(input *iot.SetDefaultPolicyVersionInput) (*iot.SetDefaultPolicyVersionOutput, error) {
	c.inc("SetDefaultPolicyVersion")
	return c.svc.SetDefaultPolicyVersion(input)
}

// SetDefaultPolicyVersionWithContext is a passthrough to the underlying SetDefaultPolicyVersionWithContext method.
// It will increment the count of requests made to SetDefaultPolicyVersion.
func (c *IoT) SetDefaultPolicyVersionWithContext(ctx aws.Context, input *iot.SetDefaultPolicyVersionInput, opts ...request.Option) (*iot.SetDefaultPolicyVersionOutput, error) {
	c.inc("SetDefaultPolicyVersion")
	return c.svc.SetDefaultPolicyVersionWithContext(ctx, input, opts...)
}

// SetLoggingOptionsRequest is a passthrough to the underlying SetLoggingOptionsRequest.
// It will increment the count of requests made to SetLoggingOptions.
func (c *IoT) SetLoggingOptionsRequest(input *iot.SetLoggingOptionsInput) (req *request.Request, output *iot.SetLoggingOptionsOutput) {
	c.inc("SetLoggingOptions")
	return c.svc.SetLoggingOptionsRequest(input)
}

// SetLoggingOptions is a passthrough to the underlying SetLoggingOptions method.
// It will increment the count of requests made to SetLoggingOptions.
func (c *IoT) SetLoggingOptions(input *iot.SetLoggingOptionsInput) (*iot.SetLoggingOptionsOutput, error) {
	c.inc("SetLoggingOptions")
	return c.svc.SetLoggingOptions(input)
}

// SetLoggingOptionsWithContext is a passthrough to the underlying SetLoggingOptionsWithContext method.
// It will increment the count of requests made to SetLoggingOptions.
func (c *IoT) SetLoggingOptionsWithContext(ctx aws.Context, input *iot.SetLoggingOptionsInput, opts ...request.Option) (*iot.SetLoggingOptionsOutput, error) {
	c.inc("SetLoggingOptions")
	return c.svc.SetLoggingOptionsWithContext(ctx, input, opts...)
}

// TransferCertificateRequest is a passthrough to the underlying TransferCertificateRequest.
// It will increment the count of requests made to TransferCertificate.
func (c *IoT) TransferCertificateRequest(input *iot.TransferCertificateInput) (req *request.Request, output *iot.TransferCertificateOutput) {
	c.inc("TransferCertificate")
	return c.svc.TransferCertificateRequest(input)
}

// TransferCertificate is a passthrough to the underlying TransferCertificate method.
// It will increment the count of requests made to TransferCertificate.
func (c *IoT) TransferCertificate(input *iot.TransferCertificateInput) (*iot.TransferCertificateOutput, error) {
	c.inc("TransferCertificate")
	return c.svc.TransferCertificate(input)
}

// TransferCertificateWithContext is a passthrough to the underlying TransferCertificateWithContext method.
// It will increment the count of requests made to TransferCertificate.
func (c *IoT) TransferCertificateWithContext(ctx aws.Context, input *iot.TransferCertificateInput, opts ...request.Option) (*iot.TransferCertificateOutput, error) {
	c.inc("TransferCertificate")
	return c.svc.TransferCertificateWithContext(ctx, input, opts...)
}

// UpdateCACertificateRequest is a passthrough to the underlying UpdateCACertificateRequest.
// It will increment the count of requests made to UpdateCACertificate.
func (c *IoT) UpdateCACertificateRequest(input *iot.UpdateCACertificateInput) (req *request.Request, output *iot.UpdateCACertificateOutput) {
	c.inc("UpdateCACertificate")
	return c.svc.UpdateCACertificateRequest(input)
}

// UpdateCACertificate is a passthrough to the underlying UpdateCACertificate method.
// It will increment the count of requests made to UpdateCACertificate.
func (c *IoT) UpdateCACertificate(input *iot.UpdateCACertificateInput) (*iot.UpdateCACertificateOutput, error) {
	c.inc("UpdateCACertificate")
	return c.svc.UpdateCACertificate(input)
}

// UpdateCACertificateWithContext is a passthrough to the underlying UpdateCACertificateWithContext method.
// It will increment the count of requests made to UpdateCACertificate.
func (c *IoT) UpdateCACertificateWithContext(ctx aws.Context, input *iot.UpdateCACertificateInput, opts ...request.Option) (*iot.UpdateCACertificateOutput, error) {
	c.inc("UpdateCACertificate")
	return c.svc.UpdateCACertificateWithContext(ctx, input, opts...)
}

// UpdateCertificateRequest is a passthrough to the underlying UpdateCertificateRequest.
// It will increment the count of requests made to UpdateCertificate.
func (c *IoT) UpdateCertificateRequest(input *iot.UpdateCertificateInput) (req *request.Request, output *iot.UpdateCertificateOutput) {
	c.inc("UpdateCertificate")
	return c.svc.UpdateCertificateRequest(input)
}

// UpdateCertificate is a passthrough to the underlying UpdateCertificate method.
// It will increment the count of requests made to UpdateCertificate.
func (c *IoT) UpdateCertificate(input *iot.UpdateCertificateInput) (*iot.UpdateCertificateOutput, error) {
	c.inc("UpdateCertificate")
	return c.svc.UpdateCertificate(input)
}

// UpdateCertificateWithContext is a passthrough to the underlying UpdateCertificateWithContext method.
// It will increment the count of requests made to UpdateCertificate.
func (c *IoT) UpdateCertificateWithContext(ctx aws.Context, input *iot.UpdateCertificateInput, opts ...request.Option) (*iot.UpdateCertificateOutput, error) {
	c.inc("UpdateCertificate")
	return c.svc.UpdateCertificateWithContext(ctx, input, opts...)
}

// UpdateThingRequest is a passthrough to the underlying UpdateThingRequest.
// It will increment the count of requests made to UpdateThing.
func (c *IoT) UpdateThingRequest(input *iot.UpdateThingInput) (req *request.Request, output *iot.UpdateThingOutput) {
	c.inc("UpdateThing")
	return c.svc.UpdateThingRequest(input)
}

// UpdateThing is a passthrough to the underlying UpdateThing method.
// It will increment the count of requests made to UpdateThing.
func (c *IoT) UpdateThing(input *iot.UpdateThingInput) (*iot.UpdateThingOutput, error) {
	c.inc("UpdateThing")
	return c.svc.UpdateThing(input)
}

// UpdateThingWithContext is a passthrough to the underlying UpdateThingWithContext method.
// It will increment the count of requests made to UpdateThing.
func (c *IoT) UpdateThingWithContext(ctx aws.Context, input *iot.UpdateThingInput, opts ...request.Option) (*iot.UpdateThingOutput, error) {
	c.inc("UpdateThing")
	return c.svc.UpdateThingWithContext(ctx, input, opts...)
}
