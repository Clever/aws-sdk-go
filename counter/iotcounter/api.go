// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package iotcounter

import (
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/iot"
)

// AcceptCertificateTransferRequest is a passthrough to the underlying AcceptCertificateTransferRequest.
// It will increment the count of requests made to AcceptCertificateTransfer.
func (c *IoT) AcceptCertificateTransferRequest(input *iot.AcceptCertificateTransferInput) (req *request.Request, output *iot.AcceptCertificateTransferOutput) {
	c.inc("AcceptCertificateTransfer")
	return c.svc.AcceptCertificateTransferRequest(input)
}

// AcceptCertificateTransfer is a passthrough to the underlying AcceptCertificateTransfer method.
// It will increment the count of requests made to AcceptCertificateTransfer.
func (c *IoT) AcceptCertificateTransfer(input *iot.AcceptCertificateTransferInput) (*iot.AcceptCertificateTransferOutput, error) {
	c.inc("AcceptCertificateTransfer")
	return c.svc.AcceptCertificateTransfer(input)
}

// AcceptCertificateTransferWithContext is a passthrough to the underlying AcceptCertificateTransferWithContext method.
// It will increment the count of requests made to AcceptCertificateTransfer.
func (c *IoT) AcceptCertificateTransferWithContext(ctx aws.Context, input *iot.AcceptCertificateTransferInput, opts ...request.Option) (*iot.AcceptCertificateTransferOutput, error) {
	c.inc("AcceptCertificateTransfer")
	return c.svc.AcceptCertificateTransferWithContext(ctx, input, opts...)
}

// AddThingToThingGroupRequest is a passthrough to the underlying AddThingToThingGroupRequest.
// It will increment the count of requests made to AddThingToThingGroup.
func (c *IoT) AddThingToThingGroupRequest(input *iot.AddThingToThingGroupInput) (req *request.Request, output *iot.AddThingToThingGroupOutput) {
	c.inc("AddThingToThingGroup")
	return c.svc.AddThingToThingGroupRequest(input)
}

// AddThingToThingGroup is a passthrough to the underlying AddThingToThingGroup method.
// It will increment the count of requests made to AddThingToThingGroup.
func (c *IoT) AddThingToThingGroup(input *iot.AddThingToThingGroupInput) (*iot.AddThingToThingGroupOutput, error) {
	c.inc("AddThingToThingGroup")
	return c.svc.AddThingToThingGroup(input)
}

// AddThingToThingGroupWithContext is a passthrough to the underlying AddThingToThingGroupWithContext method.
// It will increment the count of requests made to AddThingToThingGroup.
func (c *IoT) AddThingToThingGroupWithContext(ctx aws.Context, input *iot.AddThingToThingGroupInput, opts ...request.Option) (*iot.AddThingToThingGroupOutput, error) {
	c.inc("AddThingToThingGroup")
	return c.svc.AddThingToThingGroupWithContext(ctx, input, opts...)
}

// AssociateTargetsWithJobRequest is a passthrough to the underlying AssociateTargetsWithJobRequest.
// It will increment the count of requests made to AssociateTargetsWithJob.
func (c *IoT) AssociateTargetsWithJobRequest(input *iot.AssociateTargetsWithJobInput) (req *request.Request, output *iot.AssociateTargetsWithJobOutput) {
	c.inc("AssociateTargetsWithJob")
	return c.svc.AssociateTargetsWithJobRequest(input)
}

// AssociateTargetsWithJob is a passthrough to the underlying AssociateTargetsWithJob method.
// It will increment the count of requests made to AssociateTargetsWithJob.
func (c *IoT) AssociateTargetsWithJob(input *iot.AssociateTargetsWithJobInput) (*iot.AssociateTargetsWithJobOutput, error) {
	c.inc("AssociateTargetsWithJob")
	return c.svc.AssociateTargetsWithJob(input)
}

// AssociateTargetsWithJobWithContext is a passthrough to the underlying AssociateTargetsWithJobWithContext method.
// It will increment the count of requests made to AssociateTargetsWithJob.
func (c *IoT) AssociateTargetsWithJobWithContext(ctx aws.Context, input *iot.AssociateTargetsWithJobInput, opts ...request.Option) (*iot.AssociateTargetsWithJobOutput, error) {
	c.inc("AssociateTargetsWithJob")
	return c.svc.AssociateTargetsWithJobWithContext(ctx, input, opts...)
}

// AttachPolicyRequest is a passthrough to the underlying AttachPolicyRequest.
// It will increment the count of requests made to AttachPolicy.
func (c *IoT) AttachPolicyRequest(input *iot.AttachPolicyInput) (req *request.Request, output *iot.AttachPolicyOutput) {
	c.inc("AttachPolicy")
	return c.svc.AttachPolicyRequest(input)
}

// AttachPolicy is a passthrough to the underlying AttachPolicy method.
// It will increment the count of requests made to AttachPolicy.
func (c *IoT) AttachPolicy(input *iot.AttachPolicyInput) (*iot.AttachPolicyOutput, error) {
	c.inc("AttachPolicy")
	return c.svc.AttachPolicy(input)
}

// AttachPolicyWithContext is a passthrough to the underlying AttachPolicyWithContext method.
// It will increment the count of requests made to AttachPolicy.
func (c *IoT) AttachPolicyWithContext(ctx aws.Context, input *iot.AttachPolicyInput, opts ...request.Option) (*iot.AttachPolicyOutput, error) {
	c.inc("AttachPolicy")
	return c.svc.AttachPolicyWithContext(ctx, input, opts...)
}

// AttachPrincipalPolicyRequest is a passthrough to the underlying AttachPrincipalPolicyRequest.
// It will increment the count of requests made to AttachPrincipalPolicy.
func (c *IoT) AttachPrincipalPolicyRequest(input *iot.AttachPrincipalPolicyInput) (req *request.Request, output *iot.AttachPrincipalPolicyOutput) {
	c.inc("AttachPrincipalPolicy")
	return c.svc.AttachPrincipalPolicyRequest(input)
}

// AttachPrincipalPolicy is a passthrough to the underlying AttachPrincipalPolicy method.
// It will increment the count of requests made to AttachPrincipalPolicy.
func (c *IoT) AttachPrincipalPolicy(input *iot.AttachPrincipalPolicyInput) (*iot.AttachPrincipalPolicyOutput, error) {
	c.inc("AttachPrincipalPolicy")
	return c.svc.AttachPrincipalPolicy(input)
}

// AttachPrincipalPolicyWithContext is a passthrough to the underlying AttachPrincipalPolicyWithContext method.
// It will increment the count of requests made to AttachPrincipalPolicy.
func (c *IoT) AttachPrincipalPolicyWithContext(ctx aws.Context, input *iot.AttachPrincipalPolicyInput, opts ...request.Option) (*iot.AttachPrincipalPolicyOutput, error) {
	c.inc("AttachPrincipalPolicy")
	return c.svc.AttachPrincipalPolicyWithContext(ctx, input, opts...)
}

// AttachThingPrincipalRequest is a passthrough to the underlying AttachThingPrincipalRequest.
// It will increment the count of requests made to AttachThingPrincipal.
func (c *IoT) AttachThingPrincipalRequest(input *iot.AttachThingPrincipalInput) (req *request.Request, output *iot.AttachThingPrincipalOutput) {
	c.inc("AttachThingPrincipal")
	return c.svc.AttachThingPrincipalRequest(input)
}

// AttachThingPrincipal is a passthrough to the underlying AttachThingPrincipal method.
// It will increment the count of requests made to AttachThingPrincipal.
func (c *IoT) AttachThingPrincipal(input *iot.AttachThingPrincipalInput) (*iot.AttachThingPrincipalOutput, error) {
	c.inc("AttachThingPrincipal")
	return c.svc.AttachThingPrincipal(input)
}

// AttachThingPrincipalWithContext is a passthrough to the underlying AttachThingPrincipalWithContext method.
// It will increment the count of requests made to AttachThingPrincipal.
func (c *IoT) AttachThingPrincipalWithContext(ctx aws.Context, input *iot.AttachThingPrincipalInput, opts ...request.Option) (*iot.AttachThingPrincipalOutput, error) {
	c.inc("AttachThingPrincipal")
	return c.svc.AttachThingPrincipalWithContext(ctx, input, opts...)
}

// CancelCertificateTransferRequest is a passthrough to the underlying CancelCertificateTransferRequest.
// It will increment the count of requests made to CancelCertificateTransfer.
func (c *IoT) CancelCertificateTransferRequest(input *iot.CancelCertificateTransferInput) (req *request.Request, output *iot.CancelCertificateTransferOutput) {
	c.inc("CancelCertificateTransfer")
	return c.svc.CancelCertificateTransferRequest(input)
}

// CancelCertificateTransfer is a passthrough to the underlying CancelCertificateTransfer method.
// It will increment the count of requests made to CancelCertificateTransfer.
func (c *IoT) CancelCertificateTransfer(input *iot.CancelCertificateTransferInput) (*iot.CancelCertificateTransferOutput, error) {
	c.inc("CancelCertificateTransfer")
	return c.svc.CancelCertificateTransfer(input)
}

// CancelCertificateTransferWithContext is a passthrough to the underlying CancelCertificateTransferWithContext method.
// It will increment the count of requests made to CancelCertificateTransfer.
func (c *IoT) CancelCertificateTransferWithContext(ctx aws.Context, input *iot.CancelCertificateTransferInput, opts ...request.Option) (*iot.CancelCertificateTransferOutput, error) {
	c.inc("CancelCertificateTransfer")
	return c.svc.CancelCertificateTransferWithContext(ctx, input, opts...)
}

// CancelJobRequest is a passthrough to the underlying CancelJobRequest.
// It will increment the count of requests made to CancelJob.
func (c *IoT) CancelJobRequest(input *iot.CancelJobInput) (req *request.Request, output *iot.CancelJobOutput) {
	c.inc("CancelJob")
	return c.svc.CancelJobRequest(input)
}

// CancelJob is a passthrough to the underlying CancelJob method.
// It will increment the count of requests made to CancelJob.
func (c *IoT) CancelJob(input *iot.CancelJobInput) (*iot.CancelJobOutput, error) {
	c.inc("CancelJob")
	return c.svc.CancelJob(input)
}

// CancelJobWithContext is a passthrough to the underlying CancelJobWithContext method.
// It will increment the count of requests made to CancelJob.
func (c *IoT) CancelJobWithContext(ctx aws.Context, input *iot.CancelJobInput, opts ...request.Option) (*iot.CancelJobOutput, error) {
	c.inc("CancelJob")
	return c.svc.CancelJobWithContext(ctx, input, opts...)
}

// ClearDefaultAuthorizerRequest is a passthrough to the underlying ClearDefaultAuthorizerRequest.
// It will increment the count of requests made to ClearDefaultAuthorizer.
func (c *IoT) ClearDefaultAuthorizerRequest(input *iot.ClearDefaultAuthorizerInput) (req *request.Request, output *iot.ClearDefaultAuthorizerOutput) {
	c.inc("ClearDefaultAuthorizer")
	return c.svc.ClearDefaultAuthorizerRequest(input)
}

// ClearDefaultAuthorizer is a passthrough to the underlying ClearDefaultAuthorizer method.
// It will increment the count of requests made to ClearDefaultAuthorizer.
func (c *IoT) ClearDefaultAuthorizer(input *iot.ClearDefaultAuthorizerInput) (*iot.ClearDefaultAuthorizerOutput, error) {
	c.inc("ClearDefaultAuthorizer")
	return c.svc.ClearDefaultAuthorizer(input)
}

// ClearDefaultAuthorizerWithContext is a passthrough to the underlying ClearDefaultAuthorizerWithContext method.
// It will increment the count of requests made to ClearDefaultAuthorizer.
func (c *IoT) ClearDefaultAuthorizerWithContext(ctx aws.Context, input *iot.ClearDefaultAuthorizerInput, opts ...request.Option) (*iot.ClearDefaultAuthorizerOutput, error) {
	c.inc("ClearDefaultAuthorizer")
	return c.svc.ClearDefaultAuthorizerWithContext(ctx, input, opts...)
}

// CreateAuthorizerRequest is a passthrough to the underlying CreateAuthorizerRequest.
// It will increment the count of requests made to CreateAuthorizer.
func (c *IoT) CreateAuthorizerRequest(input *iot.CreateAuthorizerInput) (req *request.Request, output *iot.CreateAuthorizerOutput) {
	c.inc("CreateAuthorizer")
	return c.svc.CreateAuthorizerRequest(input)
}

// CreateAuthorizer is a passthrough to the underlying CreateAuthorizer method.
// It will increment the count of requests made to CreateAuthorizer.
func (c *IoT) CreateAuthorizer(input *iot.CreateAuthorizerInput) (*iot.CreateAuthorizerOutput, error) {
	c.inc("CreateAuthorizer")
	return c.svc.CreateAuthorizer(input)
}

// CreateAuthorizerWithContext is a passthrough to the underlying CreateAuthorizerWithContext method.
// It will increment the count of requests made to CreateAuthorizer.
func (c *IoT) CreateAuthorizerWithContext(ctx aws.Context, input *iot.CreateAuthorizerInput, opts ...request.Option) (*iot.CreateAuthorizerOutput, error) {
	c.inc("CreateAuthorizer")
	return c.svc.CreateAuthorizerWithContext(ctx, input, opts...)
}

// CreateCertificateFromCsrRequest is a passthrough to the underlying CreateCertificateFromCsrRequest.
// It will increment the count of requests made to CreateCertificateFromCsr.
func (c *IoT) CreateCertificateFromCsrRequest(input *iot.CreateCertificateFromCsrInput) (req *request.Request, output *iot.CreateCertificateFromCsrOutput) {
	c.inc("CreateCertificateFromCsr")
	return c.svc.CreateCertificateFromCsrRequest(input)
}

// CreateCertificateFromCsr is a passthrough to the underlying CreateCertificateFromCsr method.
// It will increment the count of requests made to CreateCertificateFromCsr.
func (c *IoT) CreateCertificateFromCsr(input *iot.CreateCertificateFromCsrInput) (*iot.CreateCertificateFromCsrOutput, error) {
	c.inc("CreateCertificateFromCsr")
	return c.svc.CreateCertificateFromCsr(input)
}

// CreateCertificateFromCsrWithContext is a passthrough to the underlying CreateCertificateFromCsrWithContext method.
// It will increment the count of requests made to CreateCertificateFromCsr.
func (c *IoT) CreateCertificateFromCsrWithContext(ctx aws.Context, input *iot.CreateCertificateFromCsrInput, opts ...request.Option) (*iot.CreateCertificateFromCsrOutput, error) {
	c.inc("CreateCertificateFromCsr")
	return c.svc.CreateCertificateFromCsrWithContext(ctx, input, opts...)
}

// CreateJobRequest is a passthrough to the underlying CreateJobRequest.
// It will increment the count of requests made to CreateJob.
func (c *IoT) CreateJobRequest(input *iot.CreateJobInput) (req *request.Request, output *iot.CreateJobOutput) {
	c.inc("CreateJob")
	return c.svc.CreateJobRequest(input)
}

// CreateJob is a passthrough to the underlying CreateJob method.
// It will increment the count of requests made to CreateJob.
func (c *IoT) CreateJob(input *iot.CreateJobInput) (*iot.CreateJobOutput, error) {
	c.inc("CreateJob")
	return c.svc.CreateJob(input)
}

// CreateJobWithContext is a passthrough to the underlying CreateJobWithContext method.
// It will increment the count of requests made to CreateJob.
func (c *IoT) CreateJobWithContext(ctx aws.Context, input *iot.CreateJobInput, opts ...request.Option) (*iot.CreateJobOutput, error) {
	c.inc("CreateJob")
	return c.svc.CreateJobWithContext(ctx, input, opts...)
}

// CreateKeysAndCertificateRequest is a passthrough to the underlying CreateKeysAndCertificateRequest.
// It will increment the count of requests made to CreateKeysAndCertificate.
func (c *IoT) CreateKeysAndCertificateRequest(input *iot.CreateKeysAndCertificateInput) (req *request.Request, output *iot.CreateKeysAndCertificateOutput) {
	c.inc("CreateKeysAndCertificate")
	return c.svc.CreateKeysAndCertificateRequest(input)
}

// CreateKeysAndCertificate is a passthrough to the underlying CreateKeysAndCertificate method.
// It will increment the count of requests made to CreateKeysAndCertificate.
func (c *IoT) CreateKeysAndCertificate(input *iot.CreateKeysAndCertificateInput) (*iot.CreateKeysAndCertificateOutput, error) {
	c.inc("CreateKeysAndCertificate")
	return c.svc.CreateKeysAndCertificate(input)
}

// CreateKeysAndCertificateWithContext is a passthrough to the underlying CreateKeysAndCertificateWithContext method.
// It will increment the count of requests made to CreateKeysAndCertificate.
func (c *IoT) CreateKeysAndCertificateWithContext(ctx aws.Context, input *iot.CreateKeysAndCertificateInput, opts ...request.Option) (*iot.CreateKeysAndCertificateOutput, error) {
	c.inc("CreateKeysAndCertificate")
	return c.svc.CreateKeysAndCertificateWithContext(ctx, input, opts...)
}

// CreateOTAUpdateRequest is a passthrough to the underlying CreateOTAUpdateRequest.
// It will increment the count of requests made to CreateOTAUpdate.
func (c *IoT) CreateOTAUpdateRequest(input *iot.CreateOTAUpdateInput) (req *request.Request, output *iot.CreateOTAUpdateOutput) {
	c.inc("CreateOTAUpdate")
	return c.svc.CreateOTAUpdateRequest(input)
}

// CreateOTAUpdate is a passthrough to the underlying CreateOTAUpdate method.
// It will increment the count of requests made to CreateOTAUpdate.
func (c *IoT) CreateOTAUpdate(input *iot.CreateOTAUpdateInput) (*iot.CreateOTAUpdateOutput, error) {
	c.inc("CreateOTAUpdate")
	return c.svc.CreateOTAUpdate(input)
}

// CreateOTAUpdateWithContext is a passthrough to the underlying CreateOTAUpdateWithContext method.
// It will increment the count of requests made to CreateOTAUpdate.
func (c *IoT) CreateOTAUpdateWithContext(ctx aws.Context, input *iot.CreateOTAUpdateInput, opts ...request.Option) (*iot.CreateOTAUpdateOutput, error) {
	c.inc("CreateOTAUpdate")
	return c.svc.CreateOTAUpdateWithContext(ctx, input, opts...)
}

// CreatePolicyRequest is a passthrough to the underlying CreatePolicyRequest.
// It will increment the count of requests made to CreatePolicy.
func (c *IoT) CreatePolicyRequest(input *iot.CreatePolicyInput) (req *request.Request, output *iot.CreatePolicyOutput) {
	c.inc("CreatePolicy")
	return c.svc.CreatePolicyRequest(input)
}

// CreatePolicy is a passthrough to the underlying CreatePolicy method.
// It will increment the count of requests made to CreatePolicy.
func (c *IoT) CreatePolicy(input *iot.CreatePolicyInput) (*iot.CreatePolicyOutput, error) {
	c.inc("CreatePolicy")
	return c.svc.CreatePolicy(input)
}

// CreatePolicyWithContext is a passthrough to the underlying CreatePolicyWithContext method.
// It will increment the count of requests made to CreatePolicy.
func (c *IoT) CreatePolicyWithContext(ctx aws.Context, input *iot.CreatePolicyInput, opts ...request.Option) (*iot.CreatePolicyOutput, error) {
	c.inc("CreatePolicy")
	return c.svc.CreatePolicyWithContext(ctx, input, opts...)
}

// CreatePolicyVersionRequest is a passthrough to the underlying CreatePolicyVersionRequest.
// It will increment the count of requests made to CreatePolicyVersion.
func (c *IoT) CreatePolicyVersionRequest(input *iot.CreatePolicyVersionInput) (req *request.Request, output *iot.CreatePolicyVersionOutput) {
	c.inc("CreatePolicyVersion")
	return c.svc.CreatePolicyVersionRequest(input)
}

// CreatePolicyVersion is a passthrough to the underlying CreatePolicyVersion method.
// It will increment the count of requests made to CreatePolicyVersion.
func (c *IoT) CreatePolicyVersion(input *iot.CreatePolicyVersionInput) (*iot.CreatePolicyVersionOutput, error) {
	c.inc("CreatePolicyVersion")
	return c.svc.CreatePolicyVersion(input)
}

// CreatePolicyVersionWithContext is a passthrough to the underlying CreatePolicyVersionWithContext method.
// It will increment the count of requests made to CreatePolicyVersion.
func (c *IoT) CreatePolicyVersionWithContext(ctx aws.Context, input *iot.CreatePolicyVersionInput, opts ...request.Option) (*iot.CreatePolicyVersionOutput, error) {
	c.inc("CreatePolicyVersion")
	return c.svc.CreatePolicyVersionWithContext(ctx, input, opts...)
}

// CreateRoleAliasRequest is a passthrough to the underlying CreateRoleAliasRequest.
// It will increment the count of requests made to CreateRoleAlias.
func (c *IoT) CreateRoleAliasRequest(input *iot.CreateRoleAliasInput) (req *request.Request, output *iot.CreateRoleAliasOutput) {
	c.inc("CreateRoleAlias")
	return c.svc.CreateRoleAliasRequest(input)
}

// CreateRoleAlias is a passthrough to the underlying CreateRoleAlias method.
// It will increment the count of requests made to CreateRoleAlias.
func (c *IoT) CreateRoleAlias(input *iot.CreateRoleAliasInput) (*iot.CreateRoleAliasOutput, error) {
	c.inc("CreateRoleAlias")
	return c.svc.CreateRoleAlias(input)
}

// CreateRoleAliasWithContext is a passthrough to the underlying CreateRoleAliasWithContext method.
// It will increment the count of requests made to CreateRoleAlias.
func (c *IoT) CreateRoleAliasWithContext(ctx aws.Context, input *iot.CreateRoleAliasInput, opts ...request.Option) (*iot.CreateRoleAliasOutput, error) {
	c.inc("CreateRoleAlias")
	return c.svc.CreateRoleAliasWithContext(ctx, input, opts...)
}

// CreateStreamRequest is a passthrough to the underlying CreateStreamRequest.
// It will increment the count of requests made to CreateStream.
func (c *IoT) CreateStreamRequest(input *iot.CreateStreamInput) (req *request.Request, output *iot.CreateStreamOutput) {
	c.inc("CreateStream")
	return c.svc.CreateStreamRequest(input)
}

// CreateStream is a passthrough to the underlying CreateStream method.
// It will increment the count of requests made to CreateStream.
func (c *IoT) CreateStream(input *iot.CreateStreamInput) (*iot.CreateStreamOutput, error) {
	c.inc("CreateStream")
	return c.svc.CreateStream(input)
}

// CreateStreamWithContext is a passthrough to the underlying CreateStreamWithContext method.
// It will increment the count of requests made to CreateStream.
func (c *IoT) CreateStreamWithContext(ctx aws.Context, input *iot.CreateStreamInput, opts ...request.Option) (*iot.CreateStreamOutput, error) {
	c.inc("CreateStream")
	return c.svc.CreateStreamWithContext(ctx, input, opts...)
}

// CreateThingRequest is a passthrough to the underlying CreateThingRequest.
// It will increment the count of requests made to CreateThing.
func (c *IoT) CreateThingRequest(input *iot.CreateThingInput) (req *request.Request, output *iot.CreateThingOutput) {
	c.inc("CreateThing")
	return c.svc.CreateThingRequest(input)
}

// CreateThing is a passthrough to the underlying CreateThing method.
// It will increment the count of requests made to CreateThing.
func (c *IoT) CreateThing(input *iot.CreateThingInput) (*iot.CreateThingOutput, error) {
	c.inc("CreateThing")
	return c.svc.CreateThing(input)
}

// CreateThingWithContext is a passthrough to the underlying CreateThingWithContext method.
// It will increment the count of requests made to CreateThing.
func (c *IoT) CreateThingWithContext(ctx aws.Context, input *iot.CreateThingInput, opts ...request.Option) (*iot.CreateThingOutput, error) {
	c.inc("CreateThing")
	return c.svc.CreateThingWithContext(ctx, input, opts...)
}

// CreateThingGroupRequest is a passthrough to the underlying CreateThingGroupRequest.
// It will increment the count of requests made to CreateThingGroup.
func (c *IoT) CreateThingGroupRequest(input *iot.CreateThingGroupInput) (req *request.Request, output *iot.CreateThingGroupOutput) {
	c.inc("CreateThingGroup")
	return c.svc.CreateThingGroupRequest(input)
}

// CreateThingGroup is a passthrough to the underlying CreateThingGroup method.
// It will increment the count of requests made to CreateThingGroup.
func (c *IoT) CreateThingGroup(input *iot.CreateThingGroupInput) (*iot.CreateThingGroupOutput, error) {
	c.inc("CreateThingGroup")
	return c.svc.CreateThingGroup(input)
}

// CreateThingGroupWithContext is a passthrough to the underlying CreateThingGroupWithContext method.
// It will increment the count of requests made to CreateThingGroup.
func (c *IoT) CreateThingGroupWithContext(ctx aws.Context, input *iot.CreateThingGroupInput, opts ...request.Option) (*iot.CreateThingGroupOutput, error) {
	c.inc("CreateThingGroup")
	return c.svc.CreateThingGroupWithContext(ctx, input, opts...)
}

// CreateThingTypeRequest is a passthrough to the underlying CreateThingTypeRequest.
// It will increment the count of requests made to CreateThingType.
func (c *IoT) CreateThingTypeRequest(input *iot.CreateThingTypeInput) (req *request.Request, output *iot.CreateThingTypeOutput) {
	c.inc("CreateThingType")
	return c.svc.CreateThingTypeRequest(input)
}

// CreateThingType is a passthrough to the underlying CreateThingType method.
// It will increment the count of requests made to CreateThingType.
func (c *IoT) CreateThingType(input *iot.CreateThingTypeInput) (*iot.CreateThingTypeOutput, error) {
	c.inc("CreateThingType")
	return c.svc.CreateThingType(input)
}

// CreateThingTypeWithContext is a passthrough to the underlying CreateThingTypeWithContext method.
// It will increment the count of requests made to CreateThingType.
func (c *IoT) CreateThingTypeWithContext(ctx aws.Context, input *iot.CreateThingTypeInput, opts ...request.Option) (*iot.CreateThingTypeOutput, error) {
	c.inc("CreateThingType")
	return c.svc.CreateThingTypeWithContext(ctx, input, opts...)
}

// CreateTopicRuleRequest is a passthrough to the underlying CreateTopicRuleRequest.
// It will increment the count of requests made to CreateTopicRule.
func (c *IoT) CreateTopicRuleRequest(input *iot.CreateTopicRuleInput) (req *request.Request, output *iot.CreateTopicRuleOutput) {
	c.inc("CreateTopicRule")
	return c.svc.CreateTopicRuleRequest(input)
}

// CreateTopicRule is a passthrough to the underlying CreateTopicRule method.
// It will increment the count of requests made to CreateTopicRule.
func (c *IoT) CreateTopicRule(input *iot.CreateTopicRuleInput) (*iot.CreateTopicRuleOutput, error) {
	c.inc("CreateTopicRule")
	return c.svc.CreateTopicRule(input)
}

// CreateTopicRuleWithContext is a passthrough to the underlying CreateTopicRuleWithContext method.
// It will increment the count of requests made to CreateTopicRule.
func (c *IoT) CreateTopicRuleWithContext(ctx aws.Context, input *iot.CreateTopicRuleInput, opts ...request.Option) (*iot.CreateTopicRuleOutput, error) {
	c.inc("CreateTopicRule")
	return c.svc.CreateTopicRuleWithContext(ctx, input, opts...)
}

// DeleteAuthorizerRequest is a passthrough to the underlying DeleteAuthorizerRequest.
// It will increment the count of requests made to DeleteAuthorizer.
func (c *IoT) DeleteAuthorizerRequest(input *iot.DeleteAuthorizerInput) (req *request.Request, output *iot.DeleteAuthorizerOutput) {
	c.inc("DeleteAuthorizer")
	return c.svc.DeleteAuthorizerRequest(input)
}

// DeleteAuthorizer is a passthrough to the underlying DeleteAuthorizer method.
// It will increment the count of requests made to DeleteAuthorizer.
func (c *IoT) DeleteAuthorizer(input *iot.DeleteAuthorizerInput) (*iot.DeleteAuthorizerOutput, error) {
	c.inc("DeleteAuthorizer")
	return c.svc.DeleteAuthorizer(input)
}

// DeleteAuthorizerWithContext is a passthrough to the underlying DeleteAuthorizerWithContext method.
// It will increment the count of requests made to DeleteAuthorizer.
func (c *IoT) DeleteAuthorizerWithContext(ctx aws.Context, input *iot.DeleteAuthorizerInput, opts ...request.Option) (*iot.DeleteAuthorizerOutput, error) {
	c.inc("DeleteAuthorizer")
	return c.svc.DeleteAuthorizerWithContext(ctx, input, opts...)
}

// DeleteCACertificateRequest is a passthrough to the underlying DeleteCACertificateRequest.
// It will increment the count of requests made to DeleteCACertificate.
func (c *IoT) DeleteCACertificateRequest(input *iot.DeleteCACertificateInput) (req *request.Request, output *iot.DeleteCACertificateOutput) {
	c.inc("DeleteCACertificate")
	return c.svc.DeleteCACertificateRequest(input)
}

// DeleteCACertificate is a passthrough to the underlying DeleteCACertificate method.
// It will increment the count of requests made to DeleteCACertificate.
func (c *IoT) DeleteCACertificate(input *iot.DeleteCACertificateInput) (*iot.DeleteCACertificateOutput, error) {
	c.inc("DeleteCACertificate")
	return c.svc.DeleteCACertificate(input)
}

// DeleteCACertificateWithContext is a passthrough to the underlying DeleteCACertificateWithContext method.
// It will increment the count of requests made to DeleteCACertificate.
func (c *IoT) DeleteCACertificateWithContext(ctx aws.Context, input *iot.DeleteCACertificateInput, opts ...request.Option) (*iot.DeleteCACertificateOutput, error) {
	c.inc("DeleteCACertificate")
	return c.svc.DeleteCACertificateWithContext(ctx, input, opts...)
}

// DeleteCertificateRequest is a passthrough to the underlying DeleteCertificateRequest.
// It will increment the count of requests made to DeleteCertificate.
func (c *IoT) DeleteCertificateRequest(input *iot.DeleteCertificateInput) (req *request.Request, output *iot.DeleteCertificateOutput) {
	c.inc("DeleteCertificate")
	return c.svc.DeleteCertificateRequest(input)
}

// DeleteCertificate is a passthrough to the underlying DeleteCertificate method.
// It will increment the count of requests made to DeleteCertificate.
func (c *IoT) DeleteCertificate(input *iot.DeleteCertificateInput) (*iot.DeleteCertificateOutput, error) {
	c.inc("DeleteCertificate")
	return c.svc.DeleteCertificate(input)
}

// DeleteCertificateWithContext is a passthrough to the underlying DeleteCertificateWithContext method.
// It will increment the count of requests made to DeleteCertificate.
func (c *IoT) DeleteCertificateWithContext(ctx aws.Context, input *iot.DeleteCertificateInput, opts ...request.Option) (*iot.DeleteCertificateOutput, error) {
	c.inc("DeleteCertificate")
	return c.svc.DeleteCertificateWithContext(ctx, input, opts...)
}

// DeleteOTAUpdateRequest is a passthrough to the underlying DeleteOTAUpdateRequest.
// It will increment the count of requests made to DeleteOTAUpdate.
func (c *IoT) DeleteOTAUpdateRequest(input *iot.DeleteOTAUpdateInput) (req *request.Request, output *iot.DeleteOTAUpdateOutput) {
	c.inc("DeleteOTAUpdate")
	return c.svc.DeleteOTAUpdateRequest(input)
}

// DeleteOTAUpdate is a passthrough to the underlying DeleteOTAUpdate method.
// It will increment the count of requests made to DeleteOTAUpdate.
func (c *IoT) DeleteOTAUpdate(input *iot.DeleteOTAUpdateInput) (*iot.DeleteOTAUpdateOutput, error) {
	c.inc("DeleteOTAUpdate")
	return c.svc.DeleteOTAUpdate(input)
}

// DeleteOTAUpdateWithContext is a passthrough to the underlying DeleteOTAUpdateWithContext method.
// It will increment the count of requests made to DeleteOTAUpdate.
func (c *IoT) DeleteOTAUpdateWithContext(ctx aws.Context, input *iot.DeleteOTAUpdateInput, opts ...request.Option) (*iot.DeleteOTAUpdateOutput, error) {
	c.inc("DeleteOTAUpdate")
	return c.svc.DeleteOTAUpdateWithContext(ctx, input, opts...)
}

// DeletePolicyRequest is a passthrough to the underlying DeletePolicyRequest.
// It will increment the count of requests made to DeletePolicy.
func (c *IoT) DeletePolicyRequest(input *iot.DeletePolicyInput) (req *request.Request, output *iot.DeletePolicyOutput) {
	c.inc("DeletePolicy")
	return c.svc.DeletePolicyRequest(input)
}

// DeletePolicy is a passthrough to the underlying DeletePolicy method.
// It will increment the count of requests made to DeletePolicy.
func (c *IoT) DeletePolicy(input *iot.DeletePolicyInput) (*iot.DeletePolicyOutput, error) {
	c.inc("DeletePolicy")
	return c.svc.DeletePolicy(input)
}

// DeletePolicyWithContext is a passthrough to the underlying DeletePolicyWithContext method.
// It will increment the count of requests made to DeletePolicy.
func (c *IoT) DeletePolicyWithContext(ctx aws.Context, input *iot.DeletePolicyInput, opts ...request.Option) (*iot.DeletePolicyOutput, error) {
	c.inc("DeletePolicy")
	return c.svc.DeletePolicyWithContext(ctx, input, opts...)
}

// DeletePolicyVersionRequest is a passthrough to the underlying DeletePolicyVersionRequest.
// It will increment the count of requests made to DeletePolicyVersion.
func (c *IoT) DeletePolicyVersionRequest(input *iot.DeletePolicyVersionInput) (req *request.Request, output *iot.DeletePolicyVersionOutput) {
	c.inc("DeletePolicyVersion")
	return c.svc.DeletePolicyVersionRequest(input)
}

// DeletePolicyVersion is a passthrough to the underlying DeletePolicyVersion method.
// It will increment the count of requests made to DeletePolicyVersion.
func (c *IoT) DeletePolicyVersion(input *iot.DeletePolicyVersionInput) (*iot.DeletePolicyVersionOutput, error) {
	c.inc("DeletePolicyVersion")
	return c.svc.DeletePolicyVersion(input)
}

// DeletePolicyVersionWithContext is a passthrough to the underlying DeletePolicyVersionWithContext method.
// It will increment the count of requests made to DeletePolicyVersion.
func (c *IoT) DeletePolicyVersionWithContext(ctx aws.Context, input *iot.DeletePolicyVersionInput, opts ...request.Option) (*iot.DeletePolicyVersionOutput, error) {
	c.inc("DeletePolicyVersion")
	return c.svc.DeletePolicyVersionWithContext(ctx, input, opts...)
}

// DeleteRegistrationCodeRequest is a passthrough to the underlying DeleteRegistrationCodeRequest.
// It will increment the count of requests made to DeleteRegistrationCode.
func (c *IoT) DeleteRegistrationCodeRequest(input *iot.DeleteRegistrationCodeInput) (req *request.Request, output *iot.DeleteRegistrationCodeOutput) {
	c.inc("DeleteRegistrationCode")
	return c.svc.DeleteRegistrationCodeRequest(input)
}

// DeleteRegistrationCode is a passthrough to the underlying DeleteRegistrationCode method.
// It will increment the count of requests made to DeleteRegistrationCode.
func (c *IoT) DeleteRegistrationCode(input *iot.DeleteRegistrationCodeInput) (*iot.DeleteRegistrationCodeOutput, error) {
	c.inc("DeleteRegistrationCode")
	return c.svc.DeleteRegistrationCode(input)
}

// DeleteRegistrationCodeWithContext is a passthrough to the underlying DeleteRegistrationCodeWithContext method.
// It will increment the count of requests made to DeleteRegistrationCode.
func (c *IoT) DeleteRegistrationCodeWithContext(ctx aws.Context, input *iot.DeleteRegistrationCodeInput, opts ...request.Option) (*iot.DeleteRegistrationCodeOutput, error) {
	c.inc("DeleteRegistrationCode")
	return c.svc.DeleteRegistrationCodeWithContext(ctx, input, opts...)
}

// DeleteRoleAliasRequest is a passthrough to the underlying DeleteRoleAliasRequest.
// It will increment the count of requests made to DeleteRoleAlias.
func (c *IoT) DeleteRoleAliasRequest(input *iot.DeleteRoleAliasInput) (req *request.Request, output *iot.DeleteRoleAliasOutput) {
	c.inc("DeleteRoleAlias")
	return c.svc.DeleteRoleAliasRequest(input)
}

// DeleteRoleAlias is a passthrough to the underlying DeleteRoleAlias method.
// It will increment the count of requests made to DeleteRoleAlias.
func (c *IoT) DeleteRoleAlias(input *iot.DeleteRoleAliasInput) (*iot.DeleteRoleAliasOutput, error) {
	c.inc("DeleteRoleAlias")
	return c.svc.DeleteRoleAlias(input)
}

// DeleteRoleAliasWithContext is a passthrough to the underlying DeleteRoleAliasWithContext method.
// It will increment the count of requests made to DeleteRoleAlias.
func (c *IoT) DeleteRoleAliasWithContext(ctx aws.Context, input *iot.DeleteRoleAliasInput, opts ...request.Option) (*iot.DeleteRoleAliasOutput, error) {
	c.inc("DeleteRoleAlias")
	return c.svc.DeleteRoleAliasWithContext(ctx, input, opts...)
}

// DeleteStreamRequest is a passthrough to the underlying DeleteStreamRequest.
// It will increment the count of requests made to DeleteStream.
func (c *IoT) DeleteStreamRequest(input *iot.DeleteStreamInput) (req *request.Request, output *iot.DeleteStreamOutput) {
	c.inc("DeleteStream")
	return c.svc.DeleteStreamRequest(input)
}

// DeleteStream is a passthrough to the underlying DeleteStream method.
// It will increment the count of requests made to DeleteStream.
func (c *IoT) DeleteStream(input *iot.DeleteStreamInput) (*iot.DeleteStreamOutput, error) {
	c.inc("DeleteStream")
	return c.svc.DeleteStream(input)
}

// DeleteStreamWithContext is a passthrough to the underlying DeleteStreamWithContext method.
// It will increment the count of requests made to DeleteStream.
func (c *IoT) DeleteStreamWithContext(ctx aws.Context, input *iot.DeleteStreamInput, opts ...request.Option) (*iot.DeleteStreamOutput, error) {
	c.inc("DeleteStream")
	return c.svc.DeleteStreamWithContext(ctx, input, opts...)
}

// DeleteThingRequest is a passthrough to the underlying DeleteThingRequest.
// It will increment the count of requests made to DeleteThing.
func (c *IoT) DeleteThingRequest(input *iot.DeleteThingInput) (req *request.Request, output *iot.DeleteThingOutput) {
	c.inc("DeleteThing")
	return c.svc.DeleteThingRequest(input)
}

// DeleteThing is a passthrough to the underlying DeleteThing method.
// It will increment the count of requests made to DeleteThing.
func (c *IoT) DeleteThing(input *iot.DeleteThingInput) (*iot.DeleteThingOutput, error) {
	c.inc("DeleteThing")
	return c.svc.DeleteThing(input)
}

// DeleteThingWithContext is a passthrough to the underlying DeleteThingWithContext method.
// It will increment the count of requests made to DeleteThing.
func (c *IoT) DeleteThingWithContext(ctx aws.Context, input *iot.DeleteThingInput, opts ...request.Option) (*iot.DeleteThingOutput, error) {
	c.inc("DeleteThing")
	return c.svc.DeleteThingWithContext(ctx, input, opts...)
}

// DeleteThingGroupRequest is a passthrough to the underlying DeleteThingGroupRequest.
// It will increment the count of requests made to DeleteThingGroup.
func (c *IoT) DeleteThingGroupRequest(input *iot.DeleteThingGroupInput) (req *request.Request, output *iot.DeleteThingGroupOutput) {
	c.inc("DeleteThingGroup")
	return c.svc.DeleteThingGroupRequest(input)
}

// DeleteThingGroup is a passthrough to the underlying DeleteThingGroup method.
// It will increment the count of requests made to DeleteThingGroup.
func (c *IoT) DeleteThingGroup(input *iot.DeleteThingGroupInput) (*iot.DeleteThingGroupOutput, error) {
	c.inc("DeleteThingGroup")
	return c.svc.DeleteThingGroup(input)
}

// DeleteThingGroupWithContext is a passthrough to the underlying DeleteThingGroupWithContext method.
// It will increment the count of requests made to DeleteThingGroup.
func (c *IoT) DeleteThingGroupWithContext(ctx aws.Context, input *iot.DeleteThingGroupInput, opts ...request.Option) (*iot.DeleteThingGroupOutput, error) {
	c.inc("DeleteThingGroup")
	return c.svc.DeleteThingGroupWithContext(ctx, input, opts...)
}

// DeleteThingTypeRequest is a passthrough to the underlying DeleteThingTypeRequest.
// It will increment the count of requests made to DeleteThingType.
func (c *IoT) DeleteThingTypeRequest(input *iot.DeleteThingTypeInput) (req *request.Request, output *iot.DeleteThingTypeOutput) {
	c.inc("DeleteThingType")
	return c.svc.DeleteThingTypeRequest(input)
}

// DeleteThingType is a passthrough to the underlying DeleteThingType method.
// It will increment the count of requests made to DeleteThingType.
func (c *IoT) DeleteThingType(input *iot.DeleteThingTypeInput) (*iot.DeleteThingTypeOutput, error) {
	c.inc("DeleteThingType")
	return c.svc.DeleteThingType(input)
}

// DeleteThingTypeWithContext is a passthrough to the underlying DeleteThingTypeWithContext method.
// It will increment the count of requests made to DeleteThingType.
func (c *IoT) DeleteThingTypeWithContext(ctx aws.Context, input *iot.DeleteThingTypeInput, opts ...request.Option) (*iot.DeleteThingTypeOutput, error) {
	c.inc("DeleteThingType")
	return c.svc.DeleteThingTypeWithContext(ctx, input, opts...)
}

// DeleteTopicRuleRequest is a passthrough to the underlying DeleteTopicRuleRequest.
// It will increment the count of requests made to DeleteTopicRule.
func (c *IoT) DeleteTopicRuleRequest(input *iot.DeleteTopicRuleInput) (req *request.Request, output *iot.DeleteTopicRuleOutput) {
	c.inc("DeleteTopicRule")
	return c.svc.DeleteTopicRuleRequest(input)
}

// DeleteTopicRule is a passthrough to the underlying DeleteTopicRule method.
// It will increment the count of requests made to DeleteTopicRule.
func (c *IoT) DeleteTopicRule(input *iot.DeleteTopicRuleInput) (*iot.DeleteTopicRuleOutput, error) {
	c.inc("DeleteTopicRule")
	return c.svc.DeleteTopicRule(input)
}

// DeleteTopicRuleWithContext is a passthrough to the underlying DeleteTopicRuleWithContext method.
// It will increment the count of requests made to DeleteTopicRule.
func (c *IoT) DeleteTopicRuleWithContext(ctx aws.Context, input *iot.DeleteTopicRuleInput, opts ...request.Option) (*iot.DeleteTopicRuleOutput, error) {
	c.inc("DeleteTopicRule")
	return c.svc.DeleteTopicRuleWithContext(ctx, input, opts...)
}

// DeleteV2LoggingLevelRequest is a passthrough to the underlying DeleteV2LoggingLevelRequest.
// It will increment the count of requests made to DeleteV2LoggingLevel.
func (c *IoT) DeleteV2LoggingLevelRequest(input *iot.DeleteV2LoggingLevelInput) (req *request.Request, output *iot.DeleteV2LoggingLevelOutput) {
	c.inc("DeleteV2LoggingLevel")
	return c.svc.DeleteV2LoggingLevelRequest(input)
}

// DeleteV2LoggingLevel is a passthrough to the underlying DeleteV2LoggingLevel method.
// It will increment the count of requests made to DeleteV2LoggingLevel.
func (c *IoT) DeleteV2LoggingLevel(input *iot.DeleteV2LoggingLevelInput) (*iot.DeleteV2LoggingLevelOutput, error) {
	c.inc("DeleteV2LoggingLevel")
	return c.svc.DeleteV2LoggingLevel(input)
}

// DeleteV2LoggingLevelWithContext is a passthrough to the underlying DeleteV2LoggingLevelWithContext method.
// It will increment the count of requests made to DeleteV2LoggingLevel.
func (c *IoT) DeleteV2LoggingLevelWithContext(ctx aws.Context, input *iot.DeleteV2LoggingLevelInput, opts ...request.Option) (*iot.DeleteV2LoggingLevelOutput, error) {
	c.inc("DeleteV2LoggingLevel")
	return c.svc.DeleteV2LoggingLevelWithContext(ctx, input, opts...)
}

// DeprecateThingTypeRequest is a passthrough to the underlying DeprecateThingTypeRequest.
// It will increment the count of requests made to DeprecateThingType.
func (c *IoT) DeprecateThingTypeRequest(input *iot.DeprecateThingTypeInput) (req *request.Request, output *iot.DeprecateThingTypeOutput) {
	c.inc("DeprecateThingType")
	return c.svc.DeprecateThingTypeRequest(input)
}

// DeprecateThingType is a passthrough to the underlying DeprecateThingType method.
// It will increment the count of requests made to DeprecateThingType.
func (c *IoT) DeprecateThingType(input *iot.DeprecateThingTypeInput) (*iot.DeprecateThingTypeOutput, error) {
	c.inc("DeprecateThingType")
	return c.svc.DeprecateThingType(input)
}

// DeprecateThingTypeWithContext is a passthrough to the underlying DeprecateThingTypeWithContext method.
// It will increment the count of requests made to DeprecateThingType.
func (c *IoT) DeprecateThingTypeWithContext(ctx aws.Context, input *iot.DeprecateThingTypeInput, opts ...request.Option) (*iot.DeprecateThingTypeOutput, error) {
	c.inc("DeprecateThingType")
	return c.svc.DeprecateThingTypeWithContext(ctx, input, opts...)
}

// DescribeAuthorizerRequest is a passthrough to the underlying DescribeAuthorizerRequest.
// It will increment the count of requests made to DescribeAuthorizer.
func (c *IoT) DescribeAuthorizerRequest(input *iot.DescribeAuthorizerInput) (req *request.Request, output *iot.DescribeAuthorizerOutput) {
	c.inc("DescribeAuthorizer")
	return c.svc.DescribeAuthorizerRequest(input)
}

// DescribeAuthorizer is a passthrough to the underlying DescribeAuthorizer method.
// It will increment the count of requests made to DescribeAuthorizer.
func (c *IoT) DescribeAuthorizer(input *iot.DescribeAuthorizerInput) (*iot.DescribeAuthorizerOutput, error) {
	c.inc("DescribeAuthorizer")
	return c.svc.DescribeAuthorizer(input)
}

// DescribeAuthorizerWithContext is a passthrough to the underlying DescribeAuthorizerWithContext method.
// It will increment the count of requests made to DescribeAuthorizer.
func (c *IoT) DescribeAuthorizerWithContext(ctx aws.Context, input *iot.DescribeAuthorizerInput, opts ...request.Option) (*iot.DescribeAuthorizerOutput, error) {
	c.inc("DescribeAuthorizer")
	return c.svc.DescribeAuthorizerWithContext(ctx, input, opts...)
}

// DescribeCACertificateRequest is a passthrough to the underlying DescribeCACertificateRequest.
// It will increment the count of requests made to DescribeCACertificate.
func (c *IoT) DescribeCACertificateRequest(input *iot.DescribeCACertificateInput) (req *request.Request, output *iot.DescribeCACertificateOutput) {
	c.inc("DescribeCACertificate")
	return c.svc.DescribeCACertificateRequest(input)
}

// DescribeCACertificate is a passthrough to the underlying DescribeCACertificate method.
// It will increment the count of requests made to DescribeCACertificate.
func (c *IoT) DescribeCACertificate(input *iot.DescribeCACertificateInput) (*iot.DescribeCACertificateOutput, error) {
	c.inc("DescribeCACertificate")
	return c.svc.DescribeCACertificate(input)
}

// DescribeCACertificateWithContext is a passthrough to the underlying DescribeCACertificateWithContext method.
// It will increment the count of requests made to DescribeCACertificate.
func (c *IoT) DescribeCACertificateWithContext(ctx aws.Context, input *iot.DescribeCACertificateInput, opts ...request.Option) (*iot.DescribeCACertificateOutput, error) {
	c.inc("DescribeCACertificate")
	return c.svc.DescribeCACertificateWithContext(ctx, input, opts...)
}

// DescribeCertificateRequest is a passthrough to the underlying DescribeCertificateRequest.
// It will increment the count of requests made to DescribeCertificate.
func (c *IoT) DescribeCertificateRequest(input *iot.DescribeCertificateInput) (req *request.Request, output *iot.DescribeCertificateOutput) {
	c.inc("DescribeCertificate")
	return c.svc.DescribeCertificateRequest(input)
}

// DescribeCertificate is a passthrough to the underlying DescribeCertificate method.
// It will increment the count of requests made to DescribeCertificate.
func (c *IoT) DescribeCertificate(input *iot.DescribeCertificateInput) (*iot.DescribeCertificateOutput, error) {
	c.inc("DescribeCertificate")
	return c.svc.DescribeCertificate(input)
}

// DescribeCertificateWithContext is a passthrough to the underlying DescribeCertificateWithContext method.
// It will increment the count of requests made to DescribeCertificate.
func (c *IoT) DescribeCertificateWithContext(ctx aws.Context, input *iot.DescribeCertificateInput, opts ...request.Option) (*iot.DescribeCertificateOutput, error) {
	c.inc("DescribeCertificate")
	return c.svc.DescribeCertificateWithContext(ctx, input, opts...)
}

// DescribeDefaultAuthorizerRequest is a passthrough to the underlying DescribeDefaultAuthorizerRequest.
// It will increment the count of requests made to DescribeDefaultAuthorizer.
func (c *IoT) DescribeDefaultAuthorizerRequest(input *iot.DescribeDefaultAuthorizerInput) (req *request.Request, output *iot.DescribeDefaultAuthorizerOutput) {
	c.inc("DescribeDefaultAuthorizer")
	return c.svc.DescribeDefaultAuthorizerRequest(input)
}

// DescribeDefaultAuthorizer is a passthrough to the underlying DescribeDefaultAuthorizer method.
// It will increment the count of requests made to DescribeDefaultAuthorizer.
func (c *IoT) DescribeDefaultAuthorizer(input *iot.DescribeDefaultAuthorizerInput) (*iot.DescribeDefaultAuthorizerOutput, error) {
	c.inc("DescribeDefaultAuthorizer")
	return c.svc.DescribeDefaultAuthorizer(input)
}

// DescribeDefaultAuthorizerWithContext is a passthrough to the underlying DescribeDefaultAuthorizerWithContext method.
// It will increment the count of requests made to DescribeDefaultAuthorizer.
func (c *IoT) DescribeDefaultAuthorizerWithContext(ctx aws.Context, input *iot.DescribeDefaultAuthorizerInput, opts ...request.Option) (*iot.DescribeDefaultAuthorizerOutput, error) {
	c.inc("DescribeDefaultAuthorizer")
	return c.svc.DescribeDefaultAuthorizerWithContext(ctx, input, opts...)
}

// DescribeEndpointRequest is a passthrough to the underlying DescribeEndpointRequest.
// It will increment the count of requests made to DescribeEndpoint.
func (c *IoT) DescribeEndpointRequest(input *iot.DescribeEndpointInput) (req *request.Request, output *iot.DescribeEndpointOutput) {
	c.inc("DescribeEndpoint")
	return c.svc.DescribeEndpointRequest(input)
}

// DescribeEndpoint is a passthrough to the underlying DescribeEndpoint method.
// It will increment the count of requests made to DescribeEndpoint.
func (c *IoT) DescribeEndpoint(input *iot.DescribeEndpointInput) (*iot.DescribeEndpointOutput, error) {
	c.inc("DescribeEndpoint")
	return c.svc.DescribeEndpoint(input)
}

// DescribeEndpointWithContext is a passthrough to the underlying DescribeEndpointWithContext method.
// It will increment the count of requests made to DescribeEndpoint.
func (c *IoT) DescribeEndpointWithContext(ctx aws.Context, input *iot.DescribeEndpointInput, opts ...request.Option) (*iot.DescribeEndpointOutput, error) {
	c.inc("DescribeEndpoint")
	return c.svc.DescribeEndpointWithContext(ctx, input, opts...)
}

// DescribeEventConfigurationsRequest is a passthrough to the underlying DescribeEventConfigurationsRequest.
// It will increment the count of requests made to DescribeEventConfigurations.
func (c *IoT) DescribeEventConfigurationsRequest(input *iot.DescribeEventConfigurationsInput) (req *request.Request, output *iot.DescribeEventConfigurationsOutput) {
	c.inc("DescribeEventConfigurations")
	return c.svc.DescribeEventConfigurationsRequest(input)
}

// DescribeEventConfigurations is a passthrough to the underlying DescribeEventConfigurations method.
// It will increment the count of requests made to DescribeEventConfigurations.
func (c *IoT) DescribeEventConfigurations(input *iot.DescribeEventConfigurationsInput) (*iot.DescribeEventConfigurationsOutput, error) {
	c.inc("DescribeEventConfigurations")
	return c.svc.DescribeEventConfigurations(input)
}

// DescribeEventConfigurationsWithContext is a passthrough to the underlying DescribeEventConfigurationsWithContext method.
// It will increment the count of requests made to DescribeEventConfigurations.
func (c *IoT) DescribeEventConfigurationsWithContext(ctx aws.Context, input *iot.DescribeEventConfigurationsInput, opts ...request.Option) (*iot.DescribeEventConfigurationsOutput, error) {
	c.inc("DescribeEventConfigurations")
	return c.svc.DescribeEventConfigurationsWithContext(ctx, input, opts...)
}

// DescribeIndexRequest is a passthrough to the underlying DescribeIndexRequest.
// It will increment the count of requests made to DescribeIndex.
func (c *IoT) DescribeIndexRequest(input *iot.DescribeIndexInput) (req *request.Request, output *iot.DescribeIndexOutput) {
	c.inc("DescribeIndex")
	return c.svc.DescribeIndexRequest(input)
}

// DescribeIndex is a passthrough to the underlying DescribeIndex method.
// It will increment the count of requests made to DescribeIndex.
func (c *IoT) DescribeIndex(input *iot.DescribeIndexInput) (*iot.DescribeIndexOutput, error) {
	c.inc("DescribeIndex")
	return c.svc.DescribeIndex(input)
}

// DescribeIndexWithContext is a passthrough to the underlying DescribeIndexWithContext method.
// It will increment the count of requests made to DescribeIndex.
func (c *IoT) DescribeIndexWithContext(ctx aws.Context, input *iot.DescribeIndexInput, opts ...request.Option) (*iot.DescribeIndexOutput, error) {
	c.inc("DescribeIndex")
	return c.svc.DescribeIndexWithContext(ctx, input, opts...)
}

// DescribeJobRequest is a passthrough to the underlying DescribeJobRequest.
// It will increment the count of requests made to DescribeJob.
func (c *IoT) DescribeJobRequest(input *iot.DescribeJobInput) (req *request.Request, output *iot.DescribeJobOutput) {
	c.inc("DescribeJob")
	return c.svc.DescribeJobRequest(input)
}

// DescribeJob is a passthrough to the underlying DescribeJob method.
// It will increment the count of requests made to DescribeJob.
func (c *IoT) DescribeJob(input *iot.DescribeJobInput) (*iot.DescribeJobOutput, error) {
	c.inc("DescribeJob")
	return c.svc.DescribeJob(input)
}

// DescribeJobWithContext is a passthrough to the underlying DescribeJobWithContext method.
// It will increment the count of requests made to DescribeJob.
func (c *IoT) DescribeJobWithContext(ctx aws.Context, input *iot.DescribeJobInput, opts ...request.Option) (*iot.DescribeJobOutput, error) {
	c.inc("DescribeJob")
	return c.svc.DescribeJobWithContext(ctx, input, opts...)
}

// DescribeJobExecutionRequest is a passthrough to the underlying DescribeJobExecutionRequest.
// It will increment the count of requests made to DescribeJobExecution.
func (c *IoT) DescribeJobExecutionRequest(input *iot.DescribeJobExecutionInput) (req *request.Request, output *iot.DescribeJobExecutionOutput) {
	c.inc("DescribeJobExecution")
	return c.svc.DescribeJobExecutionRequest(input)
}

// DescribeJobExecution is a passthrough to the underlying DescribeJobExecution method.
// It will increment the count of requests made to DescribeJobExecution.
func (c *IoT) DescribeJobExecution(input *iot.DescribeJobExecutionInput) (*iot.DescribeJobExecutionOutput, error) {
	c.inc("DescribeJobExecution")
	return c.svc.DescribeJobExecution(input)
}

// DescribeJobExecutionWithContext is a passthrough to the underlying DescribeJobExecutionWithContext method.
// It will increment the count of requests made to DescribeJobExecution.
func (c *IoT) DescribeJobExecutionWithContext(ctx aws.Context, input *iot.DescribeJobExecutionInput, opts ...request.Option) (*iot.DescribeJobExecutionOutput, error) {
	c.inc("DescribeJobExecution")
	return c.svc.DescribeJobExecutionWithContext(ctx, input, opts...)
}

// DescribeRoleAliasRequest is a passthrough to the underlying DescribeRoleAliasRequest.
// It will increment the count of requests made to DescribeRoleAlias.
func (c *IoT) DescribeRoleAliasRequest(input *iot.DescribeRoleAliasInput) (req *request.Request, output *iot.DescribeRoleAliasOutput) {
	c.inc("DescribeRoleAlias")
	return c.svc.DescribeRoleAliasRequest(input)
}

// DescribeRoleAlias is a passthrough to the underlying DescribeRoleAlias method.
// It will increment the count of requests made to DescribeRoleAlias.
func (c *IoT) DescribeRoleAlias(input *iot.DescribeRoleAliasInput) (*iot.DescribeRoleAliasOutput, error) {
	c.inc("DescribeRoleAlias")
	return c.svc.DescribeRoleAlias(input)
}

// DescribeRoleAliasWithContext is a passthrough to the underlying DescribeRoleAliasWithContext method.
// It will increment the count of requests made to DescribeRoleAlias.
func (c *IoT) DescribeRoleAliasWithContext(ctx aws.Context, input *iot.DescribeRoleAliasInput, opts ...request.Option) (*iot.DescribeRoleAliasOutput, error) {
	c.inc("DescribeRoleAlias")
	return c.svc.DescribeRoleAliasWithContext(ctx, input, opts...)
}

// DescribeStreamRequest is a passthrough to the underlying DescribeStreamRequest.
// It will increment the count of requests made to DescribeStream.
func (c *IoT) DescribeStreamRequest(input *iot.DescribeStreamInput) (req *request.Request, output *iot.DescribeStreamOutput) {
	c.inc("DescribeStream")
	return c.svc.DescribeStreamRequest(input)
}

// DescribeStream is a passthrough to the underlying DescribeStream method.
// It will increment the count of requests made to DescribeStream.
func (c *IoT) DescribeStream(input *iot.DescribeStreamInput) (*iot.DescribeStreamOutput, error) {
	c.inc("DescribeStream")
	return c.svc.DescribeStream(input)
}

// DescribeStreamWithContext is a passthrough to the underlying DescribeStreamWithContext method.
// It will increment the count of requests made to DescribeStream.
func (c *IoT) DescribeStreamWithContext(ctx aws.Context, input *iot.DescribeStreamInput, opts ...request.Option) (*iot.DescribeStreamOutput, error) {
	c.inc("DescribeStream")
	return c.svc.DescribeStreamWithContext(ctx, input, opts...)
}

// DescribeThingRequest is a passthrough to the underlying DescribeThingRequest.
// It will increment the count of requests made to DescribeThing.
func (c *IoT) DescribeThingRequest(input *iot.DescribeThingInput) (req *request.Request, output *iot.DescribeThingOutput) {
	c.inc("DescribeThing")
	return c.svc.DescribeThingRequest(input)
}

// DescribeThing is a passthrough to the underlying DescribeThing method.
// It will increment the count of requests made to DescribeThing.
func (c *IoT) DescribeThing(input *iot.DescribeThingInput) (*iot.DescribeThingOutput, error) {
	c.inc("DescribeThing")
	return c.svc.DescribeThing(input)
}

// DescribeThingWithContext is a passthrough to the underlying DescribeThingWithContext method.
// It will increment the count of requests made to DescribeThing.
func (c *IoT) DescribeThingWithContext(ctx aws.Context, input *iot.DescribeThingInput, opts ...request.Option) (*iot.DescribeThingOutput, error) {
	c.inc("DescribeThing")
	return c.svc.DescribeThingWithContext(ctx, input, opts...)
}

// DescribeThingGroupRequest is a passthrough to the underlying DescribeThingGroupRequest.
// It will increment the count of requests made to DescribeThingGroup.
func (c *IoT) DescribeThingGroupRequest(input *iot.DescribeThingGroupInput) (req *request.Request, output *iot.DescribeThingGroupOutput) {
	c.inc("DescribeThingGroup")
	return c.svc.DescribeThingGroupRequest(input)
}

// DescribeThingGroup is a passthrough to the underlying DescribeThingGroup method.
// It will increment the count of requests made to DescribeThingGroup.
func (c *IoT) DescribeThingGroup(input *iot.DescribeThingGroupInput) (*iot.DescribeThingGroupOutput, error) {
	c.inc("DescribeThingGroup")
	return c.svc.DescribeThingGroup(input)
}

// DescribeThingGroupWithContext is a passthrough to the underlying DescribeThingGroupWithContext method.
// It will increment the count of requests made to DescribeThingGroup.
func (c *IoT) DescribeThingGroupWithContext(ctx aws.Context, input *iot.DescribeThingGroupInput, opts ...request.Option) (*iot.DescribeThingGroupOutput, error) {
	c.inc("DescribeThingGroup")
	return c.svc.DescribeThingGroupWithContext(ctx, input, opts...)
}

// DescribeThingRegistrationTaskRequest is a passthrough to the underlying DescribeThingRegistrationTaskRequest.
// It will increment the count of requests made to DescribeThingRegistrationTask.
func (c *IoT) DescribeThingRegistrationTaskRequest(input *iot.DescribeThingRegistrationTaskInput) (req *request.Request, output *iot.DescribeThingRegistrationTaskOutput) {
	c.inc("DescribeThingRegistrationTask")
	return c.svc.DescribeThingRegistrationTaskRequest(input)
}

// DescribeThingRegistrationTask is a passthrough to the underlying DescribeThingRegistrationTask method.
// It will increment the count of requests made to DescribeThingRegistrationTask.
func (c *IoT) DescribeThingRegistrationTask(input *iot.DescribeThingRegistrationTaskInput) (*iot.DescribeThingRegistrationTaskOutput, error) {
	c.inc("DescribeThingRegistrationTask")
	return c.svc.DescribeThingRegistrationTask(input)
}

// DescribeThingRegistrationTaskWithContext is a passthrough to the underlying DescribeThingRegistrationTaskWithContext method.
// It will increment the count of requests made to DescribeThingRegistrationTask.
func (c *IoT) DescribeThingRegistrationTaskWithContext(ctx aws.Context, input *iot.DescribeThingRegistrationTaskInput, opts ...request.Option) (*iot.DescribeThingRegistrationTaskOutput, error) {
	c.inc("DescribeThingRegistrationTask")
	return c.svc.DescribeThingRegistrationTaskWithContext(ctx, input, opts...)
}

// DescribeThingTypeRequest is a passthrough to the underlying DescribeThingTypeRequest.
// It will increment the count of requests made to DescribeThingType.
func (c *IoT) DescribeThingTypeRequest(input *iot.DescribeThingTypeInput) (req *request.Request, output *iot.DescribeThingTypeOutput) {
	c.inc("DescribeThingType")
	return c.svc.DescribeThingTypeRequest(input)
}

// DescribeThingType is a passthrough to the underlying DescribeThingType method.
// It will increment the count of requests made to DescribeThingType.
func (c *IoT) DescribeThingType(input *iot.DescribeThingTypeInput) (*iot.DescribeThingTypeOutput, error) {
	c.inc("DescribeThingType")
	return c.svc.DescribeThingType(input)
}

// DescribeThingTypeWithContext is a passthrough to the underlying DescribeThingTypeWithContext method.
// It will increment the count of requests made to DescribeThingType.
func (c *IoT) DescribeThingTypeWithContext(ctx aws.Context, input *iot.DescribeThingTypeInput, opts ...request.Option) (*iot.DescribeThingTypeOutput, error) {
	c.inc("DescribeThingType")
	return c.svc.DescribeThingTypeWithContext(ctx, input, opts...)
}

// DetachPolicyRequest is a passthrough to the underlying DetachPolicyRequest.
// It will increment the count of requests made to DetachPolicy.
func (c *IoT) DetachPolicyRequest(input *iot.DetachPolicyInput) (req *request.Request, output *iot.DetachPolicyOutput) {
	c.inc("DetachPolicy")
	return c.svc.DetachPolicyRequest(input)
}

// DetachPolicy is a passthrough to the underlying DetachPolicy method.
// It will increment the count of requests made to DetachPolicy.
func (c *IoT) DetachPolicy(input *iot.DetachPolicyInput) (*iot.DetachPolicyOutput, error) {
	c.inc("DetachPolicy")
	return c.svc.DetachPolicy(input)
}

// DetachPolicyWithContext is a passthrough to the underlying DetachPolicyWithContext method.
// It will increment the count of requests made to DetachPolicy.
func (c *IoT) DetachPolicyWithContext(ctx aws.Context, input *iot.DetachPolicyInput, opts ...request.Option) (*iot.DetachPolicyOutput, error) {
	c.inc("DetachPolicy")
	return c.svc.DetachPolicyWithContext(ctx, input, opts...)
}

// DetachPrincipalPolicyRequest is a passthrough to the underlying DetachPrincipalPolicyRequest.
// It will increment the count of requests made to DetachPrincipalPolicy.
func (c *IoT) DetachPrincipalPolicyRequest(input *iot.DetachPrincipalPolicyInput) (req *request.Request, output *iot.DetachPrincipalPolicyOutput) {
	c.inc("DetachPrincipalPolicy")
	return c.svc.DetachPrincipalPolicyRequest(input)
}

// DetachPrincipalPolicy is a passthrough to the underlying DetachPrincipalPolicy method.
// It will increment the count of requests made to DetachPrincipalPolicy.
func (c *IoT) DetachPrincipalPolicy(input *iot.DetachPrincipalPolicyInput) (*iot.DetachPrincipalPolicyOutput, error) {
	c.inc("DetachPrincipalPolicy")
	return c.svc.DetachPrincipalPolicy(input)
}

// DetachPrincipalPolicyWithContext is a passthrough to the underlying DetachPrincipalPolicyWithContext method.
// It will increment the count of requests made to DetachPrincipalPolicy.
func (c *IoT) DetachPrincipalPolicyWithContext(ctx aws.Context, input *iot.DetachPrincipalPolicyInput, opts ...request.Option) (*iot.DetachPrincipalPolicyOutput, error) {
	c.inc("DetachPrincipalPolicy")
	return c.svc.DetachPrincipalPolicyWithContext(ctx, input, opts...)
}

// DetachThingPrincipalRequest is a passthrough to the underlying DetachThingPrincipalRequest.
// It will increment the count of requests made to DetachThingPrincipal.
func (c *IoT) DetachThingPrincipalRequest(input *iot.DetachThingPrincipalInput) (req *request.Request, output *iot.DetachThingPrincipalOutput) {
	c.inc("DetachThingPrincipal")
	return c.svc.DetachThingPrincipalRequest(input)
}

// DetachThingPrincipal is a passthrough to the underlying DetachThingPrincipal method.
// It will increment the count of requests made to DetachThingPrincipal.
func (c *IoT) DetachThingPrincipal(input *iot.DetachThingPrincipalInput) (*iot.DetachThingPrincipalOutput, error) {
	c.inc("DetachThingPrincipal")
	return c.svc.DetachThingPrincipal(input)
}

// DetachThingPrincipalWithContext is a passthrough to the underlying DetachThingPrincipalWithContext method.
// It will increment the count of requests made to DetachThingPrincipal.
func (c *IoT) DetachThingPrincipalWithContext(ctx aws.Context, input *iot.DetachThingPrincipalInput, opts ...request.Option) (*iot.DetachThingPrincipalOutput, error) {
	c.inc("DetachThingPrincipal")
	return c.svc.DetachThingPrincipalWithContext(ctx, input, opts...)
}

// DisableTopicRuleRequest is a passthrough to the underlying DisableTopicRuleRequest.
// It will increment the count of requests made to DisableTopicRule.
func (c *IoT) DisableTopicRuleRequest(input *iot.DisableTopicRuleInput) (req *request.Request, output *iot.DisableTopicRuleOutput) {
	c.inc("DisableTopicRule")
	return c.svc.DisableTopicRuleRequest(input)
}

// DisableTopicRule is a passthrough to the underlying DisableTopicRule method.
// It will increment the count of requests made to DisableTopicRule.
func (c *IoT) DisableTopicRule(input *iot.DisableTopicRuleInput) (*iot.DisableTopicRuleOutput, error) {
	c.inc("DisableTopicRule")
	return c.svc.DisableTopicRule(input)
}

// DisableTopicRuleWithContext is a passthrough to the underlying DisableTopicRuleWithContext method.
// It will increment the count of requests made to DisableTopicRule.
func (c *IoT) DisableTopicRuleWithContext(ctx aws.Context, input *iot.DisableTopicRuleInput, opts ...request.Option) (*iot.DisableTopicRuleOutput, error) {
	c.inc("DisableTopicRule")
	return c.svc.DisableTopicRuleWithContext(ctx, input, opts...)
}

// EnableTopicRuleRequest is a passthrough to the underlying EnableTopicRuleRequest.
// It will increment the count of requests made to EnableTopicRule.
func (c *IoT) EnableTopicRuleRequest(input *iot.EnableTopicRuleInput) (req *request.Request, output *iot.EnableTopicRuleOutput) {
	c.inc("EnableTopicRule")
	return c.svc.EnableTopicRuleRequest(input)
}

// EnableTopicRule is a passthrough to the underlying EnableTopicRule method.
// It will increment the count of requests made to EnableTopicRule.
func (c *IoT) EnableTopicRule(input *iot.EnableTopicRuleInput) (*iot.EnableTopicRuleOutput, error) {
	c.inc("EnableTopicRule")
	return c.svc.EnableTopicRule(input)
}

// EnableTopicRuleWithContext is a passthrough to the underlying EnableTopicRuleWithContext method.
// It will increment the count of requests made to EnableTopicRule.
func (c *IoT) EnableTopicRuleWithContext(ctx aws.Context, input *iot.EnableTopicRuleInput, opts ...request.Option) (*iot.EnableTopicRuleOutput, error) {
	c.inc("EnableTopicRule")
	return c.svc.EnableTopicRuleWithContext(ctx, input, opts...)
}

// GetEffectivePoliciesRequest is a passthrough to the underlying GetEffectivePoliciesRequest.
// It will increment the count of requests made to GetEffectivePolicies.
func (c *IoT) GetEffectivePoliciesRequest(input *iot.GetEffectivePoliciesInput) (req *request.Request, output *iot.GetEffectivePoliciesOutput) {
	c.inc("GetEffectivePolicies")
	return c.svc.GetEffectivePoliciesRequest(input)
}

// GetEffectivePolicies is a passthrough to the underlying GetEffectivePolicies method.
// It will increment the count of requests made to GetEffectivePolicies.
func (c *IoT) GetEffectivePolicies(input *iot.GetEffectivePoliciesInput) (*iot.GetEffectivePoliciesOutput, error) {
	c.inc("GetEffectivePolicies")
	return c.svc.GetEffectivePolicies(input)
}

// GetEffectivePoliciesWithContext is a passthrough to the underlying GetEffectivePoliciesWithContext method.
// It will increment the count of requests made to GetEffectivePolicies.
func (c *IoT) GetEffectivePoliciesWithContext(ctx aws.Context, input *iot.GetEffectivePoliciesInput, opts ...request.Option) (*iot.GetEffectivePoliciesOutput, error) {
	c.inc("GetEffectivePolicies")
	return c.svc.GetEffectivePoliciesWithContext(ctx, input, opts...)
}

// GetIndexingConfigurationRequest is a passthrough to the underlying GetIndexingConfigurationRequest.
// It will increment the count of requests made to GetIndexingConfiguration.
func (c *IoT) GetIndexingConfigurationRequest(input *iot.GetIndexingConfigurationInput) (req *request.Request, output *iot.GetIndexingConfigurationOutput) {
	c.inc("GetIndexingConfiguration")
	return c.svc.GetIndexingConfigurationRequest(input)
}

// GetIndexingConfiguration is a passthrough to the underlying GetIndexingConfiguration method.
// It will increment the count of requests made to GetIndexingConfiguration.
func (c *IoT) GetIndexingConfiguration(input *iot.GetIndexingConfigurationInput) (*iot.GetIndexingConfigurationOutput, error) {
	c.inc("GetIndexingConfiguration")
	return c.svc.GetIndexingConfiguration(input)
}

// GetIndexingConfigurationWithContext is a passthrough to the underlying GetIndexingConfigurationWithContext method.
// It will increment the count of requests made to GetIndexingConfiguration.
func (c *IoT) GetIndexingConfigurationWithContext(ctx aws.Context, input *iot.GetIndexingConfigurationInput, opts ...request.Option) (*iot.GetIndexingConfigurationOutput, error) {
	c.inc("GetIndexingConfiguration")
	return c.svc.GetIndexingConfigurationWithContext(ctx, input, opts...)
}

// GetJobDocumentRequest is a passthrough to the underlying GetJobDocumentRequest.
// It will increment the count of requests made to GetJobDocument.
func (c *IoT) GetJobDocumentRequest(input *iot.GetJobDocumentInput) (req *request.Request, output *iot.GetJobDocumentOutput) {
	c.inc("GetJobDocument")
	return c.svc.GetJobDocumentRequest(input)
}

// GetJobDocument is a passthrough to the underlying GetJobDocument method.
// It will increment the count of requests made to GetJobDocument.
func (c *IoT) GetJobDocument(input *iot.GetJobDocumentInput) (*iot.GetJobDocumentOutput, error) {
	c.inc("GetJobDocument")
	return c.svc.GetJobDocument(input)
}

// GetJobDocumentWithContext is a passthrough to the underlying GetJobDocumentWithContext method.
// It will increment the count of requests made to GetJobDocument.
func (c *IoT) GetJobDocumentWithContext(ctx aws.Context, input *iot.GetJobDocumentInput, opts ...request.Option) (*iot.GetJobDocumentOutput, error) {
	c.inc("GetJobDocument")
	return c.svc.GetJobDocumentWithContext(ctx, input, opts...)
}

// GetLoggingOptionsRequest is a passthrough to the underlying GetLoggingOptionsRequest.
// It will increment the count of requests made to GetLoggingOptions.
func (c *IoT) GetLoggingOptionsRequest(input *iot.GetLoggingOptionsInput) (req *request.Request, output *iot.GetLoggingOptionsOutput) {
	c.inc("GetLoggingOptions")
	return c.svc.GetLoggingOptionsRequest(input)
}

// GetLoggingOptions is a passthrough to the underlying GetLoggingOptions method.
// It will increment the count of requests made to GetLoggingOptions.
func (c *IoT) GetLoggingOptions(input *iot.GetLoggingOptionsInput) (*iot.GetLoggingOptionsOutput, error) {
	c.inc("GetLoggingOptions")
	return c.svc.GetLoggingOptions(input)
}

// GetLoggingOptionsWithContext is a passthrough to the underlying GetLoggingOptionsWithContext method.
// It will increment the count of requests made to GetLoggingOptions.
func (c *IoT) GetLoggingOptionsWithContext(ctx aws.Context, input *iot.GetLoggingOptionsInput, opts ...request.Option) (*iot.GetLoggingOptionsOutput, error) {
	c.inc("GetLoggingOptions")
	return c.svc.GetLoggingOptionsWithContext(ctx, input, opts...)
}

// GetOTAUpdateRequest is a passthrough to the underlying GetOTAUpdateRequest.
// It will increment the count of requests made to GetOTAUpdate.
func (c *IoT) GetOTAUpdateRequest(input *iot.GetOTAUpdateInput) (req *request.Request, output *iot.GetOTAUpdateOutput) {
	c.inc("GetOTAUpdate")
	return c.svc.GetOTAUpdateRequest(input)
}

// GetOTAUpdate is a passthrough to the underlying GetOTAUpdate method.
// It will increment the count of requests made to GetOTAUpdate.
func (c *IoT) GetOTAUpdate(input *iot.GetOTAUpdateInput) (*iot.GetOTAUpdateOutput, error) {
	c.inc("GetOTAUpdate")
	return c.svc.GetOTAUpdate(input)
}

// GetOTAUpdateWithContext is a passthrough to the underlying GetOTAUpdateWithContext method.
// It will increment the count of requests made to GetOTAUpdate.
func (c *IoT) GetOTAUpdateWithContext(ctx aws.Context, input *iot.GetOTAUpdateInput, opts ...request.Option) (*iot.GetOTAUpdateOutput, error) {
	c.inc("GetOTAUpdate")
	return c.svc.GetOTAUpdateWithContext(ctx, input, opts...)
}

// GetPolicyRequest is a passthrough to the underlying GetPolicyRequest.
// It will increment the count of requests made to GetPolicy.
func (c *IoT) GetPolicyRequest(input *iot.GetPolicyInput) (req *request.Request, output *iot.GetPolicyOutput) {
	c.inc("GetPolicy")
	return c.svc.GetPolicyRequest(input)
}

// GetPolicy is a passthrough to the underlying GetPolicy method.
// It will increment the count of requests made to GetPolicy.
func (c *IoT) GetPolicy(input *iot.GetPolicyInput) (*iot.GetPolicyOutput, error) {
	c.inc("GetPolicy")
	return c.svc.GetPolicy(input)
}

// GetPolicyWithContext is a passthrough to the underlying GetPolicyWithContext method.
// It will increment the count of requests made to GetPolicy.
func (c *IoT) GetPolicyWithContext(ctx aws.Context, input *iot.GetPolicyInput, opts ...request.Option) (*iot.GetPolicyOutput, error) {
	c.inc("GetPolicy")
	return c.svc.GetPolicyWithContext(ctx, input, opts...)
}

// GetPolicyVersionRequest is a passthrough to the underlying GetPolicyVersionRequest.
// It will increment the count of requests made to GetPolicyVersion.
func (c *IoT) GetPolicyVersionRequest(input *iot.GetPolicyVersionInput) (req *request.Request, output *iot.GetPolicyVersionOutput) {
	c.inc("GetPolicyVersion")
	return c.svc.GetPolicyVersionRequest(input)
}

// GetPolicyVersion is a passthrough to the underlying GetPolicyVersion method.
// It will increment the count of requests made to GetPolicyVersion.
func (c *IoT) GetPolicyVersion(input *iot.GetPolicyVersionInput) (*iot.GetPolicyVersionOutput, error) {
	c.inc("GetPolicyVersion")
	return c.svc.GetPolicyVersion(input)
}

// GetPolicyVersionWithContext is a passthrough to the underlying GetPolicyVersionWithContext method.
// It will increment the count of requests made to GetPolicyVersion.
func (c *IoT) GetPolicyVersionWithContext(ctx aws.Context, input *iot.GetPolicyVersionInput, opts ...request.Option) (*iot.GetPolicyVersionOutput, error) {
	c.inc("GetPolicyVersion")
	return c.svc.GetPolicyVersionWithContext(ctx, input, opts...)
}

// GetRegistrationCodeRequest is a passthrough to the underlying GetRegistrationCodeRequest.
// It will increment the count of requests made to GetRegistrationCode.
func (c *IoT) GetRegistrationCodeRequest(input *iot.GetRegistrationCodeInput) (req *request.Request, output *iot.GetRegistrationCodeOutput) {
	c.inc("GetRegistrationCode")
	return c.svc.GetRegistrationCodeRequest(input)
}

// GetRegistrationCode is a passthrough to the underlying GetRegistrationCode method.
// It will increment the count of requests made to GetRegistrationCode.
func (c *IoT) GetRegistrationCode(input *iot.GetRegistrationCodeInput) (*iot.GetRegistrationCodeOutput, error) {
	c.inc("GetRegistrationCode")
	return c.svc.GetRegistrationCode(input)
}

// GetRegistrationCodeWithContext is a passthrough to the underlying GetRegistrationCodeWithContext method.
// It will increment the count of requests made to GetRegistrationCode.
func (c *IoT) GetRegistrationCodeWithContext(ctx aws.Context, input *iot.GetRegistrationCodeInput, opts ...request.Option) (*iot.GetRegistrationCodeOutput, error) {
	c.inc("GetRegistrationCode")
	return c.svc.GetRegistrationCodeWithContext(ctx, input, opts...)
}

// GetTopicRuleRequest is a passthrough to the underlying GetTopicRuleRequest.
// It will increment the count of requests made to GetTopicRule.
func (c *IoT) GetTopicRuleRequest(input *iot.GetTopicRuleInput) (req *request.Request, output *iot.GetTopicRuleOutput) {
	c.inc("GetTopicRule")
	return c.svc.GetTopicRuleRequest(input)
}

// GetTopicRule is a passthrough to the underlying GetTopicRule method.
// It will increment the count of requests made to GetTopicRule.
func (c *IoT) GetTopicRule(input *iot.GetTopicRuleInput) (*iot.GetTopicRuleOutput, error) {
	c.inc("GetTopicRule")
	return c.svc.GetTopicRule(input)
}

// GetTopicRuleWithContext is a passthrough to the underlying GetTopicRuleWithContext method.
// It will increment the count of requests made to GetTopicRule.
func (c *IoT) GetTopicRuleWithContext(ctx aws.Context, input *iot.GetTopicRuleInput, opts ...request.Option) (*iot.GetTopicRuleOutput, error) {
	c.inc("GetTopicRule")
	return c.svc.GetTopicRuleWithContext(ctx, input, opts...)
}

// GetV2LoggingOptionsRequest is a passthrough to the underlying GetV2LoggingOptionsRequest.
// It will increment the count of requests made to GetV2LoggingOptions.
func (c *IoT) GetV2LoggingOptionsRequest(input *iot.GetV2LoggingOptionsInput) (req *request.Request, output *iot.GetV2LoggingOptionsOutput) {
	c.inc("GetV2LoggingOptions")
	return c.svc.GetV2LoggingOptionsRequest(input)
}

// GetV2LoggingOptions is a passthrough to the underlying GetV2LoggingOptions method.
// It will increment the count of requests made to GetV2LoggingOptions.
func (c *IoT) GetV2LoggingOptions(input *iot.GetV2LoggingOptionsInput) (*iot.GetV2LoggingOptionsOutput, error) {
	c.inc("GetV2LoggingOptions")
	return c.svc.GetV2LoggingOptions(input)
}

// GetV2LoggingOptionsWithContext is a passthrough to the underlying GetV2LoggingOptionsWithContext method.
// It will increment the count of requests made to GetV2LoggingOptions.
func (c *IoT) GetV2LoggingOptionsWithContext(ctx aws.Context, input *iot.GetV2LoggingOptionsInput, opts ...request.Option) (*iot.GetV2LoggingOptionsOutput, error) {
	c.inc("GetV2LoggingOptions")
	return c.svc.GetV2LoggingOptionsWithContext(ctx, input, opts...)
}

// ListAttachedPoliciesRequest is a passthrough to the underlying ListAttachedPoliciesRequest.
// It will increment the count of requests made to ListAttachedPolicies.
func (c *IoT) ListAttachedPoliciesRequest(input *iot.ListAttachedPoliciesInput) (req *request.Request, output *iot.ListAttachedPoliciesOutput) {
	c.inc("ListAttachedPolicies")
	return c.svc.ListAttachedPoliciesRequest(input)
}

// ListAttachedPolicies is a passthrough to the underlying ListAttachedPolicies method.
// It will increment the count of requests made to ListAttachedPolicies.
func (c *IoT) ListAttachedPolicies(input *iot.ListAttachedPoliciesInput) (*iot.ListAttachedPoliciesOutput, error) {
	c.inc("ListAttachedPolicies")
	return c.svc.ListAttachedPolicies(input)
}

// ListAttachedPoliciesWithContext is a passthrough to the underlying ListAttachedPoliciesWithContext method.
// It will increment the count of requests made to ListAttachedPolicies.
func (c *IoT) ListAttachedPoliciesWithContext(ctx aws.Context, input *iot.ListAttachedPoliciesInput, opts ...request.Option) (*iot.ListAttachedPoliciesOutput, error) {
	c.inc("ListAttachedPolicies")
	return c.svc.ListAttachedPoliciesWithContext(ctx, input, opts...)
}

// ListAuthorizersRequest is a passthrough to the underlying ListAuthorizersRequest.
// It will increment the count of requests made to ListAuthorizers.
func (c *IoT) ListAuthorizersRequest(input *iot.ListAuthorizersInput) (req *request.Request, output *iot.ListAuthorizersOutput) {
	c.inc("ListAuthorizers")
	return c.svc.ListAuthorizersRequest(input)
}

// ListAuthorizers is a passthrough to the underlying ListAuthorizers method.
// It will increment the count of requests made to ListAuthorizers.
func (c *IoT) ListAuthorizers(input *iot.ListAuthorizersInput) (*iot.ListAuthorizersOutput, error) {
	c.inc("ListAuthorizers")
	return c.svc.ListAuthorizers(input)
}

// ListAuthorizersWithContext is a passthrough to the underlying ListAuthorizersWithContext method.
// It will increment the count of requests made to ListAuthorizers.
func (c *IoT) ListAuthorizersWithContext(ctx aws.Context, input *iot.ListAuthorizersInput, opts ...request.Option) (*iot.ListAuthorizersOutput, error) {
	c.inc("ListAuthorizers")
	return c.svc.ListAuthorizersWithContext(ctx, input, opts...)
}

// ListCACertificatesRequest is a passthrough to the underlying ListCACertificatesRequest.
// It will increment the count of requests made to ListCACertificates.
func (c *IoT) ListCACertificatesRequest(input *iot.ListCACertificatesInput) (req *request.Request, output *iot.ListCACertificatesOutput) {
	c.inc("ListCACertificates")
	return c.svc.ListCACertificatesRequest(input)
}

// ListCACertificates is a passthrough to the underlying ListCACertificates method.
// It will increment the count of requests made to ListCACertificates.
func (c *IoT) ListCACertificates(input *iot.ListCACertificatesInput) (*iot.ListCACertificatesOutput, error) {
	c.inc("ListCACertificates")
	return c.svc.ListCACertificates(input)
}

// ListCACertificatesWithContext is a passthrough to the underlying ListCACertificatesWithContext method.
// It will increment the count of requests made to ListCACertificates.
func (c *IoT) ListCACertificatesWithContext(ctx aws.Context, input *iot.ListCACertificatesInput, opts ...request.Option) (*iot.ListCACertificatesOutput, error) {
	c.inc("ListCACertificates")
	return c.svc.ListCACertificatesWithContext(ctx, input, opts...)
}

// ListCertificatesRequest is a passthrough to the underlying ListCertificatesRequest.
// It will increment the count of requests made to ListCertificates.
func (c *IoT) ListCertificatesRequest(input *iot.ListCertificatesInput) (req *request.Request, output *iot.ListCertificatesOutput) {
	c.inc("ListCertificates")
	return c.svc.ListCertificatesRequest(input)
}

// ListCertificates is a passthrough to the underlying ListCertificates method.
// It will increment the count of requests made to ListCertificates.
func (c *IoT) ListCertificates(input *iot.ListCertificatesInput) (*iot.ListCertificatesOutput, error) {
	c.inc("ListCertificates")
	return c.svc.ListCertificates(input)
}

// ListCertificatesWithContext is a passthrough to the underlying ListCertificatesWithContext method.
// It will increment the count of requests made to ListCertificates.
func (c *IoT) ListCertificatesWithContext(ctx aws.Context, input *iot.ListCertificatesInput, opts ...request.Option) (*iot.ListCertificatesOutput, error) {
	c.inc("ListCertificates")
	return c.svc.ListCertificatesWithContext(ctx, input, opts...)
}

// ListCertificatesByCARequest is a passthrough to the underlying ListCertificatesByCARequest.
// It will increment the count of requests made to ListCertificatesByCA.
func (c *IoT) ListCertificatesByCARequest(input *iot.ListCertificatesByCAInput) (req *request.Request, output *iot.ListCertificatesByCAOutput) {
	c.inc("ListCertificatesByCA")
	return c.svc.ListCertificatesByCARequest(input)
}

// ListCertificatesByCA is a passthrough to the underlying ListCertificatesByCA method.
// It will increment the count of requests made to ListCertificatesByCA.
func (c *IoT) ListCertificatesByCA(input *iot.ListCertificatesByCAInput) (*iot.ListCertificatesByCAOutput, error) {
	c.inc("ListCertificatesByCA")
	return c.svc.ListCertificatesByCA(input)
}

// ListCertificatesByCAWithContext is a passthrough to the underlying ListCertificatesByCAWithContext method.
// It will increment the count of requests made to ListCertificatesByCA.
func (c *IoT) ListCertificatesByCAWithContext(ctx aws.Context, input *iot.ListCertificatesByCAInput, opts ...request.Option) (*iot.ListCertificatesByCAOutput, error) {
	c.inc("ListCertificatesByCA")
	return c.svc.ListCertificatesByCAWithContext(ctx, input, opts...)
}

// ListIndicesRequest is a passthrough to the underlying ListIndicesRequest.
// It will increment the count of requests made to ListIndices.
func (c *IoT) ListIndicesRequest(input *iot.ListIndicesInput) (req *request.Request, output *iot.ListIndicesOutput) {
	c.inc("ListIndices")
	return c.svc.ListIndicesRequest(input)
}

// ListIndices is a passthrough to the underlying ListIndices method.
// It will increment the count of requests made to ListIndices.
func (c *IoT) ListIndices(input *iot.ListIndicesInput) (*iot.ListIndicesOutput, error) {
	c.inc("ListIndices")
	return c.svc.ListIndices(input)
}

// ListIndicesWithContext is a passthrough to the underlying ListIndicesWithContext method.
// It will increment the count of requests made to ListIndices.
func (c *IoT) ListIndicesWithContext(ctx aws.Context, input *iot.ListIndicesInput, opts ...request.Option) (*iot.ListIndicesOutput, error) {
	c.inc("ListIndices")
	return c.svc.ListIndicesWithContext(ctx, input, opts...)
}

// ListJobExecutionsForJobRequest is a passthrough to the underlying ListJobExecutionsForJobRequest.
// It will increment the count of requests made to ListJobExecutionsForJob.
func (c *IoT) ListJobExecutionsForJobRequest(input *iot.ListJobExecutionsForJobInput) (req *request.Request, output *iot.ListJobExecutionsForJobOutput) {
	c.inc("ListJobExecutionsForJob")
	return c.svc.ListJobExecutionsForJobRequest(input)
}

// ListJobExecutionsForJob is a passthrough to the underlying ListJobExecutionsForJob method.
// It will increment the count of requests made to ListJobExecutionsForJob.
func (c *IoT) ListJobExecutionsForJob(input *iot.ListJobExecutionsForJobInput) (*iot.ListJobExecutionsForJobOutput, error) {
	c.inc("ListJobExecutionsForJob")
	return c.svc.ListJobExecutionsForJob(input)
}

// ListJobExecutionsForJobWithContext is a passthrough to the underlying ListJobExecutionsForJobWithContext method.
// It will increment the count of requests made to ListJobExecutionsForJob.
func (c *IoT) ListJobExecutionsForJobWithContext(ctx aws.Context, input *iot.ListJobExecutionsForJobInput, opts ...request.Option) (*iot.ListJobExecutionsForJobOutput, error) {
	c.inc("ListJobExecutionsForJob")
	return c.svc.ListJobExecutionsForJobWithContext(ctx, input, opts...)
}

// ListJobExecutionsForThingRequest is a passthrough to the underlying ListJobExecutionsForThingRequest.
// It will increment the count of requests made to ListJobExecutionsForThing.
func (c *IoT) ListJobExecutionsForThingRequest(input *iot.ListJobExecutionsForThingInput) (req *request.Request, output *iot.ListJobExecutionsForThingOutput) {
	c.inc("ListJobExecutionsForThing")
	return c.svc.ListJobExecutionsForThingRequest(input)
}

// ListJobExecutionsForThing is a passthrough to the underlying ListJobExecutionsForThing method.
// It will increment the count of requests made to ListJobExecutionsForThing.
func (c *IoT) ListJobExecutionsForThing(input *iot.ListJobExecutionsForThingInput) (*iot.ListJobExecutionsForThingOutput, error) {
	c.inc("ListJobExecutionsForThing")
	return c.svc.ListJobExecutionsForThing(input)
}

// ListJobExecutionsForThingWithContext is a passthrough to the underlying ListJobExecutionsForThingWithContext method.
// It will increment the count of requests made to ListJobExecutionsForThing.
func (c *IoT) ListJobExecutionsForThingWithContext(ctx aws.Context, input *iot.ListJobExecutionsForThingInput, opts ...request.Option) (*iot.ListJobExecutionsForThingOutput, error) {
	c.inc("ListJobExecutionsForThing")
	return c.svc.ListJobExecutionsForThingWithContext(ctx, input, opts...)
}

// ListJobsRequest is a passthrough to the underlying ListJobsRequest.
// It will increment the count of requests made to ListJobs.
func (c *IoT) ListJobsRequest(input *iot.ListJobsInput) (req *request.Request, output *iot.ListJobsOutput) {
	c.inc("ListJobs")
	return c.svc.ListJobsRequest(input)
}

// ListJobs is a passthrough to the underlying ListJobs method.
// It will increment the count of requests made to ListJobs.
func (c *IoT) ListJobs(input *iot.ListJobsInput) (*iot.ListJobsOutput, error) {
	c.inc("ListJobs")
	return c.svc.ListJobs(input)
}

// ListJobsWithContext is a passthrough to the underlying ListJobsWithContext method.
// It will increment the count of requests made to ListJobs.
func (c *IoT) ListJobsWithContext(ctx aws.Context, input *iot.ListJobsInput, opts ...request.Option) (*iot.ListJobsOutput, error) {
	c.inc("ListJobs")
	return c.svc.ListJobsWithContext(ctx, input, opts...)
}

// ListOTAUpdatesRequest is a passthrough to the underlying ListOTAUpdatesRequest.
// It will increment the count of requests made to ListOTAUpdates.
func (c *IoT) ListOTAUpdatesRequest(input *iot.ListOTAUpdatesInput) (req *request.Request, output *iot.ListOTAUpdatesOutput) {
	c.inc("ListOTAUpdates")
	return c.svc.ListOTAUpdatesRequest(input)
}

// ListOTAUpdates is a passthrough to the underlying ListOTAUpdates method.
// It will increment the count of requests made to ListOTAUpdates.
func (c *IoT) ListOTAUpdates(input *iot.ListOTAUpdatesInput) (*iot.ListOTAUpdatesOutput, error) {
	c.inc("ListOTAUpdates")
	return c.svc.ListOTAUpdates(input)
}

// ListOTAUpdatesWithContext is a passthrough to the underlying ListOTAUpdatesWithContext method.
// It will increment the count of requests made to ListOTAUpdates.
func (c *IoT) ListOTAUpdatesWithContext(ctx aws.Context, input *iot.ListOTAUpdatesInput, opts ...request.Option) (*iot.ListOTAUpdatesOutput, error) {
	c.inc("ListOTAUpdates")
	return c.svc.ListOTAUpdatesWithContext(ctx, input, opts...)
}

// ListOutgoingCertificatesRequest is a passthrough to the underlying ListOutgoingCertificatesRequest.
// It will increment the count of requests made to ListOutgoingCertificates.
func (c *IoT) ListOutgoingCertificatesRequest(input *iot.ListOutgoingCertificatesInput) (req *request.Request, output *iot.ListOutgoingCertificatesOutput) {
	c.inc("ListOutgoingCertificates")
	return c.svc.ListOutgoingCertificatesRequest(input)
}

// ListOutgoingCertificates is a passthrough to the underlying ListOutgoingCertificates method.
// It will increment the count of requests made to ListOutgoingCertificates.
func (c *IoT) ListOutgoingCertificates(input *iot.ListOutgoingCertificatesInput) (*iot.ListOutgoingCertificatesOutput, error) {
	c.inc("ListOutgoingCertificates")
	return c.svc.ListOutgoingCertificates(input)
}

// ListOutgoingCertificatesWithContext is a passthrough to the underlying ListOutgoingCertificatesWithContext method.
// It will increment the count of requests made to ListOutgoingCertificates.
func (c *IoT) ListOutgoingCertificatesWithContext(ctx aws.Context, input *iot.ListOutgoingCertificatesInput, opts ...request.Option) (*iot.ListOutgoingCertificatesOutput, error) {
	c.inc("ListOutgoingCertificates")
	return c.svc.ListOutgoingCertificatesWithContext(ctx, input, opts...)
}

// ListPoliciesRequest is a passthrough to the underlying ListPoliciesRequest.
// It will increment the count of requests made to ListPolicies.
func (c *IoT) ListPoliciesRequest(input *iot.ListPoliciesInput) (req *request.Request, output *iot.ListPoliciesOutput) {
	c.inc("ListPolicies")
	return c.svc.ListPoliciesRequest(input)
}

// ListPolicies is a passthrough to the underlying ListPolicies method.
// It will increment the count of requests made to ListPolicies.
func (c *IoT) ListPolicies(input *iot.ListPoliciesInput) (*iot.ListPoliciesOutput, error) {
	c.inc("ListPolicies")
	return c.svc.ListPolicies(input)
}

// ListPoliciesWithContext is a passthrough to the underlying ListPoliciesWithContext method.
// It will increment the count of requests made to ListPolicies.
func (c *IoT) ListPoliciesWithContext(ctx aws.Context, input *iot.ListPoliciesInput, opts ...request.Option) (*iot.ListPoliciesOutput, error) {
	c.inc("ListPolicies")
	return c.svc.ListPoliciesWithContext(ctx, input, opts...)
}

// ListPolicyPrincipalsRequest is a passthrough to the underlying ListPolicyPrincipalsRequest.
// It will increment the count of requests made to ListPolicyPrincipals.
func (c *IoT) ListPolicyPrincipalsRequest(input *iot.ListPolicyPrincipalsInput) (req *request.Request, output *iot.ListPolicyPrincipalsOutput) {
	c.inc("ListPolicyPrincipals")
	return c.svc.ListPolicyPrincipalsRequest(input)
}

// ListPolicyPrincipals is a passthrough to the underlying ListPolicyPrincipals method.
// It will increment the count of requests made to ListPolicyPrincipals.
func (c *IoT) ListPolicyPrincipals(input *iot.ListPolicyPrincipalsInput) (*iot.ListPolicyPrincipalsOutput, error) {
	c.inc("ListPolicyPrincipals")
	return c.svc.ListPolicyPrincipals(input)
}

// ListPolicyPrincipalsWithContext is a passthrough to the underlying ListPolicyPrincipalsWithContext method.
// It will increment the count of requests made to ListPolicyPrincipals.
func (c *IoT) ListPolicyPrincipalsWithContext(ctx aws.Context, input *iot.ListPolicyPrincipalsInput, opts ...request.Option) (*iot.ListPolicyPrincipalsOutput, error) {
	c.inc("ListPolicyPrincipals")
	return c.svc.ListPolicyPrincipalsWithContext(ctx, input, opts...)
}

// ListPolicyVersionsRequest is a passthrough to the underlying ListPolicyVersionsRequest.
// It will increment the count of requests made to ListPolicyVersions.
func (c *IoT) ListPolicyVersionsRequest(input *iot.ListPolicyVersionsInput) (req *request.Request, output *iot.ListPolicyVersionsOutput) {
	c.inc("ListPolicyVersions")
	return c.svc.ListPolicyVersionsRequest(input)
}

// ListPolicyVersions is a passthrough to the underlying ListPolicyVersions method.
// It will increment the count of requests made to ListPolicyVersions.
func (c *IoT) ListPolicyVersions(input *iot.ListPolicyVersionsInput) (*iot.ListPolicyVersionsOutput, error) {
	c.inc("ListPolicyVersions")
	return c.svc.ListPolicyVersions(input)
}

// ListPolicyVersionsWithContext is a passthrough to the underlying ListPolicyVersionsWithContext method.
// It will increment the count of requests made to ListPolicyVersions.
func (c *IoT) ListPolicyVersionsWithContext(ctx aws.Context, input *iot.ListPolicyVersionsInput, opts ...request.Option) (*iot.ListPolicyVersionsOutput, error) {
	c.inc("ListPolicyVersions")
	return c.svc.ListPolicyVersionsWithContext(ctx, input, opts...)
}

// ListPrincipalPoliciesRequest is a passthrough to the underlying ListPrincipalPoliciesRequest.
// It will increment the count of requests made to ListPrincipalPolicies.
func (c *IoT) ListPrincipalPoliciesRequest(input *iot.ListPrincipalPoliciesInput) (req *request.Request, output *iot.ListPrincipalPoliciesOutput) {
	c.inc("ListPrincipalPolicies")
	return c.svc.ListPrincipalPoliciesRequest(input)
}

// ListPrincipalPolicies is a passthrough to the underlying ListPrincipalPolicies method.
// It will increment the count of requests made to ListPrincipalPolicies.
func (c *IoT) ListPrincipalPolicies(input *iot.ListPrincipalPoliciesInput) (*iot.ListPrincipalPoliciesOutput, error) {
	c.inc("ListPrincipalPolicies")
	return c.svc.ListPrincipalPolicies(input)
}

// ListPrincipalPoliciesWithContext is a passthrough to the underlying ListPrincipalPoliciesWithContext method.
// It will increment the count of requests made to ListPrincipalPolicies.
func (c *IoT) ListPrincipalPoliciesWithContext(ctx aws.Context, input *iot.ListPrincipalPoliciesInput, opts ...request.Option) (*iot.ListPrincipalPoliciesOutput, error) {
	c.inc("ListPrincipalPolicies")
	return c.svc.ListPrincipalPoliciesWithContext(ctx, input, opts...)
}

// ListPrincipalThingsRequest is a passthrough to the underlying ListPrincipalThingsRequest.
// It will increment the count of requests made to ListPrincipalThings.
func (c *IoT) ListPrincipalThingsRequest(input *iot.ListPrincipalThingsInput) (req *request.Request, output *iot.ListPrincipalThingsOutput) {
	c.inc("ListPrincipalThings")
	return c.svc.ListPrincipalThingsRequest(input)
}

// ListPrincipalThings is a passthrough to the underlying ListPrincipalThings method.
// It will increment the count of requests made to ListPrincipalThings.
func (c *IoT) ListPrincipalThings(input *iot.ListPrincipalThingsInput) (*iot.ListPrincipalThingsOutput, error) {
	c.inc("ListPrincipalThings")
	return c.svc.ListPrincipalThings(input)
}

// ListPrincipalThingsWithContext is a passthrough to the underlying ListPrincipalThingsWithContext method.
// It will increment the count of requests made to ListPrincipalThings.
func (c *IoT) ListPrincipalThingsWithContext(ctx aws.Context, input *iot.ListPrincipalThingsInput, opts ...request.Option) (*iot.ListPrincipalThingsOutput, error) {
	c.inc("ListPrincipalThings")
	return c.svc.ListPrincipalThingsWithContext(ctx, input, opts...)
}

// ListRoleAliasesRequest is a passthrough to the underlying ListRoleAliasesRequest.
// It will increment the count of requests made to ListRoleAliases.
func (c *IoT) ListRoleAliasesRequest(input *iot.ListRoleAliasesInput) (req *request.Request, output *iot.ListRoleAliasesOutput) {
	c.inc("ListRoleAliases")
	return c.svc.ListRoleAliasesRequest(input)
}

// ListRoleAliases is a passthrough to the underlying ListRoleAliases method.
// It will increment the count of requests made to ListRoleAliases.
func (c *IoT) ListRoleAliases(input *iot.ListRoleAliasesInput) (*iot.ListRoleAliasesOutput, error) {
	c.inc("ListRoleAliases")
	return c.svc.ListRoleAliases(input)
}

// ListRoleAliasesWithContext is a passthrough to the underlying ListRoleAliasesWithContext method.
// It will increment the count of requests made to ListRoleAliases.
func (c *IoT) ListRoleAliasesWithContext(ctx aws.Context, input *iot.ListRoleAliasesInput, opts ...request.Option) (*iot.ListRoleAliasesOutput, error) {
	c.inc("ListRoleAliases")
	return c.svc.ListRoleAliasesWithContext(ctx, input, opts...)
}

// ListStreamsRequest is a passthrough to the underlying ListStreamsRequest.
// It will increment the count of requests made to ListStreams.
func (c *IoT) ListStreamsRequest(input *iot.ListStreamsInput) (req *request.Request, output *iot.ListStreamsOutput) {
	c.inc("ListStreams")
	return c.svc.ListStreamsRequest(input)
}

// ListStreams is a passthrough to the underlying ListStreams method.
// It will increment the count of requests made to ListStreams.
func (c *IoT) ListStreams(input *iot.ListStreamsInput) (*iot.ListStreamsOutput, error) {
	c.inc("ListStreams")
	return c.svc.ListStreams(input)
}

// ListStreamsWithContext is a passthrough to the underlying ListStreamsWithContext method.
// It will increment the count of requests made to ListStreams.
func (c *IoT) ListStreamsWithContext(ctx aws.Context, input *iot.ListStreamsInput, opts ...request.Option) (*iot.ListStreamsOutput, error) {
	c.inc("ListStreams")
	return c.svc.ListStreamsWithContext(ctx, input, opts...)
}

// ListTargetsForPolicyRequest is a passthrough to the underlying ListTargetsForPolicyRequest.
// It will increment the count of requests made to ListTargetsForPolicy.
func (c *IoT) ListTargetsForPolicyRequest(input *iot.ListTargetsForPolicyInput) (req *request.Request, output *iot.ListTargetsForPolicyOutput) {
	c.inc("ListTargetsForPolicy")
	return c.svc.ListTargetsForPolicyRequest(input)
}

// ListTargetsForPolicy is a passthrough to the underlying ListTargetsForPolicy method.
// It will increment the count of requests made to ListTargetsForPolicy.
func (c *IoT) ListTargetsForPolicy(input *iot.ListTargetsForPolicyInput) (*iot.ListTargetsForPolicyOutput, error) {
	c.inc("ListTargetsForPolicy")
	return c.svc.ListTargetsForPolicy(input)
}

// ListTargetsForPolicyWithContext is a passthrough to the underlying ListTargetsForPolicyWithContext method.
// It will increment the count of requests made to ListTargetsForPolicy.
func (c *IoT) ListTargetsForPolicyWithContext(ctx aws.Context, input *iot.ListTargetsForPolicyInput, opts ...request.Option) (*iot.ListTargetsForPolicyOutput, error) {
	c.inc("ListTargetsForPolicy")
	return c.svc.ListTargetsForPolicyWithContext(ctx, input, opts...)
}

// ListThingGroupsRequest is a passthrough to the underlying ListThingGroupsRequest.
// It will increment the count of requests made to ListThingGroups.
func (c *IoT) ListThingGroupsRequest(input *iot.ListThingGroupsInput) (req *request.Request, output *iot.ListThingGroupsOutput) {
	c.inc("ListThingGroups")
	return c.svc.ListThingGroupsRequest(input)
}

// ListThingGroups is a passthrough to the underlying ListThingGroups method.
// It will increment the count of requests made to ListThingGroups.
func (c *IoT) ListThingGroups(input *iot.ListThingGroupsInput) (*iot.ListThingGroupsOutput, error) {
	c.inc("ListThingGroups")
	return c.svc.ListThingGroups(input)
}

// ListThingGroupsWithContext is a passthrough to the underlying ListThingGroupsWithContext method.
// It will increment the count of requests made to ListThingGroups.
func (c *IoT) ListThingGroupsWithContext(ctx aws.Context, input *iot.ListThingGroupsInput, opts ...request.Option) (*iot.ListThingGroupsOutput, error) {
	c.inc("ListThingGroups")
	return c.svc.ListThingGroupsWithContext(ctx, input, opts...)
}

// ListThingGroupsForThingRequest is a passthrough to the underlying ListThingGroupsForThingRequest.
// It will increment the count of requests made to ListThingGroupsForThing.
func (c *IoT) ListThingGroupsForThingRequest(input *iot.ListThingGroupsForThingInput) (req *request.Request, output *iot.ListThingGroupsForThingOutput) {
	c.inc("ListThingGroupsForThing")
	return c.svc.ListThingGroupsForThingRequest(input)
}

// ListThingGroupsForThing is a passthrough to the underlying ListThingGroupsForThing method.
// It will increment the count of requests made to ListThingGroupsForThing.
func (c *IoT) ListThingGroupsForThing(input *iot.ListThingGroupsForThingInput) (*iot.ListThingGroupsForThingOutput, error) {
	c.inc("ListThingGroupsForThing")
	return c.svc.ListThingGroupsForThing(input)
}

// ListThingGroupsForThingWithContext is a passthrough to the underlying ListThingGroupsForThingWithContext method.
// It will increment the count of requests made to ListThingGroupsForThing.
func (c *IoT) ListThingGroupsForThingWithContext(ctx aws.Context, input *iot.ListThingGroupsForThingInput, opts ...request.Option) (*iot.ListThingGroupsForThingOutput, error) {
	c.inc("ListThingGroupsForThing")
	return c.svc.ListThingGroupsForThingWithContext(ctx, input, opts...)
}

// ListThingPrincipalsRequest is a passthrough to the underlying ListThingPrincipalsRequest.
// It will increment the count of requests made to ListThingPrincipals.
func (c *IoT) ListThingPrincipalsRequest(input *iot.ListThingPrincipalsInput) (req *request.Request, output *iot.ListThingPrincipalsOutput) {
	c.inc("ListThingPrincipals")
	return c.svc.ListThingPrincipalsRequest(input)
}

// ListThingPrincipals is a passthrough to the underlying ListThingPrincipals method.
// It will increment the count of requests made to ListThingPrincipals.
func (c *IoT) ListThingPrincipals(input *iot.ListThingPrincipalsInput) (*iot.ListThingPrincipalsOutput, error) {
	c.inc("ListThingPrincipals")
	return c.svc.ListThingPrincipals(input)
}

// ListThingPrincipalsWithContext is a passthrough to the underlying ListThingPrincipalsWithContext method.
// It will increment the count of requests made to ListThingPrincipals.
func (c *IoT) ListThingPrincipalsWithContext(ctx aws.Context, input *iot.ListThingPrincipalsInput, opts ...request.Option) (*iot.ListThingPrincipalsOutput, error) {
	c.inc("ListThingPrincipals")
	return c.svc.ListThingPrincipalsWithContext(ctx, input, opts...)
}

// ListThingRegistrationTaskReportsRequest is a passthrough to the underlying ListThingRegistrationTaskReportsRequest.
// It will increment the count of requests made to ListThingRegistrationTaskReports.
func (c *IoT) ListThingRegistrationTaskReportsRequest(input *iot.ListThingRegistrationTaskReportsInput) (req *request.Request, output *iot.ListThingRegistrationTaskReportsOutput) {
	c.inc("ListThingRegistrationTaskReports")
	return c.svc.ListThingRegistrationTaskReportsRequest(input)
}

// ListThingRegistrationTaskReports is a passthrough to the underlying ListThingRegistrationTaskReports method.
// It will increment the count of requests made to ListThingRegistrationTaskReports.
func (c *IoT) ListThingRegistrationTaskReports(input *iot.ListThingRegistrationTaskReportsInput) (*iot.ListThingRegistrationTaskReportsOutput, error) {
	c.inc("ListThingRegistrationTaskReports")
	return c.svc.ListThingRegistrationTaskReports(input)
}

// ListThingRegistrationTaskReportsWithContext is a passthrough to the underlying ListThingRegistrationTaskReportsWithContext method.
// It will increment the count of requests made to ListThingRegistrationTaskReports.
func (c *IoT) ListThingRegistrationTaskReportsWithContext(ctx aws.Context, input *iot.ListThingRegistrationTaskReportsInput, opts ...request.Option) (*iot.ListThingRegistrationTaskReportsOutput, error) {
	c.inc("ListThingRegistrationTaskReports")
	return c.svc.ListThingRegistrationTaskReportsWithContext(ctx, input, opts...)
}

// ListThingRegistrationTasksRequest is a passthrough to the underlying ListThingRegistrationTasksRequest.
// It will increment the count of requests made to ListThingRegistrationTasks.
func (c *IoT) ListThingRegistrationTasksRequest(input *iot.ListThingRegistrationTasksInput) (req *request.Request, output *iot.ListThingRegistrationTasksOutput) {
	c.inc("ListThingRegistrationTasks")
	return c.svc.ListThingRegistrationTasksRequest(input)
}

// ListThingRegistrationTasks is a passthrough to the underlying ListThingRegistrationTasks method.
// It will increment the count of requests made to ListThingRegistrationTasks.
func (c *IoT) ListThingRegistrationTasks(input *iot.ListThingRegistrationTasksInput) (*iot.ListThingRegistrationTasksOutput, error) {
	c.inc("ListThingRegistrationTasks")
	return c.svc.ListThingRegistrationTasks(input)
}

// ListThingRegistrationTasksWithContext is a passthrough to the underlying ListThingRegistrationTasksWithContext method.
// It will increment the count of requests made to ListThingRegistrationTasks.
func (c *IoT) ListThingRegistrationTasksWithContext(ctx aws.Context, input *iot.ListThingRegistrationTasksInput, opts ...request.Option) (*iot.ListThingRegistrationTasksOutput, error) {
	c.inc("ListThingRegistrationTasks")
	return c.svc.ListThingRegistrationTasksWithContext(ctx, input, opts...)
}

// ListThingTypesRequest is a passthrough to the underlying ListThingTypesRequest.
// It will increment the count of requests made to ListThingTypes.
func (c *IoT) ListThingTypesRequest(input *iot.ListThingTypesInput) (req *request.Request, output *iot.ListThingTypesOutput) {
	c.inc("ListThingTypes")
	return c.svc.ListThingTypesRequest(input)
}

// ListThingTypes is a passthrough to the underlying ListThingTypes method.
// It will increment the count of requests made to ListThingTypes.
func (c *IoT) ListThingTypes(input *iot.ListThingTypesInput) (*iot.ListThingTypesOutput, error) {
	c.inc("ListThingTypes")
	return c.svc.ListThingTypes(input)
}

// ListThingTypesWithContext is a passthrough to the underlying ListThingTypesWithContext method.
// It will increment the count of requests made to ListThingTypes.
func (c *IoT) ListThingTypesWithContext(ctx aws.Context, input *iot.ListThingTypesInput, opts ...request.Option) (*iot.ListThingTypesOutput, error) {
	c.inc("ListThingTypes")
	return c.svc.ListThingTypesWithContext(ctx, input, opts...)
}

// ListThingsRequest is a passthrough to the underlying ListThingsRequest.
// It will increment the count of requests made to ListThings.
func (c *IoT) ListThingsRequest(input *iot.ListThingsInput) (req *request.Request, output *iot.ListThingsOutput) {
	c.inc("ListThings")
	return c.svc.ListThingsRequest(input)
}

// ListThings is a passthrough to the underlying ListThings method.
// It will increment the count of requests made to ListThings.
func (c *IoT) ListThings(input *iot.ListThingsInput) (*iot.ListThingsOutput, error) {
	c.inc("ListThings")
	return c.svc.ListThings(input)
}

// ListThingsWithContext is a passthrough to the underlying ListThingsWithContext method.
// It will increment the count of requests made to ListThings.
func (c *IoT) ListThingsWithContext(ctx aws.Context, input *iot.ListThingsInput, opts ...request.Option) (*iot.ListThingsOutput, error) {
	c.inc("ListThings")
	return c.svc.ListThingsWithContext(ctx, input, opts...)
}

// ListThingsInThingGroupRequest is a passthrough to the underlying ListThingsInThingGroupRequest.
// It will increment the count of requests made to ListThingsInThingGroup.
func (c *IoT) ListThingsInThingGroupRequest(input *iot.ListThingsInThingGroupInput) (req *request.Request, output *iot.ListThingsInThingGroupOutput) {
	c.inc("ListThingsInThingGroup")
	return c.svc.ListThingsInThingGroupRequest(input)
}

// ListThingsInThingGroup is a passthrough to the underlying ListThingsInThingGroup method.
// It will increment the count of requests made to ListThingsInThingGroup.
func (c *IoT) ListThingsInThingGroup(input *iot.ListThingsInThingGroupInput) (*iot.ListThingsInThingGroupOutput, error) {
	c.inc("ListThingsInThingGroup")
	return c.svc.ListThingsInThingGroup(input)
}

// ListThingsInThingGroupWithContext is a passthrough to the underlying ListThingsInThingGroupWithContext method.
// It will increment the count of requests made to ListThingsInThingGroup.
func (c *IoT) ListThingsInThingGroupWithContext(ctx aws.Context, input *iot.ListThingsInThingGroupInput, opts ...request.Option) (*iot.ListThingsInThingGroupOutput, error) {
	c.inc("ListThingsInThingGroup")
	return c.svc.ListThingsInThingGroupWithContext(ctx, input, opts...)
}

// ListTopicRulesRequest is a passthrough to the underlying ListTopicRulesRequest.
// It will increment the count of requests made to ListTopicRules.
func (c *IoT) ListTopicRulesRequest(input *iot.ListTopicRulesInput) (req *request.Request, output *iot.ListTopicRulesOutput) {
	c.inc("ListTopicRules")
	return c.svc.ListTopicRulesRequest(input)
}

// ListTopicRules is a passthrough to the underlying ListTopicRules method.
// It will increment the count of requests made to ListTopicRules.
func (c *IoT) ListTopicRules(input *iot.ListTopicRulesInput) (*iot.ListTopicRulesOutput, error) {
	c.inc("ListTopicRules")
	return c.svc.ListTopicRules(input)
}

// ListTopicRulesWithContext is a passthrough to the underlying ListTopicRulesWithContext method.
// It will increment the count of requests made to ListTopicRules.
func (c *IoT) ListTopicRulesWithContext(ctx aws.Context, input *iot.ListTopicRulesInput, opts ...request.Option) (*iot.ListTopicRulesOutput, error) {
	c.inc("ListTopicRules")
	return c.svc.ListTopicRulesWithContext(ctx, input, opts...)
}

// ListV2LoggingLevelsRequest is a passthrough to the underlying ListV2LoggingLevelsRequest.
// It will increment the count of requests made to ListV2LoggingLevels.
func (c *IoT) ListV2LoggingLevelsRequest(input *iot.ListV2LoggingLevelsInput) (req *request.Request, output *iot.ListV2LoggingLevelsOutput) {
	c.inc("ListV2LoggingLevels")
	return c.svc.ListV2LoggingLevelsRequest(input)
}

// ListV2LoggingLevels is a passthrough to the underlying ListV2LoggingLevels method.
// It will increment the count of requests made to ListV2LoggingLevels.
func (c *IoT) ListV2LoggingLevels(input *iot.ListV2LoggingLevelsInput) (*iot.ListV2LoggingLevelsOutput, error) {
	c.inc("ListV2LoggingLevels")
	return c.svc.ListV2LoggingLevels(input)
}

// ListV2LoggingLevelsWithContext is a passthrough to the underlying ListV2LoggingLevelsWithContext method.
// It will increment the count of requests made to ListV2LoggingLevels.
func (c *IoT) ListV2LoggingLevelsWithContext(ctx aws.Context, input *iot.ListV2LoggingLevelsInput, opts ...request.Option) (*iot.ListV2LoggingLevelsOutput, error) {
	c.inc("ListV2LoggingLevels")
	return c.svc.ListV2LoggingLevelsWithContext(ctx, input, opts...)
}

// RegisterCACertificateRequest is a passthrough to the underlying RegisterCACertificateRequest.
// It will increment the count of requests made to RegisterCACertificate.
func (c *IoT) RegisterCACertificateRequest(input *iot.RegisterCACertificateInput) (req *request.Request, output *iot.RegisterCACertificateOutput) {
	c.inc("RegisterCACertificate")
	return c.svc.RegisterCACertificateRequest(input)
}

// RegisterCACertificate is a passthrough to the underlying RegisterCACertificate method.
// It will increment the count of requests made to RegisterCACertificate.
func (c *IoT) RegisterCACertificate(input *iot.RegisterCACertificateInput) (*iot.RegisterCACertificateOutput, error) {
	c.inc("RegisterCACertificate")
	return c.svc.RegisterCACertificate(input)
}

// RegisterCACertificateWithContext is a passthrough to the underlying RegisterCACertificateWithContext method.
// It will increment the count of requests made to RegisterCACertificate.
func (c *IoT) RegisterCACertificateWithContext(ctx aws.Context, input *iot.RegisterCACertificateInput, opts ...request.Option) (*iot.RegisterCACertificateOutput, error) {
	c.inc("RegisterCACertificate")
	return c.svc.RegisterCACertificateWithContext(ctx, input, opts...)
}

// RegisterCertificateRequest is a passthrough to the underlying RegisterCertificateRequest.
// It will increment the count of requests made to RegisterCertificate.
func (c *IoT) RegisterCertificateRequest(input *iot.RegisterCertificateInput) (req *request.Request, output *iot.RegisterCertificateOutput) {
	c.inc("RegisterCertificate")
	return c.svc.RegisterCertificateRequest(input)
}

// RegisterCertificate is a passthrough to the underlying RegisterCertificate method.
// It will increment the count of requests made to RegisterCertificate.
func (c *IoT) RegisterCertificate(input *iot.RegisterCertificateInput) (*iot.RegisterCertificateOutput, error) {
	c.inc("RegisterCertificate")
	return c.svc.RegisterCertificate(input)
}

// RegisterCertificateWithContext is a passthrough to the underlying RegisterCertificateWithContext method.
// It will increment the count of requests made to RegisterCertificate.
func (c *IoT) RegisterCertificateWithContext(ctx aws.Context, input *iot.RegisterCertificateInput, opts ...request.Option) (*iot.RegisterCertificateOutput, error) {
	c.inc("RegisterCertificate")
	return c.svc.RegisterCertificateWithContext(ctx, input, opts...)
}

// RegisterThingRequest is a passthrough to the underlying RegisterThingRequest.
// It will increment the count of requests made to RegisterThing.
func (c *IoT) RegisterThingRequest(input *iot.RegisterThingInput) (req *request.Request, output *iot.RegisterThingOutput) {
	c.inc("RegisterThing")
	return c.svc.RegisterThingRequest(input)
}

// RegisterThing is a passthrough to the underlying RegisterThing method.
// It will increment the count of requests made to RegisterThing.
func (c *IoT) RegisterThing(input *iot.RegisterThingInput) (*iot.RegisterThingOutput, error) {
	c.inc("RegisterThing")
	return c.svc.RegisterThing(input)
}

// RegisterThingWithContext is a passthrough to the underlying RegisterThingWithContext method.
// It will increment the count of requests made to RegisterThing.
func (c *IoT) RegisterThingWithContext(ctx aws.Context, input *iot.RegisterThingInput, opts ...request.Option) (*iot.RegisterThingOutput, error) {
	c.inc("RegisterThing")
	return c.svc.RegisterThingWithContext(ctx, input, opts...)
}

// RejectCertificateTransferRequest is a passthrough to the underlying RejectCertificateTransferRequest.
// It will increment the count of requests made to RejectCertificateTransfer.
func (c *IoT) RejectCertificateTransferRequest(input *iot.RejectCertificateTransferInput) (req *request.Request, output *iot.RejectCertificateTransferOutput) {
	c.inc("RejectCertificateTransfer")
	return c.svc.RejectCertificateTransferRequest(input)
}

// RejectCertificateTransfer is a passthrough to the underlying RejectCertificateTransfer method.
// It will increment the count of requests made to RejectCertificateTransfer.
func (c *IoT) RejectCertificateTransfer(input *iot.RejectCertificateTransferInput) (*iot.RejectCertificateTransferOutput, error) {
	c.inc("RejectCertificateTransfer")
	return c.svc.RejectCertificateTransfer(input)
}

// RejectCertificateTransferWithContext is a passthrough to the underlying RejectCertificateTransferWithContext method.
// It will increment the count of requests made to RejectCertificateTransfer.
func (c *IoT) RejectCertificateTransferWithContext(ctx aws.Context, input *iot.RejectCertificateTransferInput, opts ...request.Option) (*iot.RejectCertificateTransferOutput, error) {
	c.inc("RejectCertificateTransfer")
	return c.svc.RejectCertificateTransferWithContext(ctx, input, opts...)
}

// RemoveThingFromThingGroupRequest is a passthrough to the underlying RemoveThingFromThingGroupRequest.
// It will increment the count of requests made to RemoveThingFromThingGroup.
func (c *IoT) RemoveThingFromThingGroupRequest(input *iot.RemoveThingFromThingGroupInput) (req *request.Request, output *iot.RemoveThingFromThingGroupOutput) {
	c.inc("RemoveThingFromThingGroup")
	return c.svc.RemoveThingFromThingGroupRequest(input)
}

// RemoveThingFromThingGroup is a passthrough to the underlying RemoveThingFromThingGroup method.
// It will increment the count of requests made to RemoveThingFromThingGroup.
func (c *IoT) RemoveThingFromThingGroup(input *iot.RemoveThingFromThingGroupInput) (*iot.RemoveThingFromThingGroupOutput, error) {
	c.inc("RemoveThingFromThingGroup")
	return c.svc.RemoveThingFromThingGroup(input)
}

// RemoveThingFromThingGroupWithContext is a passthrough to the underlying RemoveThingFromThingGroupWithContext method.
// It will increment the count of requests made to RemoveThingFromThingGroup.
func (c *IoT) RemoveThingFromThingGroupWithContext(ctx aws.Context, input *iot.RemoveThingFromThingGroupInput, opts ...request.Option) (*iot.RemoveThingFromThingGroupOutput, error) {
	c.inc("RemoveThingFromThingGroup")
	return c.svc.RemoveThingFromThingGroupWithContext(ctx, input, opts...)
}

// ReplaceTopicRuleRequest is a passthrough to the underlying ReplaceTopicRuleRequest.
// It will increment the count of requests made to ReplaceTopicRule.
func (c *IoT) ReplaceTopicRuleRequest(input *iot.ReplaceTopicRuleInput) (req *request.Request, output *iot.ReplaceTopicRuleOutput) {
	c.inc("ReplaceTopicRule")
	return c.svc.ReplaceTopicRuleRequest(input)
}

// ReplaceTopicRule is a passthrough to the underlying ReplaceTopicRule method.
// It will increment the count of requests made to ReplaceTopicRule.
func (c *IoT) ReplaceTopicRule(input *iot.ReplaceTopicRuleInput) (*iot.ReplaceTopicRuleOutput, error) {
	c.inc("ReplaceTopicRule")
	return c.svc.ReplaceTopicRule(input)
}

// ReplaceTopicRuleWithContext is a passthrough to the underlying ReplaceTopicRuleWithContext method.
// It will increment the count of requests made to ReplaceTopicRule.
func (c *IoT) ReplaceTopicRuleWithContext(ctx aws.Context, input *iot.ReplaceTopicRuleInput, opts ...request.Option) (*iot.ReplaceTopicRuleOutput, error) {
	c.inc("ReplaceTopicRule")
	return c.svc.ReplaceTopicRuleWithContext(ctx, input, opts...)
}

// SearchIndexRequest is a passthrough to the underlying SearchIndexRequest.
// It will increment the count of requests made to SearchIndex.
func (c *IoT) SearchIndexRequest(input *iot.SearchIndexInput) (req *request.Request, output *iot.SearchIndexOutput) {
	c.inc("SearchIndex")
	return c.svc.SearchIndexRequest(input)
}

// SearchIndex is a passthrough to the underlying SearchIndex method.
// It will increment the count of requests made to SearchIndex.
func (c *IoT) SearchIndex(input *iot.SearchIndexInput) (*iot.SearchIndexOutput, error) {
	c.inc("SearchIndex")
	return c.svc.SearchIndex(input)
}

// SearchIndexWithContext is a passthrough to the underlying SearchIndexWithContext method.
// It will increment the count of requests made to SearchIndex.
func (c *IoT) SearchIndexWithContext(ctx aws.Context, input *iot.SearchIndexInput, opts ...request.Option) (*iot.SearchIndexOutput, error) {
	c.inc("SearchIndex")
	return c.svc.SearchIndexWithContext(ctx, input, opts...)
}

// SetDefaultAuthorizerRequest is a passthrough to the underlying SetDefaultAuthorizerRequest.
// It will increment the count of requests made to SetDefaultAuthorizer.
func (c *IoT) SetDefaultAuthorizerRequest(input *iot.SetDefaultAuthorizerInput) (req *request.Request, output *iot.SetDefaultAuthorizerOutput) {
	c.inc("SetDefaultAuthorizer")
	return c.svc.SetDefaultAuthorizerRequest(input)
}

// SetDefaultAuthorizer is a passthrough to the underlying SetDefaultAuthorizer method.
// It will increment the count of requests made to SetDefaultAuthorizer.
func (c *IoT) SetDefaultAuthorizer(input *iot.SetDefaultAuthorizerInput) (*iot.SetDefaultAuthorizerOutput, error) {
	c.inc("SetDefaultAuthorizer")
	return c.svc.SetDefaultAuthorizer(input)
}

// SetDefaultAuthorizerWithContext is a passthrough to the underlying SetDefaultAuthorizerWithContext method.
// It will increment the count of requests made to SetDefaultAuthorizer.
func (c *IoT) SetDefaultAuthorizerWithContext(ctx aws.Context, input *iot.SetDefaultAuthorizerInput, opts ...request.Option) (*iot.SetDefaultAuthorizerOutput, error) {
	c.inc("SetDefaultAuthorizer")
	return c.svc.SetDefaultAuthorizerWithContext(ctx, input, opts...)
}

// SetDefaultPolicyVersionRequest is a passthrough to the underlying SetDefaultPolicyVersionRequest.
// It will increment the count of requests made to SetDefaultPolicyVersion.
func (c *IoT) SetDefaultPolicyVersionRequest(input *iot.SetDefaultPolicyVersionInput) (req *request.Request, output *iot.SetDefaultPolicyVersionOutput) {
	c.inc("SetDefaultPolicyVersion")
	return c.svc.SetDefaultPolicyVersionRequest(input)
}

// SetDefaultPolicyVersion is a passthrough to the underlying SetDefaultPolicyVersion method.
// It will increment the count of requests made to SetDefaultPolicyVersion.
func (c *IoT) SetDefaultPolicyVersion(input *iot.SetDefaultPolicyVersionInput) (*iot.SetDefaultPolicyVersionOutput, error) {
	c.inc("SetDefaultPolicyVersion")
	return c.svc.SetDefaultPolicyVersion(input)
}

// SetDefaultPolicyVersionWithContext is a passthrough to the underlying SetDefaultPolicyVersionWithContext method.
// It will increment the count of requests made to SetDefaultPolicyVersion.
func (c *IoT) SetDefaultPolicyVersionWithContext(ctx aws.Context, input *iot.SetDefaultPolicyVersionInput, opts ...request.Option) (*iot.SetDefaultPolicyVersionOutput, error) {
	c.inc("SetDefaultPolicyVersion")
	return c.svc.SetDefaultPolicyVersionWithContext(ctx, input, opts...)
}

// SetLoggingOptionsRequest is a passthrough to the underlying SetLoggingOptionsRequest.
// It will increment the count of requests made to SetLoggingOptions.
func (c *IoT) SetLoggingOptionsRequest(input *iot.SetLoggingOptionsInput) (req *request.Request, output *iot.SetLoggingOptionsOutput) {
	c.inc("SetLoggingOptions")
	return c.svc.SetLoggingOptionsRequest(input)
}

// SetLoggingOptions is a passthrough to the underlying SetLoggingOptions method.
// It will increment the count of requests made to SetLoggingOptions.
func (c *IoT) SetLoggingOptions(input *iot.SetLoggingOptionsInput) (*iot.SetLoggingOptionsOutput, error) {
	c.inc("SetLoggingOptions")
	return c.svc.SetLoggingOptions(input)
}

// SetLoggingOptionsWithContext is a passthrough to the underlying SetLoggingOptionsWithContext method.
// It will increment the count of requests made to SetLoggingOptions.
func (c *IoT) SetLoggingOptionsWithContext(ctx aws.Context, input *iot.SetLoggingOptionsInput, opts ...request.Option) (*iot.SetLoggingOptionsOutput, error) {
	c.inc("SetLoggingOptions")
	return c.svc.SetLoggingOptionsWithContext(ctx, input, opts...)
}

// SetV2LoggingLevelRequest is a passthrough to the underlying SetV2LoggingLevelRequest.
// It will increment the count of requests made to SetV2LoggingLevel.
func (c *IoT) SetV2LoggingLevelRequest(input *iot.SetV2LoggingLevelInput) (req *request.Request, output *iot.SetV2LoggingLevelOutput) {
	c.inc("SetV2LoggingLevel")
	return c.svc.SetV2LoggingLevelRequest(input)
}

// SetV2LoggingLevel is a passthrough to the underlying SetV2LoggingLevel method.
// It will increment the count of requests made to SetV2LoggingLevel.
func (c *IoT) SetV2LoggingLevel(input *iot.SetV2LoggingLevelInput) (*iot.SetV2LoggingLevelOutput, error) {
	c.inc("SetV2LoggingLevel")
	return c.svc.SetV2LoggingLevel(input)
}

// SetV2LoggingLevelWithContext is a passthrough to the underlying SetV2LoggingLevelWithContext method.
// It will increment the count of requests made to SetV2LoggingLevel.
func (c *IoT) SetV2LoggingLevelWithContext(ctx aws.Context, input *iot.SetV2LoggingLevelInput, opts ...request.Option) (*iot.SetV2LoggingLevelOutput, error) {
	c.inc("SetV2LoggingLevel")
	return c.svc.SetV2LoggingLevelWithContext(ctx, input, opts...)
}

// SetV2LoggingOptionsRequest is a passthrough to the underlying SetV2LoggingOptionsRequest.
// It will increment the count of requests made to SetV2LoggingOptions.
func (c *IoT) SetV2LoggingOptionsRequest(input *iot.SetV2LoggingOptionsInput) (req *request.Request, output *iot.SetV2LoggingOptionsOutput) {
	c.inc("SetV2LoggingOptions")
	return c.svc.SetV2LoggingOptionsRequest(input)
}

// SetV2LoggingOptions is a passthrough to the underlying SetV2LoggingOptions method.
// It will increment the count of requests made to SetV2LoggingOptions.
func (c *IoT) SetV2LoggingOptions(input *iot.SetV2LoggingOptionsInput) (*iot.SetV2LoggingOptionsOutput, error) {
	c.inc("SetV2LoggingOptions")
	return c.svc.SetV2LoggingOptions(input)
}

// SetV2LoggingOptionsWithContext is a passthrough to the underlying SetV2LoggingOptionsWithContext method.
// It will increment the count of requests made to SetV2LoggingOptions.
func (c *IoT) SetV2LoggingOptionsWithContext(ctx aws.Context, input *iot.SetV2LoggingOptionsInput, opts ...request.Option) (*iot.SetV2LoggingOptionsOutput, error) {
	c.inc("SetV2LoggingOptions")
	return c.svc.SetV2LoggingOptionsWithContext(ctx, input, opts...)
}

// StartThingRegistrationTaskRequest is a passthrough to the underlying StartThingRegistrationTaskRequest.
// It will increment the count of requests made to StartThingRegistrationTask.
func (c *IoT) StartThingRegistrationTaskRequest(input *iot.StartThingRegistrationTaskInput) (req *request.Request, output *iot.StartThingRegistrationTaskOutput) {
	c.inc("StartThingRegistrationTask")
	return c.svc.StartThingRegistrationTaskRequest(input)
}

// StartThingRegistrationTask is a passthrough to the underlying StartThingRegistrationTask method.
// It will increment the count of requests made to StartThingRegistrationTask.
func (c *IoT) StartThingRegistrationTask(input *iot.StartThingRegistrationTaskInput) (*iot.StartThingRegistrationTaskOutput, error) {
	c.inc("StartThingRegistrationTask")
	return c.svc.StartThingRegistrationTask(input)
}

// StartThingRegistrationTaskWithContext is a passthrough to the underlying StartThingRegistrationTaskWithContext method.
// It will increment the count of requests made to StartThingRegistrationTask.
func (c *IoT) StartThingRegistrationTaskWithContext(ctx aws.Context, input *iot.StartThingRegistrationTaskInput, opts ...request.Option) (*iot.StartThingRegistrationTaskOutput, error) {
	c.inc("StartThingRegistrationTask")
	return c.svc.StartThingRegistrationTaskWithContext(ctx, input, opts...)
}

// StopThingRegistrationTaskRequest is a passthrough to the underlying StopThingRegistrationTaskRequest.
// It will increment the count of requests made to StopThingRegistrationTask.
func (c *IoT) StopThingRegistrationTaskRequest(input *iot.StopThingRegistrationTaskInput) (req *request.Request, output *iot.StopThingRegistrationTaskOutput) {
	c.inc("StopThingRegistrationTask")
	return c.svc.StopThingRegistrationTaskRequest(input)
}

// StopThingRegistrationTask is a passthrough to the underlying StopThingRegistrationTask method.
// It will increment the count of requests made to StopThingRegistrationTask.
func (c *IoT) StopThingRegistrationTask(input *iot.StopThingRegistrationTaskInput) (*iot.StopThingRegistrationTaskOutput, error) {
	c.inc("StopThingRegistrationTask")
	return c.svc.StopThingRegistrationTask(input)
}

// StopThingRegistrationTaskWithContext is a passthrough to the underlying StopThingRegistrationTaskWithContext method.
// It will increment the count of requests made to StopThingRegistrationTask.
func (c *IoT) StopThingRegistrationTaskWithContext(ctx aws.Context, input *iot.StopThingRegistrationTaskInput, opts ...request.Option) (*iot.StopThingRegistrationTaskOutput, error) {
	c.inc("StopThingRegistrationTask")
	return c.svc.StopThingRegistrationTaskWithContext(ctx, input, opts...)
}

// TestAuthorizationRequest is a passthrough to the underlying TestAuthorizationRequest.
// It will increment the count of requests made to TestAuthorization.
func (c *IoT) TestAuthorizationRequest(input *iot.TestAuthorizationInput) (req *request.Request, output *iot.TestAuthorizationOutput) {
	c.inc("TestAuthorization")
	return c.svc.TestAuthorizationRequest(input)
}

// TestAuthorization is a passthrough to the underlying TestAuthorization method.
// It will increment the count of requests made to TestAuthorization.
func (c *IoT) TestAuthorization(input *iot.TestAuthorizationInput) (*iot.TestAuthorizationOutput, error) {
	c.inc("TestAuthorization")
	return c.svc.TestAuthorization(input)
}

// TestAuthorizationWithContext is a passthrough to the underlying TestAuthorizationWithContext method.
// It will increment the count of requests made to TestAuthorization.
func (c *IoT) TestAuthorizationWithContext(ctx aws.Context, input *iot.TestAuthorizationInput, opts ...request.Option) (*iot.TestAuthorizationOutput, error) {
	c.inc("TestAuthorization")
	return c.svc.TestAuthorizationWithContext(ctx, input, opts...)
}

// TestInvokeAuthorizerRequest is a passthrough to the underlying TestInvokeAuthorizerRequest.
// It will increment the count of requests made to TestInvokeAuthorizer.
func (c *IoT) TestInvokeAuthorizerRequest(input *iot.TestInvokeAuthorizerInput) (req *request.Request, output *iot.TestInvokeAuthorizerOutput) {
	c.inc("TestInvokeAuthorizer")
	return c.svc.TestInvokeAuthorizerRequest(input)
}

// TestInvokeAuthorizer is a passthrough to the underlying TestInvokeAuthorizer method.
// It will increment the count of requests made to TestInvokeAuthorizer.
func (c *IoT) TestInvokeAuthorizer(input *iot.TestInvokeAuthorizerInput) (*iot.TestInvokeAuthorizerOutput, error) {
	c.inc("TestInvokeAuthorizer")
	return c.svc.TestInvokeAuthorizer(input)
}

// TestInvokeAuthorizerWithContext is a passthrough to the underlying TestInvokeAuthorizerWithContext method.
// It will increment the count of requests made to TestInvokeAuthorizer.
func (c *IoT) TestInvokeAuthorizerWithContext(ctx aws.Context, input *iot.TestInvokeAuthorizerInput, opts ...request.Option) (*iot.TestInvokeAuthorizerOutput, error) {
	c.inc("TestInvokeAuthorizer")
	return c.svc.TestInvokeAuthorizerWithContext(ctx, input, opts...)
}

// TransferCertificateRequest is a passthrough to the underlying TransferCertificateRequest.
// It will increment the count of requests made to TransferCertificate.
func (c *IoT) TransferCertificateRequest(input *iot.TransferCertificateInput) (req *request.Request, output *iot.TransferCertificateOutput) {
	c.inc("TransferCertificate")
	return c.svc.TransferCertificateRequest(input)
}

// TransferCertificate is a passthrough to the underlying TransferCertificate method.
// It will increment the count of requests made to TransferCertificate.
func (c *IoT) TransferCertificate(input *iot.TransferCertificateInput) (*iot.TransferCertificateOutput, error) {
	c.inc("TransferCertificate")
	return c.svc.TransferCertificate(input)
}

// TransferCertificateWithContext is a passthrough to the underlying TransferCertificateWithContext method.
// It will increment the count of requests made to TransferCertificate.
func (c *IoT) TransferCertificateWithContext(ctx aws.Context, input *iot.TransferCertificateInput, opts ...request.Option) (*iot.TransferCertificateOutput, error) {
	c.inc("TransferCertificate")
	return c.svc.TransferCertificateWithContext(ctx, input, opts...)
}

// UpdateAuthorizerRequest is a passthrough to the underlying UpdateAuthorizerRequest.
// It will increment the count of requests made to UpdateAuthorizer.
func (c *IoT) UpdateAuthorizerRequest(input *iot.UpdateAuthorizerInput) (req *request.Request, output *iot.UpdateAuthorizerOutput) {
	c.inc("UpdateAuthorizer")
	return c.svc.UpdateAuthorizerRequest(input)
}

// UpdateAuthorizer is a passthrough to the underlying UpdateAuthorizer method.
// It will increment the count of requests made to UpdateAuthorizer.
func (c *IoT) UpdateAuthorizer(input *iot.UpdateAuthorizerInput) (*iot.UpdateAuthorizerOutput, error) {
	c.inc("UpdateAuthorizer")
	return c.svc.UpdateAuthorizer(input)
}

// UpdateAuthorizerWithContext is a passthrough to the underlying UpdateAuthorizerWithContext method.
// It will increment the count of requests made to UpdateAuthorizer.
func (c *IoT) UpdateAuthorizerWithContext(ctx aws.Context, input *iot.UpdateAuthorizerInput, opts ...request.Option) (*iot.UpdateAuthorizerOutput, error) {
	c.inc("UpdateAuthorizer")
	return c.svc.UpdateAuthorizerWithContext(ctx, input, opts...)
}

// UpdateCACertificateRequest is a passthrough to the underlying UpdateCACertificateRequest.
// It will increment the count of requests made to UpdateCACertificate.
func (c *IoT) UpdateCACertificateRequest(input *iot.UpdateCACertificateInput) (req *request.Request, output *iot.UpdateCACertificateOutput) {
	c.inc("UpdateCACertificate")
	return c.svc.UpdateCACertificateRequest(input)
}

// UpdateCACertificate is a passthrough to the underlying UpdateCACertificate method.
// It will increment the count of requests made to UpdateCACertificate.
func (c *IoT) UpdateCACertificate(input *iot.UpdateCACertificateInput) (*iot.UpdateCACertificateOutput, error) {
	c.inc("UpdateCACertificate")
	return c.svc.UpdateCACertificate(input)
}

// UpdateCACertificateWithContext is a passthrough to the underlying UpdateCACertificateWithContext method.
// It will increment the count of requests made to UpdateCACertificate.
func (c *IoT) UpdateCACertificateWithContext(ctx aws.Context, input *iot.UpdateCACertificateInput, opts ...request.Option) (*iot.UpdateCACertificateOutput, error) {
	c.inc("UpdateCACertificate")
	return c.svc.UpdateCACertificateWithContext(ctx, input, opts...)
}

// UpdateCertificateRequest is a passthrough to the underlying UpdateCertificateRequest.
// It will increment the count of requests made to UpdateCertificate.
func (c *IoT) UpdateCertificateRequest(input *iot.UpdateCertificateInput) (req *request.Request, output *iot.UpdateCertificateOutput) {
	c.inc("UpdateCertificate")
	return c.svc.UpdateCertificateRequest(input)
}

// UpdateCertificate is a passthrough to the underlying UpdateCertificate method.
// It will increment the count of requests made to UpdateCertificate.
func (c *IoT) UpdateCertificate(input *iot.UpdateCertificateInput) (*iot.UpdateCertificateOutput, error) {
	c.inc("UpdateCertificate")
	return c.svc.UpdateCertificate(input)
}

// UpdateCertificateWithContext is a passthrough to the underlying UpdateCertificateWithContext method.
// It will increment the count of requests made to UpdateCertificate.
func (c *IoT) UpdateCertificateWithContext(ctx aws.Context, input *iot.UpdateCertificateInput, opts ...request.Option) (*iot.UpdateCertificateOutput, error) {
	c.inc("UpdateCertificate")
	return c.svc.UpdateCertificateWithContext(ctx, input, opts...)
}

// UpdateEventConfigurationsRequest is a passthrough to the underlying UpdateEventConfigurationsRequest.
// It will increment the count of requests made to UpdateEventConfigurations.
func (c *IoT) UpdateEventConfigurationsRequest(input *iot.UpdateEventConfigurationsInput) (req *request.Request, output *iot.UpdateEventConfigurationsOutput) {
	c.inc("UpdateEventConfigurations")
	return c.svc.UpdateEventConfigurationsRequest(input)
}

// UpdateEventConfigurations is a passthrough to the underlying UpdateEventConfigurations method.
// It will increment the count of requests made to UpdateEventConfigurations.
func (c *IoT) UpdateEventConfigurations(input *iot.UpdateEventConfigurationsInput) (*iot.UpdateEventConfigurationsOutput, error) {
	c.inc("UpdateEventConfigurations")
	return c.svc.UpdateEventConfigurations(input)
}

// UpdateEventConfigurationsWithContext is a passthrough to the underlying UpdateEventConfigurationsWithContext method.
// It will increment the count of requests made to UpdateEventConfigurations.
func (c *IoT) UpdateEventConfigurationsWithContext(ctx aws.Context, input *iot.UpdateEventConfigurationsInput, opts ...request.Option) (*iot.UpdateEventConfigurationsOutput, error) {
	c.inc("UpdateEventConfigurations")
	return c.svc.UpdateEventConfigurationsWithContext(ctx, input, opts...)
}

// UpdateIndexingConfigurationRequest is a passthrough to the underlying UpdateIndexingConfigurationRequest.
// It will increment the count of requests made to UpdateIndexingConfiguration.
func (c *IoT) UpdateIndexingConfigurationRequest(input *iot.UpdateIndexingConfigurationInput) (req *request.Request, output *iot.UpdateIndexingConfigurationOutput) {
	c.inc("UpdateIndexingConfiguration")
	return c.svc.UpdateIndexingConfigurationRequest(input)
}

// UpdateIndexingConfiguration is a passthrough to the underlying UpdateIndexingConfiguration method.
// It will increment the count of requests made to UpdateIndexingConfiguration.
func (c *IoT) UpdateIndexingConfiguration(input *iot.UpdateIndexingConfigurationInput) (*iot.UpdateIndexingConfigurationOutput, error) {
	c.inc("UpdateIndexingConfiguration")
	return c.svc.UpdateIndexingConfiguration(input)
}

// UpdateIndexingConfigurationWithContext is a passthrough to the underlying UpdateIndexingConfigurationWithContext method.
// It will increment the count of requests made to UpdateIndexingConfiguration.
func (c *IoT) UpdateIndexingConfigurationWithContext(ctx aws.Context, input *iot.UpdateIndexingConfigurationInput, opts ...request.Option) (*iot.UpdateIndexingConfigurationOutput, error) {
	c.inc("UpdateIndexingConfiguration")
	return c.svc.UpdateIndexingConfigurationWithContext(ctx, input, opts...)
}

// UpdateRoleAliasRequest is a passthrough to the underlying UpdateRoleAliasRequest.
// It will increment the count of requests made to UpdateRoleAlias.
func (c *IoT) UpdateRoleAliasRequest(input *iot.UpdateRoleAliasInput) (req *request.Request, output *iot.UpdateRoleAliasOutput) {
	c.inc("UpdateRoleAlias")
	return c.svc.UpdateRoleAliasRequest(input)
}

// UpdateRoleAlias is a passthrough to the underlying UpdateRoleAlias method.
// It will increment the count of requests made to UpdateRoleAlias.
func (c *IoT) UpdateRoleAlias(input *iot.UpdateRoleAliasInput) (*iot.UpdateRoleAliasOutput, error) {
	c.inc("UpdateRoleAlias")
	return c.svc.UpdateRoleAlias(input)
}

// UpdateRoleAliasWithContext is a passthrough to the underlying UpdateRoleAliasWithContext method.
// It will increment the count of requests made to UpdateRoleAlias.
func (c *IoT) UpdateRoleAliasWithContext(ctx aws.Context, input *iot.UpdateRoleAliasInput, opts ...request.Option) (*iot.UpdateRoleAliasOutput, error) {
	c.inc("UpdateRoleAlias")
	return c.svc.UpdateRoleAliasWithContext(ctx, input, opts...)
}

// UpdateStreamRequest is a passthrough to the underlying UpdateStreamRequest.
// It will increment the count of requests made to UpdateStream.
func (c *IoT) UpdateStreamRequest(input *iot.UpdateStreamInput) (req *request.Request, output *iot.UpdateStreamOutput) {
	c.inc("UpdateStream")
	return c.svc.UpdateStreamRequest(input)
}

// UpdateStream is a passthrough to the underlying UpdateStream method.
// It will increment the count of requests made to UpdateStream.
func (c *IoT) UpdateStream(input *iot.UpdateStreamInput) (*iot.UpdateStreamOutput, error) {
	c.inc("UpdateStream")
	return c.svc.UpdateStream(input)
}

// UpdateStreamWithContext is a passthrough to the underlying UpdateStreamWithContext method.
// It will increment the count of requests made to UpdateStream.
func (c *IoT) UpdateStreamWithContext(ctx aws.Context, input *iot.UpdateStreamInput, opts ...request.Option) (*iot.UpdateStreamOutput, error) {
	c.inc("UpdateStream")
	return c.svc.UpdateStreamWithContext(ctx, input, opts...)
}

// UpdateThingRequest is a passthrough to the underlying UpdateThingRequest.
// It will increment the count of requests made to UpdateThing.
func (c *IoT) UpdateThingRequest(input *iot.UpdateThingInput) (req *request.Request, output *iot.UpdateThingOutput) {
	c.inc("UpdateThing")
	return c.svc.UpdateThingRequest(input)
}

// UpdateThing is a passthrough to the underlying UpdateThing method.
// It will increment the count of requests made to UpdateThing.
func (c *IoT) UpdateThing(input *iot.UpdateThingInput) (*iot.UpdateThingOutput, error) {
	c.inc("UpdateThing")
	return c.svc.UpdateThing(input)
}

// UpdateThingWithContext is a passthrough to the underlying UpdateThingWithContext method.
// It will increment the count of requests made to UpdateThing.
func (c *IoT) UpdateThingWithContext(ctx aws.Context, input *iot.UpdateThingInput, opts ...request.Option) (*iot.UpdateThingOutput, error) {
	c.inc("UpdateThing")
	return c.svc.UpdateThingWithContext(ctx, input, opts...)
}

// UpdateThingGroupRequest is a passthrough to the underlying UpdateThingGroupRequest.
// It will increment the count of requests made to UpdateThingGroup.
func (c *IoT) UpdateThingGroupRequest(input *iot.UpdateThingGroupInput) (req *request.Request, output *iot.UpdateThingGroupOutput) {
	c.inc("UpdateThingGroup")
	return c.svc.UpdateThingGroupRequest(input)
}

// UpdateThingGroup is a passthrough to the underlying UpdateThingGroup method.
// It will increment the count of requests made to UpdateThingGroup.
func (c *IoT) UpdateThingGroup(input *iot.UpdateThingGroupInput) (*iot.UpdateThingGroupOutput, error) {
	c.inc("UpdateThingGroup")
	return c.svc.UpdateThingGroup(input)
}

// UpdateThingGroupWithContext is a passthrough to the underlying UpdateThingGroupWithContext method.
// It will increment the count of requests made to UpdateThingGroup.
func (c *IoT) UpdateThingGroupWithContext(ctx aws.Context, input *iot.UpdateThingGroupInput, opts ...request.Option) (*iot.UpdateThingGroupOutput, error) {
	c.inc("UpdateThingGroup")
	return c.svc.UpdateThingGroupWithContext(ctx, input, opts...)
}

// UpdateThingGroupsForThingRequest is a passthrough to the underlying UpdateThingGroupsForThingRequest.
// It will increment the count of requests made to UpdateThingGroupsForThing.
func (c *IoT) UpdateThingGroupsForThingRequest(input *iot.UpdateThingGroupsForThingInput) (req *request.Request, output *iot.UpdateThingGroupsForThingOutput) {
	c.inc("UpdateThingGroupsForThing")
	return c.svc.UpdateThingGroupsForThingRequest(input)
}

// UpdateThingGroupsForThing is a passthrough to the underlying UpdateThingGroupsForThing method.
// It will increment the count of requests made to UpdateThingGroupsForThing.
func (c *IoT) UpdateThingGroupsForThing(input *iot.UpdateThingGroupsForThingInput) (*iot.UpdateThingGroupsForThingOutput, error) {
	c.inc("UpdateThingGroupsForThing")
	return c.svc.UpdateThingGroupsForThing(input)
}

// UpdateThingGroupsForThingWithContext is a passthrough to the underlying UpdateThingGroupsForThingWithContext method.
// It will increment the count of requests made to UpdateThingGroupsForThing.
func (c *IoT) UpdateThingGroupsForThingWithContext(ctx aws.Context, input *iot.UpdateThingGroupsForThingInput, opts ...request.Option) (*iot.UpdateThingGroupsForThingOutput, error) {
	c.inc("UpdateThingGroupsForThing")
	return c.svc.UpdateThingGroupsForThingWithContext(ctx, input, opts...)
}
