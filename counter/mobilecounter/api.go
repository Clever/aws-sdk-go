// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package mobilecounter

import (
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/mobile"
)

// CreateProjectRequest is a passthrough to the underlying CreateProjectRequest.
// It will increment the count of requests made to CreateProject.
func (c *Mobile) CreateProjectRequest(input *mobile.CreateProjectInput) (req *request.Request, output *mobile.CreateProjectOutput) {
	c.inc("CreateProject")
	return c.svc.CreateProjectRequest(input)
}

// CreateProject is a passthrough to the underlying CreateProject method.
// It will increment the count of requests made to CreateProject.
func (c *Mobile) CreateProject(input *mobile.CreateProjectInput) (*mobile.CreateProjectOutput, error) {
	c.inc("CreateProject")
	return c.svc.CreateProject(input)
}

// CreateProjectWithContext is a passthrough to the underlying CreateProjectWithContext method.
// It will increment the count of requests made to CreateProject.
func (c *Mobile) CreateProjectWithContext(ctx aws.Context, input *mobile.CreateProjectInput, opts ...request.Option) (*mobile.CreateProjectOutput, error) {
	c.inc("CreateProject")
	return c.svc.CreateProjectWithContext(ctx, input, opts...)
}

// DeleteProjectRequest is a passthrough to the underlying DeleteProjectRequest.
// It will increment the count of requests made to DeleteProject.
func (c *Mobile) DeleteProjectRequest(input *mobile.DeleteProjectInput) (req *request.Request, output *mobile.DeleteProjectOutput) {
	c.inc("DeleteProject")
	return c.svc.DeleteProjectRequest(input)
}

// DeleteProject is a passthrough to the underlying DeleteProject method.
// It will increment the count of requests made to DeleteProject.
func (c *Mobile) DeleteProject(input *mobile.DeleteProjectInput) (*mobile.DeleteProjectOutput, error) {
	c.inc("DeleteProject")
	return c.svc.DeleteProject(input)
}

// DeleteProjectWithContext is a passthrough to the underlying DeleteProjectWithContext method.
// It will increment the count of requests made to DeleteProject.
func (c *Mobile) DeleteProjectWithContext(ctx aws.Context, input *mobile.DeleteProjectInput, opts ...request.Option) (*mobile.DeleteProjectOutput, error) {
	c.inc("DeleteProject")
	return c.svc.DeleteProjectWithContext(ctx, input, opts...)
}

// DescribeBundleRequest is a passthrough to the underlying DescribeBundleRequest.
// It will increment the count of requests made to DescribeBundle.
func (c *Mobile) DescribeBundleRequest(input *mobile.DescribeBundleInput) (req *request.Request, output *mobile.DescribeBundleOutput) {
	c.inc("DescribeBundle")
	return c.svc.DescribeBundleRequest(input)
}

// DescribeBundle is a passthrough to the underlying DescribeBundle method.
// It will increment the count of requests made to DescribeBundle.
func (c *Mobile) DescribeBundle(input *mobile.DescribeBundleInput) (*mobile.DescribeBundleOutput, error) {
	c.inc("DescribeBundle")
	return c.svc.DescribeBundle(input)
}

// DescribeBundleWithContext is a passthrough to the underlying DescribeBundleWithContext method.
// It will increment the count of requests made to DescribeBundle.
func (c *Mobile) DescribeBundleWithContext(ctx aws.Context, input *mobile.DescribeBundleInput, opts ...request.Option) (*mobile.DescribeBundleOutput, error) {
	c.inc("DescribeBundle")
	return c.svc.DescribeBundleWithContext(ctx, input, opts...)
}

// DescribeProjectRequest is a passthrough to the underlying DescribeProjectRequest.
// It will increment the count of requests made to DescribeProject.
func (c *Mobile) DescribeProjectRequest(input *mobile.DescribeProjectInput) (req *request.Request, output *mobile.DescribeProjectOutput) {
	c.inc("DescribeProject")
	return c.svc.DescribeProjectRequest(input)
}

// DescribeProject is a passthrough to the underlying DescribeProject method.
// It will increment the count of requests made to DescribeProject.
func (c *Mobile) DescribeProject(input *mobile.DescribeProjectInput) (*mobile.DescribeProjectOutput, error) {
	c.inc("DescribeProject")
	return c.svc.DescribeProject(input)
}

// DescribeProjectWithContext is a passthrough to the underlying DescribeProjectWithContext method.
// It will increment the count of requests made to DescribeProject.
func (c *Mobile) DescribeProjectWithContext(ctx aws.Context, input *mobile.DescribeProjectInput, opts ...request.Option) (*mobile.DescribeProjectOutput, error) {
	c.inc("DescribeProject")
	return c.svc.DescribeProjectWithContext(ctx, input, opts...)
}

// ExportBundleRequest is a passthrough to the underlying ExportBundleRequest.
// It will increment the count of requests made to ExportBundle.
func (c *Mobile) ExportBundleRequest(input *mobile.ExportBundleInput) (req *request.Request, output *mobile.ExportBundleOutput) {
	c.inc("ExportBundle")
	return c.svc.ExportBundleRequest(input)
}

// ExportBundle is a passthrough to the underlying ExportBundle method.
// It will increment the count of requests made to ExportBundle.
func (c *Mobile) ExportBundle(input *mobile.ExportBundleInput) (*mobile.ExportBundleOutput, error) {
	c.inc("ExportBundle")
	return c.svc.ExportBundle(input)
}

// ExportBundleWithContext is a passthrough to the underlying ExportBundleWithContext method.
// It will increment the count of requests made to ExportBundle.
func (c *Mobile) ExportBundleWithContext(ctx aws.Context, input *mobile.ExportBundleInput, opts ...request.Option) (*mobile.ExportBundleOutput, error) {
	c.inc("ExportBundle")
	return c.svc.ExportBundleWithContext(ctx, input, opts...)
}

// ExportProjectRequest is a passthrough to the underlying ExportProjectRequest.
// It will increment the count of requests made to ExportProject.
func (c *Mobile) ExportProjectRequest(input *mobile.ExportProjectInput) (req *request.Request, output *mobile.ExportProjectOutput) {
	c.inc("ExportProject")
	return c.svc.ExportProjectRequest(input)
}

// ExportProject is a passthrough to the underlying ExportProject method.
// It will increment the count of requests made to ExportProject.
func (c *Mobile) ExportProject(input *mobile.ExportProjectInput) (*mobile.ExportProjectOutput, error) {
	c.inc("ExportProject")
	return c.svc.ExportProject(input)
}

// ExportProjectWithContext is a passthrough to the underlying ExportProjectWithContext method.
// It will increment the count of requests made to ExportProject.
func (c *Mobile) ExportProjectWithContext(ctx aws.Context, input *mobile.ExportProjectInput, opts ...request.Option) (*mobile.ExportProjectOutput, error) {
	c.inc("ExportProject")
	return c.svc.ExportProjectWithContext(ctx, input, opts...)
}

// ListBundlesRequest is a passthrough to the underlying ListBundlesRequest.
// It will increment the count of requests made to ListBundles.
func (c *Mobile) ListBundlesRequest(input *mobile.ListBundlesInput) (req *request.Request, output *mobile.ListBundlesOutput) {
	c.inc("ListBundles")
	return c.svc.ListBundlesRequest(input)
}

// ListBundles is a passthrough to the underlying ListBundles method.
// It will increment the count of requests made to ListBundles.
func (c *Mobile) ListBundles(input *mobile.ListBundlesInput) (*mobile.ListBundlesOutput, error) {
	c.inc("ListBundles")
	return c.svc.ListBundles(input)
}

// ListBundlesWithContext is a passthrough to the underlying ListBundlesWithContext method.
// It will increment the count of requests made to ListBundles.
func (c *Mobile) ListBundlesWithContext(ctx aws.Context, input *mobile.ListBundlesInput, opts ...request.Option) (*mobile.ListBundlesOutput, error) {
	c.inc("ListBundles")
	return c.svc.ListBundlesWithContext(ctx, input, opts...)
}

// ListBundlesPages is a passthrough to the underlying ListBundlesPages method.
// It will increment the count of requests made to ListBundles on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListBundlesPagesWithContext to avoid this.
func (c *Mobile) ListBundlesPages(input *mobile.ListBundlesInput, fn func(*mobile.ListBundlesOutput, bool) bool) error {
	wrappedFn := func(page *mobile.ListBundlesOutput, lastPage bool) bool {
		c.inc("ListBundles")
		return fn(page, lastPage)
	}
	return c.svc.ListBundlesPages(input, wrappedFn)
}

// ListBundlesPagesWithContext is a passthrough to the underlying ListBundlesPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListBundles when applied to the request.
func (c *Mobile) ListBundlesPagesWithContext(ctx aws.Context, input *mobile.ListBundlesInput, fn func(*mobile.ListBundlesOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListBundles"))
	return c.svc.ListBundlesPagesWithContext(ctx, input, fn, opts...)
}

// ListProjectsRequest is a passthrough to the underlying ListProjectsRequest.
// It will increment the count of requests made to ListProjects.
func (c *Mobile) ListProjectsRequest(input *mobile.ListProjectsInput) (req *request.Request, output *mobile.ListProjectsOutput) {
	c.inc("ListProjects")
	return c.svc.ListProjectsRequest(input)
}

// ListProjects is a passthrough to the underlying ListProjects method.
// It will increment the count of requests made to ListProjects.
func (c *Mobile) ListProjects(input *mobile.ListProjectsInput) (*mobile.ListProjectsOutput, error) {
	c.inc("ListProjects")
	return c.svc.ListProjects(input)
}

// ListProjectsWithContext is a passthrough to the underlying ListProjectsWithContext method.
// It will increment the count of requests made to ListProjects.
func (c *Mobile) ListProjectsWithContext(ctx aws.Context, input *mobile.ListProjectsInput, opts ...request.Option) (*mobile.ListProjectsOutput, error) {
	c.inc("ListProjects")
	return c.svc.ListProjectsWithContext(ctx, input, opts...)
}

// ListProjectsPages is a passthrough to the underlying ListProjectsPages method.
// It will increment the count of requests made to ListProjects on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListProjectsPagesWithContext to avoid this.
func (c *Mobile) ListProjectsPages(input *mobile.ListProjectsInput, fn func(*mobile.ListProjectsOutput, bool) bool) error {
	wrappedFn := func(page *mobile.ListProjectsOutput, lastPage bool) bool {
		c.inc("ListProjects")
		return fn(page, lastPage)
	}
	return c.svc.ListProjectsPages(input, wrappedFn)
}

// ListProjectsPagesWithContext is a passthrough to the underlying ListProjectsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListProjects when applied to the request.
func (c *Mobile) ListProjectsPagesWithContext(ctx aws.Context, input *mobile.ListProjectsInput, fn func(*mobile.ListProjectsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListProjects"))
	return c.svc.ListProjectsPagesWithContext(ctx, input, fn, opts...)
}

// UpdateProjectRequest is a passthrough to the underlying UpdateProjectRequest.
// It will increment the count of requests made to UpdateProject.
func (c *Mobile) UpdateProjectRequest(input *mobile.UpdateProjectInput) (req *request.Request, output *mobile.UpdateProjectOutput) {
	c.inc("UpdateProject")
	return c.svc.UpdateProjectRequest(input)
}

// UpdateProject is a passthrough to the underlying UpdateProject method.
// It will increment the count of requests made to UpdateProject.
func (c *Mobile) UpdateProject(input *mobile.UpdateProjectInput) (*mobile.UpdateProjectOutput, error) {
	c.inc("UpdateProject")
	return c.svc.UpdateProject(input)
}

// UpdateProjectWithContext is a passthrough to the underlying UpdateProjectWithContext method.
// It will increment the count of requests made to UpdateProject.
func (c *Mobile) UpdateProjectWithContext(ctx aws.Context, input *mobile.UpdateProjectInput, opts ...request.Option) (*mobile.UpdateProjectOutput, error) {
	c.inc("UpdateProject")
	return c.svc.UpdateProjectWithContext(ctx, input, opts...)
}
