// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package ecscounter

import (
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/ecs"
)

// WaitUntilServicesInactive calls WaitUntilServicesInactiveWithContext with aws.BackgroundContext().
func (c *ECS) WaitUntilServicesInactive(input *ecs.DescribeServicesInput) error {
	return c.WaitUntilServicesInactiveWithContext(aws.BackgroundContext(), input)
}

// WaitUntilServicesInactiveWithContext calls the underlying client method with a request option that
// will count DescribeServices requests.
func (c *ECS) WaitUntilServicesInactiveWithContext(ctx aws.Context, input *ecs.DescribeServicesInput, opts ...request.WaiterOption) error {
	opts = append(opts, request.WithWaiterRequestOptions(c.incViaRequestOption("DescribeServices")))
	return c.svc.WaitUntilServicesInactiveWithContext(ctx, input, opts...)
}

// WaitUntilServicesStable calls WaitUntilServicesStableWithContext with aws.BackgroundContext().
func (c *ECS) WaitUntilServicesStable(input *ecs.DescribeServicesInput) error {
	return c.WaitUntilServicesStableWithContext(aws.BackgroundContext(), input)
}

// WaitUntilServicesStableWithContext calls the underlying client method with a request option that
// will count DescribeServices requests.
func (c *ECS) WaitUntilServicesStableWithContext(ctx aws.Context, input *ecs.DescribeServicesInput, opts ...request.WaiterOption) error {
	opts = append(opts, request.WithWaiterRequestOptions(c.incViaRequestOption("DescribeServices")))
	return c.svc.WaitUntilServicesStableWithContext(ctx, input, opts...)
}

// WaitUntilTasksRunning calls WaitUntilTasksRunningWithContext with aws.BackgroundContext().
func (c *ECS) WaitUntilTasksRunning(input *ecs.DescribeTasksInput) error {
	return c.WaitUntilTasksRunningWithContext(aws.BackgroundContext(), input)
}

// WaitUntilTasksRunningWithContext calls the underlying client method with a request option that
// will count DescribeTasks requests.
func (c *ECS) WaitUntilTasksRunningWithContext(ctx aws.Context, input *ecs.DescribeTasksInput, opts ...request.WaiterOption) error {
	opts = append(opts, request.WithWaiterRequestOptions(c.incViaRequestOption("DescribeTasks")))
	return c.svc.WaitUntilTasksRunningWithContext(ctx, input, opts...)
}

// WaitUntilTasksStopped calls WaitUntilTasksStoppedWithContext with aws.BackgroundContext().
func (c *ECS) WaitUntilTasksStopped(input *ecs.DescribeTasksInput) error {
	return c.WaitUntilTasksStoppedWithContext(aws.BackgroundContext(), input)
}

// WaitUntilTasksStoppedWithContext calls the underlying client method with a request option that
// will count DescribeTasks requests.
func (c *ECS) WaitUntilTasksStoppedWithContext(ctx aws.Context, input *ecs.DescribeTasksInput, opts ...request.WaiterOption) error {
	opts = append(opts, request.WithWaiterRequestOptions(c.incViaRequestOption("DescribeTasks")))
	return c.svc.WaitUntilTasksStoppedWithContext(ctx, input, opts...)
}
