// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package kinesiscounter

import (
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/kinesis"
)

// WaitUntilStreamExists calls WaitUntilStreamExistsWithContext with aws.BackgroundContext().
func (c *Kinesis) WaitUntilStreamExists(input *kinesis.DescribeStreamInput) error {
	return c.WaitUntilStreamExistsWithContext(aws.BackgroundContext(), input)
}

// WaitUntilStreamExistsWithContext calls the underlying client method with a request option that
// will count DescribeStream requests.
func (c *Kinesis) WaitUntilStreamExistsWithContext(ctx aws.Context, input *kinesis.DescribeStreamInput, opts ...request.WaiterOption) error {
	opts = append(opts, request.WithWaiterRequestOptions(c.incViaRequestOption("DescribeStream")))
	return c.svc.WaitUntilStreamExistsWithContext(ctx, input, opts...)
}

// WaitUntilStreamNotExists calls WaitUntilStreamNotExistsWithContext with aws.BackgroundContext().
func (c *Kinesis) WaitUntilStreamNotExists(input *kinesis.DescribeStreamInput) error {
	return c.WaitUntilStreamNotExistsWithContext(aws.BackgroundContext(), input)
}

// WaitUntilStreamNotExistsWithContext calls the underlying client method with a request option that
// will count DescribeStream requests.
func (c *Kinesis) WaitUntilStreamNotExistsWithContext(ctx aws.Context, input *kinesis.DescribeStreamInput, opts ...request.WaiterOption) error {
	opts = append(opts, request.WithWaiterRequestOptions(c.incViaRequestOption("DescribeStream")))
	return c.svc.WaitUntilStreamNotExistsWithContext(ctx, input, opts...)
}
