// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package cognitoidentityprovidercounter

import (
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/cognitoidentityprovider"
)

// AddCustomAttributesRequest is a passthrough to the underlying AddCustomAttributesRequest.
// It will increment the count of requests made to AddCustomAttributes.
func (c *CognitoIdentityProvider) AddCustomAttributesRequest(input *cognitoidentityprovider.AddCustomAttributesInput) (req *request.Request, output *cognitoidentityprovider.AddCustomAttributesOutput) {
	c.inc("AddCustomAttributes")
	return c.svc.AddCustomAttributesRequest(input)
}

// AddCustomAttributes is a passthrough to the underlying AddCustomAttributes method.
// It will increment the count of requests made to AddCustomAttributes.
func (c *CognitoIdentityProvider) AddCustomAttributes(input *cognitoidentityprovider.AddCustomAttributesInput) (*cognitoidentityprovider.AddCustomAttributesOutput, error) {
	c.inc("AddCustomAttributes")
	return c.svc.AddCustomAttributes(input)
}

// AddCustomAttributesWithContext is a passthrough to the underlying AddCustomAttributesWithContext method.
// It will increment the count of requests made to AddCustomAttributes.
func (c *CognitoIdentityProvider) AddCustomAttributesWithContext(ctx aws.Context, input *cognitoidentityprovider.AddCustomAttributesInput, opts ...request.Option) (*cognitoidentityprovider.AddCustomAttributesOutput, error) {
	c.inc("AddCustomAttributes")
	return c.svc.AddCustomAttributesWithContext(ctx, input, opts...)
}

// AdminAddUserToGroupRequest is a passthrough to the underlying AdminAddUserToGroupRequest.
// It will increment the count of requests made to AdminAddUserToGroup.
func (c *CognitoIdentityProvider) AdminAddUserToGroupRequest(input *cognitoidentityprovider.AdminAddUserToGroupInput) (req *request.Request, output *cognitoidentityprovider.AdminAddUserToGroupOutput) {
	c.inc("AdminAddUserToGroup")
	return c.svc.AdminAddUserToGroupRequest(input)
}

// AdminAddUserToGroup is a passthrough to the underlying AdminAddUserToGroup method.
// It will increment the count of requests made to AdminAddUserToGroup.
func (c *CognitoIdentityProvider) AdminAddUserToGroup(input *cognitoidentityprovider.AdminAddUserToGroupInput) (*cognitoidentityprovider.AdminAddUserToGroupOutput, error) {
	c.inc("AdminAddUserToGroup")
	return c.svc.AdminAddUserToGroup(input)
}

// AdminAddUserToGroupWithContext is a passthrough to the underlying AdminAddUserToGroupWithContext method.
// It will increment the count of requests made to AdminAddUserToGroup.
func (c *CognitoIdentityProvider) AdminAddUserToGroupWithContext(ctx aws.Context, input *cognitoidentityprovider.AdminAddUserToGroupInput, opts ...request.Option) (*cognitoidentityprovider.AdminAddUserToGroupOutput, error) {
	c.inc("AdminAddUserToGroup")
	return c.svc.AdminAddUserToGroupWithContext(ctx, input, opts...)
}

// AdminConfirmSignUpRequest is a passthrough to the underlying AdminConfirmSignUpRequest.
// It will increment the count of requests made to AdminConfirmSignUp.
func (c *CognitoIdentityProvider) AdminConfirmSignUpRequest(input *cognitoidentityprovider.AdminConfirmSignUpInput) (req *request.Request, output *cognitoidentityprovider.AdminConfirmSignUpOutput) {
	c.inc("AdminConfirmSignUp")
	return c.svc.AdminConfirmSignUpRequest(input)
}

// AdminConfirmSignUp is a passthrough to the underlying AdminConfirmSignUp method.
// It will increment the count of requests made to AdminConfirmSignUp.
func (c *CognitoIdentityProvider) AdminConfirmSignUp(input *cognitoidentityprovider.AdminConfirmSignUpInput) (*cognitoidentityprovider.AdminConfirmSignUpOutput, error) {
	c.inc("AdminConfirmSignUp")
	return c.svc.AdminConfirmSignUp(input)
}

// AdminConfirmSignUpWithContext is a passthrough to the underlying AdminConfirmSignUpWithContext method.
// It will increment the count of requests made to AdminConfirmSignUp.
func (c *CognitoIdentityProvider) AdminConfirmSignUpWithContext(ctx aws.Context, input *cognitoidentityprovider.AdminConfirmSignUpInput, opts ...request.Option) (*cognitoidentityprovider.AdminConfirmSignUpOutput, error) {
	c.inc("AdminConfirmSignUp")
	return c.svc.AdminConfirmSignUpWithContext(ctx, input, opts...)
}

// AdminCreateUserRequest is a passthrough to the underlying AdminCreateUserRequest.
// It will increment the count of requests made to AdminCreateUser.
func (c *CognitoIdentityProvider) AdminCreateUserRequest(input *cognitoidentityprovider.AdminCreateUserInput) (req *request.Request, output *cognitoidentityprovider.AdminCreateUserOutput) {
	c.inc("AdminCreateUser")
	return c.svc.AdminCreateUserRequest(input)
}

// AdminCreateUser is a passthrough to the underlying AdminCreateUser method.
// It will increment the count of requests made to AdminCreateUser.
func (c *CognitoIdentityProvider) AdminCreateUser(input *cognitoidentityprovider.AdminCreateUserInput) (*cognitoidentityprovider.AdminCreateUserOutput, error) {
	c.inc("AdminCreateUser")
	return c.svc.AdminCreateUser(input)
}

// AdminCreateUserWithContext is a passthrough to the underlying AdminCreateUserWithContext method.
// It will increment the count of requests made to AdminCreateUser.
func (c *CognitoIdentityProvider) AdminCreateUserWithContext(ctx aws.Context, input *cognitoidentityprovider.AdminCreateUserInput, opts ...request.Option) (*cognitoidentityprovider.AdminCreateUserOutput, error) {
	c.inc("AdminCreateUser")
	return c.svc.AdminCreateUserWithContext(ctx, input, opts...)
}

// AdminDeleteUserRequest is a passthrough to the underlying AdminDeleteUserRequest.
// It will increment the count of requests made to AdminDeleteUser.
func (c *CognitoIdentityProvider) AdminDeleteUserRequest(input *cognitoidentityprovider.AdminDeleteUserInput) (req *request.Request, output *cognitoidentityprovider.AdminDeleteUserOutput) {
	c.inc("AdminDeleteUser")
	return c.svc.AdminDeleteUserRequest(input)
}

// AdminDeleteUser is a passthrough to the underlying AdminDeleteUser method.
// It will increment the count of requests made to AdminDeleteUser.
func (c *CognitoIdentityProvider) AdminDeleteUser(input *cognitoidentityprovider.AdminDeleteUserInput) (*cognitoidentityprovider.AdminDeleteUserOutput, error) {
	c.inc("AdminDeleteUser")
	return c.svc.AdminDeleteUser(input)
}

// AdminDeleteUserWithContext is a passthrough to the underlying AdminDeleteUserWithContext method.
// It will increment the count of requests made to AdminDeleteUser.
func (c *CognitoIdentityProvider) AdminDeleteUserWithContext(ctx aws.Context, input *cognitoidentityprovider.AdminDeleteUserInput, opts ...request.Option) (*cognitoidentityprovider.AdminDeleteUserOutput, error) {
	c.inc("AdminDeleteUser")
	return c.svc.AdminDeleteUserWithContext(ctx, input, opts...)
}

// AdminDeleteUserAttributesRequest is a passthrough to the underlying AdminDeleteUserAttributesRequest.
// It will increment the count of requests made to AdminDeleteUserAttributes.
func (c *CognitoIdentityProvider) AdminDeleteUserAttributesRequest(input *cognitoidentityprovider.AdminDeleteUserAttributesInput) (req *request.Request, output *cognitoidentityprovider.AdminDeleteUserAttributesOutput) {
	c.inc("AdminDeleteUserAttributes")
	return c.svc.AdminDeleteUserAttributesRequest(input)
}

// AdminDeleteUserAttributes is a passthrough to the underlying AdminDeleteUserAttributes method.
// It will increment the count of requests made to AdminDeleteUserAttributes.
func (c *CognitoIdentityProvider) AdminDeleteUserAttributes(input *cognitoidentityprovider.AdminDeleteUserAttributesInput) (*cognitoidentityprovider.AdminDeleteUserAttributesOutput, error) {
	c.inc("AdminDeleteUserAttributes")
	return c.svc.AdminDeleteUserAttributes(input)
}

// AdminDeleteUserAttributesWithContext is a passthrough to the underlying AdminDeleteUserAttributesWithContext method.
// It will increment the count of requests made to AdminDeleteUserAttributes.
func (c *CognitoIdentityProvider) AdminDeleteUserAttributesWithContext(ctx aws.Context, input *cognitoidentityprovider.AdminDeleteUserAttributesInput, opts ...request.Option) (*cognitoidentityprovider.AdminDeleteUserAttributesOutput, error) {
	c.inc("AdminDeleteUserAttributes")
	return c.svc.AdminDeleteUserAttributesWithContext(ctx, input, opts...)
}

// AdminDisableProviderForUserRequest is a passthrough to the underlying AdminDisableProviderForUserRequest.
// It will increment the count of requests made to AdminDisableProviderForUser.
func (c *CognitoIdentityProvider) AdminDisableProviderForUserRequest(input *cognitoidentityprovider.AdminDisableProviderForUserInput) (req *request.Request, output *cognitoidentityprovider.AdminDisableProviderForUserOutput) {
	c.inc("AdminDisableProviderForUser")
	return c.svc.AdminDisableProviderForUserRequest(input)
}

// AdminDisableProviderForUser is a passthrough to the underlying AdminDisableProviderForUser method.
// It will increment the count of requests made to AdminDisableProviderForUser.
func (c *CognitoIdentityProvider) AdminDisableProviderForUser(input *cognitoidentityprovider.AdminDisableProviderForUserInput) (*cognitoidentityprovider.AdminDisableProviderForUserOutput, error) {
	c.inc("AdminDisableProviderForUser")
	return c.svc.AdminDisableProviderForUser(input)
}

// AdminDisableProviderForUserWithContext is a passthrough to the underlying AdminDisableProviderForUserWithContext method.
// It will increment the count of requests made to AdminDisableProviderForUser.
func (c *CognitoIdentityProvider) AdminDisableProviderForUserWithContext(ctx aws.Context, input *cognitoidentityprovider.AdminDisableProviderForUserInput, opts ...request.Option) (*cognitoidentityprovider.AdminDisableProviderForUserOutput, error) {
	c.inc("AdminDisableProviderForUser")
	return c.svc.AdminDisableProviderForUserWithContext(ctx, input, opts...)
}

// AdminDisableUserRequest is a passthrough to the underlying AdminDisableUserRequest.
// It will increment the count of requests made to AdminDisableUser.
func (c *CognitoIdentityProvider) AdminDisableUserRequest(input *cognitoidentityprovider.AdminDisableUserInput) (req *request.Request, output *cognitoidentityprovider.AdminDisableUserOutput) {
	c.inc("AdminDisableUser")
	return c.svc.AdminDisableUserRequest(input)
}

// AdminDisableUser is a passthrough to the underlying AdminDisableUser method.
// It will increment the count of requests made to AdminDisableUser.
func (c *CognitoIdentityProvider) AdminDisableUser(input *cognitoidentityprovider.AdminDisableUserInput) (*cognitoidentityprovider.AdminDisableUserOutput, error) {
	c.inc("AdminDisableUser")
	return c.svc.AdminDisableUser(input)
}

// AdminDisableUserWithContext is a passthrough to the underlying AdminDisableUserWithContext method.
// It will increment the count of requests made to AdminDisableUser.
func (c *CognitoIdentityProvider) AdminDisableUserWithContext(ctx aws.Context, input *cognitoidentityprovider.AdminDisableUserInput, opts ...request.Option) (*cognitoidentityprovider.AdminDisableUserOutput, error) {
	c.inc("AdminDisableUser")
	return c.svc.AdminDisableUserWithContext(ctx, input, opts...)
}

// AdminEnableUserRequest is a passthrough to the underlying AdminEnableUserRequest.
// It will increment the count of requests made to AdminEnableUser.
func (c *CognitoIdentityProvider) AdminEnableUserRequest(input *cognitoidentityprovider.AdminEnableUserInput) (req *request.Request, output *cognitoidentityprovider.AdminEnableUserOutput) {
	c.inc("AdminEnableUser")
	return c.svc.AdminEnableUserRequest(input)
}

// AdminEnableUser is a passthrough to the underlying AdminEnableUser method.
// It will increment the count of requests made to AdminEnableUser.
func (c *CognitoIdentityProvider) AdminEnableUser(input *cognitoidentityprovider.AdminEnableUserInput) (*cognitoidentityprovider.AdminEnableUserOutput, error) {
	c.inc("AdminEnableUser")
	return c.svc.AdminEnableUser(input)
}

// AdminEnableUserWithContext is a passthrough to the underlying AdminEnableUserWithContext method.
// It will increment the count of requests made to AdminEnableUser.
func (c *CognitoIdentityProvider) AdminEnableUserWithContext(ctx aws.Context, input *cognitoidentityprovider.AdminEnableUserInput, opts ...request.Option) (*cognitoidentityprovider.AdminEnableUserOutput, error) {
	c.inc("AdminEnableUser")
	return c.svc.AdminEnableUserWithContext(ctx, input, opts...)
}

// AdminForgetDeviceRequest is a passthrough to the underlying AdminForgetDeviceRequest.
// It will increment the count of requests made to AdminForgetDevice.
func (c *CognitoIdentityProvider) AdminForgetDeviceRequest(input *cognitoidentityprovider.AdminForgetDeviceInput) (req *request.Request, output *cognitoidentityprovider.AdminForgetDeviceOutput) {
	c.inc("AdminForgetDevice")
	return c.svc.AdminForgetDeviceRequest(input)
}

// AdminForgetDevice is a passthrough to the underlying AdminForgetDevice method.
// It will increment the count of requests made to AdminForgetDevice.
func (c *CognitoIdentityProvider) AdminForgetDevice(input *cognitoidentityprovider.AdminForgetDeviceInput) (*cognitoidentityprovider.AdminForgetDeviceOutput, error) {
	c.inc("AdminForgetDevice")
	return c.svc.AdminForgetDevice(input)
}

// AdminForgetDeviceWithContext is a passthrough to the underlying AdminForgetDeviceWithContext method.
// It will increment the count of requests made to AdminForgetDevice.
func (c *CognitoIdentityProvider) AdminForgetDeviceWithContext(ctx aws.Context, input *cognitoidentityprovider.AdminForgetDeviceInput, opts ...request.Option) (*cognitoidentityprovider.AdminForgetDeviceOutput, error) {
	c.inc("AdminForgetDevice")
	return c.svc.AdminForgetDeviceWithContext(ctx, input, opts...)
}

// AdminGetDeviceRequest is a passthrough to the underlying AdminGetDeviceRequest.
// It will increment the count of requests made to AdminGetDevice.
func (c *CognitoIdentityProvider) AdminGetDeviceRequest(input *cognitoidentityprovider.AdminGetDeviceInput) (req *request.Request, output *cognitoidentityprovider.AdminGetDeviceOutput) {
	c.inc("AdminGetDevice")
	return c.svc.AdminGetDeviceRequest(input)
}

// AdminGetDevice is a passthrough to the underlying AdminGetDevice method.
// It will increment the count of requests made to AdminGetDevice.
func (c *CognitoIdentityProvider) AdminGetDevice(input *cognitoidentityprovider.AdminGetDeviceInput) (*cognitoidentityprovider.AdminGetDeviceOutput, error) {
	c.inc("AdminGetDevice")
	return c.svc.AdminGetDevice(input)
}

// AdminGetDeviceWithContext is a passthrough to the underlying AdminGetDeviceWithContext method.
// It will increment the count of requests made to AdminGetDevice.
func (c *CognitoIdentityProvider) AdminGetDeviceWithContext(ctx aws.Context, input *cognitoidentityprovider.AdminGetDeviceInput, opts ...request.Option) (*cognitoidentityprovider.AdminGetDeviceOutput, error) {
	c.inc("AdminGetDevice")
	return c.svc.AdminGetDeviceWithContext(ctx, input, opts...)
}

// AdminGetUserRequest is a passthrough to the underlying AdminGetUserRequest.
// It will increment the count of requests made to AdminGetUser.
func (c *CognitoIdentityProvider) AdminGetUserRequest(input *cognitoidentityprovider.AdminGetUserInput) (req *request.Request, output *cognitoidentityprovider.AdminGetUserOutput) {
	c.inc("AdminGetUser")
	return c.svc.AdminGetUserRequest(input)
}

// AdminGetUser is a passthrough to the underlying AdminGetUser method.
// It will increment the count of requests made to AdminGetUser.
func (c *CognitoIdentityProvider) AdminGetUser(input *cognitoidentityprovider.AdminGetUserInput) (*cognitoidentityprovider.AdminGetUserOutput, error) {
	c.inc("AdminGetUser")
	return c.svc.AdminGetUser(input)
}

// AdminGetUserWithContext is a passthrough to the underlying AdminGetUserWithContext method.
// It will increment the count of requests made to AdminGetUser.
func (c *CognitoIdentityProvider) AdminGetUserWithContext(ctx aws.Context, input *cognitoidentityprovider.AdminGetUserInput, opts ...request.Option) (*cognitoidentityprovider.AdminGetUserOutput, error) {
	c.inc("AdminGetUser")
	return c.svc.AdminGetUserWithContext(ctx, input, opts...)
}

// AdminInitiateAuthRequest is a passthrough to the underlying AdminInitiateAuthRequest.
// It will increment the count of requests made to AdminInitiateAuth.
func (c *CognitoIdentityProvider) AdminInitiateAuthRequest(input *cognitoidentityprovider.AdminInitiateAuthInput) (req *request.Request, output *cognitoidentityprovider.AdminInitiateAuthOutput) {
	c.inc("AdminInitiateAuth")
	return c.svc.AdminInitiateAuthRequest(input)
}

// AdminInitiateAuth is a passthrough to the underlying AdminInitiateAuth method.
// It will increment the count of requests made to AdminInitiateAuth.
func (c *CognitoIdentityProvider) AdminInitiateAuth(input *cognitoidentityprovider.AdminInitiateAuthInput) (*cognitoidentityprovider.AdminInitiateAuthOutput, error) {
	c.inc("AdminInitiateAuth")
	return c.svc.AdminInitiateAuth(input)
}

// AdminInitiateAuthWithContext is a passthrough to the underlying AdminInitiateAuthWithContext method.
// It will increment the count of requests made to AdminInitiateAuth.
func (c *CognitoIdentityProvider) AdminInitiateAuthWithContext(ctx aws.Context, input *cognitoidentityprovider.AdminInitiateAuthInput, opts ...request.Option) (*cognitoidentityprovider.AdminInitiateAuthOutput, error) {
	c.inc("AdminInitiateAuth")
	return c.svc.AdminInitiateAuthWithContext(ctx, input, opts...)
}

// AdminLinkProviderForUserRequest is a passthrough to the underlying AdminLinkProviderForUserRequest.
// It will increment the count of requests made to AdminLinkProviderForUser.
func (c *CognitoIdentityProvider) AdminLinkProviderForUserRequest(input *cognitoidentityprovider.AdminLinkProviderForUserInput) (req *request.Request, output *cognitoidentityprovider.AdminLinkProviderForUserOutput) {
	c.inc("AdminLinkProviderForUser")
	return c.svc.AdminLinkProviderForUserRequest(input)
}

// AdminLinkProviderForUser is a passthrough to the underlying AdminLinkProviderForUser method.
// It will increment the count of requests made to AdminLinkProviderForUser.
func (c *CognitoIdentityProvider) AdminLinkProviderForUser(input *cognitoidentityprovider.AdminLinkProviderForUserInput) (*cognitoidentityprovider.AdminLinkProviderForUserOutput, error) {
	c.inc("AdminLinkProviderForUser")
	return c.svc.AdminLinkProviderForUser(input)
}

// AdminLinkProviderForUserWithContext is a passthrough to the underlying AdminLinkProviderForUserWithContext method.
// It will increment the count of requests made to AdminLinkProviderForUser.
func (c *CognitoIdentityProvider) AdminLinkProviderForUserWithContext(ctx aws.Context, input *cognitoidentityprovider.AdminLinkProviderForUserInput, opts ...request.Option) (*cognitoidentityprovider.AdminLinkProviderForUserOutput, error) {
	c.inc("AdminLinkProviderForUser")
	return c.svc.AdminLinkProviderForUserWithContext(ctx, input, opts...)
}

// AdminListDevicesRequest is a passthrough to the underlying AdminListDevicesRequest.
// It will increment the count of requests made to AdminListDevices.
func (c *CognitoIdentityProvider) AdminListDevicesRequest(input *cognitoidentityprovider.AdminListDevicesInput) (req *request.Request, output *cognitoidentityprovider.AdminListDevicesOutput) {
	c.inc("AdminListDevices")
	return c.svc.AdminListDevicesRequest(input)
}

// AdminListDevices is a passthrough to the underlying AdminListDevices method.
// It will increment the count of requests made to AdminListDevices.
func (c *CognitoIdentityProvider) AdminListDevices(input *cognitoidentityprovider.AdminListDevicesInput) (*cognitoidentityprovider.AdminListDevicesOutput, error) {
	c.inc("AdminListDevices")
	return c.svc.AdminListDevices(input)
}

// AdminListDevicesWithContext is a passthrough to the underlying AdminListDevicesWithContext method.
// It will increment the count of requests made to AdminListDevices.
func (c *CognitoIdentityProvider) AdminListDevicesWithContext(ctx aws.Context, input *cognitoidentityprovider.AdminListDevicesInput, opts ...request.Option) (*cognitoidentityprovider.AdminListDevicesOutput, error) {
	c.inc("AdminListDevices")
	return c.svc.AdminListDevicesWithContext(ctx, input, opts...)
}

// AdminListGroupsForUserRequest is a passthrough to the underlying AdminListGroupsForUserRequest.
// It will increment the count of requests made to AdminListGroupsForUser.
func (c *CognitoIdentityProvider) AdminListGroupsForUserRequest(input *cognitoidentityprovider.AdminListGroupsForUserInput) (req *request.Request, output *cognitoidentityprovider.AdminListGroupsForUserOutput) {
	c.inc("AdminListGroupsForUser")
	return c.svc.AdminListGroupsForUserRequest(input)
}

// AdminListGroupsForUser is a passthrough to the underlying AdminListGroupsForUser method.
// It will increment the count of requests made to AdminListGroupsForUser.
func (c *CognitoIdentityProvider) AdminListGroupsForUser(input *cognitoidentityprovider.AdminListGroupsForUserInput) (*cognitoidentityprovider.AdminListGroupsForUserOutput, error) {
	c.inc("AdminListGroupsForUser")
	return c.svc.AdminListGroupsForUser(input)
}

// AdminListGroupsForUserWithContext is a passthrough to the underlying AdminListGroupsForUserWithContext method.
// It will increment the count of requests made to AdminListGroupsForUser.
func (c *CognitoIdentityProvider) AdminListGroupsForUserWithContext(ctx aws.Context, input *cognitoidentityprovider.AdminListGroupsForUserInput, opts ...request.Option) (*cognitoidentityprovider.AdminListGroupsForUserOutput, error) {
	c.inc("AdminListGroupsForUser")
	return c.svc.AdminListGroupsForUserWithContext(ctx, input, opts...)
}

// AdminListUserAuthEventsRequest is a passthrough to the underlying AdminListUserAuthEventsRequest.
// It will increment the count of requests made to AdminListUserAuthEvents.
func (c *CognitoIdentityProvider) AdminListUserAuthEventsRequest(input *cognitoidentityprovider.AdminListUserAuthEventsInput) (req *request.Request, output *cognitoidentityprovider.AdminListUserAuthEventsOutput) {
	c.inc("AdminListUserAuthEvents")
	return c.svc.AdminListUserAuthEventsRequest(input)
}

// AdminListUserAuthEvents is a passthrough to the underlying AdminListUserAuthEvents method.
// It will increment the count of requests made to AdminListUserAuthEvents.
func (c *CognitoIdentityProvider) AdminListUserAuthEvents(input *cognitoidentityprovider.AdminListUserAuthEventsInput) (*cognitoidentityprovider.AdminListUserAuthEventsOutput, error) {
	c.inc("AdminListUserAuthEvents")
	return c.svc.AdminListUserAuthEvents(input)
}

// AdminListUserAuthEventsWithContext is a passthrough to the underlying AdminListUserAuthEventsWithContext method.
// It will increment the count of requests made to AdminListUserAuthEvents.
func (c *CognitoIdentityProvider) AdminListUserAuthEventsWithContext(ctx aws.Context, input *cognitoidentityprovider.AdminListUserAuthEventsInput, opts ...request.Option) (*cognitoidentityprovider.AdminListUserAuthEventsOutput, error) {
	c.inc("AdminListUserAuthEvents")
	return c.svc.AdminListUserAuthEventsWithContext(ctx, input, opts...)
}

// AdminRemoveUserFromGroupRequest is a passthrough to the underlying AdminRemoveUserFromGroupRequest.
// It will increment the count of requests made to AdminRemoveUserFromGroup.
func (c *CognitoIdentityProvider) AdminRemoveUserFromGroupRequest(input *cognitoidentityprovider.AdminRemoveUserFromGroupInput) (req *request.Request, output *cognitoidentityprovider.AdminRemoveUserFromGroupOutput) {
	c.inc("AdminRemoveUserFromGroup")
	return c.svc.AdminRemoveUserFromGroupRequest(input)
}

// AdminRemoveUserFromGroup is a passthrough to the underlying AdminRemoveUserFromGroup method.
// It will increment the count of requests made to AdminRemoveUserFromGroup.
func (c *CognitoIdentityProvider) AdminRemoveUserFromGroup(input *cognitoidentityprovider.AdminRemoveUserFromGroupInput) (*cognitoidentityprovider.AdminRemoveUserFromGroupOutput, error) {
	c.inc("AdminRemoveUserFromGroup")
	return c.svc.AdminRemoveUserFromGroup(input)
}

// AdminRemoveUserFromGroupWithContext is a passthrough to the underlying AdminRemoveUserFromGroupWithContext method.
// It will increment the count of requests made to AdminRemoveUserFromGroup.
func (c *CognitoIdentityProvider) AdminRemoveUserFromGroupWithContext(ctx aws.Context, input *cognitoidentityprovider.AdminRemoveUserFromGroupInput, opts ...request.Option) (*cognitoidentityprovider.AdminRemoveUserFromGroupOutput, error) {
	c.inc("AdminRemoveUserFromGroup")
	return c.svc.AdminRemoveUserFromGroupWithContext(ctx, input, opts...)
}

// AdminResetUserPasswordRequest is a passthrough to the underlying AdminResetUserPasswordRequest.
// It will increment the count of requests made to AdminResetUserPassword.
func (c *CognitoIdentityProvider) AdminResetUserPasswordRequest(input *cognitoidentityprovider.AdminResetUserPasswordInput) (req *request.Request, output *cognitoidentityprovider.AdminResetUserPasswordOutput) {
	c.inc("AdminResetUserPassword")
	return c.svc.AdminResetUserPasswordRequest(input)
}

// AdminResetUserPassword is a passthrough to the underlying AdminResetUserPassword method.
// It will increment the count of requests made to AdminResetUserPassword.
func (c *CognitoIdentityProvider) AdminResetUserPassword(input *cognitoidentityprovider.AdminResetUserPasswordInput) (*cognitoidentityprovider.AdminResetUserPasswordOutput, error) {
	c.inc("AdminResetUserPassword")
	return c.svc.AdminResetUserPassword(input)
}

// AdminResetUserPasswordWithContext is a passthrough to the underlying AdminResetUserPasswordWithContext method.
// It will increment the count of requests made to AdminResetUserPassword.
func (c *CognitoIdentityProvider) AdminResetUserPasswordWithContext(ctx aws.Context, input *cognitoidentityprovider.AdminResetUserPasswordInput, opts ...request.Option) (*cognitoidentityprovider.AdminResetUserPasswordOutput, error) {
	c.inc("AdminResetUserPassword")
	return c.svc.AdminResetUserPasswordWithContext(ctx, input, opts...)
}

// AdminRespondToAuthChallengeRequest is a passthrough to the underlying AdminRespondToAuthChallengeRequest.
// It will increment the count of requests made to AdminRespondToAuthChallenge.
func (c *CognitoIdentityProvider) AdminRespondToAuthChallengeRequest(input *cognitoidentityprovider.AdminRespondToAuthChallengeInput) (req *request.Request, output *cognitoidentityprovider.AdminRespondToAuthChallengeOutput) {
	c.inc("AdminRespondToAuthChallenge")
	return c.svc.AdminRespondToAuthChallengeRequest(input)
}

// AdminRespondToAuthChallenge is a passthrough to the underlying AdminRespondToAuthChallenge method.
// It will increment the count of requests made to AdminRespondToAuthChallenge.
func (c *CognitoIdentityProvider) AdminRespondToAuthChallenge(input *cognitoidentityprovider.AdminRespondToAuthChallengeInput) (*cognitoidentityprovider.AdminRespondToAuthChallengeOutput, error) {
	c.inc("AdminRespondToAuthChallenge")
	return c.svc.AdminRespondToAuthChallenge(input)
}

// AdminRespondToAuthChallengeWithContext is a passthrough to the underlying AdminRespondToAuthChallengeWithContext method.
// It will increment the count of requests made to AdminRespondToAuthChallenge.
func (c *CognitoIdentityProvider) AdminRespondToAuthChallengeWithContext(ctx aws.Context, input *cognitoidentityprovider.AdminRespondToAuthChallengeInput, opts ...request.Option) (*cognitoidentityprovider.AdminRespondToAuthChallengeOutput, error) {
	c.inc("AdminRespondToAuthChallenge")
	return c.svc.AdminRespondToAuthChallengeWithContext(ctx, input, opts...)
}

// AdminSetUserMFAPreferenceRequest is a passthrough to the underlying AdminSetUserMFAPreferenceRequest.
// It will increment the count of requests made to AdminSetUserMFAPreference.
func (c *CognitoIdentityProvider) AdminSetUserMFAPreferenceRequest(input *cognitoidentityprovider.AdminSetUserMFAPreferenceInput) (req *request.Request, output *cognitoidentityprovider.AdminSetUserMFAPreferenceOutput) {
	c.inc("AdminSetUserMFAPreference")
	return c.svc.AdminSetUserMFAPreferenceRequest(input)
}

// AdminSetUserMFAPreference is a passthrough to the underlying AdminSetUserMFAPreference method.
// It will increment the count of requests made to AdminSetUserMFAPreference.
func (c *CognitoIdentityProvider) AdminSetUserMFAPreference(input *cognitoidentityprovider.AdminSetUserMFAPreferenceInput) (*cognitoidentityprovider.AdminSetUserMFAPreferenceOutput, error) {
	c.inc("AdminSetUserMFAPreference")
	return c.svc.AdminSetUserMFAPreference(input)
}

// AdminSetUserMFAPreferenceWithContext is a passthrough to the underlying AdminSetUserMFAPreferenceWithContext method.
// It will increment the count of requests made to AdminSetUserMFAPreference.
func (c *CognitoIdentityProvider) AdminSetUserMFAPreferenceWithContext(ctx aws.Context, input *cognitoidentityprovider.AdminSetUserMFAPreferenceInput, opts ...request.Option) (*cognitoidentityprovider.AdminSetUserMFAPreferenceOutput, error) {
	c.inc("AdminSetUserMFAPreference")
	return c.svc.AdminSetUserMFAPreferenceWithContext(ctx, input, opts...)
}

// AdminSetUserSettingsRequest is a passthrough to the underlying AdminSetUserSettingsRequest.
// It will increment the count of requests made to AdminSetUserSettings.
func (c *CognitoIdentityProvider) AdminSetUserSettingsRequest(input *cognitoidentityprovider.AdminSetUserSettingsInput) (req *request.Request, output *cognitoidentityprovider.AdminSetUserSettingsOutput) {
	c.inc("AdminSetUserSettings")
	return c.svc.AdminSetUserSettingsRequest(input)
}

// AdminSetUserSettings is a passthrough to the underlying AdminSetUserSettings method.
// It will increment the count of requests made to AdminSetUserSettings.
func (c *CognitoIdentityProvider) AdminSetUserSettings(input *cognitoidentityprovider.AdminSetUserSettingsInput) (*cognitoidentityprovider.AdminSetUserSettingsOutput, error) {
	c.inc("AdminSetUserSettings")
	return c.svc.AdminSetUserSettings(input)
}

// AdminSetUserSettingsWithContext is a passthrough to the underlying AdminSetUserSettingsWithContext method.
// It will increment the count of requests made to AdminSetUserSettings.
func (c *CognitoIdentityProvider) AdminSetUserSettingsWithContext(ctx aws.Context, input *cognitoidentityprovider.AdminSetUserSettingsInput, opts ...request.Option) (*cognitoidentityprovider.AdminSetUserSettingsOutput, error) {
	c.inc("AdminSetUserSettings")
	return c.svc.AdminSetUserSettingsWithContext(ctx, input, opts...)
}

// AdminUpdateAuthEventFeedbackRequest is a passthrough to the underlying AdminUpdateAuthEventFeedbackRequest.
// It will increment the count of requests made to AdminUpdateAuthEventFeedback.
func (c *CognitoIdentityProvider) AdminUpdateAuthEventFeedbackRequest(input *cognitoidentityprovider.AdminUpdateAuthEventFeedbackInput) (req *request.Request, output *cognitoidentityprovider.AdminUpdateAuthEventFeedbackOutput) {
	c.inc("AdminUpdateAuthEventFeedback")
	return c.svc.AdminUpdateAuthEventFeedbackRequest(input)
}

// AdminUpdateAuthEventFeedback is a passthrough to the underlying AdminUpdateAuthEventFeedback method.
// It will increment the count of requests made to AdminUpdateAuthEventFeedback.
func (c *CognitoIdentityProvider) AdminUpdateAuthEventFeedback(input *cognitoidentityprovider.AdminUpdateAuthEventFeedbackInput) (*cognitoidentityprovider.AdminUpdateAuthEventFeedbackOutput, error) {
	c.inc("AdminUpdateAuthEventFeedback")
	return c.svc.AdminUpdateAuthEventFeedback(input)
}

// AdminUpdateAuthEventFeedbackWithContext is a passthrough to the underlying AdminUpdateAuthEventFeedbackWithContext method.
// It will increment the count of requests made to AdminUpdateAuthEventFeedback.
func (c *CognitoIdentityProvider) AdminUpdateAuthEventFeedbackWithContext(ctx aws.Context, input *cognitoidentityprovider.AdminUpdateAuthEventFeedbackInput, opts ...request.Option) (*cognitoidentityprovider.AdminUpdateAuthEventFeedbackOutput, error) {
	c.inc("AdminUpdateAuthEventFeedback")
	return c.svc.AdminUpdateAuthEventFeedbackWithContext(ctx, input, opts...)
}

// AdminUpdateDeviceStatusRequest is a passthrough to the underlying AdminUpdateDeviceStatusRequest.
// It will increment the count of requests made to AdminUpdateDeviceStatus.
func (c *CognitoIdentityProvider) AdminUpdateDeviceStatusRequest(input *cognitoidentityprovider.AdminUpdateDeviceStatusInput) (req *request.Request, output *cognitoidentityprovider.AdminUpdateDeviceStatusOutput) {
	c.inc("AdminUpdateDeviceStatus")
	return c.svc.AdminUpdateDeviceStatusRequest(input)
}

// AdminUpdateDeviceStatus is a passthrough to the underlying AdminUpdateDeviceStatus method.
// It will increment the count of requests made to AdminUpdateDeviceStatus.
func (c *CognitoIdentityProvider) AdminUpdateDeviceStatus(input *cognitoidentityprovider.AdminUpdateDeviceStatusInput) (*cognitoidentityprovider.AdminUpdateDeviceStatusOutput, error) {
	c.inc("AdminUpdateDeviceStatus")
	return c.svc.AdminUpdateDeviceStatus(input)
}

// AdminUpdateDeviceStatusWithContext is a passthrough to the underlying AdminUpdateDeviceStatusWithContext method.
// It will increment the count of requests made to AdminUpdateDeviceStatus.
func (c *CognitoIdentityProvider) AdminUpdateDeviceStatusWithContext(ctx aws.Context, input *cognitoidentityprovider.AdminUpdateDeviceStatusInput, opts ...request.Option) (*cognitoidentityprovider.AdminUpdateDeviceStatusOutput, error) {
	c.inc("AdminUpdateDeviceStatus")
	return c.svc.AdminUpdateDeviceStatusWithContext(ctx, input, opts...)
}

// AdminUpdateUserAttributesRequest is a passthrough to the underlying AdminUpdateUserAttributesRequest.
// It will increment the count of requests made to AdminUpdateUserAttributes.
func (c *CognitoIdentityProvider) AdminUpdateUserAttributesRequest(input *cognitoidentityprovider.AdminUpdateUserAttributesInput) (req *request.Request, output *cognitoidentityprovider.AdminUpdateUserAttributesOutput) {
	c.inc("AdminUpdateUserAttributes")
	return c.svc.AdminUpdateUserAttributesRequest(input)
}

// AdminUpdateUserAttributes is a passthrough to the underlying AdminUpdateUserAttributes method.
// It will increment the count of requests made to AdminUpdateUserAttributes.
func (c *CognitoIdentityProvider) AdminUpdateUserAttributes(input *cognitoidentityprovider.AdminUpdateUserAttributesInput) (*cognitoidentityprovider.AdminUpdateUserAttributesOutput, error) {
	c.inc("AdminUpdateUserAttributes")
	return c.svc.AdminUpdateUserAttributes(input)
}

// AdminUpdateUserAttributesWithContext is a passthrough to the underlying AdminUpdateUserAttributesWithContext method.
// It will increment the count of requests made to AdminUpdateUserAttributes.
func (c *CognitoIdentityProvider) AdminUpdateUserAttributesWithContext(ctx aws.Context, input *cognitoidentityprovider.AdminUpdateUserAttributesInput, opts ...request.Option) (*cognitoidentityprovider.AdminUpdateUserAttributesOutput, error) {
	c.inc("AdminUpdateUserAttributes")
	return c.svc.AdminUpdateUserAttributesWithContext(ctx, input, opts...)
}

// AdminUserGlobalSignOutRequest is a passthrough to the underlying AdminUserGlobalSignOutRequest.
// It will increment the count of requests made to AdminUserGlobalSignOut.
func (c *CognitoIdentityProvider) AdminUserGlobalSignOutRequest(input *cognitoidentityprovider.AdminUserGlobalSignOutInput) (req *request.Request, output *cognitoidentityprovider.AdminUserGlobalSignOutOutput) {
	c.inc("AdminUserGlobalSignOut")
	return c.svc.AdminUserGlobalSignOutRequest(input)
}

// AdminUserGlobalSignOut is a passthrough to the underlying AdminUserGlobalSignOut method.
// It will increment the count of requests made to AdminUserGlobalSignOut.
func (c *CognitoIdentityProvider) AdminUserGlobalSignOut(input *cognitoidentityprovider.AdminUserGlobalSignOutInput) (*cognitoidentityprovider.AdminUserGlobalSignOutOutput, error) {
	c.inc("AdminUserGlobalSignOut")
	return c.svc.AdminUserGlobalSignOut(input)
}

// AdminUserGlobalSignOutWithContext is a passthrough to the underlying AdminUserGlobalSignOutWithContext method.
// It will increment the count of requests made to AdminUserGlobalSignOut.
func (c *CognitoIdentityProvider) AdminUserGlobalSignOutWithContext(ctx aws.Context, input *cognitoidentityprovider.AdminUserGlobalSignOutInput, opts ...request.Option) (*cognitoidentityprovider.AdminUserGlobalSignOutOutput, error) {
	c.inc("AdminUserGlobalSignOut")
	return c.svc.AdminUserGlobalSignOutWithContext(ctx, input, opts...)
}

// AssociateSoftwareTokenRequest is a passthrough to the underlying AssociateSoftwareTokenRequest.
// It will increment the count of requests made to AssociateSoftwareToken.
func (c *CognitoIdentityProvider) AssociateSoftwareTokenRequest(input *cognitoidentityprovider.AssociateSoftwareTokenInput) (req *request.Request, output *cognitoidentityprovider.AssociateSoftwareTokenOutput) {
	c.inc("AssociateSoftwareToken")
	return c.svc.AssociateSoftwareTokenRequest(input)
}

// AssociateSoftwareToken is a passthrough to the underlying AssociateSoftwareToken method.
// It will increment the count of requests made to AssociateSoftwareToken.
func (c *CognitoIdentityProvider) AssociateSoftwareToken(input *cognitoidentityprovider.AssociateSoftwareTokenInput) (*cognitoidentityprovider.AssociateSoftwareTokenOutput, error) {
	c.inc("AssociateSoftwareToken")
	return c.svc.AssociateSoftwareToken(input)
}

// AssociateSoftwareTokenWithContext is a passthrough to the underlying AssociateSoftwareTokenWithContext method.
// It will increment the count of requests made to AssociateSoftwareToken.
func (c *CognitoIdentityProvider) AssociateSoftwareTokenWithContext(ctx aws.Context, input *cognitoidentityprovider.AssociateSoftwareTokenInput, opts ...request.Option) (*cognitoidentityprovider.AssociateSoftwareTokenOutput, error) {
	c.inc("AssociateSoftwareToken")
	return c.svc.AssociateSoftwareTokenWithContext(ctx, input, opts...)
}

// ChangePasswordRequest is a passthrough to the underlying ChangePasswordRequest.
// It will increment the count of requests made to ChangePassword.
func (c *CognitoIdentityProvider) ChangePasswordRequest(input *cognitoidentityprovider.ChangePasswordInput) (req *request.Request, output *cognitoidentityprovider.ChangePasswordOutput) {
	c.inc("ChangePassword")
	return c.svc.ChangePasswordRequest(input)
}

// ChangePassword is a passthrough to the underlying ChangePassword method.
// It will increment the count of requests made to ChangePassword.
func (c *CognitoIdentityProvider) ChangePassword(input *cognitoidentityprovider.ChangePasswordInput) (*cognitoidentityprovider.ChangePasswordOutput, error) {
	c.inc("ChangePassword")
	return c.svc.ChangePassword(input)
}

// ChangePasswordWithContext is a passthrough to the underlying ChangePasswordWithContext method.
// It will increment the count of requests made to ChangePassword.
func (c *CognitoIdentityProvider) ChangePasswordWithContext(ctx aws.Context, input *cognitoidentityprovider.ChangePasswordInput, opts ...request.Option) (*cognitoidentityprovider.ChangePasswordOutput, error) {
	c.inc("ChangePassword")
	return c.svc.ChangePasswordWithContext(ctx, input, opts...)
}

// ConfirmDeviceRequest is a passthrough to the underlying ConfirmDeviceRequest.
// It will increment the count of requests made to ConfirmDevice.
func (c *CognitoIdentityProvider) ConfirmDeviceRequest(input *cognitoidentityprovider.ConfirmDeviceInput) (req *request.Request, output *cognitoidentityprovider.ConfirmDeviceOutput) {
	c.inc("ConfirmDevice")
	return c.svc.ConfirmDeviceRequest(input)
}

// ConfirmDevice is a passthrough to the underlying ConfirmDevice method.
// It will increment the count of requests made to ConfirmDevice.
func (c *CognitoIdentityProvider) ConfirmDevice(input *cognitoidentityprovider.ConfirmDeviceInput) (*cognitoidentityprovider.ConfirmDeviceOutput, error) {
	c.inc("ConfirmDevice")
	return c.svc.ConfirmDevice(input)
}

// ConfirmDeviceWithContext is a passthrough to the underlying ConfirmDeviceWithContext method.
// It will increment the count of requests made to ConfirmDevice.
func (c *CognitoIdentityProvider) ConfirmDeviceWithContext(ctx aws.Context, input *cognitoidentityprovider.ConfirmDeviceInput, opts ...request.Option) (*cognitoidentityprovider.ConfirmDeviceOutput, error) {
	c.inc("ConfirmDevice")
	return c.svc.ConfirmDeviceWithContext(ctx, input, opts...)
}

// ConfirmForgotPasswordRequest is a passthrough to the underlying ConfirmForgotPasswordRequest.
// It will increment the count of requests made to ConfirmForgotPassword.
func (c *CognitoIdentityProvider) ConfirmForgotPasswordRequest(input *cognitoidentityprovider.ConfirmForgotPasswordInput) (req *request.Request, output *cognitoidentityprovider.ConfirmForgotPasswordOutput) {
	c.inc("ConfirmForgotPassword")
	return c.svc.ConfirmForgotPasswordRequest(input)
}

// ConfirmForgotPassword is a passthrough to the underlying ConfirmForgotPassword method.
// It will increment the count of requests made to ConfirmForgotPassword.
func (c *CognitoIdentityProvider) ConfirmForgotPassword(input *cognitoidentityprovider.ConfirmForgotPasswordInput) (*cognitoidentityprovider.ConfirmForgotPasswordOutput, error) {
	c.inc("ConfirmForgotPassword")
	return c.svc.ConfirmForgotPassword(input)
}

// ConfirmForgotPasswordWithContext is a passthrough to the underlying ConfirmForgotPasswordWithContext method.
// It will increment the count of requests made to ConfirmForgotPassword.
func (c *CognitoIdentityProvider) ConfirmForgotPasswordWithContext(ctx aws.Context, input *cognitoidentityprovider.ConfirmForgotPasswordInput, opts ...request.Option) (*cognitoidentityprovider.ConfirmForgotPasswordOutput, error) {
	c.inc("ConfirmForgotPassword")
	return c.svc.ConfirmForgotPasswordWithContext(ctx, input, opts...)
}

// ConfirmSignUpRequest is a passthrough to the underlying ConfirmSignUpRequest.
// It will increment the count of requests made to ConfirmSignUp.
func (c *CognitoIdentityProvider) ConfirmSignUpRequest(input *cognitoidentityprovider.ConfirmSignUpInput) (req *request.Request, output *cognitoidentityprovider.ConfirmSignUpOutput) {
	c.inc("ConfirmSignUp")
	return c.svc.ConfirmSignUpRequest(input)
}

// ConfirmSignUp is a passthrough to the underlying ConfirmSignUp method.
// It will increment the count of requests made to ConfirmSignUp.
func (c *CognitoIdentityProvider) ConfirmSignUp(input *cognitoidentityprovider.ConfirmSignUpInput) (*cognitoidentityprovider.ConfirmSignUpOutput, error) {
	c.inc("ConfirmSignUp")
	return c.svc.ConfirmSignUp(input)
}

// ConfirmSignUpWithContext is a passthrough to the underlying ConfirmSignUpWithContext method.
// It will increment the count of requests made to ConfirmSignUp.
func (c *CognitoIdentityProvider) ConfirmSignUpWithContext(ctx aws.Context, input *cognitoidentityprovider.ConfirmSignUpInput, opts ...request.Option) (*cognitoidentityprovider.ConfirmSignUpOutput, error) {
	c.inc("ConfirmSignUp")
	return c.svc.ConfirmSignUpWithContext(ctx, input, opts...)
}

// CreateGroupRequest is a passthrough to the underlying CreateGroupRequest.
// It will increment the count of requests made to CreateGroup.
func (c *CognitoIdentityProvider) CreateGroupRequest(input *cognitoidentityprovider.CreateGroupInput) (req *request.Request, output *cognitoidentityprovider.CreateGroupOutput) {
	c.inc("CreateGroup")
	return c.svc.CreateGroupRequest(input)
}

// CreateGroup is a passthrough to the underlying CreateGroup method.
// It will increment the count of requests made to CreateGroup.
func (c *CognitoIdentityProvider) CreateGroup(input *cognitoidentityprovider.CreateGroupInput) (*cognitoidentityprovider.CreateGroupOutput, error) {
	c.inc("CreateGroup")
	return c.svc.CreateGroup(input)
}

// CreateGroupWithContext is a passthrough to the underlying CreateGroupWithContext method.
// It will increment the count of requests made to CreateGroup.
func (c *CognitoIdentityProvider) CreateGroupWithContext(ctx aws.Context, input *cognitoidentityprovider.CreateGroupInput, opts ...request.Option) (*cognitoidentityprovider.CreateGroupOutput, error) {
	c.inc("CreateGroup")
	return c.svc.CreateGroupWithContext(ctx, input, opts...)
}

// CreateIdentityProviderRequest is a passthrough to the underlying CreateIdentityProviderRequest.
// It will increment the count of requests made to CreateIdentityProvider.
func (c *CognitoIdentityProvider) CreateIdentityProviderRequest(input *cognitoidentityprovider.CreateIdentityProviderInput) (req *request.Request, output *cognitoidentityprovider.CreateIdentityProviderOutput) {
	c.inc("CreateIdentityProvider")
	return c.svc.CreateIdentityProviderRequest(input)
}

// CreateIdentityProvider is a passthrough to the underlying CreateIdentityProvider method.
// It will increment the count of requests made to CreateIdentityProvider.
func (c *CognitoIdentityProvider) CreateIdentityProvider(input *cognitoidentityprovider.CreateIdentityProviderInput) (*cognitoidentityprovider.CreateIdentityProviderOutput, error) {
	c.inc("CreateIdentityProvider")
	return c.svc.CreateIdentityProvider(input)
}

// CreateIdentityProviderWithContext is a passthrough to the underlying CreateIdentityProviderWithContext method.
// It will increment the count of requests made to CreateIdentityProvider.
func (c *CognitoIdentityProvider) CreateIdentityProviderWithContext(ctx aws.Context, input *cognitoidentityprovider.CreateIdentityProviderInput, opts ...request.Option) (*cognitoidentityprovider.CreateIdentityProviderOutput, error) {
	c.inc("CreateIdentityProvider")
	return c.svc.CreateIdentityProviderWithContext(ctx, input, opts...)
}

// CreateResourceServerRequest is a passthrough to the underlying CreateResourceServerRequest.
// It will increment the count of requests made to CreateResourceServer.
func (c *CognitoIdentityProvider) CreateResourceServerRequest(input *cognitoidentityprovider.CreateResourceServerInput) (req *request.Request, output *cognitoidentityprovider.CreateResourceServerOutput) {
	c.inc("CreateResourceServer")
	return c.svc.CreateResourceServerRequest(input)
}

// CreateResourceServer is a passthrough to the underlying CreateResourceServer method.
// It will increment the count of requests made to CreateResourceServer.
func (c *CognitoIdentityProvider) CreateResourceServer(input *cognitoidentityprovider.CreateResourceServerInput) (*cognitoidentityprovider.CreateResourceServerOutput, error) {
	c.inc("CreateResourceServer")
	return c.svc.CreateResourceServer(input)
}

// CreateResourceServerWithContext is a passthrough to the underlying CreateResourceServerWithContext method.
// It will increment the count of requests made to CreateResourceServer.
func (c *CognitoIdentityProvider) CreateResourceServerWithContext(ctx aws.Context, input *cognitoidentityprovider.CreateResourceServerInput, opts ...request.Option) (*cognitoidentityprovider.CreateResourceServerOutput, error) {
	c.inc("CreateResourceServer")
	return c.svc.CreateResourceServerWithContext(ctx, input, opts...)
}

// CreateUserImportJobRequest is a passthrough to the underlying CreateUserImportJobRequest.
// It will increment the count of requests made to CreateUserImportJob.
func (c *CognitoIdentityProvider) CreateUserImportJobRequest(input *cognitoidentityprovider.CreateUserImportJobInput) (req *request.Request, output *cognitoidentityprovider.CreateUserImportJobOutput) {
	c.inc("CreateUserImportJob")
	return c.svc.CreateUserImportJobRequest(input)
}

// CreateUserImportJob is a passthrough to the underlying CreateUserImportJob method.
// It will increment the count of requests made to CreateUserImportJob.
func (c *CognitoIdentityProvider) CreateUserImportJob(input *cognitoidentityprovider.CreateUserImportJobInput) (*cognitoidentityprovider.CreateUserImportJobOutput, error) {
	c.inc("CreateUserImportJob")
	return c.svc.CreateUserImportJob(input)
}

// CreateUserImportJobWithContext is a passthrough to the underlying CreateUserImportJobWithContext method.
// It will increment the count of requests made to CreateUserImportJob.
func (c *CognitoIdentityProvider) CreateUserImportJobWithContext(ctx aws.Context, input *cognitoidentityprovider.CreateUserImportJobInput, opts ...request.Option) (*cognitoidentityprovider.CreateUserImportJobOutput, error) {
	c.inc("CreateUserImportJob")
	return c.svc.CreateUserImportJobWithContext(ctx, input, opts...)
}

// CreateUserPoolRequest is a passthrough to the underlying CreateUserPoolRequest.
// It will increment the count of requests made to CreateUserPool.
func (c *CognitoIdentityProvider) CreateUserPoolRequest(input *cognitoidentityprovider.CreateUserPoolInput) (req *request.Request, output *cognitoidentityprovider.CreateUserPoolOutput) {
	c.inc("CreateUserPool")
	return c.svc.CreateUserPoolRequest(input)
}

// CreateUserPool is a passthrough to the underlying CreateUserPool method.
// It will increment the count of requests made to CreateUserPool.
func (c *CognitoIdentityProvider) CreateUserPool(input *cognitoidentityprovider.CreateUserPoolInput) (*cognitoidentityprovider.CreateUserPoolOutput, error) {
	c.inc("CreateUserPool")
	return c.svc.CreateUserPool(input)
}

// CreateUserPoolWithContext is a passthrough to the underlying CreateUserPoolWithContext method.
// It will increment the count of requests made to CreateUserPool.
func (c *CognitoIdentityProvider) CreateUserPoolWithContext(ctx aws.Context, input *cognitoidentityprovider.CreateUserPoolInput, opts ...request.Option) (*cognitoidentityprovider.CreateUserPoolOutput, error) {
	c.inc("CreateUserPool")
	return c.svc.CreateUserPoolWithContext(ctx, input, opts...)
}

// CreateUserPoolClientRequest is a passthrough to the underlying CreateUserPoolClientRequest.
// It will increment the count of requests made to CreateUserPoolClient.
func (c *CognitoIdentityProvider) CreateUserPoolClientRequest(input *cognitoidentityprovider.CreateUserPoolClientInput) (req *request.Request, output *cognitoidentityprovider.CreateUserPoolClientOutput) {
	c.inc("CreateUserPoolClient")
	return c.svc.CreateUserPoolClientRequest(input)
}

// CreateUserPoolClient is a passthrough to the underlying CreateUserPoolClient method.
// It will increment the count of requests made to CreateUserPoolClient.
func (c *CognitoIdentityProvider) CreateUserPoolClient(input *cognitoidentityprovider.CreateUserPoolClientInput) (*cognitoidentityprovider.CreateUserPoolClientOutput, error) {
	c.inc("CreateUserPoolClient")
	return c.svc.CreateUserPoolClient(input)
}

// CreateUserPoolClientWithContext is a passthrough to the underlying CreateUserPoolClientWithContext method.
// It will increment the count of requests made to CreateUserPoolClient.
func (c *CognitoIdentityProvider) CreateUserPoolClientWithContext(ctx aws.Context, input *cognitoidentityprovider.CreateUserPoolClientInput, opts ...request.Option) (*cognitoidentityprovider.CreateUserPoolClientOutput, error) {
	c.inc("CreateUserPoolClient")
	return c.svc.CreateUserPoolClientWithContext(ctx, input, opts...)
}

// CreateUserPoolDomainRequest is a passthrough to the underlying CreateUserPoolDomainRequest.
// It will increment the count of requests made to CreateUserPoolDomain.
func (c *CognitoIdentityProvider) CreateUserPoolDomainRequest(input *cognitoidentityprovider.CreateUserPoolDomainInput) (req *request.Request, output *cognitoidentityprovider.CreateUserPoolDomainOutput) {
	c.inc("CreateUserPoolDomain")
	return c.svc.CreateUserPoolDomainRequest(input)
}

// CreateUserPoolDomain is a passthrough to the underlying CreateUserPoolDomain method.
// It will increment the count of requests made to CreateUserPoolDomain.
func (c *CognitoIdentityProvider) CreateUserPoolDomain(input *cognitoidentityprovider.CreateUserPoolDomainInput) (*cognitoidentityprovider.CreateUserPoolDomainOutput, error) {
	c.inc("CreateUserPoolDomain")
	return c.svc.CreateUserPoolDomain(input)
}

// CreateUserPoolDomainWithContext is a passthrough to the underlying CreateUserPoolDomainWithContext method.
// It will increment the count of requests made to CreateUserPoolDomain.
func (c *CognitoIdentityProvider) CreateUserPoolDomainWithContext(ctx aws.Context, input *cognitoidentityprovider.CreateUserPoolDomainInput, opts ...request.Option) (*cognitoidentityprovider.CreateUserPoolDomainOutput, error) {
	c.inc("CreateUserPoolDomain")
	return c.svc.CreateUserPoolDomainWithContext(ctx, input, opts...)
}

// DeleteGroupRequest is a passthrough to the underlying DeleteGroupRequest.
// It will increment the count of requests made to DeleteGroup.
func (c *CognitoIdentityProvider) DeleteGroupRequest(input *cognitoidentityprovider.DeleteGroupInput) (req *request.Request, output *cognitoidentityprovider.DeleteGroupOutput) {
	c.inc("DeleteGroup")
	return c.svc.DeleteGroupRequest(input)
}

// DeleteGroup is a passthrough to the underlying DeleteGroup method.
// It will increment the count of requests made to DeleteGroup.
func (c *CognitoIdentityProvider) DeleteGroup(input *cognitoidentityprovider.DeleteGroupInput) (*cognitoidentityprovider.DeleteGroupOutput, error) {
	c.inc("DeleteGroup")
	return c.svc.DeleteGroup(input)
}

// DeleteGroupWithContext is a passthrough to the underlying DeleteGroupWithContext method.
// It will increment the count of requests made to DeleteGroup.
func (c *CognitoIdentityProvider) DeleteGroupWithContext(ctx aws.Context, input *cognitoidentityprovider.DeleteGroupInput, opts ...request.Option) (*cognitoidentityprovider.DeleteGroupOutput, error) {
	c.inc("DeleteGroup")
	return c.svc.DeleteGroupWithContext(ctx, input, opts...)
}

// DeleteIdentityProviderRequest is a passthrough to the underlying DeleteIdentityProviderRequest.
// It will increment the count of requests made to DeleteIdentityProvider.
func (c *CognitoIdentityProvider) DeleteIdentityProviderRequest(input *cognitoidentityprovider.DeleteIdentityProviderInput) (req *request.Request, output *cognitoidentityprovider.DeleteIdentityProviderOutput) {
	c.inc("DeleteIdentityProvider")
	return c.svc.DeleteIdentityProviderRequest(input)
}

// DeleteIdentityProvider is a passthrough to the underlying DeleteIdentityProvider method.
// It will increment the count of requests made to DeleteIdentityProvider.
func (c *CognitoIdentityProvider) DeleteIdentityProvider(input *cognitoidentityprovider.DeleteIdentityProviderInput) (*cognitoidentityprovider.DeleteIdentityProviderOutput, error) {
	c.inc("DeleteIdentityProvider")
	return c.svc.DeleteIdentityProvider(input)
}

// DeleteIdentityProviderWithContext is a passthrough to the underlying DeleteIdentityProviderWithContext method.
// It will increment the count of requests made to DeleteIdentityProvider.
func (c *CognitoIdentityProvider) DeleteIdentityProviderWithContext(ctx aws.Context, input *cognitoidentityprovider.DeleteIdentityProviderInput, opts ...request.Option) (*cognitoidentityprovider.DeleteIdentityProviderOutput, error) {
	c.inc("DeleteIdentityProvider")
	return c.svc.DeleteIdentityProviderWithContext(ctx, input, opts...)
}

// DeleteResourceServerRequest is a passthrough to the underlying DeleteResourceServerRequest.
// It will increment the count of requests made to DeleteResourceServer.
func (c *CognitoIdentityProvider) DeleteResourceServerRequest(input *cognitoidentityprovider.DeleteResourceServerInput) (req *request.Request, output *cognitoidentityprovider.DeleteResourceServerOutput) {
	c.inc("DeleteResourceServer")
	return c.svc.DeleteResourceServerRequest(input)
}

// DeleteResourceServer is a passthrough to the underlying DeleteResourceServer method.
// It will increment the count of requests made to DeleteResourceServer.
func (c *CognitoIdentityProvider) DeleteResourceServer(input *cognitoidentityprovider.DeleteResourceServerInput) (*cognitoidentityprovider.DeleteResourceServerOutput, error) {
	c.inc("DeleteResourceServer")
	return c.svc.DeleteResourceServer(input)
}

// DeleteResourceServerWithContext is a passthrough to the underlying DeleteResourceServerWithContext method.
// It will increment the count of requests made to DeleteResourceServer.
func (c *CognitoIdentityProvider) DeleteResourceServerWithContext(ctx aws.Context, input *cognitoidentityprovider.DeleteResourceServerInput, opts ...request.Option) (*cognitoidentityprovider.DeleteResourceServerOutput, error) {
	c.inc("DeleteResourceServer")
	return c.svc.DeleteResourceServerWithContext(ctx, input, opts...)
}

// DeleteUserRequest is a passthrough to the underlying DeleteUserRequest.
// It will increment the count of requests made to DeleteUser.
func (c *CognitoIdentityProvider) DeleteUserRequest(input *cognitoidentityprovider.DeleteUserInput) (req *request.Request, output *cognitoidentityprovider.DeleteUserOutput) {
	c.inc("DeleteUser")
	return c.svc.DeleteUserRequest(input)
}

// DeleteUser is a passthrough to the underlying DeleteUser method.
// It will increment the count of requests made to DeleteUser.
func (c *CognitoIdentityProvider) DeleteUser(input *cognitoidentityprovider.DeleteUserInput) (*cognitoidentityprovider.DeleteUserOutput, error) {
	c.inc("DeleteUser")
	return c.svc.DeleteUser(input)
}

// DeleteUserWithContext is a passthrough to the underlying DeleteUserWithContext method.
// It will increment the count of requests made to DeleteUser.
func (c *CognitoIdentityProvider) DeleteUserWithContext(ctx aws.Context, input *cognitoidentityprovider.DeleteUserInput, opts ...request.Option) (*cognitoidentityprovider.DeleteUserOutput, error) {
	c.inc("DeleteUser")
	return c.svc.DeleteUserWithContext(ctx, input, opts...)
}

// DeleteUserAttributesRequest is a passthrough to the underlying DeleteUserAttributesRequest.
// It will increment the count of requests made to DeleteUserAttributes.
func (c *CognitoIdentityProvider) DeleteUserAttributesRequest(input *cognitoidentityprovider.DeleteUserAttributesInput) (req *request.Request, output *cognitoidentityprovider.DeleteUserAttributesOutput) {
	c.inc("DeleteUserAttributes")
	return c.svc.DeleteUserAttributesRequest(input)
}

// DeleteUserAttributes is a passthrough to the underlying DeleteUserAttributes method.
// It will increment the count of requests made to DeleteUserAttributes.
func (c *CognitoIdentityProvider) DeleteUserAttributes(input *cognitoidentityprovider.DeleteUserAttributesInput) (*cognitoidentityprovider.DeleteUserAttributesOutput, error) {
	c.inc("DeleteUserAttributes")
	return c.svc.DeleteUserAttributes(input)
}

// DeleteUserAttributesWithContext is a passthrough to the underlying DeleteUserAttributesWithContext method.
// It will increment the count of requests made to DeleteUserAttributes.
func (c *CognitoIdentityProvider) DeleteUserAttributesWithContext(ctx aws.Context, input *cognitoidentityprovider.DeleteUserAttributesInput, opts ...request.Option) (*cognitoidentityprovider.DeleteUserAttributesOutput, error) {
	c.inc("DeleteUserAttributes")
	return c.svc.DeleteUserAttributesWithContext(ctx, input, opts...)
}

// DeleteUserPoolRequest is a passthrough to the underlying DeleteUserPoolRequest.
// It will increment the count of requests made to DeleteUserPool.
func (c *CognitoIdentityProvider) DeleteUserPoolRequest(input *cognitoidentityprovider.DeleteUserPoolInput) (req *request.Request, output *cognitoidentityprovider.DeleteUserPoolOutput) {
	c.inc("DeleteUserPool")
	return c.svc.DeleteUserPoolRequest(input)
}

// DeleteUserPool is a passthrough to the underlying DeleteUserPool method.
// It will increment the count of requests made to DeleteUserPool.
func (c *CognitoIdentityProvider) DeleteUserPool(input *cognitoidentityprovider.DeleteUserPoolInput) (*cognitoidentityprovider.DeleteUserPoolOutput, error) {
	c.inc("DeleteUserPool")
	return c.svc.DeleteUserPool(input)
}

// DeleteUserPoolWithContext is a passthrough to the underlying DeleteUserPoolWithContext method.
// It will increment the count of requests made to DeleteUserPool.
func (c *CognitoIdentityProvider) DeleteUserPoolWithContext(ctx aws.Context, input *cognitoidentityprovider.DeleteUserPoolInput, opts ...request.Option) (*cognitoidentityprovider.DeleteUserPoolOutput, error) {
	c.inc("DeleteUserPool")
	return c.svc.DeleteUserPoolWithContext(ctx, input, opts...)
}

// DeleteUserPoolClientRequest is a passthrough to the underlying DeleteUserPoolClientRequest.
// It will increment the count of requests made to DeleteUserPoolClient.
func (c *CognitoIdentityProvider) DeleteUserPoolClientRequest(input *cognitoidentityprovider.DeleteUserPoolClientInput) (req *request.Request, output *cognitoidentityprovider.DeleteUserPoolClientOutput) {
	c.inc("DeleteUserPoolClient")
	return c.svc.DeleteUserPoolClientRequest(input)
}

// DeleteUserPoolClient is a passthrough to the underlying DeleteUserPoolClient method.
// It will increment the count of requests made to DeleteUserPoolClient.
func (c *CognitoIdentityProvider) DeleteUserPoolClient(input *cognitoidentityprovider.DeleteUserPoolClientInput) (*cognitoidentityprovider.DeleteUserPoolClientOutput, error) {
	c.inc("DeleteUserPoolClient")
	return c.svc.DeleteUserPoolClient(input)
}

// DeleteUserPoolClientWithContext is a passthrough to the underlying DeleteUserPoolClientWithContext method.
// It will increment the count of requests made to DeleteUserPoolClient.
func (c *CognitoIdentityProvider) DeleteUserPoolClientWithContext(ctx aws.Context, input *cognitoidentityprovider.DeleteUserPoolClientInput, opts ...request.Option) (*cognitoidentityprovider.DeleteUserPoolClientOutput, error) {
	c.inc("DeleteUserPoolClient")
	return c.svc.DeleteUserPoolClientWithContext(ctx, input, opts...)
}

// DeleteUserPoolDomainRequest is a passthrough to the underlying DeleteUserPoolDomainRequest.
// It will increment the count of requests made to DeleteUserPoolDomain.
func (c *CognitoIdentityProvider) DeleteUserPoolDomainRequest(input *cognitoidentityprovider.DeleteUserPoolDomainInput) (req *request.Request, output *cognitoidentityprovider.DeleteUserPoolDomainOutput) {
	c.inc("DeleteUserPoolDomain")
	return c.svc.DeleteUserPoolDomainRequest(input)
}

// DeleteUserPoolDomain is a passthrough to the underlying DeleteUserPoolDomain method.
// It will increment the count of requests made to DeleteUserPoolDomain.
func (c *CognitoIdentityProvider) DeleteUserPoolDomain(input *cognitoidentityprovider.DeleteUserPoolDomainInput) (*cognitoidentityprovider.DeleteUserPoolDomainOutput, error) {
	c.inc("DeleteUserPoolDomain")
	return c.svc.DeleteUserPoolDomain(input)
}

// DeleteUserPoolDomainWithContext is a passthrough to the underlying DeleteUserPoolDomainWithContext method.
// It will increment the count of requests made to DeleteUserPoolDomain.
func (c *CognitoIdentityProvider) DeleteUserPoolDomainWithContext(ctx aws.Context, input *cognitoidentityprovider.DeleteUserPoolDomainInput, opts ...request.Option) (*cognitoidentityprovider.DeleteUserPoolDomainOutput, error) {
	c.inc("DeleteUserPoolDomain")
	return c.svc.DeleteUserPoolDomainWithContext(ctx, input, opts...)
}

// DescribeIdentityProviderRequest is a passthrough to the underlying DescribeIdentityProviderRequest.
// It will increment the count of requests made to DescribeIdentityProvider.
func (c *CognitoIdentityProvider) DescribeIdentityProviderRequest(input *cognitoidentityprovider.DescribeIdentityProviderInput) (req *request.Request, output *cognitoidentityprovider.DescribeIdentityProviderOutput) {
	c.inc("DescribeIdentityProvider")
	return c.svc.DescribeIdentityProviderRequest(input)
}

// DescribeIdentityProvider is a passthrough to the underlying DescribeIdentityProvider method.
// It will increment the count of requests made to DescribeIdentityProvider.
func (c *CognitoIdentityProvider) DescribeIdentityProvider(input *cognitoidentityprovider.DescribeIdentityProviderInput) (*cognitoidentityprovider.DescribeIdentityProviderOutput, error) {
	c.inc("DescribeIdentityProvider")
	return c.svc.DescribeIdentityProvider(input)
}

// DescribeIdentityProviderWithContext is a passthrough to the underlying DescribeIdentityProviderWithContext method.
// It will increment the count of requests made to DescribeIdentityProvider.
func (c *CognitoIdentityProvider) DescribeIdentityProviderWithContext(ctx aws.Context, input *cognitoidentityprovider.DescribeIdentityProviderInput, opts ...request.Option) (*cognitoidentityprovider.DescribeIdentityProviderOutput, error) {
	c.inc("DescribeIdentityProvider")
	return c.svc.DescribeIdentityProviderWithContext(ctx, input, opts...)
}

// DescribeResourceServerRequest is a passthrough to the underlying DescribeResourceServerRequest.
// It will increment the count of requests made to DescribeResourceServer.
func (c *CognitoIdentityProvider) DescribeResourceServerRequest(input *cognitoidentityprovider.DescribeResourceServerInput) (req *request.Request, output *cognitoidentityprovider.DescribeResourceServerOutput) {
	c.inc("DescribeResourceServer")
	return c.svc.DescribeResourceServerRequest(input)
}

// DescribeResourceServer is a passthrough to the underlying DescribeResourceServer method.
// It will increment the count of requests made to DescribeResourceServer.
func (c *CognitoIdentityProvider) DescribeResourceServer(input *cognitoidentityprovider.DescribeResourceServerInput) (*cognitoidentityprovider.DescribeResourceServerOutput, error) {
	c.inc("DescribeResourceServer")
	return c.svc.DescribeResourceServer(input)
}

// DescribeResourceServerWithContext is a passthrough to the underlying DescribeResourceServerWithContext method.
// It will increment the count of requests made to DescribeResourceServer.
func (c *CognitoIdentityProvider) DescribeResourceServerWithContext(ctx aws.Context, input *cognitoidentityprovider.DescribeResourceServerInput, opts ...request.Option) (*cognitoidentityprovider.DescribeResourceServerOutput, error) {
	c.inc("DescribeResourceServer")
	return c.svc.DescribeResourceServerWithContext(ctx, input, opts...)
}

// DescribeRiskConfigurationRequest is a passthrough to the underlying DescribeRiskConfigurationRequest.
// It will increment the count of requests made to DescribeRiskConfiguration.
func (c *CognitoIdentityProvider) DescribeRiskConfigurationRequest(input *cognitoidentityprovider.DescribeRiskConfigurationInput) (req *request.Request, output *cognitoidentityprovider.DescribeRiskConfigurationOutput) {
	c.inc("DescribeRiskConfiguration")
	return c.svc.DescribeRiskConfigurationRequest(input)
}

// DescribeRiskConfiguration is a passthrough to the underlying DescribeRiskConfiguration method.
// It will increment the count of requests made to DescribeRiskConfiguration.
func (c *CognitoIdentityProvider) DescribeRiskConfiguration(input *cognitoidentityprovider.DescribeRiskConfigurationInput) (*cognitoidentityprovider.DescribeRiskConfigurationOutput, error) {
	c.inc("DescribeRiskConfiguration")
	return c.svc.DescribeRiskConfiguration(input)
}

// DescribeRiskConfigurationWithContext is a passthrough to the underlying DescribeRiskConfigurationWithContext method.
// It will increment the count of requests made to DescribeRiskConfiguration.
func (c *CognitoIdentityProvider) DescribeRiskConfigurationWithContext(ctx aws.Context, input *cognitoidentityprovider.DescribeRiskConfigurationInput, opts ...request.Option) (*cognitoidentityprovider.DescribeRiskConfigurationOutput, error) {
	c.inc("DescribeRiskConfiguration")
	return c.svc.DescribeRiskConfigurationWithContext(ctx, input, opts...)
}

// DescribeUserImportJobRequest is a passthrough to the underlying DescribeUserImportJobRequest.
// It will increment the count of requests made to DescribeUserImportJob.
func (c *CognitoIdentityProvider) DescribeUserImportJobRequest(input *cognitoidentityprovider.DescribeUserImportJobInput) (req *request.Request, output *cognitoidentityprovider.DescribeUserImportJobOutput) {
	c.inc("DescribeUserImportJob")
	return c.svc.DescribeUserImportJobRequest(input)
}

// DescribeUserImportJob is a passthrough to the underlying DescribeUserImportJob method.
// It will increment the count of requests made to DescribeUserImportJob.
func (c *CognitoIdentityProvider) DescribeUserImportJob(input *cognitoidentityprovider.DescribeUserImportJobInput) (*cognitoidentityprovider.DescribeUserImportJobOutput, error) {
	c.inc("DescribeUserImportJob")
	return c.svc.DescribeUserImportJob(input)
}

// DescribeUserImportJobWithContext is a passthrough to the underlying DescribeUserImportJobWithContext method.
// It will increment the count of requests made to DescribeUserImportJob.
func (c *CognitoIdentityProvider) DescribeUserImportJobWithContext(ctx aws.Context, input *cognitoidentityprovider.DescribeUserImportJobInput, opts ...request.Option) (*cognitoidentityprovider.DescribeUserImportJobOutput, error) {
	c.inc("DescribeUserImportJob")
	return c.svc.DescribeUserImportJobWithContext(ctx, input, opts...)
}

// DescribeUserPoolRequest is a passthrough to the underlying DescribeUserPoolRequest.
// It will increment the count of requests made to DescribeUserPool.
func (c *CognitoIdentityProvider) DescribeUserPoolRequest(input *cognitoidentityprovider.DescribeUserPoolInput) (req *request.Request, output *cognitoidentityprovider.DescribeUserPoolOutput) {
	c.inc("DescribeUserPool")
	return c.svc.DescribeUserPoolRequest(input)
}

// DescribeUserPool is a passthrough to the underlying DescribeUserPool method.
// It will increment the count of requests made to DescribeUserPool.
func (c *CognitoIdentityProvider) DescribeUserPool(input *cognitoidentityprovider.DescribeUserPoolInput) (*cognitoidentityprovider.DescribeUserPoolOutput, error) {
	c.inc("DescribeUserPool")
	return c.svc.DescribeUserPool(input)
}

// DescribeUserPoolWithContext is a passthrough to the underlying DescribeUserPoolWithContext method.
// It will increment the count of requests made to DescribeUserPool.
func (c *CognitoIdentityProvider) DescribeUserPoolWithContext(ctx aws.Context, input *cognitoidentityprovider.DescribeUserPoolInput, opts ...request.Option) (*cognitoidentityprovider.DescribeUserPoolOutput, error) {
	c.inc("DescribeUserPool")
	return c.svc.DescribeUserPoolWithContext(ctx, input, opts...)
}

// DescribeUserPoolClientRequest is a passthrough to the underlying DescribeUserPoolClientRequest.
// It will increment the count of requests made to DescribeUserPoolClient.
func (c *CognitoIdentityProvider) DescribeUserPoolClientRequest(input *cognitoidentityprovider.DescribeUserPoolClientInput) (req *request.Request, output *cognitoidentityprovider.DescribeUserPoolClientOutput) {
	c.inc("DescribeUserPoolClient")
	return c.svc.DescribeUserPoolClientRequest(input)
}

// DescribeUserPoolClient is a passthrough to the underlying DescribeUserPoolClient method.
// It will increment the count of requests made to DescribeUserPoolClient.
func (c *CognitoIdentityProvider) DescribeUserPoolClient(input *cognitoidentityprovider.DescribeUserPoolClientInput) (*cognitoidentityprovider.DescribeUserPoolClientOutput, error) {
	c.inc("DescribeUserPoolClient")
	return c.svc.DescribeUserPoolClient(input)
}

// DescribeUserPoolClientWithContext is a passthrough to the underlying DescribeUserPoolClientWithContext method.
// It will increment the count of requests made to DescribeUserPoolClient.
func (c *CognitoIdentityProvider) DescribeUserPoolClientWithContext(ctx aws.Context, input *cognitoidentityprovider.DescribeUserPoolClientInput, opts ...request.Option) (*cognitoidentityprovider.DescribeUserPoolClientOutput, error) {
	c.inc("DescribeUserPoolClient")
	return c.svc.DescribeUserPoolClientWithContext(ctx, input, opts...)
}

// DescribeUserPoolDomainRequest is a passthrough to the underlying DescribeUserPoolDomainRequest.
// It will increment the count of requests made to DescribeUserPoolDomain.
func (c *CognitoIdentityProvider) DescribeUserPoolDomainRequest(input *cognitoidentityprovider.DescribeUserPoolDomainInput) (req *request.Request, output *cognitoidentityprovider.DescribeUserPoolDomainOutput) {
	c.inc("DescribeUserPoolDomain")
	return c.svc.DescribeUserPoolDomainRequest(input)
}

// DescribeUserPoolDomain is a passthrough to the underlying DescribeUserPoolDomain method.
// It will increment the count of requests made to DescribeUserPoolDomain.
func (c *CognitoIdentityProvider) DescribeUserPoolDomain(input *cognitoidentityprovider.DescribeUserPoolDomainInput) (*cognitoidentityprovider.DescribeUserPoolDomainOutput, error) {
	c.inc("DescribeUserPoolDomain")
	return c.svc.DescribeUserPoolDomain(input)
}

// DescribeUserPoolDomainWithContext is a passthrough to the underlying DescribeUserPoolDomainWithContext method.
// It will increment the count of requests made to DescribeUserPoolDomain.
func (c *CognitoIdentityProvider) DescribeUserPoolDomainWithContext(ctx aws.Context, input *cognitoidentityprovider.DescribeUserPoolDomainInput, opts ...request.Option) (*cognitoidentityprovider.DescribeUserPoolDomainOutput, error) {
	c.inc("DescribeUserPoolDomain")
	return c.svc.DescribeUserPoolDomainWithContext(ctx, input, opts...)
}

// ForgetDeviceRequest is a passthrough to the underlying ForgetDeviceRequest.
// It will increment the count of requests made to ForgetDevice.
func (c *CognitoIdentityProvider) ForgetDeviceRequest(input *cognitoidentityprovider.ForgetDeviceInput) (req *request.Request, output *cognitoidentityprovider.ForgetDeviceOutput) {
	c.inc("ForgetDevice")
	return c.svc.ForgetDeviceRequest(input)
}

// ForgetDevice is a passthrough to the underlying ForgetDevice method.
// It will increment the count of requests made to ForgetDevice.
func (c *CognitoIdentityProvider) ForgetDevice(input *cognitoidentityprovider.ForgetDeviceInput) (*cognitoidentityprovider.ForgetDeviceOutput, error) {
	c.inc("ForgetDevice")
	return c.svc.ForgetDevice(input)
}

// ForgetDeviceWithContext is a passthrough to the underlying ForgetDeviceWithContext method.
// It will increment the count of requests made to ForgetDevice.
func (c *CognitoIdentityProvider) ForgetDeviceWithContext(ctx aws.Context, input *cognitoidentityprovider.ForgetDeviceInput, opts ...request.Option) (*cognitoidentityprovider.ForgetDeviceOutput, error) {
	c.inc("ForgetDevice")
	return c.svc.ForgetDeviceWithContext(ctx, input, opts...)
}

// ForgotPasswordRequest is a passthrough to the underlying ForgotPasswordRequest.
// It will increment the count of requests made to ForgotPassword.
func (c *CognitoIdentityProvider) ForgotPasswordRequest(input *cognitoidentityprovider.ForgotPasswordInput) (req *request.Request, output *cognitoidentityprovider.ForgotPasswordOutput) {
	c.inc("ForgotPassword")
	return c.svc.ForgotPasswordRequest(input)
}

// ForgotPassword is a passthrough to the underlying ForgotPassword method.
// It will increment the count of requests made to ForgotPassword.
func (c *CognitoIdentityProvider) ForgotPassword(input *cognitoidentityprovider.ForgotPasswordInput) (*cognitoidentityprovider.ForgotPasswordOutput, error) {
	c.inc("ForgotPassword")
	return c.svc.ForgotPassword(input)
}

// ForgotPasswordWithContext is a passthrough to the underlying ForgotPasswordWithContext method.
// It will increment the count of requests made to ForgotPassword.
func (c *CognitoIdentityProvider) ForgotPasswordWithContext(ctx aws.Context, input *cognitoidentityprovider.ForgotPasswordInput, opts ...request.Option) (*cognitoidentityprovider.ForgotPasswordOutput, error) {
	c.inc("ForgotPassword")
	return c.svc.ForgotPasswordWithContext(ctx, input, opts...)
}

// GetCSVHeaderRequest is a passthrough to the underlying GetCSVHeaderRequest.
// It will increment the count of requests made to GetCSVHeader.
func (c *CognitoIdentityProvider) GetCSVHeaderRequest(input *cognitoidentityprovider.GetCSVHeaderInput) (req *request.Request, output *cognitoidentityprovider.GetCSVHeaderOutput) {
	c.inc("GetCSVHeader")
	return c.svc.GetCSVHeaderRequest(input)
}

// GetCSVHeader is a passthrough to the underlying GetCSVHeader method.
// It will increment the count of requests made to GetCSVHeader.
func (c *CognitoIdentityProvider) GetCSVHeader(input *cognitoidentityprovider.GetCSVHeaderInput) (*cognitoidentityprovider.GetCSVHeaderOutput, error) {
	c.inc("GetCSVHeader")
	return c.svc.GetCSVHeader(input)
}

// GetCSVHeaderWithContext is a passthrough to the underlying GetCSVHeaderWithContext method.
// It will increment the count of requests made to GetCSVHeader.
func (c *CognitoIdentityProvider) GetCSVHeaderWithContext(ctx aws.Context, input *cognitoidentityprovider.GetCSVHeaderInput, opts ...request.Option) (*cognitoidentityprovider.GetCSVHeaderOutput, error) {
	c.inc("GetCSVHeader")
	return c.svc.GetCSVHeaderWithContext(ctx, input, opts...)
}

// GetDeviceRequest is a passthrough to the underlying GetDeviceRequest.
// It will increment the count of requests made to GetDevice.
func (c *CognitoIdentityProvider) GetDeviceRequest(input *cognitoidentityprovider.GetDeviceInput) (req *request.Request, output *cognitoidentityprovider.GetDeviceOutput) {
	c.inc("GetDevice")
	return c.svc.GetDeviceRequest(input)
}

// GetDevice is a passthrough to the underlying GetDevice method.
// It will increment the count of requests made to GetDevice.
func (c *CognitoIdentityProvider) GetDevice(input *cognitoidentityprovider.GetDeviceInput) (*cognitoidentityprovider.GetDeviceOutput, error) {
	c.inc("GetDevice")
	return c.svc.GetDevice(input)
}

// GetDeviceWithContext is a passthrough to the underlying GetDeviceWithContext method.
// It will increment the count of requests made to GetDevice.
func (c *CognitoIdentityProvider) GetDeviceWithContext(ctx aws.Context, input *cognitoidentityprovider.GetDeviceInput, opts ...request.Option) (*cognitoidentityprovider.GetDeviceOutput, error) {
	c.inc("GetDevice")
	return c.svc.GetDeviceWithContext(ctx, input, opts...)
}

// GetGroupRequest is a passthrough to the underlying GetGroupRequest.
// It will increment the count of requests made to GetGroup.
func (c *CognitoIdentityProvider) GetGroupRequest(input *cognitoidentityprovider.GetGroupInput) (req *request.Request, output *cognitoidentityprovider.GetGroupOutput) {
	c.inc("GetGroup")
	return c.svc.GetGroupRequest(input)
}

// GetGroup is a passthrough to the underlying GetGroup method.
// It will increment the count of requests made to GetGroup.
func (c *CognitoIdentityProvider) GetGroup(input *cognitoidentityprovider.GetGroupInput) (*cognitoidentityprovider.GetGroupOutput, error) {
	c.inc("GetGroup")
	return c.svc.GetGroup(input)
}

// GetGroupWithContext is a passthrough to the underlying GetGroupWithContext method.
// It will increment the count of requests made to GetGroup.
func (c *CognitoIdentityProvider) GetGroupWithContext(ctx aws.Context, input *cognitoidentityprovider.GetGroupInput, opts ...request.Option) (*cognitoidentityprovider.GetGroupOutput, error) {
	c.inc("GetGroup")
	return c.svc.GetGroupWithContext(ctx, input, opts...)
}

// GetIdentityProviderByIdentifierRequest is a passthrough to the underlying GetIdentityProviderByIdentifierRequest.
// It will increment the count of requests made to GetIdentityProviderByIdentifier.
func (c *CognitoIdentityProvider) GetIdentityProviderByIdentifierRequest(input *cognitoidentityprovider.GetIdentityProviderByIdentifierInput) (req *request.Request, output *cognitoidentityprovider.GetIdentityProviderByIdentifierOutput) {
	c.inc("GetIdentityProviderByIdentifier")
	return c.svc.GetIdentityProviderByIdentifierRequest(input)
}

// GetIdentityProviderByIdentifier is a passthrough to the underlying GetIdentityProviderByIdentifier method.
// It will increment the count of requests made to GetIdentityProviderByIdentifier.
func (c *CognitoIdentityProvider) GetIdentityProviderByIdentifier(input *cognitoidentityprovider.GetIdentityProviderByIdentifierInput) (*cognitoidentityprovider.GetIdentityProviderByIdentifierOutput, error) {
	c.inc("GetIdentityProviderByIdentifier")
	return c.svc.GetIdentityProviderByIdentifier(input)
}

// GetIdentityProviderByIdentifierWithContext is a passthrough to the underlying GetIdentityProviderByIdentifierWithContext method.
// It will increment the count of requests made to GetIdentityProviderByIdentifier.
func (c *CognitoIdentityProvider) GetIdentityProviderByIdentifierWithContext(ctx aws.Context, input *cognitoidentityprovider.GetIdentityProviderByIdentifierInput, opts ...request.Option) (*cognitoidentityprovider.GetIdentityProviderByIdentifierOutput, error) {
	c.inc("GetIdentityProviderByIdentifier")
	return c.svc.GetIdentityProviderByIdentifierWithContext(ctx, input, opts...)
}

// GetSigningCertificateRequest is a passthrough to the underlying GetSigningCertificateRequest.
// It will increment the count of requests made to GetSigningCertificate.
func (c *CognitoIdentityProvider) GetSigningCertificateRequest(input *cognitoidentityprovider.GetSigningCertificateInput) (req *request.Request, output *cognitoidentityprovider.GetSigningCertificateOutput) {
	c.inc("GetSigningCertificate")
	return c.svc.GetSigningCertificateRequest(input)
}

// GetSigningCertificate is a passthrough to the underlying GetSigningCertificate method.
// It will increment the count of requests made to GetSigningCertificate.
func (c *CognitoIdentityProvider) GetSigningCertificate(input *cognitoidentityprovider.GetSigningCertificateInput) (*cognitoidentityprovider.GetSigningCertificateOutput, error) {
	c.inc("GetSigningCertificate")
	return c.svc.GetSigningCertificate(input)
}

// GetSigningCertificateWithContext is a passthrough to the underlying GetSigningCertificateWithContext method.
// It will increment the count of requests made to GetSigningCertificate.
func (c *CognitoIdentityProvider) GetSigningCertificateWithContext(ctx aws.Context, input *cognitoidentityprovider.GetSigningCertificateInput, opts ...request.Option) (*cognitoidentityprovider.GetSigningCertificateOutput, error) {
	c.inc("GetSigningCertificate")
	return c.svc.GetSigningCertificateWithContext(ctx, input, opts...)
}

// GetUICustomizationRequest is a passthrough to the underlying GetUICustomizationRequest.
// It will increment the count of requests made to GetUICustomization.
func (c *CognitoIdentityProvider) GetUICustomizationRequest(input *cognitoidentityprovider.GetUICustomizationInput) (req *request.Request, output *cognitoidentityprovider.GetUICustomizationOutput) {
	c.inc("GetUICustomization")
	return c.svc.GetUICustomizationRequest(input)
}

// GetUICustomization is a passthrough to the underlying GetUICustomization method.
// It will increment the count of requests made to GetUICustomization.
func (c *CognitoIdentityProvider) GetUICustomization(input *cognitoidentityprovider.GetUICustomizationInput) (*cognitoidentityprovider.GetUICustomizationOutput, error) {
	c.inc("GetUICustomization")
	return c.svc.GetUICustomization(input)
}

// GetUICustomizationWithContext is a passthrough to the underlying GetUICustomizationWithContext method.
// It will increment the count of requests made to GetUICustomization.
func (c *CognitoIdentityProvider) GetUICustomizationWithContext(ctx aws.Context, input *cognitoidentityprovider.GetUICustomizationInput, opts ...request.Option) (*cognitoidentityprovider.GetUICustomizationOutput, error) {
	c.inc("GetUICustomization")
	return c.svc.GetUICustomizationWithContext(ctx, input, opts...)
}

// GetUserRequest is a passthrough to the underlying GetUserRequest.
// It will increment the count of requests made to GetUser.
func (c *CognitoIdentityProvider) GetUserRequest(input *cognitoidentityprovider.GetUserInput) (req *request.Request, output *cognitoidentityprovider.GetUserOutput) {
	c.inc("GetUser")
	return c.svc.GetUserRequest(input)
}

// GetUser is a passthrough to the underlying GetUser method.
// It will increment the count of requests made to GetUser.
func (c *CognitoIdentityProvider) GetUser(input *cognitoidentityprovider.GetUserInput) (*cognitoidentityprovider.GetUserOutput, error) {
	c.inc("GetUser")
	return c.svc.GetUser(input)
}

// GetUserWithContext is a passthrough to the underlying GetUserWithContext method.
// It will increment the count of requests made to GetUser.
func (c *CognitoIdentityProvider) GetUserWithContext(ctx aws.Context, input *cognitoidentityprovider.GetUserInput, opts ...request.Option) (*cognitoidentityprovider.GetUserOutput, error) {
	c.inc("GetUser")
	return c.svc.GetUserWithContext(ctx, input, opts...)
}

// GetUserAttributeVerificationCodeRequest is a passthrough to the underlying GetUserAttributeVerificationCodeRequest.
// It will increment the count of requests made to GetUserAttributeVerificationCode.
func (c *CognitoIdentityProvider) GetUserAttributeVerificationCodeRequest(input *cognitoidentityprovider.GetUserAttributeVerificationCodeInput) (req *request.Request, output *cognitoidentityprovider.GetUserAttributeVerificationCodeOutput) {
	c.inc("GetUserAttributeVerificationCode")
	return c.svc.GetUserAttributeVerificationCodeRequest(input)
}

// GetUserAttributeVerificationCode is a passthrough to the underlying GetUserAttributeVerificationCode method.
// It will increment the count of requests made to GetUserAttributeVerificationCode.
func (c *CognitoIdentityProvider) GetUserAttributeVerificationCode(input *cognitoidentityprovider.GetUserAttributeVerificationCodeInput) (*cognitoidentityprovider.GetUserAttributeVerificationCodeOutput, error) {
	c.inc("GetUserAttributeVerificationCode")
	return c.svc.GetUserAttributeVerificationCode(input)
}

// GetUserAttributeVerificationCodeWithContext is a passthrough to the underlying GetUserAttributeVerificationCodeWithContext method.
// It will increment the count of requests made to GetUserAttributeVerificationCode.
func (c *CognitoIdentityProvider) GetUserAttributeVerificationCodeWithContext(ctx aws.Context, input *cognitoidentityprovider.GetUserAttributeVerificationCodeInput, opts ...request.Option) (*cognitoidentityprovider.GetUserAttributeVerificationCodeOutput, error) {
	c.inc("GetUserAttributeVerificationCode")
	return c.svc.GetUserAttributeVerificationCodeWithContext(ctx, input, opts...)
}

// GetUserPoolMfaConfigRequest is a passthrough to the underlying GetUserPoolMfaConfigRequest.
// It will increment the count of requests made to GetUserPoolMfaConfig.
func (c *CognitoIdentityProvider) GetUserPoolMfaConfigRequest(input *cognitoidentityprovider.GetUserPoolMfaConfigInput) (req *request.Request, output *cognitoidentityprovider.GetUserPoolMfaConfigOutput) {
	c.inc("GetUserPoolMfaConfig")
	return c.svc.GetUserPoolMfaConfigRequest(input)
}

// GetUserPoolMfaConfig is a passthrough to the underlying GetUserPoolMfaConfig method.
// It will increment the count of requests made to GetUserPoolMfaConfig.
func (c *CognitoIdentityProvider) GetUserPoolMfaConfig(input *cognitoidentityprovider.GetUserPoolMfaConfigInput) (*cognitoidentityprovider.GetUserPoolMfaConfigOutput, error) {
	c.inc("GetUserPoolMfaConfig")
	return c.svc.GetUserPoolMfaConfig(input)
}

// GetUserPoolMfaConfigWithContext is a passthrough to the underlying GetUserPoolMfaConfigWithContext method.
// It will increment the count of requests made to GetUserPoolMfaConfig.
func (c *CognitoIdentityProvider) GetUserPoolMfaConfigWithContext(ctx aws.Context, input *cognitoidentityprovider.GetUserPoolMfaConfigInput, opts ...request.Option) (*cognitoidentityprovider.GetUserPoolMfaConfigOutput, error) {
	c.inc("GetUserPoolMfaConfig")
	return c.svc.GetUserPoolMfaConfigWithContext(ctx, input, opts...)
}

// GlobalSignOutRequest is a passthrough to the underlying GlobalSignOutRequest.
// It will increment the count of requests made to GlobalSignOut.
func (c *CognitoIdentityProvider) GlobalSignOutRequest(input *cognitoidentityprovider.GlobalSignOutInput) (req *request.Request, output *cognitoidentityprovider.GlobalSignOutOutput) {
	c.inc("GlobalSignOut")
	return c.svc.GlobalSignOutRequest(input)
}

// GlobalSignOut is a passthrough to the underlying GlobalSignOut method.
// It will increment the count of requests made to GlobalSignOut.
func (c *CognitoIdentityProvider) GlobalSignOut(input *cognitoidentityprovider.GlobalSignOutInput) (*cognitoidentityprovider.GlobalSignOutOutput, error) {
	c.inc("GlobalSignOut")
	return c.svc.GlobalSignOut(input)
}

// GlobalSignOutWithContext is a passthrough to the underlying GlobalSignOutWithContext method.
// It will increment the count of requests made to GlobalSignOut.
func (c *CognitoIdentityProvider) GlobalSignOutWithContext(ctx aws.Context, input *cognitoidentityprovider.GlobalSignOutInput, opts ...request.Option) (*cognitoidentityprovider.GlobalSignOutOutput, error) {
	c.inc("GlobalSignOut")
	return c.svc.GlobalSignOutWithContext(ctx, input, opts...)
}

// InitiateAuthRequest is a passthrough to the underlying InitiateAuthRequest.
// It will increment the count of requests made to InitiateAuth.
func (c *CognitoIdentityProvider) InitiateAuthRequest(input *cognitoidentityprovider.InitiateAuthInput) (req *request.Request, output *cognitoidentityprovider.InitiateAuthOutput) {
	c.inc("InitiateAuth")
	return c.svc.InitiateAuthRequest(input)
}

// InitiateAuth is a passthrough to the underlying InitiateAuth method.
// It will increment the count of requests made to InitiateAuth.
func (c *CognitoIdentityProvider) InitiateAuth(input *cognitoidentityprovider.InitiateAuthInput) (*cognitoidentityprovider.InitiateAuthOutput, error) {
	c.inc("InitiateAuth")
	return c.svc.InitiateAuth(input)
}

// InitiateAuthWithContext is a passthrough to the underlying InitiateAuthWithContext method.
// It will increment the count of requests made to InitiateAuth.
func (c *CognitoIdentityProvider) InitiateAuthWithContext(ctx aws.Context, input *cognitoidentityprovider.InitiateAuthInput, opts ...request.Option) (*cognitoidentityprovider.InitiateAuthOutput, error) {
	c.inc("InitiateAuth")
	return c.svc.InitiateAuthWithContext(ctx, input, opts...)
}

// ListDevicesRequest is a passthrough to the underlying ListDevicesRequest.
// It will increment the count of requests made to ListDevices.
func (c *CognitoIdentityProvider) ListDevicesRequest(input *cognitoidentityprovider.ListDevicesInput) (req *request.Request, output *cognitoidentityprovider.ListDevicesOutput) {
	c.inc("ListDevices")
	return c.svc.ListDevicesRequest(input)
}

// ListDevices is a passthrough to the underlying ListDevices method.
// It will increment the count of requests made to ListDevices.
func (c *CognitoIdentityProvider) ListDevices(input *cognitoidentityprovider.ListDevicesInput) (*cognitoidentityprovider.ListDevicesOutput, error) {
	c.inc("ListDevices")
	return c.svc.ListDevices(input)
}

// ListDevicesWithContext is a passthrough to the underlying ListDevicesWithContext method.
// It will increment the count of requests made to ListDevices.
func (c *CognitoIdentityProvider) ListDevicesWithContext(ctx aws.Context, input *cognitoidentityprovider.ListDevicesInput, opts ...request.Option) (*cognitoidentityprovider.ListDevicesOutput, error) {
	c.inc("ListDevices")
	return c.svc.ListDevicesWithContext(ctx, input, opts...)
}

// ListGroupsRequest is a passthrough to the underlying ListGroupsRequest.
// It will increment the count of requests made to ListGroups.
func (c *CognitoIdentityProvider) ListGroupsRequest(input *cognitoidentityprovider.ListGroupsInput) (req *request.Request, output *cognitoidentityprovider.ListGroupsOutput) {
	c.inc("ListGroups")
	return c.svc.ListGroupsRequest(input)
}

// ListGroups is a passthrough to the underlying ListGroups method.
// It will increment the count of requests made to ListGroups.
func (c *CognitoIdentityProvider) ListGroups(input *cognitoidentityprovider.ListGroupsInput) (*cognitoidentityprovider.ListGroupsOutput, error) {
	c.inc("ListGroups")
	return c.svc.ListGroups(input)
}

// ListGroupsWithContext is a passthrough to the underlying ListGroupsWithContext method.
// It will increment the count of requests made to ListGroups.
func (c *CognitoIdentityProvider) ListGroupsWithContext(ctx aws.Context, input *cognitoidentityprovider.ListGroupsInput, opts ...request.Option) (*cognitoidentityprovider.ListGroupsOutput, error) {
	c.inc("ListGroups")
	return c.svc.ListGroupsWithContext(ctx, input, opts...)
}

// ListIdentityProvidersRequest is a passthrough to the underlying ListIdentityProvidersRequest.
// It will increment the count of requests made to ListIdentityProviders.
func (c *CognitoIdentityProvider) ListIdentityProvidersRequest(input *cognitoidentityprovider.ListIdentityProvidersInput) (req *request.Request, output *cognitoidentityprovider.ListIdentityProvidersOutput) {
	c.inc("ListIdentityProviders")
	return c.svc.ListIdentityProvidersRequest(input)
}

// ListIdentityProviders is a passthrough to the underlying ListIdentityProviders method.
// It will increment the count of requests made to ListIdentityProviders.
func (c *CognitoIdentityProvider) ListIdentityProviders(input *cognitoidentityprovider.ListIdentityProvidersInput) (*cognitoidentityprovider.ListIdentityProvidersOutput, error) {
	c.inc("ListIdentityProviders")
	return c.svc.ListIdentityProviders(input)
}

// ListIdentityProvidersWithContext is a passthrough to the underlying ListIdentityProvidersWithContext method.
// It will increment the count of requests made to ListIdentityProviders.
func (c *CognitoIdentityProvider) ListIdentityProvidersWithContext(ctx aws.Context, input *cognitoidentityprovider.ListIdentityProvidersInput, opts ...request.Option) (*cognitoidentityprovider.ListIdentityProvidersOutput, error) {
	c.inc("ListIdentityProviders")
	return c.svc.ListIdentityProvidersWithContext(ctx, input, opts...)
}

// ListResourceServersRequest is a passthrough to the underlying ListResourceServersRequest.
// It will increment the count of requests made to ListResourceServers.
func (c *CognitoIdentityProvider) ListResourceServersRequest(input *cognitoidentityprovider.ListResourceServersInput) (req *request.Request, output *cognitoidentityprovider.ListResourceServersOutput) {
	c.inc("ListResourceServers")
	return c.svc.ListResourceServersRequest(input)
}

// ListResourceServers is a passthrough to the underlying ListResourceServers method.
// It will increment the count of requests made to ListResourceServers.
func (c *CognitoIdentityProvider) ListResourceServers(input *cognitoidentityprovider.ListResourceServersInput) (*cognitoidentityprovider.ListResourceServersOutput, error) {
	c.inc("ListResourceServers")
	return c.svc.ListResourceServers(input)
}

// ListResourceServersWithContext is a passthrough to the underlying ListResourceServersWithContext method.
// It will increment the count of requests made to ListResourceServers.
func (c *CognitoIdentityProvider) ListResourceServersWithContext(ctx aws.Context, input *cognitoidentityprovider.ListResourceServersInput, opts ...request.Option) (*cognitoidentityprovider.ListResourceServersOutput, error) {
	c.inc("ListResourceServers")
	return c.svc.ListResourceServersWithContext(ctx, input, opts...)
}

// ListUserImportJobsRequest is a passthrough to the underlying ListUserImportJobsRequest.
// It will increment the count of requests made to ListUserImportJobs.
func (c *CognitoIdentityProvider) ListUserImportJobsRequest(input *cognitoidentityprovider.ListUserImportJobsInput) (req *request.Request, output *cognitoidentityprovider.ListUserImportJobsOutput) {
	c.inc("ListUserImportJobs")
	return c.svc.ListUserImportJobsRequest(input)
}

// ListUserImportJobs is a passthrough to the underlying ListUserImportJobs method.
// It will increment the count of requests made to ListUserImportJobs.
func (c *CognitoIdentityProvider) ListUserImportJobs(input *cognitoidentityprovider.ListUserImportJobsInput) (*cognitoidentityprovider.ListUserImportJobsOutput, error) {
	c.inc("ListUserImportJobs")
	return c.svc.ListUserImportJobs(input)
}

// ListUserImportJobsWithContext is a passthrough to the underlying ListUserImportJobsWithContext method.
// It will increment the count of requests made to ListUserImportJobs.
func (c *CognitoIdentityProvider) ListUserImportJobsWithContext(ctx aws.Context, input *cognitoidentityprovider.ListUserImportJobsInput, opts ...request.Option) (*cognitoidentityprovider.ListUserImportJobsOutput, error) {
	c.inc("ListUserImportJobs")
	return c.svc.ListUserImportJobsWithContext(ctx, input, opts...)
}

// ListUserPoolClientsRequest is a passthrough to the underlying ListUserPoolClientsRequest.
// It will increment the count of requests made to ListUserPoolClients.
func (c *CognitoIdentityProvider) ListUserPoolClientsRequest(input *cognitoidentityprovider.ListUserPoolClientsInput) (req *request.Request, output *cognitoidentityprovider.ListUserPoolClientsOutput) {
	c.inc("ListUserPoolClients")
	return c.svc.ListUserPoolClientsRequest(input)
}

// ListUserPoolClients is a passthrough to the underlying ListUserPoolClients method.
// It will increment the count of requests made to ListUserPoolClients.
func (c *CognitoIdentityProvider) ListUserPoolClients(input *cognitoidentityprovider.ListUserPoolClientsInput) (*cognitoidentityprovider.ListUserPoolClientsOutput, error) {
	c.inc("ListUserPoolClients")
	return c.svc.ListUserPoolClients(input)
}

// ListUserPoolClientsWithContext is a passthrough to the underlying ListUserPoolClientsWithContext method.
// It will increment the count of requests made to ListUserPoolClients.
func (c *CognitoIdentityProvider) ListUserPoolClientsWithContext(ctx aws.Context, input *cognitoidentityprovider.ListUserPoolClientsInput, opts ...request.Option) (*cognitoidentityprovider.ListUserPoolClientsOutput, error) {
	c.inc("ListUserPoolClients")
	return c.svc.ListUserPoolClientsWithContext(ctx, input, opts...)
}

// ListUserPoolsRequest is a passthrough to the underlying ListUserPoolsRequest.
// It will increment the count of requests made to ListUserPools.
func (c *CognitoIdentityProvider) ListUserPoolsRequest(input *cognitoidentityprovider.ListUserPoolsInput) (req *request.Request, output *cognitoidentityprovider.ListUserPoolsOutput) {
	c.inc("ListUserPools")
	return c.svc.ListUserPoolsRequest(input)
}

// ListUserPools is a passthrough to the underlying ListUserPools method.
// It will increment the count of requests made to ListUserPools.
func (c *CognitoIdentityProvider) ListUserPools(input *cognitoidentityprovider.ListUserPoolsInput) (*cognitoidentityprovider.ListUserPoolsOutput, error) {
	c.inc("ListUserPools")
	return c.svc.ListUserPools(input)
}

// ListUserPoolsWithContext is a passthrough to the underlying ListUserPoolsWithContext method.
// It will increment the count of requests made to ListUserPools.
func (c *CognitoIdentityProvider) ListUserPoolsWithContext(ctx aws.Context, input *cognitoidentityprovider.ListUserPoolsInput, opts ...request.Option) (*cognitoidentityprovider.ListUserPoolsOutput, error) {
	c.inc("ListUserPools")
	return c.svc.ListUserPoolsWithContext(ctx, input, opts...)
}

// ListUsersRequest is a passthrough to the underlying ListUsersRequest.
// It will increment the count of requests made to ListUsers.
func (c *CognitoIdentityProvider) ListUsersRequest(input *cognitoidentityprovider.ListUsersInput) (req *request.Request, output *cognitoidentityprovider.ListUsersOutput) {
	c.inc("ListUsers")
	return c.svc.ListUsersRequest(input)
}

// ListUsers is a passthrough to the underlying ListUsers method.
// It will increment the count of requests made to ListUsers.
func (c *CognitoIdentityProvider) ListUsers(input *cognitoidentityprovider.ListUsersInput) (*cognitoidentityprovider.ListUsersOutput, error) {
	c.inc("ListUsers")
	return c.svc.ListUsers(input)
}

// ListUsersWithContext is a passthrough to the underlying ListUsersWithContext method.
// It will increment the count of requests made to ListUsers.
func (c *CognitoIdentityProvider) ListUsersWithContext(ctx aws.Context, input *cognitoidentityprovider.ListUsersInput, opts ...request.Option) (*cognitoidentityprovider.ListUsersOutput, error) {
	c.inc("ListUsers")
	return c.svc.ListUsersWithContext(ctx, input, opts...)
}

// ListUsersInGroupRequest is a passthrough to the underlying ListUsersInGroupRequest.
// It will increment the count of requests made to ListUsersInGroup.
func (c *CognitoIdentityProvider) ListUsersInGroupRequest(input *cognitoidentityprovider.ListUsersInGroupInput) (req *request.Request, output *cognitoidentityprovider.ListUsersInGroupOutput) {
	c.inc("ListUsersInGroup")
	return c.svc.ListUsersInGroupRequest(input)
}

// ListUsersInGroup is a passthrough to the underlying ListUsersInGroup method.
// It will increment the count of requests made to ListUsersInGroup.
func (c *CognitoIdentityProvider) ListUsersInGroup(input *cognitoidentityprovider.ListUsersInGroupInput) (*cognitoidentityprovider.ListUsersInGroupOutput, error) {
	c.inc("ListUsersInGroup")
	return c.svc.ListUsersInGroup(input)
}

// ListUsersInGroupWithContext is a passthrough to the underlying ListUsersInGroupWithContext method.
// It will increment the count of requests made to ListUsersInGroup.
func (c *CognitoIdentityProvider) ListUsersInGroupWithContext(ctx aws.Context, input *cognitoidentityprovider.ListUsersInGroupInput, opts ...request.Option) (*cognitoidentityprovider.ListUsersInGroupOutput, error) {
	c.inc("ListUsersInGroup")
	return c.svc.ListUsersInGroupWithContext(ctx, input, opts...)
}

// ResendConfirmationCodeRequest is a passthrough to the underlying ResendConfirmationCodeRequest.
// It will increment the count of requests made to ResendConfirmationCode.
func (c *CognitoIdentityProvider) ResendConfirmationCodeRequest(input *cognitoidentityprovider.ResendConfirmationCodeInput) (req *request.Request, output *cognitoidentityprovider.ResendConfirmationCodeOutput) {
	c.inc("ResendConfirmationCode")
	return c.svc.ResendConfirmationCodeRequest(input)
}

// ResendConfirmationCode is a passthrough to the underlying ResendConfirmationCode method.
// It will increment the count of requests made to ResendConfirmationCode.
func (c *CognitoIdentityProvider) ResendConfirmationCode(input *cognitoidentityprovider.ResendConfirmationCodeInput) (*cognitoidentityprovider.ResendConfirmationCodeOutput, error) {
	c.inc("ResendConfirmationCode")
	return c.svc.ResendConfirmationCode(input)
}

// ResendConfirmationCodeWithContext is a passthrough to the underlying ResendConfirmationCodeWithContext method.
// It will increment the count of requests made to ResendConfirmationCode.
func (c *CognitoIdentityProvider) ResendConfirmationCodeWithContext(ctx aws.Context, input *cognitoidentityprovider.ResendConfirmationCodeInput, opts ...request.Option) (*cognitoidentityprovider.ResendConfirmationCodeOutput, error) {
	c.inc("ResendConfirmationCode")
	return c.svc.ResendConfirmationCodeWithContext(ctx, input, opts...)
}

// RespondToAuthChallengeRequest is a passthrough to the underlying RespondToAuthChallengeRequest.
// It will increment the count of requests made to RespondToAuthChallenge.
func (c *CognitoIdentityProvider) RespondToAuthChallengeRequest(input *cognitoidentityprovider.RespondToAuthChallengeInput) (req *request.Request, output *cognitoidentityprovider.RespondToAuthChallengeOutput) {
	c.inc("RespondToAuthChallenge")
	return c.svc.RespondToAuthChallengeRequest(input)
}

// RespondToAuthChallenge is a passthrough to the underlying RespondToAuthChallenge method.
// It will increment the count of requests made to RespondToAuthChallenge.
func (c *CognitoIdentityProvider) RespondToAuthChallenge(input *cognitoidentityprovider.RespondToAuthChallengeInput) (*cognitoidentityprovider.RespondToAuthChallengeOutput, error) {
	c.inc("RespondToAuthChallenge")
	return c.svc.RespondToAuthChallenge(input)
}

// RespondToAuthChallengeWithContext is a passthrough to the underlying RespondToAuthChallengeWithContext method.
// It will increment the count of requests made to RespondToAuthChallenge.
func (c *CognitoIdentityProvider) RespondToAuthChallengeWithContext(ctx aws.Context, input *cognitoidentityprovider.RespondToAuthChallengeInput, opts ...request.Option) (*cognitoidentityprovider.RespondToAuthChallengeOutput, error) {
	c.inc("RespondToAuthChallenge")
	return c.svc.RespondToAuthChallengeWithContext(ctx, input, opts...)
}

// SetRiskConfigurationRequest is a passthrough to the underlying SetRiskConfigurationRequest.
// It will increment the count of requests made to SetRiskConfiguration.
func (c *CognitoIdentityProvider) SetRiskConfigurationRequest(input *cognitoidentityprovider.SetRiskConfigurationInput) (req *request.Request, output *cognitoidentityprovider.SetRiskConfigurationOutput) {
	c.inc("SetRiskConfiguration")
	return c.svc.SetRiskConfigurationRequest(input)
}

// SetRiskConfiguration is a passthrough to the underlying SetRiskConfiguration method.
// It will increment the count of requests made to SetRiskConfiguration.
func (c *CognitoIdentityProvider) SetRiskConfiguration(input *cognitoidentityprovider.SetRiskConfigurationInput) (*cognitoidentityprovider.SetRiskConfigurationOutput, error) {
	c.inc("SetRiskConfiguration")
	return c.svc.SetRiskConfiguration(input)
}

// SetRiskConfigurationWithContext is a passthrough to the underlying SetRiskConfigurationWithContext method.
// It will increment the count of requests made to SetRiskConfiguration.
func (c *CognitoIdentityProvider) SetRiskConfigurationWithContext(ctx aws.Context, input *cognitoidentityprovider.SetRiskConfigurationInput, opts ...request.Option) (*cognitoidentityprovider.SetRiskConfigurationOutput, error) {
	c.inc("SetRiskConfiguration")
	return c.svc.SetRiskConfigurationWithContext(ctx, input, opts...)
}

// SetUICustomizationRequest is a passthrough to the underlying SetUICustomizationRequest.
// It will increment the count of requests made to SetUICustomization.
func (c *CognitoIdentityProvider) SetUICustomizationRequest(input *cognitoidentityprovider.SetUICustomizationInput) (req *request.Request, output *cognitoidentityprovider.SetUICustomizationOutput) {
	c.inc("SetUICustomization")
	return c.svc.SetUICustomizationRequest(input)
}

// SetUICustomization is a passthrough to the underlying SetUICustomization method.
// It will increment the count of requests made to SetUICustomization.
func (c *CognitoIdentityProvider) SetUICustomization(input *cognitoidentityprovider.SetUICustomizationInput) (*cognitoidentityprovider.SetUICustomizationOutput, error) {
	c.inc("SetUICustomization")
	return c.svc.SetUICustomization(input)
}

// SetUICustomizationWithContext is a passthrough to the underlying SetUICustomizationWithContext method.
// It will increment the count of requests made to SetUICustomization.
func (c *CognitoIdentityProvider) SetUICustomizationWithContext(ctx aws.Context, input *cognitoidentityprovider.SetUICustomizationInput, opts ...request.Option) (*cognitoidentityprovider.SetUICustomizationOutput, error) {
	c.inc("SetUICustomization")
	return c.svc.SetUICustomizationWithContext(ctx, input, opts...)
}

// SetUserMFAPreferenceRequest is a passthrough to the underlying SetUserMFAPreferenceRequest.
// It will increment the count of requests made to SetUserMFAPreference.
func (c *CognitoIdentityProvider) SetUserMFAPreferenceRequest(input *cognitoidentityprovider.SetUserMFAPreferenceInput) (req *request.Request, output *cognitoidentityprovider.SetUserMFAPreferenceOutput) {
	c.inc("SetUserMFAPreference")
	return c.svc.SetUserMFAPreferenceRequest(input)
}

// SetUserMFAPreference is a passthrough to the underlying SetUserMFAPreference method.
// It will increment the count of requests made to SetUserMFAPreference.
func (c *CognitoIdentityProvider) SetUserMFAPreference(input *cognitoidentityprovider.SetUserMFAPreferenceInput) (*cognitoidentityprovider.SetUserMFAPreferenceOutput, error) {
	c.inc("SetUserMFAPreference")
	return c.svc.SetUserMFAPreference(input)
}

// SetUserMFAPreferenceWithContext is a passthrough to the underlying SetUserMFAPreferenceWithContext method.
// It will increment the count of requests made to SetUserMFAPreference.
func (c *CognitoIdentityProvider) SetUserMFAPreferenceWithContext(ctx aws.Context, input *cognitoidentityprovider.SetUserMFAPreferenceInput, opts ...request.Option) (*cognitoidentityprovider.SetUserMFAPreferenceOutput, error) {
	c.inc("SetUserMFAPreference")
	return c.svc.SetUserMFAPreferenceWithContext(ctx, input, opts...)
}

// SetUserPoolMfaConfigRequest is a passthrough to the underlying SetUserPoolMfaConfigRequest.
// It will increment the count of requests made to SetUserPoolMfaConfig.
func (c *CognitoIdentityProvider) SetUserPoolMfaConfigRequest(input *cognitoidentityprovider.SetUserPoolMfaConfigInput) (req *request.Request, output *cognitoidentityprovider.SetUserPoolMfaConfigOutput) {
	c.inc("SetUserPoolMfaConfig")
	return c.svc.SetUserPoolMfaConfigRequest(input)
}

// SetUserPoolMfaConfig is a passthrough to the underlying SetUserPoolMfaConfig method.
// It will increment the count of requests made to SetUserPoolMfaConfig.
func (c *CognitoIdentityProvider) SetUserPoolMfaConfig(input *cognitoidentityprovider.SetUserPoolMfaConfigInput) (*cognitoidentityprovider.SetUserPoolMfaConfigOutput, error) {
	c.inc("SetUserPoolMfaConfig")
	return c.svc.SetUserPoolMfaConfig(input)
}

// SetUserPoolMfaConfigWithContext is a passthrough to the underlying SetUserPoolMfaConfigWithContext method.
// It will increment the count of requests made to SetUserPoolMfaConfig.
func (c *CognitoIdentityProvider) SetUserPoolMfaConfigWithContext(ctx aws.Context, input *cognitoidentityprovider.SetUserPoolMfaConfigInput, opts ...request.Option) (*cognitoidentityprovider.SetUserPoolMfaConfigOutput, error) {
	c.inc("SetUserPoolMfaConfig")
	return c.svc.SetUserPoolMfaConfigWithContext(ctx, input, opts...)
}

// SetUserSettingsRequest is a passthrough to the underlying SetUserSettingsRequest.
// It will increment the count of requests made to SetUserSettings.
func (c *CognitoIdentityProvider) SetUserSettingsRequest(input *cognitoidentityprovider.SetUserSettingsInput) (req *request.Request, output *cognitoidentityprovider.SetUserSettingsOutput) {
	c.inc("SetUserSettings")
	return c.svc.SetUserSettingsRequest(input)
}

// SetUserSettings is a passthrough to the underlying SetUserSettings method.
// It will increment the count of requests made to SetUserSettings.
func (c *CognitoIdentityProvider) SetUserSettings(input *cognitoidentityprovider.SetUserSettingsInput) (*cognitoidentityprovider.SetUserSettingsOutput, error) {
	c.inc("SetUserSettings")
	return c.svc.SetUserSettings(input)
}

// SetUserSettingsWithContext is a passthrough to the underlying SetUserSettingsWithContext method.
// It will increment the count of requests made to SetUserSettings.
func (c *CognitoIdentityProvider) SetUserSettingsWithContext(ctx aws.Context, input *cognitoidentityprovider.SetUserSettingsInput, opts ...request.Option) (*cognitoidentityprovider.SetUserSettingsOutput, error) {
	c.inc("SetUserSettings")
	return c.svc.SetUserSettingsWithContext(ctx, input, opts...)
}

// SignUpRequest is a passthrough to the underlying SignUpRequest.
// It will increment the count of requests made to SignUp.
func (c *CognitoIdentityProvider) SignUpRequest(input *cognitoidentityprovider.SignUpInput) (req *request.Request, output *cognitoidentityprovider.SignUpOutput) {
	c.inc("SignUp")
	return c.svc.SignUpRequest(input)
}

// SignUp is a passthrough to the underlying SignUp method.
// It will increment the count of requests made to SignUp.
func (c *CognitoIdentityProvider) SignUp(input *cognitoidentityprovider.SignUpInput) (*cognitoidentityprovider.SignUpOutput, error) {
	c.inc("SignUp")
	return c.svc.SignUp(input)
}

// SignUpWithContext is a passthrough to the underlying SignUpWithContext method.
// It will increment the count of requests made to SignUp.
func (c *CognitoIdentityProvider) SignUpWithContext(ctx aws.Context, input *cognitoidentityprovider.SignUpInput, opts ...request.Option) (*cognitoidentityprovider.SignUpOutput, error) {
	c.inc("SignUp")
	return c.svc.SignUpWithContext(ctx, input, opts...)
}

// StartUserImportJobRequest is a passthrough to the underlying StartUserImportJobRequest.
// It will increment the count of requests made to StartUserImportJob.
func (c *CognitoIdentityProvider) StartUserImportJobRequest(input *cognitoidentityprovider.StartUserImportJobInput) (req *request.Request, output *cognitoidentityprovider.StartUserImportJobOutput) {
	c.inc("StartUserImportJob")
	return c.svc.StartUserImportJobRequest(input)
}

// StartUserImportJob is a passthrough to the underlying StartUserImportJob method.
// It will increment the count of requests made to StartUserImportJob.
func (c *CognitoIdentityProvider) StartUserImportJob(input *cognitoidentityprovider.StartUserImportJobInput) (*cognitoidentityprovider.StartUserImportJobOutput, error) {
	c.inc("StartUserImportJob")
	return c.svc.StartUserImportJob(input)
}

// StartUserImportJobWithContext is a passthrough to the underlying StartUserImportJobWithContext method.
// It will increment the count of requests made to StartUserImportJob.
func (c *CognitoIdentityProvider) StartUserImportJobWithContext(ctx aws.Context, input *cognitoidentityprovider.StartUserImportJobInput, opts ...request.Option) (*cognitoidentityprovider.StartUserImportJobOutput, error) {
	c.inc("StartUserImportJob")
	return c.svc.StartUserImportJobWithContext(ctx, input, opts...)
}

// StopUserImportJobRequest is a passthrough to the underlying StopUserImportJobRequest.
// It will increment the count of requests made to StopUserImportJob.
func (c *CognitoIdentityProvider) StopUserImportJobRequest(input *cognitoidentityprovider.StopUserImportJobInput) (req *request.Request, output *cognitoidentityprovider.StopUserImportJobOutput) {
	c.inc("StopUserImportJob")
	return c.svc.StopUserImportJobRequest(input)
}

// StopUserImportJob is a passthrough to the underlying StopUserImportJob method.
// It will increment the count of requests made to StopUserImportJob.
func (c *CognitoIdentityProvider) StopUserImportJob(input *cognitoidentityprovider.StopUserImportJobInput) (*cognitoidentityprovider.StopUserImportJobOutput, error) {
	c.inc("StopUserImportJob")
	return c.svc.StopUserImportJob(input)
}

// StopUserImportJobWithContext is a passthrough to the underlying StopUserImportJobWithContext method.
// It will increment the count of requests made to StopUserImportJob.
func (c *CognitoIdentityProvider) StopUserImportJobWithContext(ctx aws.Context, input *cognitoidentityprovider.StopUserImportJobInput, opts ...request.Option) (*cognitoidentityprovider.StopUserImportJobOutput, error) {
	c.inc("StopUserImportJob")
	return c.svc.StopUserImportJobWithContext(ctx, input, opts...)
}

// UpdateAuthEventFeedbackRequest is a passthrough to the underlying UpdateAuthEventFeedbackRequest.
// It will increment the count of requests made to UpdateAuthEventFeedback.
func (c *CognitoIdentityProvider) UpdateAuthEventFeedbackRequest(input *cognitoidentityprovider.UpdateAuthEventFeedbackInput) (req *request.Request, output *cognitoidentityprovider.UpdateAuthEventFeedbackOutput) {
	c.inc("UpdateAuthEventFeedback")
	return c.svc.UpdateAuthEventFeedbackRequest(input)
}

// UpdateAuthEventFeedback is a passthrough to the underlying UpdateAuthEventFeedback method.
// It will increment the count of requests made to UpdateAuthEventFeedback.
func (c *CognitoIdentityProvider) UpdateAuthEventFeedback(input *cognitoidentityprovider.UpdateAuthEventFeedbackInput) (*cognitoidentityprovider.UpdateAuthEventFeedbackOutput, error) {
	c.inc("UpdateAuthEventFeedback")
	return c.svc.UpdateAuthEventFeedback(input)
}

// UpdateAuthEventFeedbackWithContext is a passthrough to the underlying UpdateAuthEventFeedbackWithContext method.
// It will increment the count of requests made to UpdateAuthEventFeedback.
func (c *CognitoIdentityProvider) UpdateAuthEventFeedbackWithContext(ctx aws.Context, input *cognitoidentityprovider.UpdateAuthEventFeedbackInput, opts ...request.Option) (*cognitoidentityprovider.UpdateAuthEventFeedbackOutput, error) {
	c.inc("UpdateAuthEventFeedback")
	return c.svc.UpdateAuthEventFeedbackWithContext(ctx, input, opts...)
}

// UpdateDeviceStatusRequest is a passthrough to the underlying UpdateDeviceStatusRequest.
// It will increment the count of requests made to UpdateDeviceStatus.
func (c *CognitoIdentityProvider) UpdateDeviceStatusRequest(input *cognitoidentityprovider.UpdateDeviceStatusInput) (req *request.Request, output *cognitoidentityprovider.UpdateDeviceStatusOutput) {
	c.inc("UpdateDeviceStatus")
	return c.svc.UpdateDeviceStatusRequest(input)
}

// UpdateDeviceStatus is a passthrough to the underlying UpdateDeviceStatus method.
// It will increment the count of requests made to UpdateDeviceStatus.
func (c *CognitoIdentityProvider) UpdateDeviceStatus(input *cognitoidentityprovider.UpdateDeviceStatusInput) (*cognitoidentityprovider.UpdateDeviceStatusOutput, error) {
	c.inc("UpdateDeviceStatus")
	return c.svc.UpdateDeviceStatus(input)
}

// UpdateDeviceStatusWithContext is a passthrough to the underlying UpdateDeviceStatusWithContext method.
// It will increment the count of requests made to UpdateDeviceStatus.
func (c *CognitoIdentityProvider) UpdateDeviceStatusWithContext(ctx aws.Context, input *cognitoidentityprovider.UpdateDeviceStatusInput, opts ...request.Option) (*cognitoidentityprovider.UpdateDeviceStatusOutput, error) {
	c.inc("UpdateDeviceStatus")
	return c.svc.UpdateDeviceStatusWithContext(ctx, input, opts...)
}

// UpdateGroupRequest is a passthrough to the underlying UpdateGroupRequest.
// It will increment the count of requests made to UpdateGroup.
func (c *CognitoIdentityProvider) UpdateGroupRequest(input *cognitoidentityprovider.UpdateGroupInput) (req *request.Request, output *cognitoidentityprovider.UpdateGroupOutput) {
	c.inc("UpdateGroup")
	return c.svc.UpdateGroupRequest(input)
}

// UpdateGroup is a passthrough to the underlying UpdateGroup method.
// It will increment the count of requests made to UpdateGroup.
func (c *CognitoIdentityProvider) UpdateGroup(input *cognitoidentityprovider.UpdateGroupInput) (*cognitoidentityprovider.UpdateGroupOutput, error) {
	c.inc("UpdateGroup")
	return c.svc.UpdateGroup(input)
}

// UpdateGroupWithContext is a passthrough to the underlying UpdateGroupWithContext method.
// It will increment the count of requests made to UpdateGroup.
func (c *CognitoIdentityProvider) UpdateGroupWithContext(ctx aws.Context, input *cognitoidentityprovider.UpdateGroupInput, opts ...request.Option) (*cognitoidentityprovider.UpdateGroupOutput, error) {
	c.inc("UpdateGroup")
	return c.svc.UpdateGroupWithContext(ctx, input, opts...)
}

// UpdateIdentityProviderRequest is a passthrough to the underlying UpdateIdentityProviderRequest.
// It will increment the count of requests made to UpdateIdentityProvider.
func (c *CognitoIdentityProvider) UpdateIdentityProviderRequest(input *cognitoidentityprovider.UpdateIdentityProviderInput) (req *request.Request, output *cognitoidentityprovider.UpdateIdentityProviderOutput) {
	c.inc("UpdateIdentityProvider")
	return c.svc.UpdateIdentityProviderRequest(input)
}

// UpdateIdentityProvider is a passthrough to the underlying UpdateIdentityProvider method.
// It will increment the count of requests made to UpdateIdentityProvider.
func (c *CognitoIdentityProvider) UpdateIdentityProvider(input *cognitoidentityprovider.UpdateIdentityProviderInput) (*cognitoidentityprovider.UpdateIdentityProviderOutput, error) {
	c.inc("UpdateIdentityProvider")
	return c.svc.UpdateIdentityProvider(input)
}

// UpdateIdentityProviderWithContext is a passthrough to the underlying UpdateIdentityProviderWithContext method.
// It will increment the count of requests made to UpdateIdentityProvider.
func (c *CognitoIdentityProvider) UpdateIdentityProviderWithContext(ctx aws.Context, input *cognitoidentityprovider.UpdateIdentityProviderInput, opts ...request.Option) (*cognitoidentityprovider.UpdateIdentityProviderOutput, error) {
	c.inc("UpdateIdentityProvider")
	return c.svc.UpdateIdentityProviderWithContext(ctx, input, opts...)
}

// UpdateResourceServerRequest is a passthrough to the underlying UpdateResourceServerRequest.
// It will increment the count of requests made to UpdateResourceServer.
func (c *CognitoIdentityProvider) UpdateResourceServerRequest(input *cognitoidentityprovider.UpdateResourceServerInput) (req *request.Request, output *cognitoidentityprovider.UpdateResourceServerOutput) {
	c.inc("UpdateResourceServer")
	return c.svc.UpdateResourceServerRequest(input)
}

// UpdateResourceServer is a passthrough to the underlying UpdateResourceServer method.
// It will increment the count of requests made to UpdateResourceServer.
func (c *CognitoIdentityProvider) UpdateResourceServer(input *cognitoidentityprovider.UpdateResourceServerInput) (*cognitoidentityprovider.UpdateResourceServerOutput, error) {
	c.inc("UpdateResourceServer")
	return c.svc.UpdateResourceServer(input)
}

// UpdateResourceServerWithContext is a passthrough to the underlying UpdateResourceServerWithContext method.
// It will increment the count of requests made to UpdateResourceServer.
func (c *CognitoIdentityProvider) UpdateResourceServerWithContext(ctx aws.Context, input *cognitoidentityprovider.UpdateResourceServerInput, opts ...request.Option) (*cognitoidentityprovider.UpdateResourceServerOutput, error) {
	c.inc("UpdateResourceServer")
	return c.svc.UpdateResourceServerWithContext(ctx, input, opts...)
}

// UpdateUserAttributesRequest is a passthrough to the underlying UpdateUserAttributesRequest.
// It will increment the count of requests made to UpdateUserAttributes.
func (c *CognitoIdentityProvider) UpdateUserAttributesRequest(input *cognitoidentityprovider.UpdateUserAttributesInput) (req *request.Request, output *cognitoidentityprovider.UpdateUserAttributesOutput) {
	c.inc("UpdateUserAttributes")
	return c.svc.UpdateUserAttributesRequest(input)
}

// UpdateUserAttributes is a passthrough to the underlying UpdateUserAttributes method.
// It will increment the count of requests made to UpdateUserAttributes.
func (c *CognitoIdentityProvider) UpdateUserAttributes(input *cognitoidentityprovider.UpdateUserAttributesInput) (*cognitoidentityprovider.UpdateUserAttributesOutput, error) {
	c.inc("UpdateUserAttributes")
	return c.svc.UpdateUserAttributes(input)
}

// UpdateUserAttributesWithContext is a passthrough to the underlying UpdateUserAttributesWithContext method.
// It will increment the count of requests made to UpdateUserAttributes.
func (c *CognitoIdentityProvider) UpdateUserAttributesWithContext(ctx aws.Context, input *cognitoidentityprovider.UpdateUserAttributesInput, opts ...request.Option) (*cognitoidentityprovider.UpdateUserAttributesOutput, error) {
	c.inc("UpdateUserAttributes")
	return c.svc.UpdateUserAttributesWithContext(ctx, input, opts...)
}

// UpdateUserPoolRequest is a passthrough to the underlying UpdateUserPoolRequest.
// It will increment the count of requests made to UpdateUserPool.
func (c *CognitoIdentityProvider) UpdateUserPoolRequest(input *cognitoidentityprovider.UpdateUserPoolInput) (req *request.Request, output *cognitoidentityprovider.UpdateUserPoolOutput) {
	c.inc("UpdateUserPool")
	return c.svc.UpdateUserPoolRequest(input)
}

// UpdateUserPool is a passthrough to the underlying UpdateUserPool method.
// It will increment the count of requests made to UpdateUserPool.
func (c *CognitoIdentityProvider) UpdateUserPool(input *cognitoidentityprovider.UpdateUserPoolInput) (*cognitoidentityprovider.UpdateUserPoolOutput, error) {
	c.inc("UpdateUserPool")
	return c.svc.UpdateUserPool(input)
}

// UpdateUserPoolWithContext is a passthrough to the underlying UpdateUserPoolWithContext method.
// It will increment the count of requests made to UpdateUserPool.
func (c *CognitoIdentityProvider) UpdateUserPoolWithContext(ctx aws.Context, input *cognitoidentityprovider.UpdateUserPoolInput, opts ...request.Option) (*cognitoidentityprovider.UpdateUserPoolOutput, error) {
	c.inc("UpdateUserPool")
	return c.svc.UpdateUserPoolWithContext(ctx, input, opts...)
}

// UpdateUserPoolClientRequest is a passthrough to the underlying UpdateUserPoolClientRequest.
// It will increment the count of requests made to UpdateUserPoolClient.
func (c *CognitoIdentityProvider) UpdateUserPoolClientRequest(input *cognitoidentityprovider.UpdateUserPoolClientInput) (req *request.Request, output *cognitoidentityprovider.UpdateUserPoolClientOutput) {
	c.inc("UpdateUserPoolClient")
	return c.svc.UpdateUserPoolClientRequest(input)
}

// UpdateUserPoolClient is a passthrough to the underlying UpdateUserPoolClient method.
// It will increment the count of requests made to UpdateUserPoolClient.
func (c *CognitoIdentityProvider) UpdateUserPoolClient(input *cognitoidentityprovider.UpdateUserPoolClientInput) (*cognitoidentityprovider.UpdateUserPoolClientOutput, error) {
	c.inc("UpdateUserPoolClient")
	return c.svc.UpdateUserPoolClient(input)
}

// UpdateUserPoolClientWithContext is a passthrough to the underlying UpdateUserPoolClientWithContext method.
// It will increment the count of requests made to UpdateUserPoolClient.
func (c *CognitoIdentityProvider) UpdateUserPoolClientWithContext(ctx aws.Context, input *cognitoidentityprovider.UpdateUserPoolClientInput, opts ...request.Option) (*cognitoidentityprovider.UpdateUserPoolClientOutput, error) {
	c.inc("UpdateUserPoolClient")
	return c.svc.UpdateUserPoolClientWithContext(ctx, input, opts...)
}

// VerifySoftwareTokenRequest is a passthrough to the underlying VerifySoftwareTokenRequest.
// It will increment the count of requests made to VerifySoftwareToken.
func (c *CognitoIdentityProvider) VerifySoftwareTokenRequest(input *cognitoidentityprovider.VerifySoftwareTokenInput) (req *request.Request, output *cognitoidentityprovider.VerifySoftwareTokenOutput) {
	c.inc("VerifySoftwareToken")
	return c.svc.VerifySoftwareTokenRequest(input)
}

// VerifySoftwareToken is a passthrough to the underlying VerifySoftwareToken method.
// It will increment the count of requests made to VerifySoftwareToken.
func (c *CognitoIdentityProvider) VerifySoftwareToken(input *cognitoidentityprovider.VerifySoftwareTokenInput) (*cognitoidentityprovider.VerifySoftwareTokenOutput, error) {
	c.inc("VerifySoftwareToken")
	return c.svc.VerifySoftwareToken(input)
}

// VerifySoftwareTokenWithContext is a passthrough to the underlying VerifySoftwareTokenWithContext method.
// It will increment the count of requests made to VerifySoftwareToken.
func (c *CognitoIdentityProvider) VerifySoftwareTokenWithContext(ctx aws.Context, input *cognitoidentityprovider.VerifySoftwareTokenInput, opts ...request.Option) (*cognitoidentityprovider.VerifySoftwareTokenOutput, error) {
	c.inc("VerifySoftwareToken")
	return c.svc.VerifySoftwareTokenWithContext(ctx, input, opts...)
}

// VerifyUserAttributeRequest is a passthrough to the underlying VerifyUserAttributeRequest.
// It will increment the count of requests made to VerifyUserAttribute.
func (c *CognitoIdentityProvider) VerifyUserAttributeRequest(input *cognitoidentityprovider.VerifyUserAttributeInput) (req *request.Request, output *cognitoidentityprovider.VerifyUserAttributeOutput) {
	c.inc("VerifyUserAttribute")
	return c.svc.VerifyUserAttributeRequest(input)
}

// VerifyUserAttribute is a passthrough to the underlying VerifyUserAttribute method.
// It will increment the count of requests made to VerifyUserAttribute.
func (c *CognitoIdentityProvider) VerifyUserAttribute(input *cognitoidentityprovider.VerifyUserAttributeInput) (*cognitoidentityprovider.VerifyUserAttributeOutput, error) {
	c.inc("VerifyUserAttribute")
	return c.svc.VerifyUserAttribute(input)
}

// VerifyUserAttributeWithContext is a passthrough to the underlying VerifyUserAttributeWithContext method.
// It will increment the count of requests made to VerifyUserAttribute.
func (c *CognitoIdentityProvider) VerifyUserAttributeWithContext(ctx aws.Context, input *cognitoidentityprovider.VerifyUserAttributeInput, opts ...request.Option) (*cognitoidentityprovider.VerifyUserAttributeOutput, error) {
	c.inc("VerifyUserAttribute")
	return c.svc.VerifyUserAttributeWithContext(ctx, input, opts...)
}
