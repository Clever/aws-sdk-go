// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package servicecatalogcounter

import (
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/servicecatalog"
)

// AcceptPortfolioShareRequest is a passthrough to the underlying AcceptPortfolioShareRequest.
// It will increment the count of requests made to AcceptPortfolioShare.
func (c *ServiceCatalog) AcceptPortfolioShareRequest(input *servicecatalog.AcceptPortfolioShareInput) (req *request.Request, output *servicecatalog.AcceptPortfolioShareOutput) {
	c.inc("AcceptPortfolioShare")
	return c.svc.AcceptPortfolioShareRequest(input)
}

// AcceptPortfolioShare is a passthrough to the underlying AcceptPortfolioShare method.
// It will increment the count of requests made to AcceptPortfolioShare.
func (c *ServiceCatalog) AcceptPortfolioShare(input *servicecatalog.AcceptPortfolioShareInput) (*servicecatalog.AcceptPortfolioShareOutput, error) {
	c.inc("AcceptPortfolioShare")
	return c.svc.AcceptPortfolioShare(input)
}

// AcceptPortfolioShareWithContext is a passthrough to the underlying AcceptPortfolioShareWithContext method.
// It will increment the count of requests made to AcceptPortfolioShare.
func (c *ServiceCatalog) AcceptPortfolioShareWithContext(ctx aws.Context, input *servicecatalog.AcceptPortfolioShareInput, opts ...request.Option) (*servicecatalog.AcceptPortfolioShareOutput, error) {
	c.inc("AcceptPortfolioShare")
	return c.svc.AcceptPortfolioShareWithContext(ctx, input, opts...)
}

// AssociatePrincipalWithPortfolioRequest is a passthrough to the underlying AssociatePrincipalWithPortfolioRequest.
// It will increment the count of requests made to AssociatePrincipalWithPortfolio.
func (c *ServiceCatalog) AssociatePrincipalWithPortfolioRequest(input *servicecatalog.AssociatePrincipalWithPortfolioInput) (req *request.Request, output *servicecatalog.AssociatePrincipalWithPortfolioOutput) {
	c.inc("AssociatePrincipalWithPortfolio")
	return c.svc.AssociatePrincipalWithPortfolioRequest(input)
}

// AssociatePrincipalWithPortfolio is a passthrough to the underlying AssociatePrincipalWithPortfolio method.
// It will increment the count of requests made to AssociatePrincipalWithPortfolio.
func (c *ServiceCatalog) AssociatePrincipalWithPortfolio(input *servicecatalog.AssociatePrincipalWithPortfolioInput) (*servicecatalog.AssociatePrincipalWithPortfolioOutput, error) {
	c.inc("AssociatePrincipalWithPortfolio")
	return c.svc.AssociatePrincipalWithPortfolio(input)
}

// AssociatePrincipalWithPortfolioWithContext is a passthrough to the underlying AssociatePrincipalWithPortfolioWithContext method.
// It will increment the count of requests made to AssociatePrincipalWithPortfolio.
func (c *ServiceCatalog) AssociatePrincipalWithPortfolioWithContext(ctx aws.Context, input *servicecatalog.AssociatePrincipalWithPortfolioInput, opts ...request.Option) (*servicecatalog.AssociatePrincipalWithPortfolioOutput, error) {
	c.inc("AssociatePrincipalWithPortfolio")
	return c.svc.AssociatePrincipalWithPortfolioWithContext(ctx, input, opts...)
}

// AssociateProductWithPortfolioRequest is a passthrough to the underlying AssociateProductWithPortfolioRequest.
// It will increment the count of requests made to AssociateProductWithPortfolio.
func (c *ServiceCatalog) AssociateProductWithPortfolioRequest(input *servicecatalog.AssociateProductWithPortfolioInput) (req *request.Request, output *servicecatalog.AssociateProductWithPortfolioOutput) {
	c.inc("AssociateProductWithPortfolio")
	return c.svc.AssociateProductWithPortfolioRequest(input)
}

// AssociateProductWithPortfolio is a passthrough to the underlying AssociateProductWithPortfolio method.
// It will increment the count of requests made to AssociateProductWithPortfolio.
func (c *ServiceCatalog) AssociateProductWithPortfolio(input *servicecatalog.AssociateProductWithPortfolioInput) (*servicecatalog.AssociateProductWithPortfolioOutput, error) {
	c.inc("AssociateProductWithPortfolio")
	return c.svc.AssociateProductWithPortfolio(input)
}

// AssociateProductWithPortfolioWithContext is a passthrough to the underlying AssociateProductWithPortfolioWithContext method.
// It will increment the count of requests made to AssociateProductWithPortfolio.
func (c *ServiceCatalog) AssociateProductWithPortfolioWithContext(ctx aws.Context, input *servicecatalog.AssociateProductWithPortfolioInput, opts ...request.Option) (*servicecatalog.AssociateProductWithPortfolioOutput, error) {
	c.inc("AssociateProductWithPortfolio")
	return c.svc.AssociateProductWithPortfolioWithContext(ctx, input, opts...)
}

// AssociateTagOptionWithResourceRequest is a passthrough to the underlying AssociateTagOptionWithResourceRequest.
// It will increment the count of requests made to AssociateTagOptionWithResource.
func (c *ServiceCatalog) AssociateTagOptionWithResourceRequest(input *servicecatalog.AssociateTagOptionWithResourceInput) (req *request.Request, output *servicecatalog.AssociateTagOptionWithResourceOutput) {
	c.inc("AssociateTagOptionWithResource")
	return c.svc.AssociateTagOptionWithResourceRequest(input)
}

// AssociateTagOptionWithResource is a passthrough to the underlying AssociateTagOptionWithResource method.
// It will increment the count of requests made to AssociateTagOptionWithResource.
func (c *ServiceCatalog) AssociateTagOptionWithResource(input *servicecatalog.AssociateTagOptionWithResourceInput) (*servicecatalog.AssociateTagOptionWithResourceOutput, error) {
	c.inc("AssociateTagOptionWithResource")
	return c.svc.AssociateTagOptionWithResource(input)
}

// AssociateTagOptionWithResourceWithContext is a passthrough to the underlying AssociateTagOptionWithResourceWithContext method.
// It will increment the count of requests made to AssociateTagOptionWithResource.
func (c *ServiceCatalog) AssociateTagOptionWithResourceWithContext(ctx aws.Context, input *servicecatalog.AssociateTagOptionWithResourceInput, opts ...request.Option) (*servicecatalog.AssociateTagOptionWithResourceOutput, error) {
	c.inc("AssociateTagOptionWithResource")
	return c.svc.AssociateTagOptionWithResourceWithContext(ctx, input, opts...)
}

// CopyProductRequest is a passthrough to the underlying CopyProductRequest.
// It will increment the count of requests made to CopyProduct.
func (c *ServiceCatalog) CopyProductRequest(input *servicecatalog.CopyProductInput) (req *request.Request, output *servicecatalog.CopyProductOutput) {
	c.inc("CopyProduct")
	return c.svc.CopyProductRequest(input)
}

// CopyProduct is a passthrough to the underlying CopyProduct method.
// It will increment the count of requests made to CopyProduct.
func (c *ServiceCatalog) CopyProduct(input *servicecatalog.CopyProductInput) (*servicecatalog.CopyProductOutput, error) {
	c.inc("CopyProduct")
	return c.svc.CopyProduct(input)
}

// CopyProductWithContext is a passthrough to the underlying CopyProductWithContext method.
// It will increment the count of requests made to CopyProduct.
func (c *ServiceCatalog) CopyProductWithContext(ctx aws.Context, input *servicecatalog.CopyProductInput, opts ...request.Option) (*servicecatalog.CopyProductOutput, error) {
	c.inc("CopyProduct")
	return c.svc.CopyProductWithContext(ctx, input, opts...)
}

// CreateConstraintRequest is a passthrough to the underlying CreateConstraintRequest.
// It will increment the count of requests made to CreateConstraint.
func (c *ServiceCatalog) CreateConstraintRequest(input *servicecatalog.CreateConstraintInput) (req *request.Request, output *servicecatalog.CreateConstraintOutput) {
	c.inc("CreateConstraint")
	return c.svc.CreateConstraintRequest(input)
}

// CreateConstraint is a passthrough to the underlying CreateConstraint method.
// It will increment the count of requests made to CreateConstraint.
func (c *ServiceCatalog) CreateConstraint(input *servicecatalog.CreateConstraintInput) (*servicecatalog.CreateConstraintOutput, error) {
	c.inc("CreateConstraint")
	return c.svc.CreateConstraint(input)
}

// CreateConstraintWithContext is a passthrough to the underlying CreateConstraintWithContext method.
// It will increment the count of requests made to CreateConstraint.
func (c *ServiceCatalog) CreateConstraintWithContext(ctx aws.Context, input *servicecatalog.CreateConstraintInput, opts ...request.Option) (*servicecatalog.CreateConstraintOutput, error) {
	c.inc("CreateConstraint")
	return c.svc.CreateConstraintWithContext(ctx, input, opts...)
}

// CreatePortfolioRequest is a passthrough to the underlying CreatePortfolioRequest.
// It will increment the count of requests made to CreatePortfolio.
func (c *ServiceCatalog) CreatePortfolioRequest(input *servicecatalog.CreatePortfolioInput) (req *request.Request, output *servicecatalog.CreatePortfolioOutput) {
	c.inc("CreatePortfolio")
	return c.svc.CreatePortfolioRequest(input)
}

// CreatePortfolio is a passthrough to the underlying CreatePortfolio method.
// It will increment the count of requests made to CreatePortfolio.
func (c *ServiceCatalog) CreatePortfolio(input *servicecatalog.CreatePortfolioInput) (*servicecatalog.CreatePortfolioOutput, error) {
	c.inc("CreatePortfolio")
	return c.svc.CreatePortfolio(input)
}

// CreatePortfolioWithContext is a passthrough to the underlying CreatePortfolioWithContext method.
// It will increment the count of requests made to CreatePortfolio.
func (c *ServiceCatalog) CreatePortfolioWithContext(ctx aws.Context, input *servicecatalog.CreatePortfolioInput, opts ...request.Option) (*servicecatalog.CreatePortfolioOutput, error) {
	c.inc("CreatePortfolio")
	return c.svc.CreatePortfolioWithContext(ctx, input, opts...)
}

// CreatePortfolioShareRequest is a passthrough to the underlying CreatePortfolioShareRequest.
// It will increment the count of requests made to CreatePortfolioShare.
func (c *ServiceCatalog) CreatePortfolioShareRequest(input *servicecatalog.CreatePortfolioShareInput) (req *request.Request, output *servicecatalog.CreatePortfolioShareOutput) {
	c.inc("CreatePortfolioShare")
	return c.svc.CreatePortfolioShareRequest(input)
}

// CreatePortfolioShare is a passthrough to the underlying CreatePortfolioShare method.
// It will increment the count of requests made to CreatePortfolioShare.
func (c *ServiceCatalog) CreatePortfolioShare(input *servicecatalog.CreatePortfolioShareInput) (*servicecatalog.CreatePortfolioShareOutput, error) {
	c.inc("CreatePortfolioShare")
	return c.svc.CreatePortfolioShare(input)
}

// CreatePortfolioShareWithContext is a passthrough to the underlying CreatePortfolioShareWithContext method.
// It will increment the count of requests made to CreatePortfolioShare.
func (c *ServiceCatalog) CreatePortfolioShareWithContext(ctx aws.Context, input *servicecatalog.CreatePortfolioShareInput, opts ...request.Option) (*servicecatalog.CreatePortfolioShareOutput, error) {
	c.inc("CreatePortfolioShare")
	return c.svc.CreatePortfolioShareWithContext(ctx, input, opts...)
}

// CreateProductRequest is a passthrough to the underlying CreateProductRequest.
// It will increment the count of requests made to CreateProduct.
func (c *ServiceCatalog) CreateProductRequest(input *servicecatalog.CreateProductInput) (req *request.Request, output *servicecatalog.CreateProductOutput) {
	c.inc("CreateProduct")
	return c.svc.CreateProductRequest(input)
}

// CreateProduct is a passthrough to the underlying CreateProduct method.
// It will increment the count of requests made to CreateProduct.
func (c *ServiceCatalog) CreateProduct(input *servicecatalog.CreateProductInput) (*servicecatalog.CreateProductOutput, error) {
	c.inc("CreateProduct")
	return c.svc.CreateProduct(input)
}

// CreateProductWithContext is a passthrough to the underlying CreateProductWithContext method.
// It will increment the count of requests made to CreateProduct.
func (c *ServiceCatalog) CreateProductWithContext(ctx aws.Context, input *servicecatalog.CreateProductInput, opts ...request.Option) (*servicecatalog.CreateProductOutput, error) {
	c.inc("CreateProduct")
	return c.svc.CreateProductWithContext(ctx, input, opts...)
}

// CreateProvisioningArtifactRequest is a passthrough to the underlying CreateProvisioningArtifactRequest.
// It will increment the count of requests made to CreateProvisioningArtifact.
func (c *ServiceCatalog) CreateProvisioningArtifactRequest(input *servicecatalog.CreateProvisioningArtifactInput) (req *request.Request, output *servicecatalog.CreateProvisioningArtifactOutput) {
	c.inc("CreateProvisioningArtifact")
	return c.svc.CreateProvisioningArtifactRequest(input)
}

// CreateProvisioningArtifact is a passthrough to the underlying CreateProvisioningArtifact method.
// It will increment the count of requests made to CreateProvisioningArtifact.
func (c *ServiceCatalog) CreateProvisioningArtifact(input *servicecatalog.CreateProvisioningArtifactInput) (*servicecatalog.CreateProvisioningArtifactOutput, error) {
	c.inc("CreateProvisioningArtifact")
	return c.svc.CreateProvisioningArtifact(input)
}

// CreateProvisioningArtifactWithContext is a passthrough to the underlying CreateProvisioningArtifactWithContext method.
// It will increment the count of requests made to CreateProvisioningArtifact.
func (c *ServiceCatalog) CreateProvisioningArtifactWithContext(ctx aws.Context, input *servicecatalog.CreateProvisioningArtifactInput, opts ...request.Option) (*servicecatalog.CreateProvisioningArtifactOutput, error) {
	c.inc("CreateProvisioningArtifact")
	return c.svc.CreateProvisioningArtifactWithContext(ctx, input, opts...)
}

// CreateTagOptionRequest is a passthrough to the underlying CreateTagOptionRequest.
// It will increment the count of requests made to CreateTagOption.
func (c *ServiceCatalog) CreateTagOptionRequest(input *servicecatalog.CreateTagOptionInput) (req *request.Request, output *servicecatalog.CreateTagOptionOutput) {
	c.inc("CreateTagOption")
	return c.svc.CreateTagOptionRequest(input)
}

// CreateTagOption is a passthrough to the underlying CreateTagOption method.
// It will increment the count of requests made to CreateTagOption.
func (c *ServiceCatalog) CreateTagOption(input *servicecatalog.CreateTagOptionInput) (*servicecatalog.CreateTagOptionOutput, error) {
	c.inc("CreateTagOption")
	return c.svc.CreateTagOption(input)
}

// CreateTagOptionWithContext is a passthrough to the underlying CreateTagOptionWithContext method.
// It will increment the count of requests made to CreateTagOption.
func (c *ServiceCatalog) CreateTagOptionWithContext(ctx aws.Context, input *servicecatalog.CreateTagOptionInput, opts ...request.Option) (*servicecatalog.CreateTagOptionOutput, error) {
	c.inc("CreateTagOption")
	return c.svc.CreateTagOptionWithContext(ctx, input, opts...)
}

// DeleteConstraintRequest is a passthrough to the underlying DeleteConstraintRequest.
// It will increment the count of requests made to DeleteConstraint.
func (c *ServiceCatalog) DeleteConstraintRequest(input *servicecatalog.DeleteConstraintInput) (req *request.Request, output *servicecatalog.DeleteConstraintOutput) {
	c.inc("DeleteConstraint")
	return c.svc.DeleteConstraintRequest(input)
}

// DeleteConstraint is a passthrough to the underlying DeleteConstraint method.
// It will increment the count of requests made to DeleteConstraint.
func (c *ServiceCatalog) DeleteConstraint(input *servicecatalog.DeleteConstraintInput) (*servicecatalog.DeleteConstraintOutput, error) {
	c.inc("DeleteConstraint")
	return c.svc.DeleteConstraint(input)
}

// DeleteConstraintWithContext is a passthrough to the underlying DeleteConstraintWithContext method.
// It will increment the count of requests made to DeleteConstraint.
func (c *ServiceCatalog) DeleteConstraintWithContext(ctx aws.Context, input *servicecatalog.DeleteConstraintInput, opts ...request.Option) (*servicecatalog.DeleteConstraintOutput, error) {
	c.inc("DeleteConstraint")
	return c.svc.DeleteConstraintWithContext(ctx, input, opts...)
}

// DeletePortfolioRequest is a passthrough to the underlying DeletePortfolioRequest.
// It will increment the count of requests made to DeletePortfolio.
func (c *ServiceCatalog) DeletePortfolioRequest(input *servicecatalog.DeletePortfolioInput) (req *request.Request, output *servicecatalog.DeletePortfolioOutput) {
	c.inc("DeletePortfolio")
	return c.svc.DeletePortfolioRequest(input)
}

// DeletePortfolio is a passthrough to the underlying DeletePortfolio method.
// It will increment the count of requests made to DeletePortfolio.
func (c *ServiceCatalog) DeletePortfolio(input *servicecatalog.DeletePortfolioInput) (*servicecatalog.DeletePortfolioOutput, error) {
	c.inc("DeletePortfolio")
	return c.svc.DeletePortfolio(input)
}

// DeletePortfolioWithContext is a passthrough to the underlying DeletePortfolioWithContext method.
// It will increment the count of requests made to DeletePortfolio.
func (c *ServiceCatalog) DeletePortfolioWithContext(ctx aws.Context, input *servicecatalog.DeletePortfolioInput, opts ...request.Option) (*servicecatalog.DeletePortfolioOutput, error) {
	c.inc("DeletePortfolio")
	return c.svc.DeletePortfolioWithContext(ctx, input, opts...)
}

// DeletePortfolioShareRequest is a passthrough to the underlying DeletePortfolioShareRequest.
// It will increment the count of requests made to DeletePortfolioShare.
func (c *ServiceCatalog) DeletePortfolioShareRequest(input *servicecatalog.DeletePortfolioShareInput) (req *request.Request, output *servicecatalog.DeletePortfolioShareOutput) {
	c.inc("DeletePortfolioShare")
	return c.svc.DeletePortfolioShareRequest(input)
}

// DeletePortfolioShare is a passthrough to the underlying DeletePortfolioShare method.
// It will increment the count of requests made to DeletePortfolioShare.
func (c *ServiceCatalog) DeletePortfolioShare(input *servicecatalog.DeletePortfolioShareInput) (*servicecatalog.DeletePortfolioShareOutput, error) {
	c.inc("DeletePortfolioShare")
	return c.svc.DeletePortfolioShare(input)
}

// DeletePortfolioShareWithContext is a passthrough to the underlying DeletePortfolioShareWithContext method.
// It will increment the count of requests made to DeletePortfolioShare.
func (c *ServiceCatalog) DeletePortfolioShareWithContext(ctx aws.Context, input *servicecatalog.DeletePortfolioShareInput, opts ...request.Option) (*servicecatalog.DeletePortfolioShareOutput, error) {
	c.inc("DeletePortfolioShare")
	return c.svc.DeletePortfolioShareWithContext(ctx, input, opts...)
}

// DeleteProductRequest is a passthrough to the underlying DeleteProductRequest.
// It will increment the count of requests made to DeleteProduct.
func (c *ServiceCatalog) DeleteProductRequest(input *servicecatalog.DeleteProductInput) (req *request.Request, output *servicecatalog.DeleteProductOutput) {
	c.inc("DeleteProduct")
	return c.svc.DeleteProductRequest(input)
}

// DeleteProduct is a passthrough to the underlying DeleteProduct method.
// It will increment the count of requests made to DeleteProduct.
func (c *ServiceCatalog) DeleteProduct(input *servicecatalog.DeleteProductInput) (*servicecatalog.DeleteProductOutput, error) {
	c.inc("DeleteProduct")
	return c.svc.DeleteProduct(input)
}

// DeleteProductWithContext is a passthrough to the underlying DeleteProductWithContext method.
// It will increment the count of requests made to DeleteProduct.
func (c *ServiceCatalog) DeleteProductWithContext(ctx aws.Context, input *servicecatalog.DeleteProductInput, opts ...request.Option) (*servicecatalog.DeleteProductOutput, error) {
	c.inc("DeleteProduct")
	return c.svc.DeleteProductWithContext(ctx, input, opts...)
}

// DeleteProvisioningArtifactRequest is a passthrough to the underlying DeleteProvisioningArtifactRequest.
// It will increment the count of requests made to DeleteProvisioningArtifact.
func (c *ServiceCatalog) DeleteProvisioningArtifactRequest(input *servicecatalog.DeleteProvisioningArtifactInput) (req *request.Request, output *servicecatalog.DeleteProvisioningArtifactOutput) {
	c.inc("DeleteProvisioningArtifact")
	return c.svc.DeleteProvisioningArtifactRequest(input)
}

// DeleteProvisioningArtifact is a passthrough to the underlying DeleteProvisioningArtifact method.
// It will increment the count of requests made to DeleteProvisioningArtifact.
func (c *ServiceCatalog) DeleteProvisioningArtifact(input *servicecatalog.DeleteProvisioningArtifactInput) (*servicecatalog.DeleteProvisioningArtifactOutput, error) {
	c.inc("DeleteProvisioningArtifact")
	return c.svc.DeleteProvisioningArtifact(input)
}

// DeleteProvisioningArtifactWithContext is a passthrough to the underlying DeleteProvisioningArtifactWithContext method.
// It will increment the count of requests made to DeleteProvisioningArtifact.
func (c *ServiceCatalog) DeleteProvisioningArtifactWithContext(ctx aws.Context, input *servicecatalog.DeleteProvisioningArtifactInput, opts ...request.Option) (*servicecatalog.DeleteProvisioningArtifactOutput, error) {
	c.inc("DeleteProvisioningArtifact")
	return c.svc.DeleteProvisioningArtifactWithContext(ctx, input, opts...)
}

// DescribeConstraintRequest is a passthrough to the underlying DescribeConstraintRequest.
// It will increment the count of requests made to DescribeConstraint.
func (c *ServiceCatalog) DescribeConstraintRequest(input *servicecatalog.DescribeConstraintInput) (req *request.Request, output *servicecatalog.DescribeConstraintOutput) {
	c.inc("DescribeConstraint")
	return c.svc.DescribeConstraintRequest(input)
}

// DescribeConstraint is a passthrough to the underlying DescribeConstraint method.
// It will increment the count of requests made to DescribeConstraint.
func (c *ServiceCatalog) DescribeConstraint(input *servicecatalog.DescribeConstraintInput) (*servicecatalog.DescribeConstraintOutput, error) {
	c.inc("DescribeConstraint")
	return c.svc.DescribeConstraint(input)
}

// DescribeConstraintWithContext is a passthrough to the underlying DescribeConstraintWithContext method.
// It will increment the count of requests made to DescribeConstraint.
func (c *ServiceCatalog) DescribeConstraintWithContext(ctx aws.Context, input *servicecatalog.DescribeConstraintInput, opts ...request.Option) (*servicecatalog.DescribeConstraintOutput, error) {
	c.inc("DescribeConstraint")
	return c.svc.DescribeConstraintWithContext(ctx, input, opts...)
}

// DescribeCopyProductStatusRequest is a passthrough to the underlying DescribeCopyProductStatusRequest.
// It will increment the count of requests made to DescribeCopyProductStatus.
func (c *ServiceCatalog) DescribeCopyProductStatusRequest(input *servicecatalog.DescribeCopyProductStatusInput) (req *request.Request, output *servicecatalog.DescribeCopyProductStatusOutput) {
	c.inc("DescribeCopyProductStatus")
	return c.svc.DescribeCopyProductStatusRequest(input)
}

// DescribeCopyProductStatus is a passthrough to the underlying DescribeCopyProductStatus method.
// It will increment the count of requests made to DescribeCopyProductStatus.
func (c *ServiceCatalog) DescribeCopyProductStatus(input *servicecatalog.DescribeCopyProductStatusInput) (*servicecatalog.DescribeCopyProductStatusOutput, error) {
	c.inc("DescribeCopyProductStatus")
	return c.svc.DescribeCopyProductStatus(input)
}

// DescribeCopyProductStatusWithContext is a passthrough to the underlying DescribeCopyProductStatusWithContext method.
// It will increment the count of requests made to DescribeCopyProductStatus.
func (c *ServiceCatalog) DescribeCopyProductStatusWithContext(ctx aws.Context, input *servicecatalog.DescribeCopyProductStatusInput, opts ...request.Option) (*servicecatalog.DescribeCopyProductStatusOutput, error) {
	c.inc("DescribeCopyProductStatus")
	return c.svc.DescribeCopyProductStatusWithContext(ctx, input, opts...)
}

// DescribePortfolioRequest is a passthrough to the underlying DescribePortfolioRequest.
// It will increment the count of requests made to DescribePortfolio.
func (c *ServiceCatalog) DescribePortfolioRequest(input *servicecatalog.DescribePortfolioInput) (req *request.Request, output *servicecatalog.DescribePortfolioOutput) {
	c.inc("DescribePortfolio")
	return c.svc.DescribePortfolioRequest(input)
}

// DescribePortfolio is a passthrough to the underlying DescribePortfolio method.
// It will increment the count of requests made to DescribePortfolio.
func (c *ServiceCatalog) DescribePortfolio(input *servicecatalog.DescribePortfolioInput) (*servicecatalog.DescribePortfolioOutput, error) {
	c.inc("DescribePortfolio")
	return c.svc.DescribePortfolio(input)
}

// DescribePortfolioWithContext is a passthrough to the underlying DescribePortfolioWithContext method.
// It will increment the count of requests made to DescribePortfolio.
func (c *ServiceCatalog) DescribePortfolioWithContext(ctx aws.Context, input *servicecatalog.DescribePortfolioInput, opts ...request.Option) (*servicecatalog.DescribePortfolioOutput, error) {
	c.inc("DescribePortfolio")
	return c.svc.DescribePortfolioWithContext(ctx, input, opts...)
}

// DescribeProductRequest is a passthrough to the underlying DescribeProductRequest.
// It will increment the count of requests made to DescribeProduct.
func (c *ServiceCatalog) DescribeProductRequest(input *servicecatalog.DescribeProductInput) (req *request.Request, output *servicecatalog.DescribeProductOutput) {
	c.inc("DescribeProduct")
	return c.svc.DescribeProductRequest(input)
}

// DescribeProduct is a passthrough to the underlying DescribeProduct method.
// It will increment the count of requests made to DescribeProduct.
func (c *ServiceCatalog) DescribeProduct(input *servicecatalog.DescribeProductInput) (*servicecatalog.DescribeProductOutput, error) {
	c.inc("DescribeProduct")
	return c.svc.DescribeProduct(input)
}

// DescribeProductWithContext is a passthrough to the underlying DescribeProductWithContext method.
// It will increment the count of requests made to DescribeProduct.
func (c *ServiceCatalog) DescribeProductWithContext(ctx aws.Context, input *servicecatalog.DescribeProductInput, opts ...request.Option) (*servicecatalog.DescribeProductOutput, error) {
	c.inc("DescribeProduct")
	return c.svc.DescribeProductWithContext(ctx, input, opts...)
}

// DescribeProductAsAdminRequest is a passthrough to the underlying DescribeProductAsAdminRequest.
// It will increment the count of requests made to DescribeProductAsAdmin.
func (c *ServiceCatalog) DescribeProductAsAdminRequest(input *servicecatalog.DescribeProductAsAdminInput) (req *request.Request, output *servicecatalog.DescribeProductAsAdminOutput) {
	c.inc("DescribeProductAsAdmin")
	return c.svc.DescribeProductAsAdminRequest(input)
}

// DescribeProductAsAdmin is a passthrough to the underlying DescribeProductAsAdmin method.
// It will increment the count of requests made to DescribeProductAsAdmin.
func (c *ServiceCatalog) DescribeProductAsAdmin(input *servicecatalog.DescribeProductAsAdminInput) (*servicecatalog.DescribeProductAsAdminOutput, error) {
	c.inc("DescribeProductAsAdmin")
	return c.svc.DescribeProductAsAdmin(input)
}

// DescribeProductAsAdminWithContext is a passthrough to the underlying DescribeProductAsAdminWithContext method.
// It will increment the count of requests made to DescribeProductAsAdmin.
func (c *ServiceCatalog) DescribeProductAsAdminWithContext(ctx aws.Context, input *servicecatalog.DescribeProductAsAdminInput, opts ...request.Option) (*servicecatalog.DescribeProductAsAdminOutput, error) {
	c.inc("DescribeProductAsAdmin")
	return c.svc.DescribeProductAsAdminWithContext(ctx, input, opts...)
}

// DescribeProductViewRequest is a passthrough to the underlying DescribeProductViewRequest.
// It will increment the count of requests made to DescribeProductView.
func (c *ServiceCatalog) DescribeProductViewRequest(input *servicecatalog.DescribeProductViewInput) (req *request.Request, output *servicecatalog.DescribeProductViewOutput) {
	c.inc("DescribeProductView")
	return c.svc.DescribeProductViewRequest(input)
}

// DescribeProductView is a passthrough to the underlying DescribeProductView method.
// It will increment the count of requests made to DescribeProductView.
func (c *ServiceCatalog) DescribeProductView(input *servicecatalog.DescribeProductViewInput) (*servicecatalog.DescribeProductViewOutput, error) {
	c.inc("DescribeProductView")
	return c.svc.DescribeProductView(input)
}

// DescribeProductViewWithContext is a passthrough to the underlying DescribeProductViewWithContext method.
// It will increment the count of requests made to DescribeProductView.
func (c *ServiceCatalog) DescribeProductViewWithContext(ctx aws.Context, input *servicecatalog.DescribeProductViewInput, opts ...request.Option) (*servicecatalog.DescribeProductViewOutput, error) {
	c.inc("DescribeProductView")
	return c.svc.DescribeProductViewWithContext(ctx, input, opts...)
}

// DescribeProvisionedProductRequest is a passthrough to the underlying DescribeProvisionedProductRequest.
// It will increment the count of requests made to DescribeProvisionedProduct.
func (c *ServiceCatalog) DescribeProvisionedProductRequest(input *servicecatalog.DescribeProvisionedProductInput) (req *request.Request, output *servicecatalog.DescribeProvisionedProductOutput) {
	c.inc("DescribeProvisionedProduct")
	return c.svc.DescribeProvisionedProductRequest(input)
}

// DescribeProvisionedProduct is a passthrough to the underlying DescribeProvisionedProduct method.
// It will increment the count of requests made to DescribeProvisionedProduct.
func (c *ServiceCatalog) DescribeProvisionedProduct(input *servicecatalog.DescribeProvisionedProductInput) (*servicecatalog.DescribeProvisionedProductOutput, error) {
	c.inc("DescribeProvisionedProduct")
	return c.svc.DescribeProvisionedProduct(input)
}

// DescribeProvisionedProductWithContext is a passthrough to the underlying DescribeProvisionedProductWithContext method.
// It will increment the count of requests made to DescribeProvisionedProduct.
func (c *ServiceCatalog) DescribeProvisionedProductWithContext(ctx aws.Context, input *servicecatalog.DescribeProvisionedProductInput, opts ...request.Option) (*servicecatalog.DescribeProvisionedProductOutput, error) {
	c.inc("DescribeProvisionedProduct")
	return c.svc.DescribeProvisionedProductWithContext(ctx, input, opts...)
}

// DescribeProvisioningArtifactRequest is a passthrough to the underlying DescribeProvisioningArtifactRequest.
// It will increment the count of requests made to DescribeProvisioningArtifact.
func (c *ServiceCatalog) DescribeProvisioningArtifactRequest(input *servicecatalog.DescribeProvisioningArtifactInput) (req *request.Request, output *servicecatalog.DescribeProvisioningArtifactOutput) {
	c.inc("DescribeProvisioningArtifact")
	return c.svc.DescribeProvisioningArtifactRequest(input)
}

// DescribeProvisioningArtifact is a passthrough to the underlying DescribeProvisioningArtifact method.
// It will increment the count of requests made to DescribeProvisioningArtifact.
func (c *ServiceCatalog) DescribeProvisioningArtifact(input *servicecatalog.DescribeProvisioningArtifactInput) (*servicecatalog.DescribeProvisioningArtifactOutput, error) {
	c.inc("DescribeProvisioningArtifact")
	return c.svc.DescribeProvisioningArtifact(input)
}

// DescribeProvisioningArtifactWithContext is a passthrough to the underlying DescribeProvisioningArtifactWithContext method.
// It will increment the count of requests made to DescribeProvisioningArtifact.
func (c *ServiceCatalog) DescribeProvisioningArtifactWithContext(ctx aws.Context, input *servicecatalog.DescribeProvisioningArtifactInput, opts ...request.Option) (*servicecatalog.DescribeProvisioningArtifactOutput, error) {
	c.inc("DescribeProvisioningArtifact")
	return c.svc.DescribeProvisioningArtifactWithContext(ctx, input, opts...)
}

// DescribeProvisioningParametersRequest is a passthrough to the underlying DescribeProvisioningParametersRequest.
// It will increment the count of requests made to DescribeProvisioningParameters.
func (c *ServiceCatalog) DescribeProvisioningParametersRequest(input *servicecatalog.DescribeProvisioningParametersInput) (req *request.Request, output *servicecatalog.DescribeProvisioningParametersOutput) {
	c.inc("DescribeProvisioningParameters")
	return c.svc.DescribeProvisioningParametersRequest(input)
}

// DescribeProvisioningParameters is a passthrough to the underlying DescribeProvisioningParameters method.
// It will increment the count of requests made to DescribeProvisioningParameters.
func (c *ServiceCatalog) DescribeProvisioningParameters(input *servicecatalog.DescribeProvisioningParametersInput) (*servicecatalog.DescribeProvisioningParametersOutput, error) {
	c.inc("DescribeProvisioningParameters")
	return c.svc.DescribeProvisioningParameters(input)
}

// DescribeProvisioningParametersWithContext is a passthrough to the underlying DescribeProvisioningParametersWithContext method.
// It will increment the count of requests made to DescribeProvisioningParameters.
func (c *ServiceCatalog) DescribeProvisioningParametersWithContext(ctx aws.Context, input *servicecatalog.DescribeProvisioningParametersInput, opts ...request.Option) (*servicecatalog.DescribeProvisioningParametersOutput, error) {
	c.inc("DescribeProvisioningParameters")
	return c.svc.DescribeProvisioningParametersWithContext(ctx, input, opts...)
}

// DescribeRecordRequest is a passthrough to the underlying DescribeRecordRequest.
// It will increment the count of requests made to DescribeRecord.
func (c *ServiceCatalog) DescribeRecordRequest(input *servicecatalog.DescribeRecordInput) (req *request.Request, output *servicecatalog.DescribeRecordOutput) {
	c.inc("DescribeRecord")
	return c.svc.DescribeRecordRequest(input)
}

// DescribeRecord is a passthrough to the underlying DescribeRecord method.
// It will increment the count of requests made to DescribeRecord.
func (c *ServiceCatalog) DescribeRecord(input *servicecatalog.DescribeRecordInput) (*servicecatalog.DescribeRecordOutput, error) {
	c.inc("DescribeRecord")
	return c.svc.DescribeRecord(input)
}

// DescribeRecordWithContext is a passthrough to the underlying DescribeRecordWithContext method.
// It will increment the count of requests made to DescribeRecord.
func (c *ServiceCatalog) DescribeRecordWithContext(ctx aws.Context, input *servicecatalog.DescribeRecordInput, opts ...request.Option) (*servicecatalog.DescribeRecordOutput, error) {
	c.inc("DescribeRecord")
	return c.svc.DescribeRecordWithContext(ctx, input, opts...)
}

// DescribeTagOptionRequest is a passthrough to the underlying DescribeTagOptionRequest.
// It will increment the count of requests made to DescribeTagOption.
func (c *ServiceCatalog) DescribeTagOptionRequest(input *servicecatalog.DescribeTagOptionInput) (req *request.Request, output *servicecatalog.DescribeTagOptionOutput) {
	c.inc("DescribeTagOption")
	return c.svc.DescribeTagOptionRequest(input)
}

// DescribeTagOption is a passthrough to the underlying DescribeTagOption method.
// It will increment the count of requests made to DescribeTagOption.
func (c *ServiceCatalog) DescribeTagOption(input *servicecatalog.DescribeTagOptionInput) (*servicecatalog.DescribeTagOptionOutput, error) {
	c.inc("DescribeTagOption")
	return c.svc.DescribeTagOption(input)
}

// DescribeTagOptionWithContext is a passthrough to the underlying DescribeTagOptionWithContext method.
// It will increment the count of requests made to DescribeTagOption.
func (c *ServiceCatalog) DescribeTagOptionWithContext(ctx aws.Context, input *servicecatalog.DescribeTagOptionInput, opts ...request.Option) (*servicecatalog.DescribeTagOptionOutput, error) {
	c.inc("DescribeTagOption")
	return c.svc.DescribeTagOptionWithContext(ctx, input, opts...)
}

// DisassociatePrincipalFromPortfolioRequest is a passthrough to the underlying DisassociatePrincipalFromPortfolioRequest.
// It will increment the count of requests made to DisassociatePrincipalFromPortfolio.
func (c *ServiceCatalog) DisassociatePrincipalFromPortfolioRequest(input *servicecatalog.DisassociatePrincipalFromPortfolioInput) (req *request.Request, output *servicecatalog.DisassociatePrincipalFromPortfolioOutput) {
	c.inc("DisassociatePrincipalFromPortfolio")
	return c.svc.DisassociatePrincipalFromPortfolioRequest(input)
}

// DisassociatePrincipalFromPortfolio is a passthrough to the underlying DisassociatePrincipalFromPortfolio method.
// It will increment the count of requests made to DisassociatePrincipalFromPortfolio.
func (c *ServiceCatalog) DisassociatePrincipalFromPortfolio(input *servicecatalog.DisassociatePrincipalFromPortfolioInput) (*servicecatalog.DisassociatePrincipalFromPortfolioOutput, error) {
	c.inc("DisassociatePrincipalFromPortfolio")
	return c.svc.DisassociatePrincipalFromPortfolio(input)
}

// DisassociatePrincipalFromPortfolioWithContext is a passthrough to the underlying DisassociatePrincipalFromPortfolioWithContext method.
// It will increment the count of requests made to DisassociatePrincipalFromPortfolio.
func (c *ServiceCatalog) DisassociatePrincipalFromPortfolioWithContext(ctx aws.Context, input *servicecatalog.DisassociatePrincipalFromPortfolioInput, opts ...request.Option) (*servicecatalog.DisassociatePrincipalFromPortfolioOutput, error) {
	c.inc("DisassociatePrincipalFromPortfolio")
	return c.svc.DisassociatePrincipalFromPortfolioWithContext(ctx, input, opts...)
}

// DisassociateProductFromPortfolioRequest is a passthrough to the underlying DisassociateProductFromPortfolioRequest.
// It will increment the count of requests made to DisassociateProductFromPortfolio.
func (c *ServiceCatalog) DisassociateProductFromPortfolioRequest(input *servicecatalog.DisassociateProductFromPortfolioInput) (req *request.Request, output *servicecatalog.DisassociateProductFromPortfolioOutput) {
	c.inc("DisassociateProductFromPortfolio")
	return c.svc.DisassociateProductFromPortfolioRequest(input)
}

// DisassociateProductFromPortfolio is a passthrough to the underlying DisassociateProductFromPortfolio method.
// It will increment the count of requests made to DisassociateProductFromPortfolio.
func (c *ServiceCatalog) DisassociateProductFromPortfolio(input *servicecatalog.DisassociateProductFromPortfolioInput) (*servicecatalog.DisassociateProductFromPortfolioOutput, error) {
	c.inc("DisassociateProductFromPortfolio")
	return c.svc.DisassociateProductFromPortfolio(input)
}

// DisassociateProductFromPortfolioWithContext is a passthrough to the underlying DisassociateProductFromPortfolioWithContext method.
// It will increment the count of requests made to DisassociateProductFromPortfolio.
func (c *ServiceCatalog) DisassociateProductFromPortfolioWithContext(ctx aws.Context, input *servicecatalog.DisassociateProductFromPortfolioInput, opts ...request.Option) (*servicecatalog.DisassociateProductFromPortfolioOutput, error) {
	c.inc("DisassociateProductFromPortfolio")
	return c.svc.DisassociateProductFromPortfolioWithContext(ctx, input, opts...)
}

// DisassociateTagOptionFromResourceRequest is a passthrough to the underlying DisassociateTagOptionFromResourceRequest.
// It will increment the count of requests made to DisassociateTagOptionFromResource.
func (c *ServiceCatalog) DisassociateTagOptionFromResourceRequest(input *servicecatalog.DisassociateTagOptionFromResourceInput) (req *request.Request, output *servicecatalog.DisassociateTagOptionFromResourceOutput) {
	c.inc("DisassociateTagOptionFromResource")
	return c.svc.DisassociateTagOptionFromResourceRequest(input)
}

// DisassociateTagOptionFromResource is a passthrough to the underlying DisassociateTagOptionFromResource method.
// It will increment the count of requests made to DisassociateTagOptionFromResource.
func (c *ServiceCatalog) DisassociateTagOptionFromResource(input *servicecatalog.DisassociateTagOptionFromResourceInput) (*servicecatalog.DisassociateTagOptionFromResourceOutput, error) {
	c.inc("DisassociateTagOptionFromResource")
	return c.svc.DisassociateTagOptionFromResource(input)
}

// DisassociateTagOptionFromResourceWithContext is a passthrough to the underlying DisassociateTagOptionFromResourceWithContext method.
// It will increment the count of requests made to DisassociateTagOptionFromResource.
func (c *ServiceCatalog) DisassociateTagOptionFromResourceWithContext(ctx aws.Context, input *servicecatalog.DisassociateTagOptionFromResourceInput, opts ...request.Option) (*servicecatalog.DisassociateTagOptionFromResourceOutput, error) {
	c.inc("DisassociateTagOptionFromResource")
	return c.svc.DisassociateTagOptionFromResourceWithContext(ctx, input, opts...)
}

// ListAcceptedPortfolioSharesRequest is a passthrough to the underlying ListAcceptedPortfolioSharesRequest.
// It will increment the count of requests made to ListAcceptedPortfolioShares.
func (c *ServiceCatalog) ListAcceptedPortfolioSharesRequest(input *servicecatalog.ListAcceptedPortfolioSharesInput) (req *request.Request, output *servicecatalog.ListAcceptedPortfolioSharesOutput) {
	c.inc("ListAcceptedPortfolioShares")
	return c.svc.ListAcceptedPortfolioSharesRequest(input)
}

// ListAcceptedPortfolioShares is a passthrough to the underlying ListAcceptedPortfolioShares method.
// It will increment the count of requests made to ListAcceptedPortfolioShares.
func (c *ServiceCatalog) ListAcceptedPortfolioShares(input *servicecatalog.ListAcceptedPortfolioSharesInput) (*servicecatalog.ListAcceptedPortfolioSharesOutput, error) {
	c.inc("ListAcceptedPortfolioShares")
	return c.svc.ListAcceptedPortfolioShares(input)
}

// ListAcceptedPortfolioSharesWithContext is a passthrough to the underlying ListAcceptedPortfolioSharesWithContext method.
// It will increment the count of requests made to ListAcceptedPortfolioShares.
func (c *ServiceCatalog) ListAcceptedPortfolioSharesWithContext(ctx aws.Context, input *servicecatalog.ListAcceptedPortfolioSharesInput, opts ...request.Option) (*servicecatalog.ListAcceptedPortfolioSharesOutput, error) {
	c.inc("ListAcceptedPortfolioShares")
	return c.svc.ListAcceptedPortfolioSharesWithContext(ctx, input, opts...)
}

// ListAcceptedPortfolioSharesPages is a passthrough to the underlying ListAcceptedPortfolioSharesPages method.
// It will increment the count of requests made to ListAcceptedPortfolioShares on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListAcceptedPortfolioSharesPagesWithContext to avoid this.
func (c *ServiceCatalog) ListAcceptedPortfolioSharesPages(input *servicecatalog.ListAcceptedPortfolioSharesInput, fn func(*servicecatalog.ListAcceptedPortfolioSharesOutput, bool) bool) error {
	wrappedFn := func(page *servicecatalog.ListAcceptedPortfolioSharesOutput, lastPage bool) bool {
		c.inc("ListAcceptedPortfolioShares")
		return fn(page, lastPage)
	}
	return c.svc.ListAcceptedPortfolioSharesPages(input, wrappedFn)
}

// ListAcceptedPortfolioSharesPagesWithContext is a passthrough to the underlying ListAcceptedPortfolioSharesPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListAcceptedPortfolioShares when applied to the request.
func (c *ServiceCatalog) ListAcceptedPortfolioSharesPagesWithContext(ctx aws.Context, input *servicecatalog.ListAcceptedPortfolioSharesInput, fn func(*servicecatalog.ListAcceptedPortfolioSharesOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListAcceptedPortfolioShares"))
	return c.svc.ListAcceptedPortfolioSharesPagesWithContext(ctx, input, fn, opts...)
}

// ListConstraintsForPortfolioRequest is a passthrough to the underlying ListConstraintsForPortfolioRequest.
// It will increment the count of requests made to ListConstraintsForPortfolio.
func (c *ServiceCatalog) ListConstraintsForPortfolioRequest(input *servicecatalog.ListConstraintsForPortfolioInput) (req *request.Request, output *servicecatalog.ListConstraintsForPortfolioOutput) {
	c.inc("ListConstraintsForPortfolio")
	return c.svc.ListConstraintsForPortfolioRequest(input)
}

// ListConstraintsForPortfolio is a passthrough to the underlying ListConstraintsForPortfolio method.
// It will increment the count of requests made to ListConstraintsForPortfolio.
func (c *ServiceCatalog) ListConstraintsForPortfolio(input *servicecatalog.ListConstraintsForPortfolioInput) (*servicecatalog.ListConstraintsForPortfolioOutput, error) {
	c.inc("ListConstraintsForPortfolio")
	return c.svc.ListConstraintsForPortfolio(input)
}

// ListConstraintsForPortfolioWithContext is a passthrough to the underlying ListConstraintsForPortfolioWithContext method.
// It will increment the count of requests made to ListConstraintsForPortfolio.
func (c *ServiceCatalog) ListConstraintsForPortfolioWithContext(ctx aws.Context, input *servicecatalog.ListConstraintsForPortfolioInput, opts ...request.Option) (*servicecatalog.ListConstraintsForPortfolioOutput, error) {
	c.inc("ListConstraintsForPortfolio")
	return c.svc.ListConstraintsForPortfolioWithContext(ctx, input, opts...)
}

// ListConstraintsForPortfolioPages is a passthrough to the underlying ListConstraintsForPortfolioPages method.
// It will increment the count of requests made to ListConstraintsForPortfolio on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListConstraintsForPortfolioPagesWithContext to avoid this.
func (c *ServiceCatalog) ListConstraintsForPortfolioPages(input *servicecatalog.ListConstraintsForPortfolioInput, fn func(*servicecatalog.ListConstraintsForPortfolioOutput, bool) bool) error {
	wrappedFn := func(page *servicecatalog.ListConstraintsForPortfolioOutput, lastPage bool) bool {
		c.inc("ListConstraintsForPortfolio")
		return fn(page, lastPage)
	}
	return c.svc.ListConstraintsForPortfolioPages(input, wrappedFn)
}

// ListConstraintsForPortfolioPagesWithContext is a passthrough to the underlying ListConstraintsForPortfolioPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListConstraintsForPortfolio when applied to the request.
func (c *ServiceCatalog) ListConstraintsForPortfolioPagesWithContext(ctx aws.Context, input *servicecatalog.ListConstraintsForPortfolioInput, fn func(*servicecatalog.ListConstraintsForPortfolioOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListConstraintsForPortfolio"))
	return c.svc.ListConstraintsForPortfolioPagesWithContext(ctx, input, fn, opts...)
}

// ListLaunchPathsRequest is a passthrough to the underlying ListLaunchPathsRequest.
// It will increment the count of requests made to ListLaunchPaths.
func (c *ServiceCatalog) ListLaunchPathsRequest(input *servicecatalog.ListLaunchPathsInput) (req *request.Request, output *servicecatalog.ListLaunchPathsOutput) {
	c.inc("ListLaunchPaths")
	return c.svc.ListLaunchPathsRequest(input)
}

// ListLaunchPaths is a passthrough to the underlying ListLaunchPaths method.
// It will increment the count of requests made to ListLaunchPaths.
func (c *ServiceCatalog) ListLaunchPaths(input *servicecatalog.ListLaunchPathsInput) (*servicecatalog.ListLaunchPathsOutput, error) {
	c.inc("ListLaunchPaths")
	return c.svc.ListLaunchPaths(input)
}

// ListLaunchPathsWithContext is a passthrough to the underlying ListLaunchPathsWithContext method.
// It will increment the count of requests made to ListLaunchPaths.
func (c *ServiceCatalog) ListLaunchPathsWithContext(ctx aws.Context, input *servicecatalog.ListLaunchPathsInput, opts ...request.Option) (*servicecatalog.ListLaunchPathsOutput, error) {
	c.inc("ListLaunchPaths")
	return c.svc.ListLaunchPathsWithContext(ctx, input, opts...)
}

// ListLaunchPathsPages is a passthrough to the underlying ListLaunchPathsPages method.
// It will increment the count of requests made to ListLaunchPaths on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListLaunchPathsPagesWithContext to avoid this.
func (c *ServiceCatalog) ListLaunchPathsPages(input *servicecatalog.ListLaunchPathsInput, fn func(*servicecatalog.ListLaunchPathsOutput, bool) bool) error {
	wrappedFn := func(page *servicecatalog.ListLaunchPathsOutput, lastPage bool) bool {
		c.inc("ListLaunchPaths")
		return fn(page, lastPage)
	}
	return c.svc.ListLaunchPathsPages(input, wrappedFn)
}

// ListLaunchPathsPagesWithContext is a passthrough to the underlying ListLaunchPathsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListLaunchPaths when applied to the request.
func (c *ServiceCatalog) ListLaunchPathsPagesWithContext(ctx aws.Context, input *servicecatalog.ListLaunchPathsInput, fn func(*servicecatalog.ListLaunchPathsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListLaunchPaths"))
	return c.svc.ListLaunchPathsPagesWithContext(ctx, input, fn, opts...)
}

// ListPortfolioAccessRequest is a passthrough to the underlying ListPortfolioAccessRequest.
// It will increment the count of requests made to ListPortfolioAccess.
func (c *ServiceCatalog) ListPortfolioAccessRequest(input *servicecatalog.ListPortfolioAccessInput) (req *request.Request, output *servicecatalog.ListPortfolioAccessOutput) {
	c.inc("ListPortfolioAccess")
	return c.svc.ListPortfolioAccessRequest(input)
}

// ListPortfolioAccess is a passthrough to the underlying ListPortfolioAccess method.
// It will increment the count of requests made to ListPortfolioAccess.
func (c *ServiceCatalog) ListPortfolioAccess(input *servicecatalog.ListPortfolioAccessInput) (*servicecatalog.ListPortfolioAccessOutput, error) {
	c.inc("ListPortfolioAccess")
	return c.svc.ListPortfolioAccess(input)
}

// ListPortfolioAccessWithContext is a passthrough to the underlying ListPortfolioAccessWithContext method.
// It will increment the count of requests made to ListPortfolioAccess.
func (c *ServiceCatalog) ListPortfolioAccessWithContext(ctx aws.Context, input *servicecatalog.ListPortfolioAccessInput, opts ...request.Option) (*servicecatalog.ListPortfolioAccessOutput, error) {
	c.inc("ListPortfolioAccess")
	return c.svc.ListPortfolioAccessWithContext(ctx, input, opts...)
}

// ListPortfoliosRequest is a passthrough to the underlying ListPortfoliosRequest.
// It will increment the count of requests made to ListPortfolios.
func (c *ServiceCatalog) ListPortfoliosRequest(input *servicecatalog.ListPortfoliosInput) (req *request.Request, output *servicecatalog.ListPortfoliosOutput) {
	c.inc("ListPortfolios")
	return c.svc.ListPortfoliosRequest(input)
}

// ListPortfolios is a passthrough to the underlying ListPortfolios method.
// It will increment the count of requests made to ListPortfolios.
func (c *ServiceCatalog) ListPortfolios(input *servicecatalog.ListPortfoliosInput) (*servicecatalog.ListPortfoliosOutput, error) {
	c.inc("ListPortfolios")
	return c.svc.ListPortfolios(input)
}

// ListPortfoliosWithContext is a passthrough to the underlying ListPortfoliosWithContext method.
// It will increment the count of requests made to ListPortfolios.
func (c *ServiceCatalog) ListPortfoliosWithContext(ctx aws.Context, input *servicecatalog.ListPortfoliosInput, opts ...request.Option) (*servicecatalog.ListPortfoliosOutput, error) {
	c.inc("ListPortfolios")
	return c.svc.ListPortfoliosWithContext(ctx, input, opts...)
}

// ListPortfoliosPages is a passthrough to the underlying ListPortfoliosPages method.
// It will increment the count of requests made to ListPortfolios on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListPortfoliosPagesWithContext to avoid this.
func (c *ServiceCatalog) ListPortfoliosPages(input *servicecatalog.ListPortfoliosInput, fn func(*servicecatalog.ListPortfoliosOutput, bool) bool) error {
	wrappedFn := func(page *servicecatalog.ListPortfoliosOutput, lastPage bool) bool {
		c.inc("ListPortfolios")
		return fn(page, lastPage)
	}
	return c.svc.ListPortfoliosPages(input, wrappedFn)
}

// ListPortfoliosPagesWithContext is a passthrough to the underlying ListPortfoliosPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListPortfolios when applied to the request.
func (c *ServiceCatalog) ListPortfoliosPagesWithContext(ctx aws.Context, input *servicecatalog.ListPortfoliosInput, fn func(*servicecatalog.ListPortfoliosOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListPortfolios"))
	return c.svc.ListPortfoliosPagesWithContext(ctx, input, fn, opts...)
}

// ListPortfoliosForProductRequest is a passthrough to the underlying ListPortfoliosForProductRequest.
// It will increment the count of requests made to ListPortfoliosForProduct.
func (c *ServiceCatalog) ListPortfoliosForProductRequest(input *servicecatalog.ListPortfoliosForProductInput) (req *request.Request, output *servicecatalog.ListPortfoliosForProductOutput) {
	c.inc("ListPortfoliosForProduct")
	return c.svc.ListPortfoliosForProductRequest(input)
}

// ListPortfoliosForProduct is a passthrough to the underlying ListPortfoliosForProduct method.
// It will increment the count of requests made to ListPortfoliosForProduct.
func (c *ServiceCatalog) ListPortfoliosForProduct(input *servicecatalog.ListPortfoliosForProductInput) (*servicecatalog.ListPortfoliosForProductOutput, error) {
	c.inc("ListPortfoliosForProduct")
	return c.svc.ListPortfoliosForProduct(input)
}

// ListPortfoliosForProductWithContext is a passthrough to the underlying ListPortfoliosForProductWithContext method.
// It will increment the count of requests made to ListPortfoliosForProduct.
func (c *ServiceCatalog) ListPortfoliosForProductWithContext(ctx aws.Context, input *servicecatalog.ListPortfoliosForProductInput, opts ...request.Option) (*servicecatalog.ListPortfoliosForProductOutput, error) {
	c.inc("ListPortfoliosForProduct")
	return c.svc.ListPortfoliosForProductWithContext(ctx, input, opts...)
}

// ListPortfoliosForProductPages is a passthrough to the underlying ListPortfoliosForProductPages method.
// It will increment the count of requests made to ListPortfoliosForProduct on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListPortfoliosForProductPagesWithContext to avoid this.
func (c *ServiceCatalog) ListPortfoliosForProductPages(input *servicecatalog.ListPortfoliosForProductInput, fn func(*servicecatalog.ListPortfoliosForProductOutput, bool) bool) error {
	wrappedFn := func(page *servicecatalog.ListPortfoliosForProductOutput, lastPage bool) bool {
		c.inc("ListPortfoliosForProduct")
		return fn(page, lastPage)
	}
	return c.svc.ListPortfoliosForProductPages(input, wrappedFn)
}

// ListPortfoliosForProductPagesWithContext is a passthrough to the underlying ListPortfoliosForProductPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListPortfoliosForProduct when applied to the request.
func (c *ServiceCatalog) ListPortfoliosForProductPagesWithContext(ctx aws.Context, input *servicecatalog.ListPortfoliosForProductInput, fn func(*servicecatalog.ListPortfoliosForProductOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListPortfoliosForProduct"))
	return c.svc.ListPortfoliosForProductPagesWithContext(ctx, input, fn, opts...)
}

// ListPrincipalsForPortfolioRequest is a passthrough to the underlying ListPrincipalsForPortfolioRequest.
// It will increment the count of requests made to ListPrincipalsForPortfolio.
func (c *ServiceCatalog) ListPrincipalsForPortfolioRequest(input *servicecatalog.ListPrincipalsForPortfolioInput) (req *request.Request, output *servicecatalog.ListPrincipalsForPortfolioOutput) {
	c.inc("ListPrincipalsForPortfolio")
	return c.svc.ListPrincipalsForPortfolioRequest(input)
}

// ListPrincipalsForPortfolio is a passthrough to the underlying ListPrincipalsForPortfolio method.
// It will increment the count of requests made to ListPrincipalsForPortfolio.
func (c *ServiceCatalog) ListPrincipalsForPortfolio(input *servicecatalog.ListPrincipalsForPortfolioInput) (*servicecatalog.ListPrincipalsForPortfolioOutput, error) {
	c.inc("ListPrincipalsForPortfolio")
	return c.svc.ListPrincipalsForPortfolio(input)
}

// ListPrincipalsForPortfolioWithContext is a passthrough to the underlying ListPrincipalsForPortfolioWithContext method.
// It will increment the count of requests made to ListPrincipalsForPortfolio.
func (c *ServiceCatalog) ListPrincipalsForPortfolioWithContext(ctx aws.Context, input *servicecatalog.ListPrincipalsForPortfolioInput, opts ...request.Option) (*servicecatalog.ListPrincipalsForPortfolioOutput, error) {
	c.inc("ListPrincipalsForPortfolio")
	return c.svc.ListPrincipalsForPortfolioWithContext(ctx, input, opts...)
}

// ListPrincipalsForPortfolioPages is a passthrough to the underlying ListPrincipalsForPortfolioPages method.
// It will increment the count of requests made to ListPrincipalsForPortfolio on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListPrincipalsForPortfolioPagesWithContext to avoid this.
func (c *ServiceCatalog) ListPrincipalsForPortfolioPages(input *servicecatalog.ListPrincipalsForPortfolioInput, fn func(*servicecatalog.ListPrincipalsForPortfolioOutput, bool) bool) error {
	wrappedFn := func(page *servicecatalog.ListPrincipalsForPortfolioOutput, lastPage bool) bool {
		c.inc("ListPrincipalsForPortfolio")
		return fn(page, lastPage)
	}
	return c.svc.ListPrincipalsForPortfolioPages(input, wrappedFn)
}

// ListPrincipalsForPortfolioPagesWithContext is a passthrough to the underlying ListPrincipalsForPortfolioPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListPrincipalsForPortfolio when applied to the request.
func (c *ServiceCatalog) ListPrincipalsForPortfolioPagesWithContext(ctx aws.Context, input *servicecatalog.ListPrincipalsForPortfolioInput, fn func(*servicecatalog.ListPrincipalsForPortfolioOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListPrincipalsForPortfolio"))
	return c.svc.ListPrincipalsForPortfolioPagesWithContext(ctx, input, fn, opts...)
}

// ListProvisioningArtifactsRequest is a passthrough to the underlying ListProvisioningArtifactsRequest.
// It will increment the count of requests made to ListProvisioningArtifacts.
func (c *ServiceCatalog) ListProvisioningArtifactsRequest(input *servicecatalog.ListProvisioningArtifactsInput) (req *request.Request, output *servicecatalog.ListProvisioningArtifactsOutput) {
	c.inc("ListProvisioningArtifacts")
	return c.svc.ListProvisioningArtifactsRequest(input)
}

// ListProvisioningArtifacts is a passthrough to the underlying ListProvisioningArtifacts method.
// It will increment the count of requests made to ListProvisioningArtifacts.
func (c *ServiceCatalog) ListProvisioningArtifacts(input *servicecatalog.ListProvisioningArtifactsInput) (*servicecatalog.ListProvisioningArtifactsOutput, error) {
	c.inc("ListProvisioningArtifacts")
	return c.svc.ListProvisioningArtifacts(input)
}

// ListProvisioningArtifactsWithContext is a passthrough to the underlying ListProvisioningArtifactsWithContext method.
// It will increment the count of requests made to ListProvisioningArtifacts.
func (c *ServiceCatalog) ListProvisioningArtifactsWithContext(ctx aws.Context, input *servicecatalog.ListProvisioningArtifactsInput, opts ...request.Option) (*servicecatalog.ListProvisioningArtifactsOutput, error) {
	c.inc("ListProvisioningArtifacts")
	return c.svc.ListProvisioningArtifactsWithContext(ctx, input, opts...)
}

// ListRecordHistoryRequest is a passthrough to the underlying ListRecordHistoryRequest.
// It will increment the count of requests made to ListRecordHistory.
func (c *ServiceCatalog) ListRecordHistoryRequest(input *servicecatalog.ListRecordHistoryInput) (req *request.Request, output *servicecatalog.ListRecordHistoryOutput) {
	c.inc("ListRecordHistory")
	return c.svc.ListRecordHistoryRequest(input)
}

// ListRecordHistory is a passthrough to the underlying ListRecordHistory method.
// It will increment the count of requests made to ListRecordHistory.
func (c *ServiceCatalog) ListRecordHistory(input *servicecatalog.ListRecordHistoryInput) (*servicecatalog.ListRecordHistoryOutput, error) {
	c.inc("ListRecordHistory")
	return c.svc.ListRecordHistory(input)
}

// ListRecordHistoryWithContext is a passthrough to the underlying ListRecordHistoryWithContext method.
// It will increment the count of requests made to ListRecordHistory.
func (c *ServiceCatalog) ListRecordHistoryWithContext(ctx aws.Context, input *servicecatalog.ListRecordHistoryInput, opts ...request.Option) (*servicecatalog.ListRecordHistoryOutput, error) {
	c.inc("ListRecordHistory")
	return c.svc.ListRecordHistoryWithContext(ctx, input, opts...)
}

// ListResourcesForTagOptionRequest is a passthrough to the underlying ListResourcesForTagOptionRequest.
// It will increment the count of requests made to ListResourcesForTagOption.
func (c *ServiceCatalog) ListResourcesForTagOptionRequest(input *servicecatalog.ListResourcesForTagOptionInput) (req *request.Request, output *servicecatalog.ListResourcesForTagOptionOutput) {
	c.inc("ListResourcesForTagOption")
	return c.svc.ListResourcesForTagOptionRequest(input)
}

// ListResourcesForTagOption is a passthrough to the underlying ListResourcesForTagOption method.
// It will increment the count of requests made to ListResourcesForTagOption.
func (c *ServiceCatalog) ListResourcesForTagOption(input *servicecatalog.ListResourcesForTagOptionInput) (*servicecatalog.ListResourcesForTagOptionOutput, error) {
	c.inc("ListResourcesForTagOption")
	return c.svc.ListResourcesForTagOption(input)
}

// ListResourcesForTagOptionWithContext is a passthrough to the underlying ListResourcesForTagOptionWithContext method.
// It will increment the count of requests made to ListResourcesForTagOption.
func (c *ServiceCatalog) ListResourcesForTagOptionWithContext(ctx aws.Context, input *servicecatalog.ListResourcesForTagOptionInput, opts ...request.Option) (*servicecatalog.ListResourcesForTagOptionOutput, error) {
	c.inc("ListResourcesForTagOption")
	return c.svc.ListResourcesForTagOptionWithContext(ctx, input, opts...)
}

// ListResourcesForTagOptionPages is a passthrough to the underlying ListResourcesForTagOptionPages method.
// It will increment the count of requests made to ListResourcesForTagOption on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListResourcesForTagOptionPagesWithContext to avoid this.
func (c *ServiceCatalog) ListResourcesForTagOptionPages(input *servicecatalog.ListResourcesForTagOptionInput, fn func(*servicecatalog.ListResourcesForTagOptionOutput, bool) bool) error {
	wrappedFn := func(page *servicecatalog.ListResourcesForTagOptionOutput, lastPage bool) bool {
		c.inc("ListResourcesForTagOption")
		return fn(page, lastPage)
	}
	return c.svc.ListResourcesForTagOptionPages(input, wrappedFn)
}

// ListResourcesForTagOptionPagesWithContext is a passthrough to the underlying ListResourcesForTagOptionPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListResourcesForTagOption when applied to the request.
func (c *ServiceCatalog) ListResourcesForTagOptionPagesWithContext(ctx aws.Context, input *servicecatalog.ListResourcesForTagOptionInput, fn func(*servicecatalog.ListResourcesForTagOptionOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListResourcesForTagOption"))
	return c.svc.ListResourcesForTagOptionPagesWithContext(ctx, input, fn, opts...)
}

// ListTagOptionsRequest is a passthrough to the underlying ListTagOptionsRequest.
// It will increment the count of requests made to ListTagOptions.
func (c *ServiceCatalog) ListTagOptionsRequest(input *servicecatalog.ListTagOptionsInput) (req *request.Request, output *servicecatalog.ListTagOptionsOutput) {
	c.inc("ListTagOptions")
	return c.svc.ListTagOptionsRequest(input)
}

// ListTagOptions is a passthrough to the underlying ListTagOptions method.
// It will increment the count of requests made to ListTagOptions.
func (c *ServiceCatalog) ListTagOptions(input *servicecatalog.ListTagOptionsInput) (*servicecatalog.ListTagOptionsOutput, error) {
	c.inc("ListTagOptions")
	return c.svc.ListTagOptions(input)
}

// ListTagOptionsWithContext is a passthrough to the underlying ListTagOptionsWithContext method.
// It will increment the count of requests made to ListTagOptions.
func (c *ServiceCatalog) ListTagOptionsWithContext(ctx aws.Context, input *servicecatalog.ListTagOptionsInput, opts ...request.Option) (*servicecatalog.ListTagOptionsOutput, error) {
	c.inc("ListTagOptions")
	return c.svc.ListTagOptionsWithContext(ctx, input, opts...)
}

// ListTagOptionsPages is a passthrough to the underlying ListTagOptionsPages method.
// It will increment the count of requests made to ListTagOptions on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListTagOptionsPagesWithContext to avoid this.
func (c *ServiceCatalog) ListTagOptionsPages(input *servicecatalog.ListTagOptionsInput, fn func(*servicecatalog.ListTagOptionsOutput, bool) bool) error {
	wrappedFn := func(page *servicecatalog.ListTagOptionsOutput, lastPage bool) bool {
		c.inc("ListTagOptions")
		return fn(page, lastPage)
	}
	return c.svc.ListTagOptionsPages(input, wrappedFn)
}

// ListTagOptionsPagesWithContext is a passthrough to the underlying ListTagOptionsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListTagOptions when applied to the request.
func (c *ServiceCatalog) ListTagOptionsPagesWithContext(ctx aws.Context, input *servicecatalog.ListTagOptionsInput, fn func(*servicecatalog.ListTagOptionsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListTagOptions"))
	return c.svc.ListTagOptionsPagesWithContext(ctx, input, fn, opts...)
}

// ProvisionProductRequest is a passthrough to the underlying ProvisionProductRequest.
// It will increment the count of requests made to ProvisionProduct.
func (c *ServiceCatalog) ProvisionProductRequest(input *servicecatalog.ProvisionProductInput) (req *request.Request, output *servicecatalog.ProvisionProductOutput) {
	c.inc("ProvisionProduct")
	return c.svc.ProvisionProductRequest(input)
}

// ProvisionProduct is a passthrough to the underlying ProvisionProduct method.
// It will increment the count of requests made to ProvisionProduct.
func (c *ServiceCatalog) ProvisionProduct(input *servicecatalog.ProvisionProductInput) (*servicecatalog.ProvisionProductOutput, error) {
	c.inc("ProvisionProduct")
	return c.svc.ProvisionProduct(input)
}

// ProvisionProductWithContext is a passthrough to the underlying ProvisionProductWithContext method.
// It will increment the count of requests made to ProvisionProduct.
func (c *ServiceCatalog) ProvisionProductWithContext(ctx aws.Context, input *servicecatalog.ProvisionProductInput, opts ...request.Option) (*servicecatalog.ProvisionProductOutput, error) {
	c.inc("ProvisionProduct")
	return c.svc.ProvisionProductWithContext(ctx, input, opts...)
}

// RejectPortfolioShareRequest is a passthrough to the underlying RejectPortfolioShareRequest.
// It will increment the count of requests made to RejectPortfolioShare.
func (c *ServiceCatalog) RejectPortfolioShareRequest(input *servicecatalog.RejectPortfolioShareInput) (req *request.Request, output *servicecatalog.RejectPortfolioShareOutput) {
	c.inc("RejectPortfolioShare")
	return c.svc.RejectPortfolioShareRequest(input)
}

// RejectPortfolioShare is a passthrough to the underlying RejectPortfolioShare method.
// It will increment the count of requests made to RejectPortfolioShare.
func (c *ServiceCatalog) RejectPortfolioShare(input *servicecatalog.RejectPortfolioShareInput) (*servicecatalog.RejectPortfolioShareOutput, error) {
	c.inc("RejectPortfolioShare")
	return c.svc.RejectPortfolioShare(input)
}

// RejectPortfolioShareWithContext is a passthrough to the underlying RejectPortfolioShareWithContext method.
// It will increment the count of requests made to RejectPortfolioShare.
func (c *ServiceCatalog) RejectPortfolioShareWithContext(ctx aws.Context, input *servicecatalog.RejectPortfolioShareInput, opts ...request.Option) (*servicecatalog.RejectPortfolioShareOutput, error) {
	c.inc("RejectPortfolioShare")
	return c.svc.RejectPortfolioShareWithContext(ctx, input, opts...)
}

// ScanProvisionedProductsRequest is a passthrough to the underlying ScanProvisionedProductsRequest.
// It will increment the count of requests made to ScanProvisionedProducts.
func (c *ServiceCatalog) ScanProvisionedProductsRequest(input *servicecatalog.ScanProvisionedProductsInput) (req *request.Request, output *servicecatalog.ScanProvisionedProductsOutput) {
	c.inc("ScanProvisionedProducts")
	return c.svc.ScanProvisionedProductsRequest(input)
}

// ScanProvisionedProducts is a passthrough to the underlying ScanProvisionedProducts method.
// It will increment the count of requests made to ScanProvisionedProducts.
func (c *ServiceCatalog) ScanProvisionedProducts(input *servicecatalog.ScanProvisionedProductsInput) (*servicecatalog.ScanProvisionedProductsOutput, error) {
	c.inc("ScanProvisionedProducts")
	return c.svc.ScanProvisionedProducts(input)
}

// ScanProvisionedProductsWithContext is a passthrough to the underlying ScanProvisionedProductsWithContext method.
// It will increment the count of requests made to ScanProvisionedProducts.
func (c *ServiceCatalog) ScanProvisionedProductsWithContext(ctx aws.Context, input *servicecatalog.ScanProvisionedProductsInput, opts ...request.Option) (*servicecatalog.ScanProvisionedProductsOutput, error) {
	c.inc("ScanProvisionedProducts")
	return c.svc.ScanProvisionedProductsWithContext(ctx, input, opts...)
}

// SearchProductsRequest is a passthrough to the underlying SearchProductsRequest.
// It will increment the count of requests made to SearchProducts.
func (c *ServiceCatalog) SearchProductsRequest(input *servicecatalog.SearchProductsInput) (req *request.Request, output *servicecatalog.SearchProductsOutput) {
	c.inc("SearchProducts")
	return c.svc.SearchProductsRequest(input)
}

// SearchProducts is a passthrough to the underlying SearchProducts method.
// It will increment the count of requests made to SearchProducts.
func (c *ServiceCatalog) SearchProducts(input *servicecatalog.SearchProductsInput) (*servicecatalog.SearchProductsOutput, error) {
	c.inc("SearchProducts")
	return c.svc.SearchProducts(input)
}

// SearchProductsWithContext is a passthrough to the underlying SearchProductsWithContext method.
// It will increment the count of requests made to SearchProducts.
func (c *ServiceCatalog) SearchProductsWithContext(ctx aws.Context, input *servicecatalog.SearchProductsInput, opts ...request.Option) (*servicecatalog.SearchProductsOutput, error) {
	c.inc("SearchProducts")
	return c.svc.SearchProductsWithContext(ctx, input, opts...)
}

// SearchProductsPages is a passthrough to the underlying SearchProductsPages method.
// It will increment the count of requests made to SearchProducts on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use SearchProductsPagesWithContext to avoid this.
func (c *ServiceCatalog) SearchProductsPages(input *servicecatalog.SearchProductsInput, fn func(*servicecatalog.SearchProductsOutput, bool) bool) error {
	wrappedFn := func(page *servicecatalog.SearchProductsOutput, lastPage bool) bool {
		c.inc("SearchProducts")
		return fn(page, lastPage)
	}
	return c.svc.SearchProductsPages(input, wrappedFn)
}

// SearchProductsPagesWithContext is a passthrough to the underlying SearchProductsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to SearchProducts when applied to the request.
func (c *ServiceCatalog) SearchProductsPagesWithContext(ctx aws.Context, input *servicecatalog.SearchProductsInput, fn func(*servicecatalog.SearchProductsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("SearchProducts"))
	return c.svc.SearchProductsPagesWithContext(ctx, input, fn, opts...)
}

// SearchProductsAsAdminRequest is a passthrough to the underlying SearchProductsAsAdminRequest.
// It will increment the count of requests made to SearchProductsAsAdmin.
func (c *ServiceCatalog) SearchProductsAsAdminRequest(input *servicecatalog.SearchProductsAsAdminInput) (req *request.Request, output *servicecatalog.SearchProductsAsAdminOutput) {
	c.inc("SearchProductsAsAdmin")
	return c.svc.SearchProductsAsAdminRequest(input)
}

// SearchProductsAsAdmin is a passthrough to the underlying SearchProductsAsAdmin method.
// It will increment the count of requests made to SearchProductsAsAdmin.
func (c *ServiceCatalog) SearchProductsAsAdmin(input *servicecatalog.SearchProductsAsAdminInput) (*servicecatalog.SearchProductsAsAdminOutput, error) {
	c.inc("SearchProductsAsAdmin")
	return c.svc.SearchProductsAsAdmin(input)
}

// SearchProductsAsAdminWithContext is a passthrough to the underlying SearchProductsAsAdminWithContext method.
// It will increment the count of requests made to SearchProductsAsAdmin.
func (c *ServiceCatalog) SearchProductsAsAdminWithContext(ctx aws.Context, input *servicecatalog.SearchProductsAsAdminInput, opts ...request.Option) (*servicecatalog.SearchProductsAsAdminOutput, error) {
	c.inc("SearchProductsAsAdmin")
	return c.svc.SearchProductsAsAdminWithContext(ctx, input, opts...)
}

// SearchProductsAsAdminPages is a passthrough to the underlying SearchProductsAsAdminPages method.
// It will increment the count of requests made to SearchProductsAsAdmin on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use SearchProductsAsAdminPagesWithContext to avoid this.
func (c *ServiceCatalog) SearchProductsAsAdminPages(input *servicecatalog.SearchProductsAsAdminInput, fn func(*servicecatalog.SearchProductsAsAdminOutput, bool) bool) error {
	wrappedFn := func(page *servicecatalog.SearchProductsAsAdminOutput, lastPage bool) bool {
		c.inc("SearchProductsAsAdmin")
		return fn(page, lastPage)
	}
	return c.svc.SearchProductsAsAdminPages(input, wrappedFn)
}

// SearchProductsAsAdminPagesWithContext is a passthrough to the underlying SearchProductsAsAdminPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to SearchProductsAsAdmin when applied to the request.
func (c *ServiceCatalog) SearchProductsAsAdminPagesWithContext(ctx aws.Context, input *servicecatalog.SearchProductsAsAdminInput, fn func(*servicecatalog.SearchProductsAsAdminOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("SearchProductsAsAdmin"))
	return c.svc.SearchProductsAsAdminPagesWithContext(ctx, input, fn, opts...)
}

// TerminateProvisionedProductRequest is a passthrough to the underlying TerminateProvisionedProductRequest.
// It will increment the count of requests made to TerminateProvisionedProduct.
func (c *ServiceCatalog) TerminateProvisionedProductRequest(input *servicecatalog.TerminateProvisionedProductInput) (req *request.Request, output *servicecatalog.TerminateProvisionedProductOutput) {
	c.inc("TerminateProvisionedProduct")
	return c.svc.TerminateProvisionedProductRequest(input)
}

// TerminateProvisionedProduct is a passthrough to the underlying TerminateProvisionedProduct method.
// It will increment the count of requests made to TerminateProvisionedProduct.
func (c *ServiceCatalog) TerminateProvisionedProduct(input *servicecatalog.TerminateProvisionedProductInput) (*servicecatalog.TerminateProvisionedProductOutput, error) {
	c.inc("TerminateProvisionedProduct")
	return c.svc.TerminateProvisionedProduct(input)
}

// TerminateProvisionedProductWithContext is a passthrough to the underlying TerminateProvisionedProductWithContext method.
// It will increment the count of requests made to TerminateProvisionedProduct.
func (c *ServiceCatalog) TerminateProvisionedProductWithContext(ctx aws.Context, input *servicecatalog.TerminateProvisionedProductInput, opts ...request.Option) (*servicecatalog.TerminateProvisionedProductOutput, error) {
	c.inc("TerminateProvisionedProduct")
	return c.svc.TerminateProvisionedProductWithContext(ctx, input, opts...)
}

// UpdateConstraintRequest is a passthrough to the underlying UpdateConstraintRequest.
// It will increment the count of requests made to UpdateConstraint.
func (c *ServiceCatalog) UpdateConstraintRequest(input *servicecatalog.UpdateConstraintInput) (req *request.Request, output *servicecatalog.UpdateConstraintOutput) {
	c.inc("UpdateConstraint")
	return c.svc.UpdateConstraintRequest(input)
}

// UpdateConstraint is a passthrough to the underlying UpdateConstraint method.
// It will increment the count of requests made to UpdateConstraint.
func (c *ServiceCatalog) UpdateConstraint(input *servicecatalog.UpdateConstraintInput) (*servicecatalog.UpdateConstraintOutput, error) {
	c.inc("UpdateConstraint")
	return c.svc.UpdateConstraint(input)
}

// UpdateConstraintWithContext is a passthrough to the underlying UpdateConstraintWithContext method.
// It will increment the count of requests made to UpdateConstraint.
func (c *ServiceCatalog) UpdateConstraintWithContext(ctx aws.Context, input *servicecatalog.UpdateConstraintInput, opts ...request.Option) (*servicecatalog.UpdateConstraintOutput, error) {
	c.inc("UpdateConstraint")
	return c.svc.UpdateConstraintWithContext(ctx, input, opts...)
}

// UpdatePortfolioRequest is a passthrough to the underlying UpdatePortfolioRequest.
// It will increment the count of requests made to UpdatePortfolio.
func (c *ServiceCatalog) UpdatePortfolioRequest(input *servicecatalog.UpdatePortfolioInput) (req *request.Request, output *servicecatalog.UpdatePortfolioOutput) {
	c.inc("UpdatePortfolio")
	return c.svc.UpdatePortfolioRequest(input)
}

// UpdatePortfolio is a passthrough to the underlying UpdatePortfolio method.
// It will increment the count of requests made to UpdatePortfolio.
func (c *ServiceCatalog) UpdatePortfolio(input *servicecatalog.UpdatePortfolioInput) (*servicecatalog.UpdatePortfolioOutput, error) {
	c.inc("UpdatePortfolio")
	return c.svc.UpdatePortfolio(input)
}

// UpdatePortfolioWithContext is a passthrough to the underlying UpdatePortfolioWithContext method.
// It will increment the count of requests made to UpdatePortfolio.
func (c *ServiceCatalog) UpdatePortfolioWithContext(ctx aws.Context, input *servicecatalog.UpdatePortfolioInput, opts ...request.Option) (*servicecatalog.UpdatePortfolioOutput, error) {
	c.inc("UpdatePortfolio")
	return c.svc.UpdatePortfolioWithContext(ctx, input, opts...)
}

// UpdateProductRequest is a passthrough to the underlying UpdateProductRequest.
// It will increment the count of requests made to UpdateProduct.
func (c *ServiceCatalog) UpdateProductRequest(input *servicecatalog.UpdateProductInput) (req *request.Request, output *servicecatalog.UpdateProductOutput) {
	c.inc("UpdateProduct")
	return c.svc.UpdateProductRequest(input)
}

// UpdateProduct is a passthrough to the underlying UpdateProduct method.
// It will increment the count of requests made to UpdateProduct.
func (c *ServiceCatalog) UpdateProduct(input *servicecatalog.UpdateProductInput) (*servicecatalog.UpdateProductOutput, error) {
	c.inc("UpdateProduct")
	return c.svc.UpdateProduct(input)
}

// UpdateProductWithContext is a passthrough to the underlying UpdateProductWithContext method.
// It will increment the count of requests made to UpdateProduct.
func (c *ServiceCatalog) UpdateProductWithContext(ctx aws.Context, input *servicecatalog.UpdateProductInput, opts ...request.Option) (*servicecatalog.UpdateProductOutput, error) {
	c.inc("UpdateProduct")
	return c.svc.UpdateProductWithContext(ctx, input, opts...)
}

// UpdateProvisionedProductRequest is a passthrough to the underlying UpdateProvisionedProductRequest.
// It will increment the count of requests made to UpdateProvisionedProduct.
func (c *ServiceCatalog) UpdateProvisionedProductRequest(input *servicecatalog.UpdateProvisionedProductInput) (req *request.Request, output *servicecatalog.UpdateProvisionedProductOutput) {
	c.inc("UpdateProvisionedProduct")
	return c.svc.UpdateProvisionedProductRequest(input)
}

// UpdateProvisionedProduct is a passthrough to the underlying UpdateProvisionedProduct method.
// It will increment the count of requests made to UpdateProvisionedProduct.
func (c *ServiceCatalog) UpdateProvisionedProduct(input *servicecatalog.UpdateProvisionedProductInput) (*servicecatalog.UpdateProvisionedProductOutput, error) {
	c.inc("UpdateProvisionedProduct")
	return c.svc.UpdateProvisionedProduct(input)
}

// UpdateProvisionedProductWithContext is a passthrough to the underlying UpdateProvisionedProductWithContext method.
// It will increment the count of requests made to UpdateProvisionedProduct.
func (c *ServiceCatalog) UpdateProvisionedProductWithContext(ctx aws.Context, input *servicecatalog.UpdateProvisionedProductInput, opts ...request.Option) (*servicecatalog.UpdateProvisionedProductOutput, error) {
	c.inc("UpdateProvisionedProduct")
	return c.svc.UpdateProvisionedProductWithContext(ctx, input, opts...)
}

// UpdateProvisioningArtifactRequest is a passthrough to the underlying UpdateProvisioningArtifactRequest.
// It will increment the count of requests made to UpdateProvisioningArtifact.
func (c *ServiceCatalog) UpdateProvisioningArtifactRequest(input *servicecatalog.UpdateProvisioningArtifactInput) (req *request.Request, output *servicecatalog.UpdateProvisioningArtifactOutput) {
	c.inc("UpdateProvisioningArtifact")
	return c.svc.UpdateProvisioningArtifactRequest(input)
}

// UpdateProvisioningArtifact is a passthrough to the underlying UpdateProvisioningArtifact method.
// It will increment the count of requests made to UpdateProvisioningArtifact.
func (c *ServiceCatalog) UpdateProvisioningArtifact(input *servicecatalog.UpdateProvisioningArtifactInput) (*servicecatalog.UpdateProvisioningArtifactOutput, error) {
	c.inc("UpdateProvisioningArtifact")
	return c.svc.UpdateProvisioningArtifact(input)
}

// UpdateProvisioningArtifactWithContext is a passthrough to the underlying UpdateProvisioningArtifactWithContext method.
// It will increment the count of requests made to UpdateProvisioningArtifact.
func (c *ServiceCatalog) UpdateProvisioningArtifactWithContext(ctx aws.Context, input *servicecatalog.UpdateProvisioningArtifactInput, opts ...request.Option) (*servicecatalog.UpdateProvisioningArtifactOutput, error) {
	c.inc("UpdateProvisioningArtifact")
	return c.svc.UpdateProvisioningArtifactWithContext(ctx, input, opts...)
}

// UpdateTagOptionRequest is a passthrough to the underlying UpdateTagOptionRequest.
// It will increment the count of requests made to UpdateTagOption.
func (c *ServiceCatalog) UpdateTagOptionRequest(input *servicecatalog.UpdateTagOptionInput) (req *request.Request, output *servicecatalog.UpdateTagOptionOutput) {
	c.inc("UpdateTagOption")
	return c.svc.UpdateTagOptionRequest(input)
}

// UpdateTagOption is a passthrough to the underlying UpdateTagOption method.
// It will increment the count of requests made to UpdateTagOption.
func (c *ServiceCatalog) UpdateTagOption(input *servicecatalog.UpdateTagOptionInput) (*servicecatalog.UpdateTagOptionOutput, error) {
	c.inc("UpdateTagOption")
	return c.svc.UpdateTagOption(input)
}

// UpdateTagOptionWithContext is a passthrough to the underlying UpdateTagOptionWithContext method.
// It will increment the count of requests made to UpdateTagOption.
func (c *ServiceCatalog) UpdateTagOptionWithContext(ctx aws.Context, input *servicecatalog.UpdateTagOptionInput, opts ...request.Option) (*servicecatalog.UpdateTagOptionOutput, error) {
	c.inc("UpdateTagOption")
	return c.svc.UpdateTagOptionWithContext(ctx, input, opts...)
}
