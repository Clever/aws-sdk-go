// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package workmailcounter

import (
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/workmail"
)

// AssociateDelegateToResourceRequest is a passthrough to the underlying AssociateDelegateToResourceRequest.
// It will increment the count of requests made to AssociateDelegateToResource.
func (c *WorkMail) AssociateDelegateToResourceRequest(input *workmail.AssociateDelegateToResourceInput) (req *request.Request, output *workmail.AssociateDelegateToResourceOutput) {
	c.inc("AssociateDelegateToResource")
	return c.svc.AssociateDelegateToResourceRequest(input)
}

// AssociateDelegateToResource is a passthrough to the underlying AssociateDelegateToResource method.
// It will increment the count of requests made to AssociateDelegateToResource.
func (c *WorkMail) AssociateDelegateToResource(input *workmail.AssociateDelegateToResourceInput) (*workmail.AssociateDelegateToResourceOutput, error) {
	c.inc("AssociateDelegateToResource")
	return c.svc.AssociateDelegateToResource(input)
}

// AssociateDelegateToResourceWithContext is a passthrough to the underlying AssociateDelegateToResourceWithContext method.
// It will increment the count of requests made to AssociateDelegateToResource.
func (c *WorkMail) AssociateDelegateToResourceWithContext(ctx aws.Context, input *workmail.AssociateDelegateToResourceInput, opts ...request.Option) (*workmail.AssociateDelegateToResourceOutput, error) {
	c.inc("AssociateDelegateToResource")
	return c.svc.AssociateDelegateToResourceWithContext(ctx, input, opts...)
}

// AssociateMemberToGroupRequest is a passthrough to the underlying AssociateMemberToGroupRequest.
// It will increment the count of requests made to AssociateMemberToGroup.
func (c *WorkMail) AssociateMemberToGroupRequest(input *workmail.AssociateMemberToGroupInput) (req *request.Request, output *workmail.AssociateMemberToGroupOutput) {
	c.inc("AssociateMemberToGroup")
	return c.svc.AssociateMemberToGroupRequest(input)
}

// AssociateMemberToGroup is a passthrough to the underlying AssociateMemberToGroup method.
// It will increment the count of requests made to AssociateMemberToGroup.
func (c *WorkMail) AssociateMemberToGroup(input *workmail.AssociateMemberToGroupInput) (*workmail.AssociateMemberToGroupOutput, error) {
	c.inc("AssociateMemberToGroup")
	return c.svc.AssociateMemberToGroup(input)
}

// AssociateMemberToGroupWithContext is a passthrough to the underlying AssociateMemberToGroupWithContext method.
// It will increment the count of requests made to AssociateMemberToGroup.
func (c *WorkMail) AssociateMemberToGroupWithContext(ctx aws.Context, input *workmail.AssociateMemberToGroupInput, opts ...request.Option) (*workmail.AssociateMemberToGroupOutput, error) {
	c.inc("AssociateMemberToGroup")
	return c.svc.AssociateMemberToGroupWithContext(ctx, input, opts...)
}

// CreateAliasRequest is a passthrough to the underlying CreateAliasRequest.
// It will increment the count of requests made to CreateAlias.
func (c *WorkMail) CreateAliasRequest(input *workmail.CreateAliasInput) (req *request.Request, output *workmail.CreateAliasOutput) {
	c.inc("CreateAlias")
	return c.svc.CreateAliasRequest(input)
}

// CreateAlias is a passthrough to the underlying CreateAlias method.
// It will increment the count of requests made to CreateAlias.
func (c *WorkMail) CreateAlias(input *workmail.CreateAliasInput) (*workmail.CreateAliasOutput, error) {
	c.inc("CreateAlias")
	return c.svc.CreateAlias(input)
}

// CreateAliasWithContext is a passthrough to the underlying CreateAliasWithContext method.
// It will increment the count of requests made to CreateAlias.
func (c *WorkMail) CreateAliasWithContext(ctx aws.Context, input *workmail.CreateAliasInput, opts ...request.Option) (*workmail.CreateAliasOutput, error) {
	c.inc("CreateAlias")
	return c.svc.CreateAliasWithContext(ctx, input, opts...)
}

// CreateGroupRequest is a passthrough to the underlying CreateGroupRequest.
// It will increment the count of requests made to CreateGroup.
func (c *WorkMail) CreateGroupRequest(input *workmail.CreateGroupInput) (req *request.Request, output *workmail.CreateGroupOutput) {
	c.inc("CreateGroup")
	return c.svc.CreateGroupRequest(input)
}

// CreateGroup is a passthrough to the underlying CreateGroup method.
// It will increment the count of requests made to CreateGroup.
func (c *WorkMail) CreateGroup(input *workmail.CreateGroupInput) (*workmail.CreateGroupOutput, error) {
	c.inc("CreateGroup")
	return c.svc.CreateGroup(input)
}

// CreateGroupWithContext is a passthrough to the underlying CreateGroupWithContext method.
// It will increment the count of requests made to CreateGroup.
func (c *WorkMail) CreateGroupWithContext(ctx aws.Context, input *workmail.CreateGroupInput, opts ...request.Option) (*workmail.CreateGroupOutput, error) {
	c.inc("CreateGroup")
	return c.svc.CreateGroupWithContext(ctx, input, opts...)
}

// CreateResourceRequest is a passthrough to the underlying CreateResourceRequest.
// It will increment the count of requests made to CreateResource.
func (c *WorkMail) CreateResourceRequest(input *workmail.CreateResourceInput) (req *request.Request, output *workmail.CreateResourceOutput) {
	c.inc("CreateResource")
	return c.svc.CreateResourceRequest(input)
}

// CreateResource is a passthrough to the underlying CreateResource method.
// It will increment the count of requests made to CreateResource.
func (c *WorkMail) CreateResource(input *workmail.CreateResourceInput) (*workmail.CreateResourceOutput, error) {
	c.inc("CreateResource")
	return c.svc.CreateResource(input)
}

// CreateResourceWithContext is a passthrough to the underlying CreateResourceWithContext method.
// It will increment the count of requests made to CreateResource.
func (c *WorkMail) CreateResourceWithContext(ctx aws.Context, input *workmail.CreateResourceInput, opts ...request.Option) (*workmail.CreateResourceOutput, error) {
	c.inc("CreateResource")
	return c.svc.CreateResourceWithContext(ctx, input, opts...)
}

// CreateUserRequest is a passthrough to the underlying CreateUserRequest.
// It will increment the count of requests made to CreateUser.
func (c *WorkMail) CreateUserRequest(input *workmail.CreateUserInput) (req *request.Request, output *workmail.CreateUserOutput) {
	c.inc("CreateUser")
	return c.svc.CreateUserRequest(input)
}

// CreateUser is a passthrough to the underlying CreateUser method.
// It will increment the count of requests made to CreateUser.
func (c *WorkMail) CreateUser(input *workmail.CreateUserInput) (*workmail.CreateUserOutput, error) {
	c.inc("CreateUser")
	return c.svc.CreateUser(input)
}

// CreateUserWithContext is a passthrough to the underlying CreateUserWithContext method.
// It will increment the count of requests made to CreateUser.
func (c *WorkMail) CreateUserWithContext(ctx aws.Context, input *workmail.CreateUserInput, opts ...request.Option) (*workmail.CreateUserOutput, error) {
	c.inc("CreateUser")
	return c.svc.CreateUserWithContext(ctx, input, opts...)
}

// DeleteAliasRequest is a passthrough to the underlying DeleteAliasRequest.
// It will increment the count of requests made to DeleteAlias.
func (c *WorkMail) DeleteAliasRequest(input *workmail.DeleteAliasInput) (req *request.Request, output *workmail.DeleteAliasOutput) {
	c.inc("DeleteAlias")
	return c.svc.DeleteAliasRequest(input)
}

// DeleteAlias is a passthrough to the underlying DeleteAlias method.
// It will increment the count of requests made to DeleteAlias.
func (c *WorkMail) DeleteAlias(input *workmail.DeleteAliasInput) (*workmail.DeleteAliasOutput, error) {
	c.inc("DeleteAlias")
	return c.svc.DeleteAlias(input)
}

// DeleteAliasWithContext is a passthrough to the underlying DeleteAliasWithContext method.
// It will increment the count of requests made to DeleteAlias.
func (c *WorkMail) DeleteAliasWithContext(ctx aws.Context, input *workmail.DeleteAliasInput, opts ...request.Option) (*workmail.DeleteAliasOutput, error) {
	c.inc("DeleteAlias")
	return c.svc.DeleteAliasWithContext(ctx, input, opts...)
}

// DeleteGroupRequest is a passthrough to the underlying DeleteGroupRequest.
// It will increment the count of requests made to DeleteGroup.
func (c *WorkMail) DeleteGroupRequest(input *workmail.DeleteGroupInput) (req *request.Request, output *workmail.DeleteGroupOutput) {
	c.inc("DeleteGroup")
	return c.svc.DeleteGroupRequest(input)
}

// DeleteGroup is a passthrough to the underlying DeleteGroup method.
// It will increment the count of requests made to DeleteGroup.
func (c *WorkMail) DeleteGroup(input *workmail.DeleteGroupInput) (*workmail.DeleteGroupOutput, error) {
	c.inc("DeleteGroup")
	return c.svc.DeleteGroup(input)
}

// DeleteGroupWithContext is a passthrough to the underlying DeleteGroupWithContext method.
// It will increment the count of requests made to DeleteGroup.
func (c *WorkMail) DeleteGroupWithContext(ctx aws.Context, input *workmail.DeleteGroupInput, opts ...request.Option) (*workmail.DeleteGroupOutput, error) {
	c.inc("DeleteGroup")
	return c.svc.DeleteGroupWithContext(ctx, input, opts...)
}

// DeleteResourceRequest is a passthrough to the underlying DeleteResourceRequest.
// It will increment the count of requests made to DeleteResource.
func (c *WorkMail) DeleteResourceRequest(input *workmail.DeleteResourceInput) (req *request.Request, output *workmail.DeleteResourceOutput) {
	c.inc("DeleteResource")
	return c.svc.DeleteResourceRequest(input)
}

// DeleteResource is a passthrough to the underlying DeleteResource method.
// It will increment the count of requests made to DeleteResource.
func (c *WorkMail) DeleteResource(input *workmail.DeleteResourceInput) (*workmail.DeleteResourceOutput, error) {
	c.inc("DeleteResource")
	return c.svc.DeleteResource(input)
}

// DeleteResourceWithContext is a passthrough to the underlying DeleteResourceWithContext method.
// It will increment the count of requests made to DeleteResource.
func (c *WorkMail) DeleteResourceWithContext(ctx aws.Context, input *workmail.DeleteResourceInput, opts ...request.Option) (*workmail.DeleteResourceOutput, error) {
	c.inc("DeleteResource")
	return c.svc.DeleteResourceWithContext(ctx, input, opts...)
}

// DeleteUserRequest is a passthrough to the underlying DeleteUserRequest.
// It will increment the count of requests made to DeleteUser.
func (c *WorkMail) DeleteUserRequest(input *workmail.DeleteUserInput) (req *request.Request, output *workmail.DeleteUserOutput) {
	c.inc("DeleteUser")
	return c.svc.DeleteUserRequest(input)
}

// DeleteUser is a passthrough to the underlying DeleteUser method.
// It will increment the count of requests made to DeleteUser.
func (c *WorkMail) DeleteUser(input *workmail.DeleteUserInput) (*workmail.DeleteUserOutput, error) {
	c.inc("DeleteUser")
	return c.svc.DeleteUser(input)
}

// DeleteUserWithContext is a passthrough to the underlying DeleteUserWithContext method.
// It will increment the count of requests made to DeleteUser.
func (c *WorkMail) DeleteUserWithContext(ctx aws.Context, input *workmail.DeleteUserInput, opts ...request.Option) (*workmail.DeleteUserOutput, error) {
	c.inc("DeleteUser")
	return c.svc.DeleteUserWithContext(ctx, input, opts...)
}

// DeregisterFromWorkMailRequest is a passthrough to the underlying DeregisterFromWorkMailRequest.
// It will increment the count of requests made to DeregisterFromWorkMail.
func (c *WorkMail) DeregisterFromWorkMailRequest(input *workmail.DeregisterFromWorkMailInput) (req *request.Request, output *workmail.DeregisterFromWorkMailOutput) {
	c.inc("DeregisterFromWorkMail")
	return c.svc.DeregisterFromWorkMailRequest(input)
}

// DeregisterFromWorkMail is a passthrough to the underlying DeregisterFromWorkMail method.
// It will increment the count of requests made to DeregisterFromWorkMail.
func (c *WorkMail) DeregisterFromWorkMail(input *workmail.DeregisterFromWorkMailInput) (*workmail.DeregisterFromWorkMailOutput, error) {
	c.inc("DeregisterFromWorkMail")
	return c.svc.DeregisterFromWorkMail(input)
}

// DeregisterFromWorkMailWithContext is a passthrough to the underlying DeregisterFromWorkMailWithContext method.
// It will increment the count of requests made to DeregisterFromWorkMail.
func (c *WorkMail) DeregisterFromWorkMailWithContext(ctx aws.Context, input *workmail.DeregisterFromWorkMailInput, opts ...request.Option) (*workmail.DeregisterFromWorkMailOutput, error) {
	c.inc("DeregisterFromWorkMail")
	return c.svc.DeregisterFromWorkMailWithContext(ctx, input, opts...)
}

// DescribeGroupRequest is a passthrough to the underlying DescribeGroupRequest.
// It will increment the count of requests made to DescribeGroup.
func (c *WorkMail) DescribeGroupRequest(input *workmail.DescribeGroupInput) (req *request.Request, output *workmail.DescribeGroupOutput) {
	c.inc("DescribeGroup")
	return c.svc.DescribeGroupRequest(input)
}

// DescribeGroup is a passthrough to the underlying DescribeGroup method.
// It will increment the count of requests made to DescribeGroup.
func (c *WorkMail) DescribeGroup(input *workmail.DescribeGroupInput) (*workmail.DescribeGroupOutput, error) {
	c.inc("DescribeGroup")
	return c.svc.DescribeGroup(input)
}

// DescribeGroupWithContext is a passthrough to the underlying DescribeGroupWithContext method.
// It will increment the count of requests made to DescribeGroup.
func (c *WorkMail) DescribeGroupWithContext(ctx aws.Context, input *workmail.DescribeGroupInput, opts ...request.Option) (*workmail.DescribeGroupOutput, error) {
	c.inc("DescribeGroup")
	return c.svc.DescribeGroupWithContext(ctx, input, opts...)
}

// DescribeOrganizationRequest is a passthrough to the underlying DescribeOrganizationRequest.
// It will increment the count of requests made to DescribeOrganization.
func (c *WorkMail) DescribeOrganizationRequest(input *workmail.DescribeOrganizationInput) (req *request.Request, output *workmail.DescribeOrganizationOutput) {
	c.inc("DescribeOrganization")
	return c.svc.DescribeOrganizationRequest(input)
}

// DescribeOrganization is a passthrough to the underlying DescribeOrganization method.
// It will increment the count of requests made to DescribeOrganization.
func (c *WorkMail) DescribeOrganization(input *workmail.DescribeOrganizationInput) (*workmail.DescribeOrganizationOutput, error) {
	c.inc("DescribeOrganization")
	return c.svc.DescribeOrganization(input)
}

// DescribeOrganizationWithContext is a passthrough to the underlying DescribeOrganizationWithContext method.
// It will increment the count of requests made to DescribeOrganization.
func (c *WorkMail) DescribeOrganizationWithContext(ctx aws.Context, input *workmail.DescribeOrganizationInput, opts ...request.Option) (*workmail.DescribeOrganizationOutput, error) {
	c.inc("DescribeOrganization")
	return c.svc.DescribeOrganizationWithContext(ctx, input, opts...)
}

// DescribeResourceRequest is a passthrough to the underlying DescribeResourceRequest.
// It will increment the count of requests made to DescribeResource.
func (c *WorkMail) DescribeResourceRequest(input *workmail.DescribeResourceInput) (req *request.Request, output *workmail.DescribeResourceOutput) {
	c.inc("DescribeResource")
	return c.svc.DescribeResourceRequest(input)
}

// DescribeResource is a passthrough to the underlying DescribeResource method.
// It will increment the count of requests made to DescribeResource.
func (c *WorkMail) DescribeResource(input *workmail.DescribeResourceInput) (*workmail.DescribeResourceOutput, error) {
	c.inc("DescribeResource")
	return c.svc.DescribeResource(input)
}

// DescribeResourceWithContext is a passthrough to the underlying DescribeResourceWithContext method.
// It will increment the count of requests made to DescribeResource.
func (c *WorkMail) DescribeResourceWithContext(ctx aws.Context, input *workmail.DescribeResourceInput, opts ...request.Option) (*workmail.DescribeResourceOutput, error) {
	c.inc("DescribeResource")
	return c.svc.DescribeResourceWithContext(ctx, input, opts...)
}

// DescribeUserRequest is a passthrough to the underlying DescribeUserRequest.
// It will increment the count of requests made to DescribeUser.
func (c *WorkMail) DescribeUserRequest(input *workmail.DescribeUserInput) (req *request.Request, output *workmail.DescribeUserOutput) {
	c.inc("DescribeUser")
	return c.svc.DescribeUserRequest(input)
}

// DescribeUser is a passthrough to the underlying DescribeUser method.
// It will increment the count of requests made to DescribeUser.
func (c *WorkMail) DescribeUser(input *workmail.DescribeUserInput) (*workmail.DescribeUserOutput, error) {
	c.inc("DescribeUser")
	return c.svc.DescribeUser(input)
}

// DescribeUserWithContext is a passthrough to the underlying DescribeUserWithContext method.
// It will increment the count of requests made to DescribeUser.
func (c *WorkMail) DescribeUserWithContext(ctx aws.Context, input *workmail.DescribeUserInput, opts ...request.Option) (*workmail.DescribeUserOutput, error) {
	c.inc("DescribeUser")
	return c.svc.DescribeUserWithContext(ctx, input, opts...)
}

// DisassociateDelegateFromResourceRequest is a passthrough to the underlying DisassociateDelegateFromResourceRequest.
// It will increment the count of requests made to DisassociateDelegateFromResource.
func (c *WorkMail) DisassociateDelegateFromResourceRequest(input *workmail.DisassociateDelegateFromResourceInput) (req *request.Request, output *workmail.DisassociateDelegateFromResourceOutput) {
	c.inc("DisassociateDelegateFromResource")
	return c.svc.DisassociateDelegateFromResourceRequest(input)
}

// DisassociateDelegateFromResource is a passthrough to the underlying DisassociateDelegateFromResource method.
// It will increment the count of requests made to DisassociateDelegateFromResource.
func (c *WorkMail) DisassociateDelegateFromResource(input *workmail.DisassociateDelegateFromResourceInput) (*workmail.DisassociateDelegateFromResourceOutput, error) {
	c.inc("DisassociateDelegateFromResource")
	return c.svc.DisassociateDelegateFromResource(input)
}

// DisassociateDelegateFromResourceWithContext is a passthrough to the underlying DisassociateDelegateFromResourceWithContext method.
// It will increment the count of requests made to DisassociateDelegateFromResource.
func (c *WorkMail) DisassociateDelegateFromResourceWithContext(ctx aws.Context, input *workmail.DisassociateDelegateFromResourceInput, opts ...request.Option) (*workmail.DisassociateDelegateFromResourceOutput, error) {
	c.inc("DisassociateDelegateFromResource")
	return c.svc.DisassociateDelegateFromResourceWithContext(ctx, input, opts...)
}

// DisassociateMemberFromGroupRequest is a passthrough to the underlying DisassociateMemberFromGroupRequest.
// It will increment the count of requests made to DisassociateMemberFromGroup.
func (c *WorkMail) DisassociateMemberFromGroupRequest(input *workmail.DisassociateMemberFromGroupInput) (req *request.Request, output *workmail.DisassociateMemberFromGroupOutput) {
	c.inc("DisassociateMemberFromGroup")
	return c.svc.DisassociateMemberFromGroupRequest(input)
}

// DisassociateMemberFromGroup is a passthrough to the underlying DisassociateMemberFromGroup method.
// It will increment the count of requests made to DisassociateMemberFromGroup.
func (c *WorkMail) DisassociateMemberFromGroup(input *workmail.DisassociateMemberFromGroupInput) (*workmail.DisassociateMemberFromGroupOutput, error) {
	c.inc("DisassociateMemberFromGroup")
	return c.svc.DisassociateMemberFromGroup(input)
}

// DisassociateMemberFromGroupWithContext is a passthrough to the underlying DisassociateMemberFromGroupWithContext method.
// It will increment the count of requests made to DisassociateMemberFromGroup.
func (c *WorkMail) DisassociateMemberFromGroupWithContext(ctx aws.Context, input *workmail.DisassociateMemberFromGroupInput, opts ...request.Option) (*workmail.DisassociateMemberFromGroupOutput, error) {
	c.inc("DisassociateMemberFromGroup")
	return c.svc.DisassociateMemberFromGroupWithContext(ctx, input, opts...)
}

// ListAliasesRequest is a passthrough to the underlying ListAliasesRequest.
// It will increment the count of requests made to ListAliases.
func (c *WorkMail) ListAliasesRequest(input *workmail.ListAliasesInput) (req *request.Request, output *workmail.ListAliasesOutput) {
	c.inc("ListAliases")
	return c.svc.ListAliasesRequest(input)
}

// ListAliases is a passthrough to the underlying ListAliases method.
// It will increment the count of requests made to ListAliases.
func (c *WorkMail) ListAliases(input *workmail.ListAliasesInput) (*workmail.ListAliasesOutput, error) {
	c.inc("ListAliases")
	return c.svc.ListAliases(input)
}

// ListAliasesWithContext is a passthrough to the underlying ListAliasesWithContext method.
// It will increment the count of requests made to ListAliases.
func (c *WorkMail) ListAliasesWithContext(ctx aws.Context, input *workmail.ListAliasesInput, opts ...request.Option) (*workmail.ListAliasesOutput, error) {
	c.inc("ListAliases")
	return c.svc.ListAliasesWithContext(ctx, input, opts...)
}

// ListAliasesPages is a passthrough to the underlying ListAliasesPages method.
// It will increment the count of requests made to ListAliases on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListAliasesPagesWithContext to avoid this.
func (c *WorkMail) ListAliasesPages(input *workmail.ListAliasesInput, fn func(*workmail.ListAliasesOutput, bool) bool) error {
	wrappedFn := func(page *workmail.ListAliasesOutput, lastPage bool) bool {
		c.inc("ListAliases")
		return fn(page, lastPage)
	}
	return c.svc.ListAliasesPages(input, wrappedFn)
}

// ListAliasesPagesWithContext is a passthrough to the underlying ListAliasesPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListAliases when applied to the request.
func (c *WorkMail) ListAliasesPagesWithContext(ctx aws.Context, input *workmail.ListAliasesInput, fn func(*workmail.ListAliasesOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListAliases"))
	return c.svc.ListAliasesPagesWithContext(ctx, input, fn, opts...)
}

// ListGroupMembersRequest is a passthrough to the underlying ListGroupMembersRequest.
// It will increment the count of requests made to ListGroupMembers.
func (c *WorkMail) ListGroupMembersRequest(input *workmail.ListGroupMembersInput) (req *request.Request, output *workmail.ListGroupMembersOutput) {
	c.inc("ListGroupMembers")
	return c.svc.ListGroupMembersRequest(input)
}

// ListGroupMembers is a passthrough to the underlying ListGroupMembers method.
// It will increment the count of requests made to ListGroupMembers.
func (c *WorkMail) ListGroupMembers(input *workmail.ListGroupMembersInput) (*workmail.ListGroupMembersOutput, error) {
	c.inc("ListGroupMembers")
	return c.svc.ListGroupMembers(input)
}

// ListGroupMembersWithContext is a passthrough to the underlying ListGroupMembersWithContext method.
// It will increment the count of requests made to ListGroupMembers.
func (c *WorkMail) ListGroupMembersWithContext(ctx aws.Context, input *workmail.ListGroupMembersInput, opts ...request.Option) (*workmail.ListGroupMembersOutput, error) {
	c.inc("ListGroupMembers")
	return c.svc.ListGroupMembersWithContext(ctx, input, opts...)
}

// ListGroupMembersPages is a passthrough to the underlying ListGroupMembersPages method.
// It will increment the count of requests made to ListGroupMembers on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListGroupMembersPagesWithContext to avoid this.
func (c *WorkMail) ListGroupMembersPages(input *workmail.ListGroupMembersInput, fn func(*workmail.ListGroupMembersOutput, bool) bool) error {
	wrappedFn := func(page *workmail.ListGroupMembersOutput, lastPage bool) bool {
		c.inc("ListGroupMembers")
		return fn(page, lastPage)
	}
	return c.svc.ListGroupMembersPages(input, wrappedFn)
}

// ListGroupMembersPagesWithContext is a passthrough to the underlying ListGroupMembersPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListGroupMembers when applied to the request.
func (c *WorkMail) ListGroupMembersPagesWithContext(ctx aws.Context, input *workmail.ListGroupMembersInput, fn func(*workmail.ListGroupMembersOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListGroupMembers"))
	return c.svc.ListGroupMembersPagesWithContext(ctx, input, fn, opts...)
}

// ListGroupsRequest is a passthrough to the underlying ListGroupsRequest.
// It will increment the count of requests made to ListGroups.
func (c *WorkMail) ListGroupsRequest(input *workmail.ListGroupsInput) (req *request.Request, output *workmail.ListGroupsOutput) {
	c.inc("ListGroups")
	return c.svc.ListGroupsRequest(input)
}

// ListGroups is a passthrough to the underlying ListGroups method.
// It will increment the count of requests made to ListGroups.
func (c *WorkMail) ListGroups(input *workmail.ListGroupsInput) (*workmail.ListGroupsOutput, error) {
	c.inc("ListGroups")
	return c.svc.ListGroups(input)
}

// ListGroupsWithContext is a passthrough to the underlying ListGroupsWithContext method.
// It will increment the count of requests made to ListGroups.
func (c *WorkMail) ListGroupsWithContext(ctx aws.Context, input *workmail.ListGroupsInput, opts ...request.Option) (*workmail.ListGroupsOutput, error) {
	c.inc("ListGroups")
	return c.svc.ListGroupsWithContext(ctx, input, opts...)
}

// ListGroupsPages is a passthrough to the underlying ListGroupsPages method.
// It will increment the count of requests made to ListGroups on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListGroupsPagesWithContext to avoid this.
func (c *WorkMail) ListGroupsPages(input *workmail.ListGroupsInput, fn func(*workmail.ListGroupsOutput, bool) bool) error {
	wrappedFn := func(page *workmail.ListGroupsOutput, lastPage bool) bool {
		c.inc("ListGroups")
		return fn(page, lastPage)
	}
	return c.svc.ListGroupsPages(input, wrappedFn)
}

// ListGroupsPagesWithContext is a passthrough to the underlying ListGroupsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListGroups when applied to the request.
func (c *WorkMail) ListGroupsPagesWithContext(ctx aws.Context, input *workmail.ListGroupsInput, fn func(*workmail.ListGroupsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListGroups"))
	return c.svc.ListGroupsPagesWithContext(ctx, input, fn, opts...)
}

// ListOrganizationsRequest is a passthrough to the underlying ListOrganizationsRequest.
// It will increment the count of requests made to ListOrganizations.
func (c *WorkMail) ListOrganizationsRequest(input *workmail.ListOrganizationsInput) (req *request.Request, output *workmail.ListOrganizationsOutput) {
	c.inc("ListOrganizations")
	return c.svc.ListOrganizationsRequest(input)
}

// ListOrganizations is a passthrough to the underlying ListOrganizations method.
// It will increment the count of requests made to ListOrganizations.
func (c *WorkMail) ListOrganizations(input *workmail.ListOrganizationsInput) (*workmail.ListOrganizationsOutput, error) {
	c.inc("ListOrganizations")
	return c.svc.ListOrganizations(input)
}

// ListOrganizationsWithContext is a passthrough to the underlying ListOrganizationsWithContext method.
// It will increment the count of requests made to ListOrganizations.
func (c *WorkMail) ListOrganizationsWithContext(ctx aws.Context, input *workmail.ListOrganizationsInput, opts ...request.Option) (*workmail.ListOrganizationsOutput, error) {
	c.inc("ListOrganizations")
	return c.svc.ListOrganizationsWithContext(ctx, input, opts...)
}

// ListOrganizationsPages is a passthrough to the underlying ListOrganizationsPages method.
// It will increment the count of requests made to ListOrganizations on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListOrganizationsPagesWithContext to avoid this.
func (c *WorkMail) ListOrganizationsPages(input *workmail.ListOrganizationsInput, fn func(*workmail.ListOrganizationsOutput, bool) bool) error {
	wrappedFn := func(page *workmail.ListOrganizationsOutput, lastPage bool) bool {
		c.inc("ListOrganizations")
		return fn(page, lastPage)
	}
	return c.svc.ListOrganizationsPages(input, wrappedFn)
}

// ListOrganizationsPagesWithContext is a passthrough to the underlying ListOrganizationsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListOrganizations when applied to the request.
func (c *WorkMail) ListOrganizationsPagesWithContext(ctx aws.Context, input *workmail.ListOrganizationsInput, fn func(*workmail.ListOrganizationsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListOrganizations"))
	return c.svc.ListOrganizationsPagesWithContext(ctx, input, fn, opts...)
}

// ListResourceDelegatesRequest is a passthrough to the underlying ListResourceDelegatesRequest.
// It will increment the count of requests made to ListResourceDelegates.
func (c *WorkMail) ListResourceDelegatesRequest(input *workmail.ListResourceDelegatesInput) (req *request.Request, output *workmail.ListResourceDelegatesOutput) {
	c.inc("ListResourceDelegates")
	return c.svc.ListResourceDelegatesRequest(input)
}

// ListResourceDelegates is a passthrough to the underlying ListResourceDelegates method.
// It will increment the count of requests made to ListResourceDelegates.
func (c *WorkMail) ListResourceDelegates(input *workmail.ListResourceDelegatesInput) (*workmail.ListResourceDelegatesOutput, error) {
	c.inc("ListResourceDelegates")
	return c.svc.ListResourceDelegates(input)
}

// ListResourceDelegatesWithContext is a passthrough to the underlying ListResourceDelegatesWithContext method.
// It will increment the count of requests made to ListResourceDelegates.
func (c *WorkMail) ListResourceDelegatesWithContext(ctx aws.Context, input *workmail.ListResourceDelegatesInput, opts ...request.Option) (*workmail.ListResourceDelegatesOutput, error) {
	c.inc("ListResourceDelegates")
	return c.svc.ListResourceDelegatesWithContext(ctx, input, opts...)
}

// ListResourcesRequest is a passthrough to the underlying ListResourcesRequest.
// It will increment the count of requests made to ListResources.
func (c *WorkMail) ListResourcesRequest(input *workmail.ListResourcesInput) (req *request.Request, output *workmail.ListResourcesOutput) {
	c.inc("ListResources")
	return c.svc.ListResourcesRequest(input)
}

// ListResources is a passthrough to the underlying ListResources method.
// It will increment the count of requests made to ListResources.
func (c *WorkMail) ListResources(input *workmail.ListResourcesInput) (*workmail.ListResourcesOutput, error) {
	c.inc("ListResources")
	return c.svc.ListResources(input)
}

// ListResourcesWithContext is a passthrough to the underlying ListResourcesWithContext method.
// It will increment the count of requests made to ListResources.
func (c *WorkMail) ListResourcesWithContext(ctx aws.Context, input *workmail.ListResourcesInput, opts ...request.Option) (*workmail.ListResourcesOutput, error) {
	c.inc("ListResources")
	return c.svc.ListResourcesWithContext(ctx, input, opts...)
}

// ListResourcesPages is a passthrough to the underlying ListResourcesPages method.
// It will increment the count of requests made to ListResources on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListResourcesPagesWithContext to avoid this.
func (c *WorkMail) ListResourcesPages(input *workmail.ListResourcesInput, fn func(*workmail.ListResourcesOutput, bool) bool) error {
	wrappedFn := func(page *workmail.ListResourcesOutput, lastPage bool) bool {
		c.inc("ListResources")
		return fn(page, lastPage)
	}
	return c.svc.ListResourcesPages(input, wrappedFn)
}

// ListResourcesPagesWithContext is a passthrough to the underlying ListResourcesPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListResources when applied to the request.
func (c *WorkMail) ListResourcesPagesWithContext(ctx aws.Context, input *workmail.ListResourcesInput, fn func(*workmail.ListResourcesOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListResources"))
	return c.svc.ListResourcesPagesWithContext(ctx, input, fn, opts...)
}

// ListUsersRequest is a passthrough to the underlying ListUsersRequest.
// It will increment the count of requests made to ListUsers.
func (c *WorkMail) ListUsersRequest(input *workmail.ListUsersInput) (req *request.Request, output *workmail.ListUsersOutput) {
	c.inc("ListUsers")
	return c.svc.ListUsersRequest(input)
}

// ListUsers is a passthrough to the underlying ListUsers method.
// It will increment the count of requests made to ListUsers.
func (c *WorkMail) ListUsers(input *workmail.ListUsersInput) (*workmail.ListUsersOutput, error) {
	c.inc("ListUsers")
	return c.svc.ListUsers(input)
}

// ListUsersWithContext is a passthrough to the underlying ListUsersWithContext method.
// It will increment the count of requests made to ListUsers.
func (c *WorkMail) ListUsersWithContext(ctx aws.Context, input *workmail.ListUsersInput, opts ...request.Option) (*workmail.ListUsersOutput, error) {
	c.inc("ListUsers")
	return c.svc.ListUsersWithContext(ctx, input, opts...)
}

// ListUsersPages is a passthrough to the underlying ListUsersPages method.
// It will increment the count of requests made to ListUsers on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListUsersPagesWithContext to avoid this.
func (c *WorkMail) ListUsersPages(input *workmail.ListUsersInput, fn func(*workmail.ListUsersOutput, bool) bool) error {
	wrappedFn := func(page *workmail.ListUsersOutput, lastPage bool) bool {
		c.inc("ListUsers")
		return fn(page, lastPage)
	}
	return c.svc.ListUsersPages(input, wrappedFn)
}

// ListUsersPagesWithContext is a passthrough to the underlying ListUsersPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListUsers when applied to the request.
func (c *WorkMail) ListUsersPagesWithContext(ctx aws.Context, input *workmail.ListUsersInput, fn func(*workmail.ListUsersOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListUsers"))
	return c.svc.ListUsersPagesWithContext(ctx, input, fn, opts...)
}

// RegisterToWorkMailRequest is a passthrough to the underlying RegisterToWorkMailRequest.
// It will increment the count of requests made to RegisterToWorkMail.
func (c *WorkMail) RegisterToWorkMailRequest(input *workmail.RegisterToWorkMailInput) (req *request.Request, output *workmail.RegisterToWorkMailOutput) {
	c.inc("RegisterToWorkMail")
	return c.svc.RegisterToWorkMailRequest(input)
}

// RegisterToWorkMail is a passthrough to the underlying RegisterToWorkMail method.
// It will increment the count of requests made to RegisterToWorkMail.
func (c *WorkMail) RegisterToWorkMail(input *workmail.RegisterToWorkMailInput) (*workmail.RegisterToWorkMailOutput, error) {
	c.inc("RegisterToWorkMail")
	return c.svc.RegisterToWorkMail(input)
}

// RegisterToWorkMailWithContext is a passthrough to the underlying RegisterToWorkMailWithContext method.
// It will increment the count of requests made to RegisterToWorkMail.
func (c *WorkMail) RegisterToWorkMailWithContext(ctx aws.Context, input *workmail.RegisterToWorkMailInput, opts ...request.Option) (*workmail.RegisterToWorkMailOutput, error) {
	c.inc("RegisterToWorkMail")
	return c.svc.RegisterToWorkMailWithContext(ctx, input, opts...)
}

// ResetPasswordRequest is a passthrough to the underlying ResetPasswordRequest.
// It will increment the count of requests made to ResetPassword.
func (c *WorkMail) ResetPasswordRequest(input *workmail.ResetPasswordInput) (req *request.Request, output *workmail.ResetPasswordOutput) {
	c.inc("ResetPassword")
	return c.svc.ResetPasswordRequest(input)
}

// ResetPassword is a passthrough to the underlying ResetPassword method.
// It will increment the count of requests made to ResetPassword.
func (c *WorkMail) ResetPassword(input *workmail.ResetPasswordInput) (*workmail.ResetPasswordOutput, error) {
	c.inc("ResetPassword")
	return c.svc.ResetPassword(input)
}

// ResetPasswordWithContext is a passthrough to the underlying ResetPasswordWithContext method.
// It will increment the count of requests made to ResetPassword.
func (c *WorkMail) ResetPasswordWithContext(ctx aws.Context, input *workmail.ResetPasswordInput, opts ...request.Option) (*workmail.ResetPasswordOutput, error) {
	c.inc("ResetPassword")
	return c.svc.ResetPasswordWithContext(ctx, input, opts...)
}

// UpdatePrimaryEmailAddressRequest is a passthrough to the underlying UpdatePrimaryEmailAddressRequest.
// It will increment the count of requests made to UpdatePrimaryEmailAddress.
func (c *WorkMail) UpdatePrimaryEmailAddressRequest(input *workmail.UpdatePrimaryEmailAddressInput) (req *request.Request, output *workmail.UpdatePrimaryEmailAddressOutput) {
	c.inc("UpdatePrimaryEmailAddress")
	return c.svc.UpdatePrimaryEmailAddressRequest(input)
}

// UpdatePrimaryEmailAddress is a passthrough to the underlying UpdatePrimaryEmailAddress method.
// It will increment the count of requests made to UpdatePrimaryEmailAddress.
func (c *WorkMail) UpdatePrimaryEmailAddress(input *workmail.UpdatePrimaryEmailAddressInput) (*workmail.UpdatePrimaryEmailAddressOutput, error) {
	c.inc("UpdatePrimaryEmailAddress")
	return c.svc.UpdatePrimaryEmailAddress(input)
}

// UpdatePrimaryEmailAddressWithContext is a passthrough to the underlying UpdatePrimaryEmailAddressWithContext method.
// It will increment the count of requests made to UpdatePrimaryEmailAddress.
func (c *WorkMail) UpdatePrimaryEmailAddressWithContext(ctx aws.Context, input *workmail.UpdatePrimaryEmailAddressInput, opts ...request.Option) (*workmail.UpdatePrimaryEmailAddressOutput, error) {
	c.inc("UpdatePrimaryEmailAddress")
	return c.svc.UpdatePrimaryEmailAddressWithContext(ctx, input, opts...)
}

// UpdateResourceRequest is a passthrough to the underlying UpdateResourceRequest.
// It will increment the count of requests made to UpdateResource.
func (c *WorkMail) UpdateResourceRequest(input *workmail.UpdateResourceInput) (req *request.Request, output *workmail.UpdateResourceOutput) {
	c.inc("UpdateResource")
	return c.svc.UpdateResourceRequest(input)
}

// UpdateResource is a passthrough to the underlying UpdateResource method.
// It will increment the count of requests made to UpdateResource.
func (c *WorkMail) UpdateResource(input *workmail.UpdateResourceInput) (*workmail.UpdateResourceOutput, error) {
	c.inc("UpdateResource")
	return c.svc.UpdateResource(input)
}

// UpdateResourceWithContext is a passthrough to the underlying UpdateResourceWithContext method.
// It will increment the count of requests made to UpdateResource.
func (c *WorkMail) UpdateResourceWithContext(ctx aws.Context, input *workmail.UpdateResourceInput, opts ...request.Option) (*workmail.UpdateResourceOutput, error) {
	c.inc("UpdateResource")
	return c.svc.UpdateResourceWithContext(ctx, input, opts...)
}
