// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package elbcounter

import (
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/elb"
)

// WaitUntilAnyInstanceInService calls WaitUntilAnyInstanceInServiceWithContext with aws.BackgroundContext().
func (c *ELB) WaitUntilAnyInstanceInService(input *elb.DescribeInstanceHealthInput) error {
	return c.WaitUntilAnyInstanceInServiceWithContext(aws.BackgroundContext(), input)
}

// WaitUntilAnyInstanceInServiceWithContext calls the underlying client method with a request option that
// will count DescribeInstanceHealth requests.
func (c *ELB) WaitUntilAnyInstanceInServiceWithContext(ctx aws.Context, input *elb.DescribeInstanceHealthInput, opts ...request.WaiterOption) error {
	opts = append(opts, request.WithWaiterRequestOptions(c.incViaRequestOption("DescribeInstanceHealth")))
	return c.svc.WaitUntilAnyInstanceInServiceWithContext(ctx, input, opts...)
}

// WaitUntilInstanceDeregistered calls WaitUntilInstanceDeregisteredWithContext with aws.BackgroundContext().
func (c *ELB) WaitUntilInstanceDeregistered(input *elb.DescribeInstanceHealthInput) error {
	return c.WaitUntilInstanceDeregisteredWithContext(aws.BackgroundContext(), input)
}

// WaitUntilInstanceDeregisteredWithContext calls the underlying client method with a request option that
// will count DescribeInstanceHealth requests.
func (c *ELB) WaitUntilInstanceDeregisteredWithContext(ctx aws.Context, input *elb.DescribeInstanceHealthInput, opts ...request.WaiterOption) error {
	opts = append(opts, request.WithWaiterRequestOptions(c.incViaRequestOption("DescribeInstanceHealth")))
	return c.svc.WaitUntilInstanceDeregisteredWithContext(ctx, input, opts...)
}

// WaitUntilInstanceInService calls WaitUntilInstanceInServiceWithContext with aws.BackgroundContext().
func (c *ELB) WaitUntilInstanceInService(input *elb.DescribeInstanceHealthInput) error {
	return c.WaitUntilInstanceInServiceWithContext(aws.BackgroundContext(), input)
}

// WaitUntilInstanceInServiceWithContext calls the underlying client method with a request option that
// will count DescribeInstanceHealth requests.
func (c *ELB) WaitUntilInstanceInServiceWithContext(ctx aws.Context, input *elb.DescribeInstanceHealthInput, opts ...request.WaiterOption) error {
	opts = append(opts, request.WithWaiterRequestOptions(c.incViaRequestOption("DescribeInstanceHealth")))
	return c.svc.WaitUntilInstanceInServiceWithContext(ctx, input, opts...)
}
