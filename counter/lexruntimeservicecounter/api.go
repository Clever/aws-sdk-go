// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package lexruntimeservicecounter

import (
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/lexruntimeservice"
)

// PostContentRequest is a passthrough to the underlying PostContentRequest.
// It will increment the count of requests made to PostContent.
func (c *LexRuntimeService) PostContentRequest(input *lexruntimeservice.PostContentInput) (req *request.Request, output *lexruntimeservice.PostContentOutput) {
	c.inc("PostContent")
	return c.svc.PostContentRequest(input)
}

// PostContent is a passthrough to the underlying PostContent method.
// It will increment the count of requests made to PostContent.
func (c *LexRuntimeService) PostContent(input *lexruntimeservice.PostContentInput) (*lexruntimeservice.PostContentOutput, error) {
	c.inc("PostContent")
	return c.svc.PostContent(input)
}

// PostContentWithContext is a passthrough to the underlying PostContentWithContext method.
// It will increment the count of requests made to PostContent.
func (c *LexRuntimeService) PostContentWithContext(ctx aws.Context, input *lexruntimeservice.PostContentInput, opts ...request.Option) (*lexruntimeservice.PostContentOutput, error) {
	c.inc("PostContent")
	return c.svc.PostContentWithContext(ctx, input, opts...)
}

// PostTextRequest is a passthrough to the underlying PostTextRequest.
// It will increment the count of requests made to PostText.
func (c *LexRuntimeService) PostTextRequest(input *lexruntimeservice.PostTextInput) (req *request.Request, output *lexruntimeservice.PostTextOutput) {
	c.inc("PostText")
	return c.svc.PostTextRequest(input)
}

// PostText is a passthrough to the underlying PostText method.
// It will increment the count of requests made to PostText.
func (c *LexRuntimeService) PostText(input *lexruntimeservice.PostTextInput) (*lexruntimeservice.PostTextOutput, error) {
	c.inc("PostText")
	return c.svc.PostText(input)
}

// PostTextWithContext is a passthrough to the underlying PostTextWithContext method.
// It will increment the count of requests made to PostText.
func (c *LexRuntimeService) PostTextWithContext(ctx aws.Context, input *lexruntimeservice.PostTextInput, opts ...request.Option) (*lexruntimeservice.PostTextOutput, error) {
	c.inc("PostText")
	return c.svc.PostTextWithContext(ctx, input, opts...)
}
