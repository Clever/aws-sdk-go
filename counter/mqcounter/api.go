// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package mqcounter

import (
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/mq"
)

// CreateBrokerRequest is a passthrough to the underlying CreateBrokerRequest.
// It will increment the count of requests made to CreateBroker.
func (c *MQ) CreateBrokerRequest(input *mq.CreateBrokerRequest) (req *request.Request, output *mq.CreateBrokerResponse) {
	c.inc("CreateBroker")
	return c.svc.CreateBrokerRequest(input)
}

// CreateBroker is a passthrough to the underlying CreateBroker method.
// It will increment the count of requests made to CreateBroker.
func (c *MQ) CreateBroker(input *mq.CreateBrokerRequest) (*mq.CreateBrokerResponse, error) {
	c.inc("CreateBroker")
	return c.svc.CreateBroker(input)
}

// CreateBrokerWithContext is a passthrough to the underlying CreateBrokerWithContext method.
// It will increment the count of requests made to CreateBroker.
func (c *MQ) CreateBrokerWithContext(ctx aws.Context, input *mq.CreateBrokerRequest, opts ...request.Option) (*mq.CreateBrokerResponse, error) {
	c.inc("CreateBroker")
	return c.svc.CreateBrokerWithContext(ctx, input, opts...)
}

// CreateConfigurationRequest is a passthrough to the underlying CreateConfigurationRequest.
// It will increment the count of requests made to CreateConfiguration.
func (c *MQ) CreateConfigurationRequest(input *mq.CreateConfigurationRequest) (req *request.Request, output *mq.CreateConfigurationResponse) {
	c.inc("CreateConfiguration")
	return c.svc.CreateConfigurationRequest(input)
}

// CreateConfiguration is a passthrough to the underlying CreateConfiguration method.
// It will increment the count of requests made to CreateConfiguration.
func (c *MQ) CreateConfiguration(input *mq.CreateConfigurationRequest) (*mq.CreateConfigurationResponse, error) {
	c.inc("CreateConfiguration")
	return c.svc.CreateConfiguration(input)
}

// CreateConfigurationWithContext is a passthrough to the underlying CreateConfigurationWithContext method.
// It will increment the count of requests made to CreateConfiguration.
func (c *MQ) CreateConfigurationWithContext(ctx aws.Context, input *mq.CreateConfigurationRequest, opts ...request.Option) (*mq.CreateConfigurationResponse, error) {
	c.inc("CreateConfiguration")
	return c.svc.CreateConfigurationWithContext(ctx, input, opts...)
}

// CreateUserRequest is a passthrough to the underlying CreateUserRequest.
// It will increment the count of requests made to CreateUser.
func (c *MQ) CreateUserRequest(input *mq.CreateUserRequest) (req *request.Request, output *mq.CreateUserOutput) {
	c.inc("CreateUser")
	return c.svc.CreateUserRequest(input)
}

// CreateUser is a passthrough to the underlying CreateUser method.
// It will increment the count of requests made to CreateUser.
func (c *MQ) CreateUser(input *mq.CreateUserRequest) (*mq.CreateUserOutput, error) {
	c.inc("CreateUser")
	return c.svc.CreateUser(input)
}

// CreateUserWithContext is a passthrough to the underlying CreateUserWithContext method.
// It will increment the count of requests made to CreateUser.
func (c *MQ) CreateUserWithContext(ctx aws.Context, input *mq.CreateUserRequest, opts ...request.Option) (*mq.CreateUserOutput, error) {
	c.inc("CreateUser")
	return c.svc.CreateUserWithContext(ctx, input, opts...)
}

// DeleteBrokerRequest is a passthrough to the underlying DeleteBrokerRequest.
// It will increment the count of requests made to DeleteBroker.
func (c *MQ) DeleteBrokerRequest(input *mq.DeleteBrokerInput) (req *request.Request, output *mq.DeleteBrokerResponse) {
	c.inc("DeleteBroker")
	return c.svc.DeleteBrokerRequest(input)
}

// DeleteBroker is a passthrough to the underlying DeleteBroker method.
// It will increment the count of requests made to DeleteBroker.
func (c *MQ) DeleteBroker(input *mq.DeleteBrokerInput) (*mq.DeleteBrokerResponse, error) {
	c.inc("DeleteBroker")
	return c.svc.DeleteBroker(input)
}

// DeleteBrokerWithContext is a passthrough to the underlying DeleteBrokerWithContext method.
// It will increment the count of requests made to DeleteBroker.
func (c *MQ) DeleteBrokerWithContext(ctx aws.Context, input *mq.DeleteBrokerInput, opts ...request.Option) (*mq.DeleteBrokerResponse, error) {
	c.inc("DeleteBroker")
	return c.svc.DeleteBrokerWithContext(ctx, input, opts...)
}

// DeleteUserRequest is a passthrough to the underlying DeleteUserRequest.
// It will increment the count of requests made to DeleteUser.
func (c *MQ) DeleteUserRequest(input *mq.DeleteUserInput) (req *request.Request, output *mq.DeleteUserOutput) {
	c.inc("DeleteUser")
	return c.svc.DeleteUserRequest(input)
}

// DeleteUser is a passthrough to the underlying DeleteUser method.
// It will increment the count of requests made to DeleteUser.
func (c *MQ) DeleteUser(input *mq.DeleteUserInput) (*mq.DeleteUserOutput, error) {
	c.inc("DeleteUser")
	return c.svc.DeleteUser(input)
}

// DeleteUserWithContext is a passthrough to the underlying DeleteUserWithContext method.
// It will increment the count of requests made to DeleteUser.
func (c *MQ) DeleteUserWithContext(ctx aws.Context, input *mq.DeleteUserInput, opts ...request.Option) (*mq.DeleteUserOutput, error) {
	c.inc("DeleteUser")
	return c.svc.DeleteUserWithContext(ctx, input, opts...)
}

// DescribeBrokerRequest is a passthrough to the underlying DescribeBrokerRequest.
// It will increment the count of requests made to DescribeBroker.
func (c *MQ) DescribeBrokerRequest(input *mq.DescribeBrokerInput) (req *request.Request, output *mq.DescribeBrokerResponse) {
	c.inc("DescribeBroker")
	return c.svc.DescribeBrokerRequest(input)
}

// DescribeBroker is a passthrough to the underlying DescribeBroker method.
// It will increment the count of requests made to DescribeBroker.
func (c *MQ) DescribeBroker(input *mq.DescribeBrokerInput) (*mq.DescribeBrokerResponse, error) {
	c.inc("DescribeBroker")
	return c.svc.DescribeBroker(input)
}

// DescribeBrokerWithContext is a passthrough to the underlying DescribeBrokerWithContext method.
// It will increment the count of requests made to DescribeBroker.
func (c *MQ) DescribeBrokerWithContext(ctx aws.Context, input *mq.DescribeBrokerInput, opts ...request.Option) (*mq.DescribeBrokerResponse, error) {
	c.inc("DescribeBroker")
	return c.svc.DescribeBrokerWithContext(ctx, input, opts...)
}

// DescribeConfigurationRequest is a passthrough to the underlying DescribeConfigurationRequest.
// It will increment the count of requests made to DescribeConfiguration.
func (c *MQ) DescribeConfigurationRequest(input *mq.DescribeConfigurationInput) (req *request.Request, output *mq.DescribeConfigurationOutput) {
	c.inc("DescribeConfiguration")
	return c.svc.DescribeConfigurationRequest(input)
}

// DescribeConfiguration is a passthrough to the underlying DescribeConfiguration method.
// It will increment the count of requests made to DescribeConfiguration.
func (c *MQ) DescribeConfiguration(input *mq.DescribeConfigurationInput) (*mq.DescribeConfigurationOutput, error) {
	c.inc("DescribeConfiguration")
	return c.svc.DescribeConfiguration(input)
}

// DescribeConfigurationWithContext is a passthrough to the underlying DescribeConfigurationWithContext method.
// It will increment the count of requests made to DescribeConfiguration.
func (c *MQ) DescribeConfigurationWithContext(ctx aws.Context, input *mq.DescribeConfigurationInput, opts ...request.Option) (*mq.DescribeConfigurationOutput, error) {
	c.inc("DescribeConfiguration")
	return c.svc.DescribeConfigurationWithContext(ctx, input, opts...)
}

// DescribeConfigurationRevisionRequest is a passthrough to the underlying DescribeConfigurationRevisionRequest.
// It will increment the count of requests made to DescribeConfigurationRevision.
func (c *MQ) DescribeConfigurationRevisionRequest(input *mq.DescribeConfigurationRevisionInput) (req *request.Request, output *mq.DescribeConfigurationRevisionResponse) {
	c.inc("DescribeConfigurationRevision")
	return c.svc.DescribeConfigurationRevisionRequest(input)
}

// DescribeConfigurationRevision is a passthrough to the underlying DescribeConfigurationRevision method.
// It will increment the count of requests made to DescribeConfigurationRevision.
func (c *MQ) DescribeConfigurationRevision(input *mq.DescribeConfigurationRevisionInput) (*mq.DescribeConfigurationRevisionResponse, error) {
	c.inc("DescribeConfigurationRevision")
	return c.svc.DescribeConfigurationRevision(input)
}

// DescribeConfigurationRevisionWithContext is a passthrough to the underlying DescribeConfigurationRevisionWithContext method.
// It will increment the count of requests made to DescribeConfigurationRevision.
func (c *MQ) DescribeConfigurationRevisionWithContext(ctx aws.Context, input *mq.DescribeConfigurationRevisionInput, opts ...request.Option) (*mq.DescribeConfigurationRevisionResponse, error) {
	c.inc("DescribeConfigurationRevision")
	return c.svc.DescribeConfigurationRevisionWithContext(ctx, input, opts...)
}

// DescribeUserRequest is a passthrough to the underlying DescribeUserRequest.
// It will increment the count of requests made to DescribeUser.
func (c *MQ) DescribeUserRequest(input *mq.DescribeUserInput) (req *request.Request, output *mq.DescribeUserResponse) {
	c.inc("DescribeUser")
	return c.svc.DescribeUserRequest(input)
}

// DescribeUser is a passthrough to the underlying DescribeUser method.
// It will increment the count of requests made to DescribeUser.
func (c *MQ) DescribeUser(input *mq.DescribeUserInput) (*mq.DescribeUserResponse, error) {
	c.inc("DescribeUser")
	return c.svc.DescribeUser(input)
}

// DescribeUserWithContext is a passthrough to the underlying DescribeUserWithContext method.
// It will increment the count of requests made to DescribeUser.
func (c *MQ) DescribeUserWithContext(ctx aws.Context, input *mq.DescribeUserInput, opts ...request.Option) (*mq.DescribeUserResponse, error) {
	c.inc("DescribeUser")
	return c.svc.DescribeUserWithContext(ctx, input, opts...)
}

// ListBrokersRequest is a passthrough to the underlying ListBrokersRequest.
// It will increment the count of requests made to ListBrokers.
func (c *MQ) ListBrokersRequest(input *mq.ListBrokersInput) (req *request.Request, output *mq.ListBrokersResponse) {
	c.inc("ListBrokers")
	return c.svc.ListBrokersRequest(input)
}

// ListBrokers is a passthrough to the underlying ListBrokers method.
// It will increment the count of requests made to ListBrokers.
func (c *MQ) ListBrokers(input *mq.ListBrokersInput) (*mq.ListBrokersResponse, error) {
	c.inc("ListBrokers")
	return c.svc.ListBrokers(input)
}

// ListBrokersWithContext is a passthrough to the underlying ListBrokersWithContext method.
// It will increment the count of requests made to ListBrokers.
func (c *MQ) ListBrokersWithContext(ctx aws.Context, input *mq.ListBrokersInput, opts ...request.Option) (*mq.ListBrokersResponse, error) {
	c.inc("ListBrokers")
	return c.svc.ListBrokersWithContext(ctx, input, opts...)
}

// ListConfigurationRevisionsRequest is a passthrough to the underlying ListConfigurationRevisionsRequest.
// It will increment the count of requests made to ListConfigurationRevisions.
func (c *MQ) ListConfigurationRevisionsRequest(input *mq.ListConfigurationRevisionsInput) (req *request.Request, output *mq.ListConfigurationRevisionsResponse) {
	c.inc("ListConfigurationRevisions")
	return c.svc.ListConfigurationRevisionsRequest(input)
}

// ListConfigurationRevisions is a passthrough to the underlying ListConfigurationRevisions method.
// It will increment the count of requests made to ListConfigurationRevisions.
func (c *MQ) ListConfigurationRevisions(input *mq.ListConfigurationRevisionsInput) (*mq.ListConfigurationRevisionsResponse, error) {
	c.inc("ListConfigurationRevisions")
	return c.svc.ListConfigurationRevisions(input)
}

// ListConfigurationRevisionsWithContext is a passthrough to the underlying ListConfigurationRevisionsWithContext method.
// It will increment the count of requests made to ListConfigurationRevisions.
func (c *MQ) ListConfigurationRevisionsWithContext(ctx aws.Context, input *mq.ListConfigurationRevisionsInput, opts ...request.Option) (*mq.ListConfigurationRevisionsResponse, error) {
	c.inc("ListConfigurationRevisions")
	return c.svc.ListConfigurationRevisionsWithContext(ctx, input, opts...)
}

// ListConfigurationsRequest is a passthrough to the underlying ListConfigurationsRequest.
// It will increment the count of requests made to ListConfigurations.
func (c *MQ) ListConfigurationsRequest(input *mq.ListConfigurationsInput) (req *request.Request, output *mq.ListConfigurationsResponse) {
	c.inc("ListConfigurations")
	return c.svc.ListConfigurationsRequest(input)
}

// ListConfigurations is a passthrough to the underlying ListConfigurations method.
// It will increment the count of requests made to ListConfigurations.
func (c *MQ) ListConfigurations(input *mq.ListConfigurationsInput) (*mq.ListConfigurationsResponse, error) {
	c.inc("ListConfigurations")
	return c.svc.ListConfigurations(input)
}

// ListConfigurationsWithContext is a passthrough to the underlying ListConfigurationsWithContext method.
// It will increment the count of requests made to ListConfigurations.
func (c *MQ) ListConfigurationsWithContext(ctx aws.Context, input *mq.ListConfigurationsInput, opts ...request.Option) (*mq.ListConfigurationsResponse, error) {
	c.inc("ListConfigurations")
	return c.svc.ListConfigurationsWithContext(ctx, input, opts...)
}

// ListUsersRequest is a passthrough to the underlying ListUsersRequest.
// It will increment the count of requests made to ListUsers.
func (c *MQ) ListUsersRequest(input *mq.ListUsersInput) (req *request.Request, output *mq.ListUsersResponse) {
	c.inc("ListUsers")
	return c.svc.ListUsersRequest(input)
}

// ListUsers is a passthrough to the underlying ListUsers method.
// It will increment the count of requests made to ListUsers.
func (c *MQ) ListUsers(input *mq.ListUsersInput) (*mq.ListUsersResponse, error) {
	c.inc("ListUsers")
	return c.svc.ListUsers(input)
}

// ListUsersWithContext is a passthrough to the underlying ListUsersWithContext method.
// It will increment the count of requests made to ListUsers.
func (c *MQ) ListUsersWithContext(ctx aws.Context, input *mq.ListUsersInput, opts ...request.Option) (*mq.ListUsersResponse, error) {
	c.inc("ListUsers")
	return c.svc.ListUsersWithContext(ctx, input, opts...)
}

// RebootBrokerRequest is a passthrough to the underlying RebootBrokerRequest.
// It will increment the count of requests made to RebootBroker.
func (c *MQ) RebootBrokerRequest(input *mq.RebootBrokerInput) (req *request.Request, output *mq.RebootBrokerOutput) {
	c.inc("RebootBroker")
	return c.svc.RebootBrokerRequest(input)
}

// RebootBroker is a passthrough to the underlying RebootBroker method.
// It will increment the count of requests made to RebootBroker.
func (c *MQ) RebootBroker(input *mq.RebootBrokerInput) (*mq.RebootBrokerOutput, error) {
	c.inc("RebootBroker")
	return c.svc.RebootBroker(input)
}

// RebootBrokerWithContext is a passthrough to the underlying RebootBrokerWithContext method.
// It will increment the count of requests made to RebootBroker.
func (c *MQ) RebootBrokerWithContext(ctx aws.Context, input *mq.RebootBrokerInput, opts ...request.Option) (*mq.RebootBrokerOutput, error) {
	c.inc("RebootBroker")
	return c.svc.RebootBrokerWithContext(ctx, input, opts...)
}

// UpdateBrokerRequest is a passthrough to the underlying UpdateBrokerRequest.
// It will increment the count of requests made to UpdateBroker.
func (c *MQ) UpdateBrokerRequest(input *mq.UpdateBrokerRequest) (req *request.Request, output *mq.UpdateBrokerResponse) {
	c.inc("UpdateBroker")
	return c.svc.UpdateBrokerRequest(input)
}

// UpdateBroker is a passthrough to the underlying UpdateBroker method.
// It will increment the count of requests made to UpdateBroker.
func (c *MQ) UpdateBroker(input *mq.UpdateBrokerRequest) (*mq.UpdateBrokerResponse, error) {
	c.inc("UpdateBroker")
	return c.svc.UpdateBroker(input)
}

// UpdateBrokerWithContext is a passthrough to the underlying UpdateBrokerWithContext method.
// It will increment the count of requests made to UpdateBroker.
func (c *MQ) UpdateBrokerWithContext(ctx aws.Context, input *mq.UpdateBrokerRequest, opts ...request.Option) (*mq.UpdateBrokerResponse, error) {
	c.inc("UpdateBroker")
	return c.svc.UpdateBrokerWithContext(ctx, input, opts...)
}

// UpdateConfigurationRequest is a passthrough to the underlying UpdateConfigurationRequest.
// It will increment the count of requests made to UpdateConfiguration.
func (c *MQ) UpdateConfigurationRequest(input *mq.UpdateConfigurationRequest) (req *request.Request, output *mq.UpdateConfigurationResponse) {
	c.inc("UpdateConfiguration")
	return c.svc.UpdateConfigurationRequest(input)
}

// UpdateConfiguration is a passthrough to the underlying UpdateConfiguration method.
// It will increment the count of requests made to UpdateConfiguration.
func (c *MQ) UpdateConfiguration(input *mq.UpdateConfigurationRequest) (*mq.UpdateConfigurationResponse, error) {
	c.inc("UpdateConfiguration")
	return c.svc.UpdateConfiguration(input)
}

// UpdateConfigurationWithContext is a passthrough to the underlying UpdateConfigurationWithContext method.
// It will increment the count of requests made to UpdateConfiguration.
func (c *MQ) UpdateConfigurationWithContext(ctx aws.Context, input *mq.UpdateConfigurationRequest, opts ...request.Option) (*mq.UpdateConfigurationResponse, error) {
	c.inc("UpdateConfiguration")
	return c.svc.UpdateConfigurationWithContext(ctx, input, opts...)
}

// UpdateUserRequest is a passthrough to the underlying UpdateUserRequest.
// It will increment the count of requests made to UpdateUser.
func (c *MQ) UpdateUserRequest(input *mq.UpdateUserRequest) (req *request.Request, output *mq.UpdateUserOutput) {
	c.inc("UpdateUser")
	return c.svc.UpdateUserRequest(input)
}

// UpdateUser is a passthrough to the underlying UpdateUser method.
// It will increment the count of requests made to UpdateUser.
func (c *MQ) UpdateUser(input *mq.UpdateUserRequest) (*mq.UpdateUserOutput, error) {
	c.inc("UpdateUser")
	return c.svc.UpdateUser(input)
}

// UpdateUserWithContext is a passthrough to the underlying UpdateUserWithContext method.
// It will increment the count of requests made to UpdateUser.
func (c *MQ) UpdateUserWithContext(ctx aws.Context, input *mq.UpdateUserRequest, opts ...request.Option) (*mq.UpdateUserOutput, error) {
	c.inc("UpdateUser")
	return c.svc.UpdateUserWithContext(ctx, input, opts...)
}
