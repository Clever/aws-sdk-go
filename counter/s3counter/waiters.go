// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package s3counter

import (
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/s3"
)

// WaitUntilBucketExists calls WaitUntilBucketExistsWithContext with aws.BackgroundContext().
func (c *S3) WaitUntilBucketExists(input *s3.HeadBucketInput) error {
	return c.WaitUntilBucketExistsWithContext(aws.BackgroundContext(), input)
}

// WaitUntilBucketExistsWithContext calls the underlying client method with a request option that
// will count HeadBucket requests.
func (c *S3) WaitUntilBucketExistsWithContext(ctx aws.Context, input *s3.HeadBucketInput, opts ...request.WaiterOption) error {
	opts = append(opts, request.WithWaiterRequestOptions(c.incViaRequestOption("HeadBucket")))
	return c.svc.WaitUntilBucketExistsWithContext(ctx, input, opts...)
}

// WaitUntilBucketNotExists calls WaitUntilBucketNotExistsWithContext with aws.BackgroundContext().
func (c *S3) WaitUntilBucketNotExists(input *s3.HeadBucketInput) error {
	return c.WaitUntilBucketNotExistsWithContext(aws.BackgroundContext(), input)
}

// WaitUntilBucketNotExistsWithContext calls the underlying client method with a request option that
// will count HeadBucket requests.
func (c *S3) WaitUntilBucketNotExistsWithContext(ctx aws.Context, input *s3.HeadBucketInput, opts ...request.WaiterOption) error {
	opts = append(opts, request.WithWaiterRequestOptions(c.incViaRequestOption("HeadBucket")))
	return c.svc.WaitUntilBucketNotExistsWithContext(ctx, input, opts...)
}

// WaitUntilObjectExists calls WaitUntilObjectExistsWithContext with aws.BackgroundContext().
func (c *S3) WaitUntilObjectExists(input *s3.HeadObjectInput) error {
	return c.WaitUntilObjectExistsWithContext(aws.BackgroundContext(), input)
}

// WaitUntilObjectExistsWithContext calls the underlying client method with a request option that
// will count HeadObject requests.
func (c *S3) WaitUntilObjectExistsWithContext(ctx aws.Context, input *s3.HeadObjectInput, opts ...request.WaiterOption) error {
	opts = append(opts, request.WithWaiterRequestOptions(c.incViaRequestOption("HeadObject")))
	return c.svc.WaitUntilObjectExistsWithContext(ctx, input, opts...)
}

// WaitUntilObjectNotExists calls WaitUntilObjectNotExistsWithContext with aws.BackgroundContext().
func (c *S3) WaitUntilObjectNotExists(input *s3.HeadObjectInput) error {
	return c.WaitUntilObjectNotExistsWithContext(aws.BackgroundContext(), input)
}

// WaitUntilObjectNotExistsWithContext calls the underlying client method with a request option that
// will count HeadObject requests.
func (c *S3) WaitUntilObjectNotExistsWithContext(ctx aws.Context, input *s3.HeadObjectInput, opts ...request.WaiterOption) error {
	opts = append(opts, request.WithWaiterRequestOptions(c.incViaRequestOption("HeadObject")))
	return c.svc.WaitUntilObjectNotExistsWithContext(ctx, input, opts...)
}
