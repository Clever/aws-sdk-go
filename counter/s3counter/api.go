// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package s3counter

import (
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/s3"
)

// AbortMultipartUploadRequest is a passthrough to the underlying AbortMultipartUploadRequest.
// It will increment the count of requests made to AbortMultipartUpload.
func (c *S3) AbortMultipartUploadRequest(input *s3.AbortMultipartUploadInput) (req *request.Request, output *s3.AbortMultipartUploadOutput) {
	c.inc("AbortMultipartUpload")
	return c.svc.AbortMultipartUploadRequest(input)
}

// AbortMultipartUpload is a passthrough to the underlying AbortMultipartUpload method.
// It will increment the count of requests made to AbortMultipartUpload.
func (c *S3) AbortMultipartUpload(input *s3.AbortMultipartUploadInput) (*s3.AbortMultipartUploadOutput, error) {
	c.inc("AbortMultipartUpload")
	return c.svc.AbortMultipartUpload(input)
}

// AbortMultipartUploadWithContext is a passthrough to the underlying AbortMultipartUploadWithContext method.
// It will increment the count of requests made to AbortMultipartUpload.
func (c *S3) AbortMultipartUploadWithContext(ctx aws.Context, input *s3.AbortMultipartUploadInput, opts ...request.Option) (*s3.AbortMultipartUploadOutput, error) {
	c.inc("AbortMultipartUpload")
	return c.svc.AbortMultipartUploadWithContext(ctx, input, opts...)
}

// CompleteMultipartUploadRequest is a passthrough to the underlying CompleteMultipartUploadRequest.
// It will increment the count of requests made to CompleteMultipartUpload.
func (c *S3) CompleteMultipartUploadRequest(input *s3.CompleteMultipartUploadInput) (req *request.Request, output *s3.CompleteMultipartUploadOutput) {
	c.inc("CompleteMultipartUpload")
	return c.svc.CompleteMultipartUploadRequest(input)
}

// CompleteMultipartUpload is a passthrough to the underlying CompleteMultipartUpload method.
// It will increment the count of requests made to CompleteMultipartUpload.
func (c *S3) CompleteMultipartUpload(input *s3.CompleteMultipartUploadInput) (*s3.CompleteMultipartUploadOutput, error) {
	c.inc("CompleteMultipartUpload")
	return c.svc.CompleteMultipartUpload(input)
}

// CompleteMultipartUploadWithContext is a passthrough to the underlying CompleteMultipartUploadWithContext method.
// It will increment the count of requests made to CompleteMultipartUpload.
func (c *S3) CompleteMultipartUploadWithContext(ctx aws.Context, input *s3.CompleteMultipartUploadInput, opts ...request.Option) (*s3.CompleteMultipartUploadOutput, error) {
	c.inc("CompleteMultipartUpload")
	return c.svc.CompleteMultipartUploadWithContext(ctx, input, opts...)
}

// CopyObjectRequest is a passthrough to the underlying CopyObjectRequest.
// It will increment the count of requests made to CopyObject.
func (c *S3) CopyObjectRequest(input *s3.CopyObjectInput) (req *request.Request, output *s3.CopyObjectOutput) {
	c.inc("CopyObject")
	return c.svc.CopyObjectRequest(input)
}

// CopyObject is a passthrough to the underlying CopyObject method.
// It will increment the count of requests made to CopyObject.
func (c *S3) CopyObject(input *s3.CopyObjectInput) (*s3.CopyObjectOutput, error) {
	c.inc("CopyObject")
	return c.svc.CopyObject(input)
}

// CopyObjectWithContext is a passthrough to the underlying CopyObjectWithContext method.
// It will increment the count of requests made to CopyObject.
func (c *S3) CopyObjectWithContext(ctx aws.Context, input *s3.CopyObjectInput, opts ...request.Option) (*s3.CopyObjectOutput, error) {
	c.inc("CopyObject")
	return c.svc.CopyObjectWithContext(ctx, input, opts...)
}

// CreateBucketRequest is a passthrough to the underlying CreateBucketRequest.
// It will increment the count of requests made to CreateBucket.
func (c *S3) CreateBucketRequest(input *s3.CreateBucketInput) (req *request.Request, output *s3.CreateBucketOutput) {
	c.inc("CreateBucket")
	return c.svc.CreateBucketRequest(input)
}

// CreateBucket is a passthrough to the underlying CreateBucket method.
// It will increment the count of requests made to CreateBucket.
func (c *S3) CreateBucket(input *s3.CreateBucketInput) (*s3.CreateBucketOutput, error) {
	c.inc("CreateBucket")
	return c.svc.CreateBucket(input)
}

// CreateBucketWithContext is a passthrough to the underlying CreateBucketWithContext method.
// It will increment the count of requests made to CreateBucket.
func (c *S3) CreateBucketWithContext(ctx aws.Context, input *s3.CreateBucketInput, opts ...request.Option) (*s3.CreateBucketOutput, error) {
	c.inc("CreateBucket")
	return c.svc.CreateBucketWithContext(ctx, input, opts...)
}

// CreateMultipartUploadRequest is a passthrough to the underlying CreateMultipartUploadRequest.
// It will increment the count of requests made to CreateMultipartUpload.
func (c *S3) CreateMultipartUploadRequest(input *s3.CreateMultipartUploadInput) (req *request.Request, output *s3.CreateMultipartUploadOutput) {
	c.inc("CreateMultipartUpload")
	return c.svc.CreateMultipartUploadRequest(input)
}

// CreateMultipartUpload is a passthrough to the underlying CreateMultipartUpload method.
// It will increment the count of requests made to CreateMultipartUpload.
func (c *S3) CreateMultipartUpload(input *s3.CreateMultipartUploadInput) (*s3.CreateMultipartUploadOutput, error) {
	c.inc("CreateMultipartUpload")
	return c.svc.CreateMultipartUpload(input)
}

// CreateMultipartUploadWithContext is a passthrough to the underlying CreateMultipartUploadWithContext method.
// It will increment the count of requests made to CreateMultipartUpload.
func (c *S3) CreateMultipartUploadWithContext(ctx aws.Context, input *s3.CreateMultipartUploadInput, opts ...request.Option) (*s3.CreateMultipartUploadOutput, error) {
	c.inc("CreateMultipartUpload")
	return c.svc.CreateMultipartUploadWithContext(ctx, input, opts...)
}

// DeleteBucketRequest is a passthrough to the underlying DeleteBucketRequest.
// It will increment the count of requests made to DeleteBucket.
func (c *S3) DeleteBucketRequest(input *s3.DeleteBucketInput) (req *request.Request, output *s3.DeleteBucketOutput) {
	c.inc("DeleteBucket")
	return c.svc.DeleteBucketRequest(input)
}

// DeleteBucket is a passthrough to the underlying DeleteBucket method.
// It will increment the count of requests made to DeleteBucket.
func (c *S3) DeleteBucket(input *s3.DeleteBucketInput) (*s3.DeleteBucketOutput, error) {
	c.inc("DeleteBucket")
	return c.svc.DeleteBucket(input)
}

// DeleteBucketWithContext is a passthrough to the underlying DeleteBucketWithContext method.
// It will increment the count of requests made to DeleteBucket.
func (c *S3) DeleteBucketWithContext(ctx aws.Context, input *s3.DeleteBucketInput, opts ...request.Option) (*s3.DeleteBucketOutput, error) {
	c.inc("DeleteBucket")
	return c.svc.DeleteBucketWithContext(ctx, input, opts...)
}

// DeleteBucketAnalyticsConfigurationRequest is a passthrough to the underlying DeleteBucketAnalyticsConfigurationRequest.
// It will increment the count of requests made to DeleteBucketAnalyticsConfiguration.
func (c *S3) DeleteBucketAnalyticsConfigurationRequest(input *s3.DeleteBucketAnalyticsConfigurationInput) (req *request.Request, output *s3.DeleteBucketAnalyticsConfigurationOutput) {
	c.inc("DeleteBucketAnalyticsConfiguration")
	return c.svc.DeleteBucketAnalyticsConfigurationRequest(input)
}

// DeleteBucketAnalyticsConfiguration is a passthrough to the underlying DeleteBucketAnalyticsConfiguration method.
// It will increment the count of requests made to DeleteBucketAnalyticsConfiguration.
func (c *S3) DeleteBucketAnalyticsConfiguration(input *s3.DeleteBucketAnalyticsConfigurationInput) (*s3.DeleteBucketAnalyticsConfigurationOutput, error) {
	c.inc("DeleteBucketAnalyticsConfiguration")
	return c.svc.DeleteBucketAnalyticsConfiguration(input)
}

// DeleteBucketAnalyticsConfigurationWithContext is a passthrough to the underlying DeleteBucketAnalyticsConfigurationWithContext method.
// It will increment the count of requests made to DeleteBucketAnalyticsConfiguration.
func (c *S3) DeleteBucketAnalyticsConfigurationWithContext(ctx aws.Context, input *s3.DeleteBucketAnalyticsConfigurationInput, opts ...request.Option) (*s3.DeleteBucketAnalyticsConfigurationOutput, error) {
	c.inc("DeleteBucketAnalyticsConfiguration")
	return c.svc.DeleteBucketAnalyticsConfigurationWithContext(ctx, input, opts...)
}

// DeleteBucketCorsRequest is a passthrough to the underlying DeleteBucketCorsRequest.
// It will increment the count of requests made to DeleteBucketCors.
func (c *S3) DeleteBucketCorsRequest(input *s3.DeleteBucketCorsInput) (req *request.Request, output *s3.DeleteBucketCorsOutput) {
	c.inc("DeleteBucketCors")
	return c.svc.DeleteBucketCorsRequest(input)
}

// DeleteBucketCors is a passthrough to the underlying DeleteBucketCors method.
// It will increment the count of requests made to DeleteBucketCors.
func (c *S3) DeleteBucketCors(input *s3.DeleteBucketCorsInput) (*s3.DeleteBucketCorsOutput, error) {
	c.inc("DeleteBucketCors")
	return c.svc.DeleteBucketCors(input)
}

// DeleteBucketCorsWithContext is a passthrough to the underlying DeleteBucketCorsWithContext method.
// It will increment the count of requests made to DeleteBucketCors.
func (c *S3) DeleteBucketCorsWithContext(ctx aws.Context, input *s3.DeleteBucketCorsInput, opts ...request.Option) (*s3.DeleteBucketCorsOutput, error) {
	c.inc("DeleteBucketCors")
	return c.svc.DeleteBucketCorsWithContext(ctx, input, opts...)
}

// DeleteBucketInventoryConfigurationRequest is a passthrough to the underlying DeleteBucketInventoryConfigurationRequest.
// It will increment the count of requests made to DeleteBucketInventoryConfiguration.
func (c *S3) DeleteBucketInventoryConfigurationRequest(input *s3.DeleteBucketInventoryConfigurationInput) (req *request.Request, output *s3.DeleteBucketInventoryConfigurationOutput) {
	c.inc("DeleteBucketInventoryConfiguration")
	return c.svc.DeleteBucketInventoryConfigurationRequest(input)
}

// DeleteBucketInventoryConfiguration is a passthrough to the underlying DeleteBucketInventoryConfiguration method.
// It will increment the count of requests made to DeleteBucketInventoryConfiguration.
func (c *S3) DeleteBucketInventoryConfiguration(input *s3.DeleteBucketInventoryConfigurationInput) (*s3.DeleteBucketInventoryConfigurationOutput, error) {
	c.inc("DeleteBucketInventoryConfiguration")
	return c.svc.DeleteBucketInventoryConfiguration(input)
}

// DeleteBucketInventoryConfigurationWithContext is a passthrough to the underlying DeleteBucketInventoryConfigurationWithContext method.
// It will increment the count of requests made to DeleteBucketInventoryConfiguration.
func (c *S3) DeleteBucketInventoryConfigurationWithContext(ctx aws.Context, input *s3.DeleteBucketInventoryConfigurationInput, opts ...request.Option) (*s3.DeleteBucketInventoryConfigurationOutput, error) {
	c.inc("DeleteBucketInventoryConfiguration")
	return c.svc.DeleteBucketInventoryConfigurationWithContext(ctx, input, opts...)
}

// DeleteBucketLifecycleRequest is a passthrough to the underlying DeleteBucketLifecycleRequest.
// It will increment the count of requests made to DeleteBucketLifecycle.
func (c *S3) DeleteBucketLifecycleRequest(input *s3.DeleteBucketLifecycleInput) (req *request.Request, output *s3.DeleteBucketLifecycleOutput) {
	c.inc("DeleteBucketLifecycle")
	return c.svc.DeleteBucketLifecycleRequest(input)
}

// DeleteBucketLifecycle is a passthrough to the underlying DeleteBucketLifecycle method.
// It will increment the count of requests made to DeleteBucketLifecycle.
func (c *S3) DeleteBucketLifecycle(input *s3.DeleteBucketLifecycleInput) (*s3.DeleteBucketLifecycleOutput, error) {
	c.inc("DeleteBucketLifecycle")
	return c.svc.DeleteBucketLifecycle(input)
}

// DeleteBucketLifecycleWithContext is a passthrough to the underlying DeleteBucketLifecycleWithContext method.
// It will increment the count of requests made to DeleteBucketLifecycle.
func (c *S3) DeleteBucketLifecycleWithContext(ctx aws.Context, input *s3.DeleteBucketLifecycleInput, opts ...request.Option) (*s3.DeleteBucketLifecycleOutput, error) {
	c.inc("DeleteBucketLifecycle")
	return c.svc.DeleteBucketLifecycleWithContext(ctx, input, opts...)
}

// DeleteBucketMetricsConfigurationRequest is a passthrough to the underlying DeleteBucketMetricsConfigurationRequest.
// It will increment the count of requests made to DeleteBucketMetricsConfiguration.
func (c *S3) DeleteBucketMetricsConfigurationRequest(input *s3.DeleteBucketMetricsConfigurationInput) (req *request.Request, output *s3.DeleteBucketMetricsConfigurationOutput) {
	c.inc("DeleteBucketMetricsConfiguration")
	return c.svc.DeleteBucketMetricsConfigurationRequest(input)
}

// DeleteBucketMetricsConfiguration is a passthrough to the underlying DeleteBucketMetricsConfiguration method.
// It will increment the count of requests made to DeleteBucketMetricsConfiguration.
func (c *S3) DeleteBucketMetricsConfiguration(input *s3.DeleteBucketMetricsConfigurationInput) (*s3.DeleteBucketMetricsConfigurationOutput, error) {
	c.inc("DeleteBucketMetricsConfiguration")
	return c.svc.DeleteBucketMetricsConfiguration(input)
}

// DeleteBucketMetricsConfigurationWithContext is a passthrough to the underlying DeleteBucketMetricsConfigurationWithContext method.
// It will increment the count of requests made to DeleteBucketMetricsConfiguration.
func (c *S3) DeleteBucketMetricsConfigurationWithContext(ctx aws.Context, input *s3.DeleteBucketMetricsConfigurationInput, opts ...request.Option) (*s3.DeleteBucketMetricsConfigurationOutput, error) {
	c.inc("DeleteBucketMetricsConfiguration")
	return c.svc.DeleteBucketMetricsConfigurationWithContext(ctx, input, opts...)
}

// DeleteBucketPolicyRequest is a passthrough to the underlying DeleteBucketPolicyRequest.
// It will increment the count of requests made to DeleteBucketPolicy.
func (c *S3) DeleteBucketPolicyRequest(input *s3.DeleteBucketPolicyInput) (req *request.Request, output *s3.DeleteBucketPolicyOutput) {
	c.inc("DeleteBucketPolicy")
	return c.svc.DeleteBucketPolicyRequest(input)
}

// DeleteBucketPolicy is a passthrough to the underlying DeleteBucketPolicy method.
// It will increment the count of requests made to DeleteBucketPolicy.
func (c *S3) DeleteBucketPolicy(input *s3.DeleteBucketPolicyInput) (*s3.DeleteBucketPolicyOutput, error) {
	c.inc("DeleteBucketPolicy")
	return c.svc.DeleteBucketPolicy(input)
}

// DeleteBucketPolicyWithContext is a passthrough to the underlying DeleteBucketPolicyWithContext method.
// It will increment the count of requests made to DeleteBucketPolicy.
func (c *S3) DeleteBucketPolicyWithContext(ctx aws.Context, input *s3.DeleteBucketPolicyInput, opts ...request.Option) (*s3.DeleteBucketPolicyOutput, error) {
	c.inc("DeleteBucketPolicy")
	return c.svc.DeleteBucketPolicyWithContext(ctx, input, opts...)
}

// DeleteBucketReplicationRequest is a passthrough to the underlying DeleteBucketReplicationRequest.
// It will increment the count of requests made to DeleteBucketReplication.
func (c *S3) DeleteBucketReplicationRequest(input *s3.DeleteBucketReplicationInput) (req *request.Request, output *s3.DeleteBucketReplicationOutput) {
	c.inc("DeleteBucketReplication")
	return c.svc.DeleteBucketReplicationRequest(input)
}

// DeleteBucketReplication is a passthrough to the underlying DeleteBucketReplication method.
// It will increment the count of requests made to DeleteBucketReplication.
func (c *S3) DeleteBucketReplication(input *s3.DeleteBucketReplicationInput) (*s3.DeleteBucketReplicationOutput, error) {
	c.inc("DeleteBucketReplication")
	return c.svc.DeleteBucketReplication(input)
}

// DeleteBucketReplicationWithContext is a passthrough to the underlying DeleteBucketReplicationWithContext method.
// It will increment the count of requests made to DeleteBucketReplication.
func (c *S3) DeleteBucketReplicationWithContext(ctx aws.Context, input *s3.DeleteBucketReplicationInput, opts ...request.Option) (*s3.DeleteBucketReplicationOutput, error) {
	c.inc("DeleteBucketReplication")
	return c.svc.DeleteBucketReplicationWithContext(ctx, input, opts...)
}

// DeleteBucketTaggingRequest is a passthrough to the underlying DeleteBucketTaggingRequest.
// It will increment the count of requests made to DeleteBucketTagging.
func (c *S3) DeleteBucketTaggingRequest(input *s3.DeleteBucketTaggingInput) (req *request.Request, output *s3.DeleteBucketTaggingOutput) {
	c.inc("DeleteBucketTagging")
	return c.svc.DeleteBucketTaggingRequest(input)
}

// DeleteBucketTagging is a passthrough to the underlying DeleteBucketTagging method.
// It will increment the count of requests made to DeleteBucketTagging.
func (c *S3) DeleteBucketTagging(input *s3.DeleteBucketTaggingInput) (*s3.DeleteBucketTaggingOutput, error) {
	c.inc("DeleteBucketTagging")
	return c.svc.DeleteBucketTagging(input)
}

// DeleteBucketTaggingWithContext is a passthrough to the underlying DeleteBucketTaggingWithContext method.
// It will increment the count of requests made to DeleteBucketTagging.
func (c *S3) DeleteBucketTaggingWithContext(ctx aws.Context, input *s3.DeleteBucketTaggingInput, opts ...request.Option) (*s3.DeleteBucketTaggingOutput, error) {
	c.inc("DeleteBucketTagging")
	return c.svc.DeleteBucketTaggingWithContext(ctx, input, opts...)
}

// DeleteBucketWebsiteRequest is a passthrough to the underlying DeleteBucketWebsiteRequest.
// It will increment the count of requests made to DeleteBucketWebsite.
func (c *S3) DeleteBucketWebsiteRequest(input *s3.DeleteBucketWebsiteInput) (req *request.Request, output *s3.DeleteBucketWebsiteOutput) {
	c.inc("DeleteBucketWebsite")
	return c.svc.DeleteBucketWebsiteRequest(input)
}

// DeleteBucketWebsite is a passthrough to the underlying DeleteBucketWebsite method.
// It will increment the count of requests made to DeleteBucketWebsite.
func (c *S3) DeleteBucketWebsite(input *s3.DeleteBucketWebsiteInput) (*s3.DeleteBucketWebsiteOutput, error) {
	c.inc("DeleteBucketWebsite")
	return c.svc.DeleteBucketWebsite(input)
}

// DeleteBucketWebsiteWithContext is a passthrough to the underlying DeleteBucketWebsiteWithContext method.
// It will increment the count of requests made to DeleteBucketWebsite.
func (c *S3) DeleteBucketWebsiteWithContext(ctx aws.Context, input *s3.DeleteBucketWebsiteInput, opts ...request.Option) (*s3.DeleteBucketWebsiteOutput, error) {
	c.inc("DeleteBucketWebsite")
	return c.svc.DeleteBucketWebsiteWithContext(ctx, input, opts...)
}

// DeleteObjectRequest is a passthrough to the underlying DeleteObjectRequest.
// It will increment the count of requests made to DeleteObject.
func (c *S3) DeleteObjectRequest(input *s3.DeleteObjectInput) (req *request.Request, output *s3.DeleteObjectOutput) {
	c.inc("DeleteObject")
	return c.svc.DeleteObjectRequest(input)
}

// DeleteObject is a passthrough to the underlying DeleteObject method.
// It will increment the count of requests made to DeleteObject.
func (c *S3) DeleteObject(input *s3.DeleteObjectInput) (*s3.DeleteObjectOutput, error) {
	c.inc("DeleteObject")
	return c.svc.DeleteObject(input)
}

// DeleteObjectWithContext is a passthrough to the underlying DeleteObjectWithContext method.
// It will increment the count of requests made to DeleteObject.
func (c *S3) DeleteObjectWithContext(ctx aws.Context, input *s3.DeleteObjectInput, opts ...request.Option) (*s3.DeleteObjectOutput, error) {
	c.inc("DeleteObject")
	return c.svc.DeleteObjectWithContext(ctx, input, opts...)
}

// DeleteObjectTaggingRequest is a passthrough to the underlying DeleteObjectTaggingRequest.
// It will increment the count of requests made to DeleteObjectTagging.
func (c *S3) DeleteObjectTaggingRequest(input *s3.DeleteObjectTaggingInput) (req *request.Request, output *s3.DeleteObjectTaggingOutput) {
	c.inc("DeleteObjectTagging")
	return c.svc.DeleteObjectTaggingRequest(input)
}

// DeleteObjectTagging is a passthrough to the underlying DeleteObjectTagging method.
// It will increment the count of requests made to DeleteObjectTagging.
func (c *S3) DeleteObjectTagging(input *s3.DeleteObjectTaggingInput) (*s3.DeleteObjectTaggingOutput, error) {
	c.inc("DeleteObjectTagging")
	return c.svc.DeleteObjectTagging(input)
}

// DeleteObjectTaggingWithContext is a passthrough to the underlying DeleteObjectTaggingWithContext method.
// It will increment the count of requests made to DeleteObjectTagging.
func (c *S3) DeleteObjectTaggingWithContext(ctx aws.Context, input *s3.DeleteObjectTaggingInput, opts ...request.Option) (*s3.DeleteObjectTaggingOutput, error) {
	c.inc("DeleteObjectTagging")
	return c.svc.DeleteObjectTaggingWithContext(ctx, input, opts...)
}

// DeleteObjectsRequest is a passthrough to the underlying DeleteObjectsRequest.
// It will increment the count of requests made to DeleteObjects.
func (c *S3) DeleteObjectsRequest(input *s3.DeleteObjectsInput) (req *request.Request, output *s3.DeleteObjectsOutput) {
	c.inc("DeleteObjects")
	return c.svc.DeleteObjectsRequest(input)
}

// DeleteObjects is a passthrough to the underlying DeleteObjects method.
// It will increment the count of requests made to DeleteObjects.
func (c *S3) DeleteObjects(input *s3.DeleteObjectsInput) (*s3.DeleteObjectsOutput, error) {
	c.inc("DeleteObjects")
	return c.svc.DeleteObjects(input)
}

// DeleteObjectsWithContext is a passthrough to the underlying DeleteObjectsWithContext method.
// It will increment the count of requests made to DeleteObjects.
func (c *S3) DeleteObjectsWithContext(ctx aws.Context, input *s3.DeleteObjectsInput, opts ...request.Option) (*s3.DeleteObjectsOutput, error) {
	c.inc("DeleteObjects")
	return c.svc.DeleteObjectsWithContext(ctx, input, opts...)
}

// GetBucketAccelerateConfigurationRequest is a passthrough to the underlying GetBucketAccelerateConfigurationRequest.
// It will increment the count of requests made to GetBucketAccelerateConfiguration.
func (c *S3) GetBucketAccelerateConfigurationRequest(input *s3.GetBucketAccelerateConfigurationInput) (req *request.Request, output *s3.GetBucketAccelerateConfigurationOutput) {
	c.inc("GetBucketAccelerateConfiguration")
	return c.svc.GetBucketAccelerateConfigurationRequest(input)
}

// GetBucketAccelerateConfiguration is a passthrough to the underlying GetBucketAccelerateConfiguration method.
// It will increment the count of requests made to GetBucketAccelerateConfiguration.
func (c *S3) GetBucketAccelerateConfiguration(input *s3.GetBucketAccelerateConfigurationInput) (*s3.GetBucketAccelerateConfigurationOutput, error) {
	c.inc("GetBucketAccelerateConfiguration")
	return c.svc.GetBucketAccelerateConfiguration(input)
}

// GetBucketAccelerateConfigurationWithContext is a passthrough to the underlying GetBucketAccelerateConfigurationWithContext method.
// It will increment the count of requests made to GetBucketAccelerateConfiguration.
func (c *S3) GetBucketAccelerateConfigurationWithContext(ctx aws.Context, input *s3.GetBucketAccelerateConfigurationInput, opts ...request.Option) (*s3.GetBucketAccelerateConfigurationOutput, error) {
	c.inc("GetBucketAccelerateConfiguration")
	return c.svc.GetBucketAccelerateConfigurationWithContext(ctx, input, opts...)
}

// GetBucketAclRequest is a passthrough to the underlying GetBucketAclRequest.
// It will increment the count of requests made to GetBucketAcl.
func (c *S3) GetBucketAclRequest(input *s3.GetBucketAclInput) (req *request.Request, output *s3.GetBucketAclOutput) {
	c.inc("GetBucketAcl")
	return c.svc.GetBucketAclRequest(input)
}

// GetBucketAcl is a passthrough to the underlying GetBucketAcl method.
// It will increment the count of requests made to GetBucketAcl.
func (c *S3) GetBucketAcl(input *s3.GetBucketAclInput) (*s3.GetBucketAclOutput, error) {
	c.inc("GetBucketAcl")
	return c.svc.GetBucketAcl(input)
}

// GetBucketAclWithContext is a passthrough to the underlying GetBucketAclWithContext method.
// It will increment the count of requests made to GetBucketAcl.
func (c *S3) GetBucketAclWithContext(ctx aws.Context, input *s3.GetBucketAclInput, opts ...request.Option) (*s3.GetBucketAclOutput, error) {
	c.inc("GetBucketAcl")
	return c.svc.GetBucketAclWithContext(ctx, input, opts...)
}

// GetBucketAnalyticsConfigurationRequest is a passthrough to the underlying GetBucketAnalyticsConfigurationRequest.
// It will increment the count of requests made to GetBucketAnalyticsConfiguration.
func (c *S3) GetBucketAnalyticsConfigurationRequest(input *s3.GetBucketAnalyticsConfigurationInput) (req *request.Request, output *s3.GetBucketAnalyticsConfigurationOutput) {
	c.inc("GetBucketAnalyticsConfiguration")
	return c.svc.GetBucketAnalyticsConfigurationRequest(input)
}

// GetBucketAnalyticsConfiguration is a passthrough to the underlying GetBucketAnalyticsConfiguration method.
// It will increment the count of requests made to GetBucketAnalyticsConfiguration.
func (c *S3) GetBucketAnalyticsConfiguration(input *s3.GetBucketAnalyticsConfigurationInput) (*s3.GetBucketAnalyticsConfigurationOutput, error) {
	c.inc("GetBucketAnalyticsConfiguration")
	return c.svc.GetBucketAnalyticsConfiguration(input)
}

// GetBucketAnalyticsConfigurationWithContext is a passthrough to the underlying GetBucketAnalyticsConfigurationWithContext method.
// It will increment the count of requests made to GetBucketAnalyticsConfiguration.
func (c *S3) GetBucketAnalyticsConfigurationWithContext(ctx aws.Context, input *s3.GetBucketAnalyticsConfigurationInput, opts ...request.Option) (*s3.GetBucketAnalyticsConfigurationOutput, error) {
	c.inc("GetBucketAnalyticsConfiguration")
	return c.svc.GetBucketAnalyticsConfigurationWithContext(ctx, input, opts...)
}

// GetBucketCorsRequest is a passthrough to the underlying GetBucketCorsRequest.
// It will increment the count of requests made to GetBucketCors.
func (c *S3) GetBucketCorsRequest(input *s3.GetBucketCorsInput) (req *request.Request, output *s3.GetBucketCorsOutput) {
	c.inc("GetBucketCors")
	return c.svc.GetBucketCorsRequest(input)
}

// GetBucketCors is a passthrough to the underlying GetBucketCors method.
// It will increment the count of requests made to GetBucketCors.
func (c *S3) GetBucketCors(input *s3.GetBucketCorsInput) (*s3.GetBucketCorsOutput, error) {
	c.inc("GetBucketCors")
	return c.svc.GetBucketCors(input)
}

// GetBucketCorsWithContext is a passthrough to the underlying GetBucketCorsWithContext method.
// It will increment the count of requests made to GetBucketCors.
func (c *S3) GetBucketCorsWithContext(ctx aws.Context, input *s3.GetBucketCorsInput, opts ...request.Option) (*s3.GetBucketCorsOutput, error) {
	c.inc("GetBucketCors")
	return c.svc.GetBucketCorsWithContext(ctx, input, opts...)
}

// GetBucketInventoryConfigurationRequest is a passthrough to the underlying GetBucketInventoryConfigurationRequest.
// It will increment the count of requests made to GetBucketInventoryConfiguration.
func (c *S3) GetBucketInventoryConfigurationRequest(input *s3.GetBucketInventoryConfigurationInput) (req *request.Request, output *s3.GetBucketInventoryConfigurationOutput) {
	c.inc("GetBucketInventoryConfiguration")
	return c.svc.GetBucketInventoryConfigurationRequest(input)
}

// GetBucketInventoryConfiguration is a passthrough to the underlying GetBucketInventoryConfiguration method.
// It will increment the count of requests made to GetBucketInventoryConfiguration.
func (c *S3) GetBucketInventoryConfiguration(input *s3.GetBucketInventoryConfigurationInput) (*s3.GetBucketInventoryConfigurationOutput, error) {
	c.inc("GetBucketInventoryConfiguration")
	return c.svc.GetBucketInventoryConfiguration(input)
}

// GetBucketInventoryConfigurationWithContext is a passthrough to the underlying GetBucketInventoryConfigurationWithContext method.
// It will increment the count of requests made to GetBucketInventoryConfiguration.
func (c *S3) GetBucketInventoryConfigurationWithContext(ctx aws.Context, input *s3.GetBucketInventoryConfigurationInput, opts ...request.Option) (*s3.GetBucketInventoryConfigurationOutput, error) {
	c.inc("GetBucketInventoryConfiguration")
	return c.svc.GetBucketInventoryConfigurationWithContext(ctx, input, opts...)
}

// GetBucketLifecycleRequest is a passthrough to the underlying GetBucketLifecycleRequest.
// It will increment the count of requests made to GetBucketLifecycle.
func (c *S3) GetBucketLifecycleRequest(input *s3.GetBucketLifecycleInput) (req *request.Request, output *s3.GetBucketLifecycleOutput) {
	c.inc("GetBucketLifecycle")
	return c.svc.GetBucketLifecycleRequest(input)
}

// GetBucketLifecycle is a passthrough to the underlying GetBucketLifecycle method.
// It will increment the count of requests made to GetBucketLifecycle.
func (c *S3) GetBucketLifecycle(input *s3.GetBucketLifecycleInput) (*s3.GetBucketLifecycleOutput, error) {
	c.inc("GetBucketLifecycle")
	return c.svc.GetBucketLifecycle(input)
}

// GetBucketLifecycleWithContext is a passthrough to the underlying GetBucketLifecycleWithContext method.
// It will increment the count of requests made to GetBucketLifecycle.
func (c *S3) GetBucketLifecycleWithContext(ctx aws.Context, input *s3.GetBucketLifecycleInput, opts ...request.Option) (*s3.GetBucketLifecycleOutput, error) {
	c.inc("GetBucketLifecycle")
	return c.svc.GetBucketLifecycleWithContext(ctx, input, opts...)
}

// GetBucketLifecycleConfigurationRequest is a passthrough to the underlying GetBucketLifecycleConfigurationRequest.
// It will increment the count of requests made to GetBucketLifecycleConfiguration.
func (c *S3) GetBucketLifecycleConfigurationRequest(input *s3.GetBucketLifecycleConfigurationInput) (req *request.Request, output *s3.GetBucketLifecycleConfigurationOutput) {
	c.inc("GetBucketLifecycleConfiguration")
	return c.svc.GetBucketLifecycleConfigurationRequest(input)
}

// GetBucketLifecycleConfiguration is a passthrough to the underlying GetBucketLifecycleConfiguration method.
// It will increment the count of requests made to GetBucketLifecycleConfiguration.
func (c *S3) GetBucketLifecycleConfiguration(input *s3.GetBucketLifecycleConfigurationInput) (*s3.GetBucketLifecycleConfigurationOutput, error) {
	c.inc("GetBucketLifecycleConfiguration")
	return c.svc.GetBucketLifecycleConfiguration(input)
}

// GetBucketLifecycleConfigurationWithContext is a passthrough to the underlying GetBucketLifecycleConfigurationWithContext method.
// It will increment the count of requests made to GetBucketLifecycleConfiguration.
func (c *S3) GetBucketLifecycleConfigurationWithContext(ctx aws.Context, input *s3.GetBucketLifecycleConfigurationInput, opts ...request.Option) (*s3.GetBucketLifecycleConfigurationOutput, error) {
	c.inc("GetBucketLifecycleConfiguration")
	return c.svc.GetBucketLifecycleConfigurationWithContext(ctx, input, opts...)
}

// GetBucketLocationRequest is a passthrough to the underlying GetBucketLocationRequest.
// It will increment the count of requests made to GetBucketLocation.
func (c *S3) GetBucketLocationRequest(input *s3.GetBucketLocationInput) (req *request.Request, output *s3.GetBucketLocationOutput) {
	c.inc("GetBucketLocation")
	return c.svc.GetBucketLocationRequest(input)
}

// GetBucketLocation is a passthrough to the underlying GetBucketLocation method.
// It will increment the count of requests made to GetBucketLocation.
func (c *S3) GetBucketLocation(input *s3.GetBucketLocationInput) (*s3.GetBucketLocationOutput, error) {
	c.inc("GetBucketLocation")
	return c.svc.GetBucketLocation(input)
}

// GetBucketLocationWithContext is a passthrough to the underlying GetBucketLocationWithContext method.
// It will increment the count of requests made to GetBucketLocation.
func (c *S3) GetBucketLocationWithContext(ctx aws.Context, input *s3.GetBucketLocationInput, opts ...request.Option) (*s3.GetBucketLocationOutput, error) {
	c.inc("GetBucketLocation")
	return c.svc.GetBucketLocationWithContext(ctx, input, opts...)
}

// GetBucketLoggingRequest is a passthrough to the underlying GetBucketLoggingRequest.
// It will increment the count of requests made to GetBucketLogging.
func (c *S3) GetBucketLoggingRequest(input *s3.GetBucketLoggingInput) (req *request.Request, output *s3.GetBucketLoggingOutput) {
	c.inc("GetBucketLogging")
	return c.svc.GetBucketLoggingRequest(input)
}

// GetBucketLogging is a passthrough to the underlying GetBucketLogging method.
// It will increment the count of requests made to GetBucketLogging.
func (c *S3) GetBucketLogging(input *s3.GetBucketLoggingInput) (*s3.GetBucketLoggingOutput, error) {
	c.inc("GetBucketLogging")
	return c.svc.GetBucketLogging(input)
}

// GetBucketLoggingWithContext is a passthrough to the underlying GetBucketLoggingWithContext method.
// It will increment the count of requests made to GetBucketLogging.
func (c *S3) GetBucketLoggingWithContext(ctx aws.Context, input *s3.GetBucketLoggingInput, opts ...request.Option) (*s3.GetBucketLoggingOutput, error) {
	c.inc("GetBucketLogging")
	return c.svc.GetBucketLoggingWithContext(ctx, input, opts...)
}

// GetBucketMetricsConfigurationRequest is a passthrough to the underlying GetBucketMetricsConfigurationRequest.
// It will increment the count of requests made to GetBucketMetricsConfiguration.
func (c *S3) GetBucketMetricsConfigurationRequest(input *s3.GetBucketMetricsConfigurationInput) (req *request.Request, output *s3.GetBucketMetricsConfigurationOutput) {
	c.inc("GetBucketMetricsConfiguration")
	return c.svc.GetBucketMetricsConfigurationRequest(input)
}

// GetBucketMetricsConfiguration is a passthrough to the underlying GetBucketMetricsConfiguration method.
// It will increment the count of requests made to GetBucketMetricsConfiguration.
func (c *S3) GetBucketMetricsConfiguration(input *s3.GetBucketMetricsConfigurationInput) (*s3.GetBucketMetricsConfigurationOutput, error) {
	c.inc("GetBucketMetricsConfiguration")
	return c.svc.GetBucketMetricsConfiguration(input)
}

// GetBucketMetricsConfigurationWithContext is a passthrough to the underlying GetBucketMetricsConfigurationWithContext method.
// It will increment the count of requests made to GetBucketMetricsConfiguration.
func (c *S3) GetBucketMetricsConfigurationWithContext(ctx aws.Context, input *s3.GetBucketMetricsConfigurationInput, opts ...request.Option) (*s3.GetBucketMetricsConfigurationOutput, error) {
	c.inc("GetBucketMetricsConfiguration")
	return c.svc.GetBucketMetricsConfigurationWithContext(ctx, input, opts...)
}

// GetBucketNotificationRequest is a passthrough to the underlying GetBucketNotificationRequest.
// It will increment the count of requests made to GetBucketNotification.
func (c *S3) GetBucketNotificationRequest(input *s3.GetBucketNotificationConfigurationRequest) (req *request.Request, output *s3.NotificationConfigurationDeprecated) {
	c.inc("GetBucketNotification")
	return c.svc.GetBucketNotificationRequest(input)
}

// GetBucketNotification is a passthrough to the underlying GetBucketNotification method.
// It will increment the count of requests made to GetBucketNotification.
func (c *S3) GetBucketNotification(input *s3.GetBucketNotificationConfigurationRequest) (*s3.NotificationConfigurationDeprecated, error) {
	c.inc("GetBucketNotification")
	return c.svc.GetBucketNotification(input)
}

// GetBucketNotificationWithContext is a passthrough to the underlying GetBucketNotificationWithContext method.
// It will increment the count of requests made to GetBucketNotification.
func (c *S3) GetBucketNotificationWithContext(ctx aws.Context, input *s3.GetBucketNotificationConfigurationRequest, opts ...request.Option) (*s3.NotificationConfigurationDeprecated, error) {
	c.inc("GetBucketNotification")
	return c.svc.GetBucketNotificationWithContext(ctx, input, opts...)
}

// GetBucketNotificationConfigurationRequest is a passthrough to the underlying GetBucketNotificationConfigurationRequest.
// It will increment the count of requests made to GetBucketNotificationConfiguration.
func (c *S3) GetBucketNotificationConfigurationRequest(input *s3.GetBucketNotificationConfigurationRequest) (req *request.Request, output *s3.NotificationConfiguration) {
	c.inc("GetBucketNotificationConfiguration")
	return c.svc.GetBucketNotificationConfigurationRequest(input)
}

// GetBucketNotificationConfiguration is a passthrough to the underlying GetBucketNotificationConfiguration method.
// It will increment the count of requests made to GetBucketNotificationConfiguration.
func (c *S3) GetBucketNotificationConfiguration(input *s3.GetBucketNotificationConfigurationRequest) (*s3.NotificationConfiguration, error) {
	c.inc("GetBucketNotificationConfiguration")
	return c.svc.GetBucketNotificationConfiguration(input)
}

// GetBucketNotificationConfigurationWithContext is a passthrough to the underlying GetBucketNotificationConfigurationWithContext method.
// It will increment the count of requests made to GetBucketNotificationConfiguration.
func (c *S3) GetBucketNotificationConfigurationWithContext(ctx aws.Context, input *s3.GetBucketNotificationConfigurationRequest, opts ...request.Option) (*s3.NotificationConfiguration, error) {
	c.inc("GetBucketNotificationConfiguration")
	return c.svc.GetBucketNotificationConfigurationWithContext(ctx, input, opts...)
}

// GetBucketPolicyRequest is a passthrough to the underlying GetBucketPolicyRequest.
// It will increment the count of requests made to GetBucketPolicy.
func (c *S3) GetBucketPolicyRequest(input *s3.GetBucketPolicyInput) (req *request.Request, output *s3.GetBucketPolicyOutput) {
	c.inc("GetBucketPolicy")
	return c.svc.GetBucketPolicyRequest(input)
}

// GetBucketPolicy is a passthrough to the underlying GetBucketPolicy method.
// It will increment the count of requests made to GetBucketPolicy.
func (c *S3) GetBucketPolicy(input *s3.GetBucketPolicyInput) (*s3.GetBucketPolicyOutput, error) {
	c.inc("GetBucketPolicy")
	return c.svc.GetBucketPolicy(input)
}

// GetBucketPolicyWithContext is a passthrough to the underlying GetBucketPolicyWithContext method.
// It will increment the count of requests made to GetBucketPolicy.
func (c *S3) GetBucketPolicyWithContext(ctx aws.Context, input *s3.GetBucketPolicyInput, opts ...request.Option) (*s3.GetBucketPolicyOutput, error) {
	c.inc("GetBucketPolicy")
	return c.svc.GetBucketPolicyWithContext(ctx, input, opts...)
}

// GetBucketReplicationRequest is a passthrough to the underlying GetBucketReplicationRequest.
// It will increment the count of requests made to GetBucketReplication.
func (c *S3) GetBucketReplicationRequest(input *s3.GetBucketReplicationInput) (req *request.Request, output *s3.GetBucketReplicationOutput) {
	c.inc("GetBucketReplication")
	return c.svc.GetBucketReplicationRequest(input)
}

// GetBucketReplication is a passthrough to the underlying GetBucketReplication method.
// It will increment the count of requests made to GetBucketReplication.
func (c *S3) GetBucketReplication(input *s3.GetBucketReplicationInput) (*s3.GetBucketReplicationOutput, error) {
	c.inc("GetBucketReplication")
	return c.svc.GetBucketReplication(input)
}

// GetBucketReplicationWithContext is a passthrough to the underlying GetBucketReplicationWithContext method.
// It will increment the count of requests made to GetBucketReplication.
func (c *S3) GetBucketReplicationWithContext(ctx aws.Context, input *s3.GetBucketReplicationInput, opts ...request.Option) (*s3.GetBucketReplicationOutput, error) {
	c.inc("GetBucketReplication")
	return c.svc.GetBucketReplicationWithContext(ctx, input, opts...)
}

// GetBucketRequestPaymentRequest is a passthrough to the underlying GetBucketRequestPaymentRequest.
// It will increment the count of requests made to GetBucketRequestPayment.
func (c *S3) GetBucketRequestPaymentRequest(input *s3.GetBucketRequestPaymentInput) (req *request.Request, output *s3.GetBucketRequestPaymentOutput) {
	c.inc("GetBucketRequestPayment")
	return c.svc.GetBucketRequestPaymentRequest(input)
}

// GetBucketRequestPayment is a passthrough to the underlying GetBucketRequestPayment method.
// It will increment the count of requests made to GetBucketRequestPayment.
func (c *S3) GetBucketRequestPayment(input *s3.GetBucketRequestPaymentInput) (*s3.GetBucketRequestPaymentOutput, error) {
	c.inc("GetBucketRequestPayment")
	return c.svc.GetBucketRequestPayment(input)
}

// GetBucketRequestPaymentWithContext is a passthrough to the underlying GetBucketRequestPaymentWithContext method.
// It will increment the count of requests made to GetBucketRequestPayment.
func (c *S3) GetBucketRequestPaymentWithContext(ctx aws.Context, input *s3.GetBucketRequestPaymentInput, opts ...request.Option) (*s3.GetBucketRequestPaymentOutput, error) {
	c.inc("GetBucketRequestPayment")
	return c.svc.GetBucketRequestPaymentWithContext(ctx, input, opts...)
}

// GetBucketTaggingRequest is a passthrough to the underlying GetBucketTaggingRequest.
// It will increment the count of requests made to GetBucketTagging.
func (c *S3) GetBucketTaggingRequest(input *s3.GetBucketTaggingInput) (req *request.Request, output *s3.GetBucketTaggingOutput) {
	c.inc("GetBucketTagging")
	return c.svc.GetBucketTaggingRequest(input)
}

// GetBucketTagging is a passthrough to the underlying GetBucketTagging method.
// It will increment the count of requests made to GetBucketTagging.
func (c *S3) GetBucketTagging(input *s3.GetBucketTaggingInput) (*s3.GetBucketTaggingOutput, error) {
	c.inc("GetBucketTagging")
	return c.svc.GetBucketTagging(input)
}

// GetBucketTaggingWithContext is a passthrough to the underlying GetBucketTaggingWithContext method.
// It will increment the count of requests made to GetBucketTagging.
func (c *S3) GetBucketTaggingWithContext(ctx aws.Context, input *s3.GetBucketTaggingInput, opts ...request.Option) (*s3.GetBucketTaggingOutput, error) {
	c.inc("GetBucketTagging")
	return c.svc.GetBucketTaggingWithContext(ctx, input, opts...)
}

// GetBucketVersioningRequest is a passthrough to the underlying GetBucketVersioningRequest.
// It will increment the count of requests made to GetBucketVersioning.
func (c *S3) GetBucketVersioningRequest(input *s3.GetBucketVersioningInput) (req *request.Request, output *s3.GetBucketVersioningOutput) {
	c.inc("GetBucketVersioning")
	return c.svc.GetBucketVersioningRequest(input)
}

// GetBucketVersioning is a passthrough to the underlying GetBucketVersioning method.
// It will increment the count of requests made to GetBucketVersioning.
func (c *S3) GetBucketVersioning(input *s3.GetBucketVersioningInput) (*s3.GetBucketVersioningOutput, error) {
	c.inc("GetBucketVersioning")
	return c.svc.GetBucketVersioning(input)
}

// GetBucketVersioningWithContext is a passthrough to the underlying GetBucketVersioningWithContext method.
// It will increment the count of requests made to GetBucketVersioning.
func (c *S3) GetBucketVersioningWithContext(ctx aws.Context, input *s3.GetBucketVersioningInput, opts ...request.Option) (*s3.GetBucketVersioningOutput, error) {
	c.inc("GetBucketVersioning")
	return c.svc.GetBucketVersioningWithContext(ctx, input, opts...)
}

// GetBucketWebsiteRequest is a passthrough to the underlying GetBucketWebsiteRequest.
// It will increment the count of requests made to GetBucketWebsite.
func (c *S3) GetBucketWebsiteRequest(input *s3.GetBucketWebsiteInput) (req *request.Request, output *s3.GetBucketWebsiteOutput) {
	c.inc("GetBucketWebsite")
	return c.svc.GetBucketWebsiteRequest(input)
}

// GetBucketWebsite is a passthrough to the underlying GetBucketWebsite method.
// It will increment the count of requests made to GetBucketWebsite.
func (c *S3) GetBucketWebsite(input *s3.GetBucketWebsiteInput) (*s3.GetBucketWebsiteOutput, error) {
	c.inc("GetBucketWebsite")
	return c.svc.GetBucketWebsite(input)
}

// GetBucketWebsiteWithContext is a passthrough to the underlying GetBucketWebsiteWithContext method.
// It will increment the count of requests made to GetBucketWebsite.
func (c *S3) GetBucketWebsiteWithContext(ctx aws.Context, input *s3.GetBucketWebsiteInput, opts ...request.Option) (*s3.GetBucketWebsiteOutput, error) {
	c.inc("GetBucketWebsite")
	return c.svc.GetBucketWebsiteWithContext(ctx, input, opts...)
}

// GetObjectRequest is a passthrough to the underlying GetObjectRequest.
// It will increment the count of requests made to GetObject.
func (c *S3) GetObjectRequest(input *s3.GetObjectInput) (req *request.Request, output *s3.GetObjectOutput) {
	c.inc("GetObject")
	return c.svc.GetObjectRequest(input)
}

// GetObject is a passthrough to the underlying GetObject method.
// It will increment the count of requests made to GetObject.
func (c *S3) GetObject(input *s3.GetObjectInput) (*s3.GetObjectOutput, error) {
	c.inc("GetObject")
	return c.svc.GetObject(input)
}

// GetObjectWithContext is a passthrough to the underlying GetObjectWithContext method.
// It will increment the count of requests made to GetObject.
func (c *S3) GetObjectWithContext(ctx aws.Context, input *s3.GetObjectInput, opts ...request.Option) (*s3.GetObjectOutput, error) {
	c.inc("GetObject")
	return c.svc.GetObjectWithContext(ctx, input, opts...)
}

// GetObjectAclRequest is a passthrough to the underlying GetObjectAclRequest.
// It will increment the count of requests made to GetObjectAcl.
func (c *S3) GetObjectAclRequest(input *s3.GetObjectAclInput) (req *request.Request, output *s3.GetObjectAclOutput) {
	c.inc("GetObjectAcl")
	return c.svc.GetObjectAclRequest(input)
}

// GetObjectAcl is a passthrough to the underlying GetObjectAcl method.
// It will increment the count of requests made to GetObjectAcl.
func (c *S3) GetObjectAcl(input *s3.GetObjectAclInput) (*s3.GetObjectAclOutput, error) {
	c.inc("GetObjectAcl")
	return c.svc.GetObjectAcl(input)
}

// GetObjectAclWithContext is a passthrough to the underlying GetObjectAclWithContext method.
// It will increment the count of requests made to GetObjectAcl.
func (c *S3) GetObjectAclWithContext(ctx aws.Context, input *s3.GetObjectAclInput, opts ...request.Option) (*s3.GetObjectAclOutput, error) {
	c.inc("GetObjectAcl")
	return c.svc.GetObjectAclWithContext(ctx, input, opts...)
}

// GetObjectTaggingRequest is a passthrough to the underlying GetObjectTaggingRequest.
// It will increment the count of requests made to GetObjectTagging.
func (c *S3) GetObjectTaggingRequest(input *s3.GetObjectTaggingInput) (req *request.Request, output *s3.GetObjectTaggingOutput) {
	c.inc("GetObjectTagging")
	return c.svc.GetObjectTaggingRequest(input)
}

// GetObjectTagging is a passthrough to the underlying GetObjectTagging method.
// It will increment the count of requests made to GetObjectTagging.
func (c *S3) GetObjectTagging(input *s3.GetObjectTaggingInput) (*s3.GetObjectTaggingOutput, error) {
	c.inc("GetObjectTagging")
	return c.svc.GetObjectTagging(input)
}

// GetObjectTaggingWithContext is a passthrough to the underlying GetObjectTaggingWithContext method.
// It will increment the count of requests made to GetObjectTagging.
func (c *S3) GetObjectTaggingWithContext(ctx aws.Context, input *s3.GetObjectTaggingInput, opts ...request.Option) (*s3.GetObjectTaggingOutput, error) {
	c.inc("GetObjectTagging")
	return c.svc.GetObjectTaggingWithContext(ctx, input, opts...)
}

// GetObjectTorrentRequest is a passthrough to the underlying GetObjectTorrentRequest.
// It will increment the count of requests made to GetObjectTorrent.
func (c *S3) GetObjectTorrentRequest(input *s3.GetObjectTorrentInput) (req *request.Request, output *s3.GetObjectTorrentOutput) {
	c.inc("GetObjectTorrent")
	return c.svc.GetObjectTorrentRequest(input)
}

// GetObjectTorrent is a passthrough to the underlying GetObjectTorrent method.
// It will increment the count of requests made to GetObjectTorrent.
func (c *S3) GetObjectTorrent(input *s3.GetObjectTorrentInput) (*s3.GetObjectTorrentOutput, error) {
	c.inc("GetObjectTorrent")
	return c.svc.GetObjectTorrent(input)
}

// GetObjectTorrentWithContext is a passthrough to the underlying GetObjectTorrentWithContext method.
// It will increment the count of requests made to GetObjectTorrent.
func (c *S3) GetObjectTorrentWithContext(ctx aws.Context, input *s3.GetObjectTorrentInput, opts ...request.Option) (*s3.GetObjectTorrentOutput, error) {
	c.inc("GetObjectTorrent")
	return c.svc.GetObjectTorrentWithContext(ctx, input, opts...)
}

// HeadBucketRequest is a passthrough to the underlying HeadBucketRequest.
// It will increment the count of requests made to HeadBucket.
func (c *S3) HeadBucketRequest(input *s3.HeadBucketInput) (req *request.Request, output *s3.HeadBucketOutput) {
	c.inc("HeadBucket")
	return c.svc.HeadBucketRequest(input)
}

// HeadBucket is a passthrough to the underlying HeadBucket method.
// It will increment the count of requests made to HeadBucket.
func (c *S3) HeadBucket(input *s3.HeadBucketInput) (*s3.HeadBucketOutput, error) {
	c.inc("HeadBucket")
	return c.svc.HeadBucket(input)
}

// HeadBucketWithContext is a passthrough to the underlying HeadBucketWithContext method.
// It will increment the count of requests made to HeadBucket.
func (c *S3) HeadBucketWithContext(ctx aws.Context, input *s3.HeadBucketInput, opts ...request.Option) (*s3.HeadBucketOutput, error) {
	c.inc("HeadBucket")
	return c.svc.HeadBucketWithContext(ctx, input, opts...)
}

// HeadObjectRequest is a passthrough to the underlying HeadObjectRequest.
// It will increment the count of requests made to HeadObject.
func (c *S3) HeadObjectRequest(input *s3.HeadObjectInput) (req *request.Request, output *s3.HeadObjectOutput) {
	c.inc("HeadObject")
	return c.svc.HeadObjectRequest(input)
}

// HeadObject is a passthrough to the underlying HeadObject method.
// It will increment the count of requests made to HeadObject.
func (c *S3) HeadObject(input *s3.HeadObjectInput) (*s3.HeadObjectOutput, error) {
	c.inc("HeadObject")
	return c.svc.HeadObject(input)
}

// HeadObjectWithContext is a passthrough to the underlying HeadObjectWithContext method.
// It will increment the count of requests made to HeadObject.
func (c *S3) HeadObjectWithContext(ctx aws.Context, input *s3.HeadObjectInput, opts ...request.Option) (*s3.HeadObjectOutput, error) {
	c.inc("HeadObject")
	return c.svc.HeadObjectWithContext(ctx, input, opts...)
}

// ListBucketAnalyticsConfigurationsRequest is a passthrough to the underlying ListBucketAnalyticsConfigurationsRequest.
// It will increment the count of requests made to ListBucketAnalyticsConfigurations.
func (c *S3) ListBucketAnalyticsConfigurationsRequest(input *s3.ListBucketAnalyticsConfigurationsInput) (req *request.Request, output *s3.ListBucketAnalyticsConfigurationsOutput) {
	c.inc("ListBucketAnalyticsConfigurations")
	return c.svc.ListBucketAnalyticsConfigurationsRequest(input)
}

// ListBucketAnalyticsConfigurations is a passthrough to the underlying ListBucketAnalyticsConfigurations method.
// It will increment the count of requests made to ListBucketAnalyticsConfigurations.
func (c *S3) ListBucketAnalyticsConfigurations(input *s3.ListBucketAnalyticsConfigurationsInput) (*s3.ListBucketAnalyticsConfigurationsOutput, error) {
	c.inc("ListBucketAnalyticsConfigurations")
	return c.svc.ListBucketAnalyticsConfigurations(input)
}

// ListBucketAnalyticsConfigurationsWithContext is a passthrough to the underlying ListBucketAnalyticsConfigurationsWithContext method.
// It will increment the count of requests made to ListBucketAnalyticsConfigurations.
func (c *S3) ListBucketAnalyticsConfigurationsWithContext(ctx aws.Context, input *s3.ListBucketAnalyticsConfigurationsInput, opts ...request.Option) (*s3.ListBucketAnalyticsConfigurationsOutput, error) {
	c.inc("ListBucketAnalyticsConfigurations")
	return c.svc.ListBucketAnalyticsConfigurationsWithContext(ctx, input, opts...)
}

// ListBucketInventoryConfigurationsRequest is a passthrough to the underlying ListBucketInventoryConfigurationsRequest.
// It will increment the count of requests made to ListBucketInventoryConfigurations.
func (c *S3) ListBucketInventoryConfigurationsRequest(input *s3.ListBucketInventoryConfigurationsInput) (req *request.Request, output *s3.ListBucketInventoryConfigurationsOutput) {
	c.inc("ListBucketInventoryConfigurations")
	return c.svc.ListBucketInventoryConfigurationsRequest(input)
}

// ListBucketInventoryConfigurations is a passthrough to the underlying ListBucketInventoryConfigurations method.
// It will increment the count of requests made to ListBucketInventoryConfigurations.
func (c *S3) ListBucketInventoryConfigurations(input *s3.ListBucketInventoryConfigurationsInput) (*s3.ListBucketInventoryConfigurationsOutput, error) {
	c.inc("ListBucketInventoryConfigurations")
	return c.svc.ListBucketInventoryConfigurations(input)
}

// ListBucketInventoryConfigurationsWithContext is a passthrough to the underlying ListBucketInventoryConfigurationsWithContext method.
// It will increment the count of requests made to ListBucketInventoryConfigurations.
func (c *S3) ListBucketInventoryConfigurationsWithContext(ctx aws.Context, input *s3.ListBucketInventoryConfigurationsInput, opts ...request.Option) (*s3.ListBucketInventoryConfigurationsOutput, error) {
	c.inc("ListBucketInventoryConfigurations")
	return c.svc.ListBucketInventoryConfigurationsWithContext(ctx, input, opts...)
}

// ListBucketMetricsConfigurationsRequest is a passthrough to the underlying ListBucketMetricsConfigurationsRequest.
// It will increment the count of requests made to ListBucketMetricsConfigurations.
func (c *S3) ListBucketMetricsConfigurationsRequest(input *s3.ListBucketMetricsConfigurationsInput) (req *request.Request, output *s3.ListBucketMetricsConfigurationsOutput) {
	c.inc("ListBucketMetricsConfigurations")
	return c.svc.ListBucketMetricsConfigurationsRequest(input)
}

// ListBucketMetricsConfigurations is a passthrough to the underlying ListBucketMetricsConfigurations method.
// It will increment the count of requests made to ListBucketMetricsConfigurations.
func (c *S3) ListBucketMetricsConfigurations(input *s3.ListBucketMetricsConfigurationsInput) (*s3.ListBucketMetricsConfigurationsOutput, error) {
	c.inc("ListBucketMetricsConfigurations")
	return c.svc.ListBucketMetricsConfigurations(input)
}

// ListBucketMetricsConfigurationsWithContext is a passthrough to the underlying ListBucketMetricsConfigurationsWithContext method.
// It will increment the count of requests made to ListBucketMetricsConfigurations.
func (c *S3) ListBucketMetricsConfigurationsWithContext(ctx aws.Context, input *s3.ListBucketMetricsConfigurationsInput, opts ...request.Option) (*s3.ListBucketMetricsConfigurationsOutput, error) {
	c.inc("ListBucketMetricsConfigurations")
	return c.svc.ListBucketMetricsConfigurationsWithContext(ctx, input, opts...)
}

// ListBucketsRequest is a passthrough to the underlying ListBucketsRequest.
// It will increment the count of requests made to ListBuckets.
func (c *S3) ListBucketsRequest(input *s3.ListBucketsInput) (req *request.Request, output *s3.ListBucketsOutput) {
	c.inc("ListBuckets")
	return c.svc.ListBucketsRequest(input)
}

// ListBuckets is a passthrough to the underlying ListBuckets method.
// It will increment the count of requests made to ListBuckets.
func (c *S3) ListBuckets(input *s3.ListBucketsInput) (*s3.ListBucketsOutput, error) {
	c.inc("ListBuckets")
	return c.svc.ListBuckets(input)
}

// ListBucketsWithContext is a passthrough to the underlying ListBucketsWithContext method.
// It will increment the count of requests made to ListBuckets.
func (c *S3) ListBucketsWithContext(ctx aws.Context, input *s3.ListBucketsInput, opts ...request.Option) (*s3.ListBucketsOutput, error) {
	c.inc("ListBuckets")
	return c.svc.ListBucketsWithContext(ctx, input, opts...)
}

// ListMultipartUploadsRequest is a passthrough to the underlying ListMultipartUploadsRequest.
// It will increment the count of requests made to ListMultipartUploads.
func (c *S3) ListMultipartUploadsRequest(input *s3.ListMultipartUploadsInput) (req *request.Request, output *s3.ListMultipartUploadsOutput) {
	c.inc("ListMultipartUploads")
	return c.svc.ListMultipartUploadsRequest(input)
}

// ListMultipartUploads is a passthrough to the underlying ListMultipartUploads method.
// It will increment the count of requests made to ListMultipartUploads.
func (c *S3) ListMultipartUploads(input *s3.ListMultipartUploadsInput) (*s3.ListMultipartUploadsOutput, error) {
	c.inc("ListMultipartUploads")
	return c.svc.ListMultipartUploads(input)
}

// ListMultipartUploadsWithContext is a passthrough to the underlying ListMultipartUploadsWithContext method.
// It will increment the count of requests made to ListMultipartUploads.
func (c *S3) ListMultipartUploadsWithContext(ctx aws.Context, input *s3.ListMultipartUploadsInput, opts ...request.Option) (*s3.ListMultipartUploadsOutput, error) {
	c.inc("ListMultipartUploads")
	return c.svc.ListMultipartUploadsWithContext(ctx, input, opts...)
}

// ListMultipartUploadsPages is a passthrough to the underlying ListMultipartUploadsPages method.
// It will increment the count of requests made to ListMultipartUploads on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListMultipartUploadsPagesWithContext to avoid this.
func (c *S3) ListMultipartUploadsPages(input *s3.ListMultipartUploadsInput, fn func(*s3.ListMultipartUploadsOutput, bool) bool) error {
	wrappedFn := func(page *s3.ListMultipartUploadsOutput, lastPage bool) bool {
		c.inc("ListMultipartUploads")
		return fn(page, lastPage)
	}
	return c.ListMultipartUploadsPages(input, wrappedFn)
}

// ListMultipartUploadsPagesWithContext is a passthrough to the underlying ListMultipartUploadsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListMultipartUploads when applied to the request.
func (c *S3) ListMultipartUploadsPagesWithContext(ctx aws.Context, input *s3.ListMultipartUploadsInput, fn func(*s3.ListMultipartUploadsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListMultipartUploads"))
	return c.ListMultipartUploadsPagesWithContext(ctx, input, fn, opts...)
}

// ListObjectVersionsRequest is a passthrough to the underlying ListObjectVersionsRequest.
// It will increment the count of requests made to ListObjectVersions.
func (c *S3) ListObjectVersionsRequest(input *s3.ListObjectVersionsInput) (req *request.Request, output *s3.ListObjectVersionsOutput) {
	c.inc("ListObjectVersions")
	return c.svc.ListObjectVersionsRequest(input)
}

// ListObjectVersions is a passthrough to the underlying ListObjectVersions method.
// It will increment the count of requests made to ListObjectVersions.
func (c *S3) ListObjectVersions(input *s3.ListObjectVersionsInput) (*s3.ListObjectVersionsOutput, error) {
	c.inc("ListObjectVersions")
	return c.svc.ListObjectVersions(input)
}

// ListObjectVersionsWithContext is a passthrough to the underlying ListObjectVersionsWithContext method.
// It will increment the count of requests made to ListObjectVersions.
func (c *S3) ListObjectVersionsWithContext(ctx aws.Context, input *s3.ListObjectVersionsInput, opts ...request.Option) (*s3.ListObjectVersionsOutput, error) {
	c.inc("ListObjectVersions")
	return c.svc.ListObjectVersionsWithContext(ctx, input, opts...)
}

// ListObjectVersionsPages is a passthrough to the underlying ListObjectVersionsPages method.
// It will increment the count of requests made to ListObjectVersions on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListObjectVersionsPagesWithContext to avoid this.
func (c *S3) ListObjectVersionsPages(input *s3.ListObjectVersionsInput, fn func(*s3.ListObjectVersionsOutput, bool) bool) error {
	wrappedFn := func(page *s3.ListObjectVersionsOutput, lastPage bool) bool {
		c.inc("ListObjectVersions")
		return fn(page, lastPage)
	}
	return c.ListObjectVersionsPages(input, wrappedFn)
}

// ListObjectVersionsPagesWithContext is a passthrough to the underlying ListObjectVersionsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListObjectVersions when applied to the request.
func (c *S3) ListObjectVersionsPagesWithContext(ctx aws.Context, input *s3.ListObjectVersionsInput, fn func(*s3.ListObjectVersionsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListObjectVersions"))
	return c.ListObjectVersionsPagesWithContext(ctx, input, fn, opts...)
}

// ListObjectsRequest is a passthrough to the underlying ListObjectsRequest.
// It will increment the count of requests made to ListObjects.
func (c *S3) ListObjectsRequest(input *s3.ListObjectsInput) (req *request.Request, output *s3.ListObjectsOutput) {
	c.inc("ListObjects")
	return c.svc.ListObjectsRequest(input)
}

// ListObjects is a passthrough to the underlying ListObjects method.
// It will increment the count of requests made to ListObjects.
func (c *S3) ListObjects(input *s3.ListObjectsInput) (*s3.ListObjectsOutput, error) {
	c.inc("ListObjects")
	return c.svc.ListObjects(input)
}

// ListObjectsWithContext is a passthrough to the underlying ListObjectsWithContext method.
// It will increment the count of requests made to ListObjects.
func (c *S3) ListObjectsWithContext(ctx aws.Context, input *s3.ListObjectsInput, opts ...request.Option) (*s3.ListObjectsOutput, error) {
	c.inc("ListObjects")
	return c.svc.ListObjectsWithContext(ctx, input, opts...)
}

// ListObjectsPages is a passthrough to the underlying ListObjectsPages method.
// It will increment the count of requests made to ListObjects on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListObjectsPagesWithContext to avoid this.
func (c *S3) ListObjectsPages(input *s3.ListObjectsInput, fn func(*s3.ListObjectsOutput, bool) bool) error {
	wrappedFn := func(page *s3.ListObjectsOutput, lastPage bool) bool {
		c.inc("ListObjects")
		return fn(page, lastPage)
	}
	return c.ListObjectsPages(input, wrappedFn)
}

// ListObjectsPagesWithContext is a passthrough to the underlying ListObjectsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListObjects when applied to the request.
func (c *S3) ListObjectsPagesWithContext(ctx aws.Context, input *s3.ListObjectsInput, fn func(*s3.ListObjectsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListObjects"))
	return c.ListObjectsPagesWithContext(ctx, input, fn, opts...)
}

// ListObjectsV2Request is a passthrough to the underlying ListObjectsV2Request.
// It will increment the count of requests made to ListObjectsV2.
func (c *S3) ListObjectsV2Request(input *s3.ListObjectsV2Input) (req *request.Request, output *s3.ListObjectsV2Output) {
	c.inc("ListObjectsV2")
	return c.svc.ListObjectsV2Request(input)
}

// ListObjectsV2 is a passthrough to the underlying ListObjectsV2 method.
// It will increment the count of requests made to ListObjectsV2.
func (c *S3) ListObjectsV2(input *s3.ListObjectsV2Input) (*s3.ListObjectsV2Output, error) {
	c.inc("ListObjectsV2")
	return c.svc.ListObjectsV2(input)
}

// ListObjectsV2WithContext is a passthrough to the underlying ListObjectsV2WithContext method.
// It will increment the count of requests made to ListObjectsV2.
func (c *S3) ListObjectsV2WithContext(ctx aws.Context, input *s3.ListObjectsV2Input, opts ...request.Option) (*s3.ListObjectsV2Output, error) {
	c.inc("ListObjectsV2")
	return c.svc.ListObjectsV2WithContext(ctx, input, opts...)
}

// ListObjectsV2Pages is a passthrough to the underlying ListObjectsV2Pages method.
// It will increment the count of requests made to ListObjectsV2 on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListObjectsV2PagesWithContext to avoid this.
func (c *S3) ListObjectsV2Pages(input *s3.ListObjectsV2Input, fn func(*s3.ListObjectsV2Output, bool) bool) error {
	wrappedFn := func(page *s3.ListObjectsV2Output, lastPage bool) bool {
		c.inc("ListObjectsV2")
		return fn(page, lastPage)
	}
	return c.ListObjectsV2Pages(input, wrappedFn)
}

// ListObjectsV2PagesWithContext is a passthrough to the underlying ListObjectsV2PagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListObjectsV2 when applied to the request.
func (c *S3) ListObjectsV2PagesWithContext(ctx aws.Context, input *s3.ListObjectsV2Input, fn func(*s3.ListObjectsV2Output, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListObjectsV2"))
	return c.ListObjectsV2PagesWithContext(ctx, input, fn, opts...)
}

// ListPartsRequest is a passthrough to the underlying ListPartsRequest.
// It will increment the count of requests made to ListParts.
func (c *S3) ListPartsRequest(input *s3.ListPartsInput) (req *request.Request, output *s3.ListPartsOutput) {
	c.inc("ListParts")
	return c.svc.ListPartsRequest(input)
}

// ListParts is a passthrough to the underlying ListParts method.
// It will increment the count of requests made to ListParts.
func (c *S3) ListParts(input *s3.ListPartsInput) (*s3.ListPartsOutput, error) {
	c.inc("ListParts")
	return c.svc.ListParts(input)
}

// ListPartsWithContext is a passthrough to the underlying ListPartsWithContext method.
// It will increment the count of requests made to ListParts.
func (c *S3) ListPartsWithContext(ctx aws.Context, input *s3.ListPartsInput, opts ...request.Option) (*s3.ListPartsOutput, error) {
	c.inc("ListParts")
	return c.svc.ListPartsWithContext(ctx, input, opts...)
}

// ListPartsPages is a passthrough to the underlying ListPartsPages method.
// It will increment the count of requests made to ListParts on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListPartsPagesWithContext to avoid this.
func (c *S3) ListPartsPages(input *s3.ListPartsInput, fn func(*s3.ListPartsOutput, bool) bool) error {
	wrappedFn := func(page *s3.ListPartsOutput, lastPage bool) bool {
		c.inc("ListParts")
		return fn(page, lastPage)
	}
	return c.ListPartsPages(input, wrappedFn)
}

// ListPartsPagesWithContext is a passthrough to the underlying ListPartsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListParts when applied to the request.
func (c *S3) ListPartsPagesWithContext(ctx aws.Context, input *s3.ListPartsInput, fn func(*s3.ListPartsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListParts"))
	return c.ListPartsPagesWithContext(ctx, input, fn, opts...)
}

// PutBucketAccelerateConfigurationRequest is a passthrough to the underlying PutBucketAccelerateConfigurationRequest.
// It will increment the count of requests made to PutBucketAccelerateConfiguration.
func (c *S3) PutBucketAccelerateConfigurationRequest(input *s3.PutBucketAccelerateConfigurationInput) (req *request.Request, output *s3.PutBucketAccelerateConfigurationOutput) {
	c.inc("PutBucketAccelerateConfiguration")
	return c.svc.PutBucketAccelerateConfigurationRequest(input)
}

// PutBucketAccelerateConfiguration is a passthrough to the underlying PutBucketAccelerateConfiguration method.
// It will increment the count of requests made to PutBucketAccelerateConfiguration.
func (c *S3) PutBucketAccelerateConfiguration(input *s3.PutBucketAccelerateConfigurationInput) (*s3.PutBucketAccelerateConfigurationOutput, error) {
	c.inc("PutBucketAccelerateConfiguration")
	return c.svc.PutBucketAccelerateConfiguration(input)
}

// PutBucketAccelerateConfigurationWithContext is a passthrough to the underlying PutBucketAccelerateConfigurationWithContext method.
// It will increment the count of requests made to PutBucketAccelerateConfiguration.
func (c *S3) PutBucketAccelerateConfigurationWithContext(ctx aws.Context, input *s3.PutBucketAccelerateConfigurationInput, opts ...request.Option) (*s3.PutBucketAccelerateConfigurationOutput, error) {
	c.inc("PutBucketAccelerateConfiguration")
	return c.svc.PutBucketAccelerateConfigurationWithContext(ctx, input, opts...)
}

// PutBucketAclRequest is a passthrough to the underlying PutBucketAclRequest.
// It will increment the count of requests made to PutBucketAcl.
func (c *S3) PutBucketAclRequest(input *s3.PutBucketAclInput) (req *request.Request, output *s3.PutBucketAclOutput) {
	c.inc("PutBucketAcl")
	return c.svc.PutBucketAclRequest(input)
}

// PutBucketAcl is a passthrough to the underlying PutBucketAcl method.
// It will increment the count of requests made to PutBucketAcl.
func (c *S3) PutBucketAcl(input *s3.PutBucketAclInput) (*s3.PutBucketAclOutput, error) {
	c.inc("PutBucketAcl")
	return c.svc.PutBucketAcl(input)
}

// PutBucketAclWithContext is a passthrough to the underlying PutBucketAclWithContext method.
// It will increment the count of requests made to PutBucketAcl.
func (c *S3) PutBucketAclWithContext(ctx aws.Context, input *s3.PutBucketAclInput, opts ...request.Option) (*s3.PutBucketAclOutput, error) {
	c.inc("PutBucketAcl")
	return c.svc.PutBucketAclWithContext(ctx, input, opts...)
}

// PutBucketAnalyticsConfigurationRequest is a passthrough to the underlying PutBucketAnalyticsConfigurationRequest.
// It will increment the count of requests made to PutBucketAnalyticsConfiguration.
func (c *S3) PutBucketAnalyticsConfigurationRequest(input *s3.PutBucketAnalyticsConfigurationInput) (req *request.Request, output *s3.PutBucketAnalyticsConfigurationOutput) {
	c.inc("PutBucketAnalyticsConfiguration")
	return c.svc.PutBucketAnalyticsConfigurationRequest(input)
}

// PutBucketAnalyticsConfiguration is a passthrough to the underlying PutBucketAnalyticsConfiguration method.
// It will increment the count of requests made to PutBucketAnalyticsConfiguration.
func (c *S3) PutBucketAnalyticsConfiguration(input *s3.PutBucketAnalyticsConfigurationInput) (*s3.PutBucketAnalyticsConfigurationOutput, error) {
	c.inc("PutBucketAnalyticsConfiguration")
	return c.svc.PutBucketAnalyticsConfiguration(input)
}

// PutBucketAnalyticsConfigurationWithContext is a passthrough to the underlying PutBucketAnalyticsConfigurationWithContext method.
// It will increment the count of requests made to PutBucketAnalyticsConfiguration.
func (c *S3) PutBucketAnalyticsConfigurationWithContext(ctx aws.Context, input *s3.PutBucketAnalyticsConfigurationInput, opts ...request.Option) (*s3.PutBucketAnalyticsConfigurationOutput, error) {
	c.inc("PutBucketAnalyticsConfiguration")
	return c.svc.PutBucketAnalyticsConfigurationWithContext(ctx, input, opts...)
}

// PutBucketCorsRequest is a passthrough to the underlying PutBucketCorsRequest.
// It will increment the count of requests made to PutBucketCors.
func (c *S3) PutBucketCorsRequest(input *s3.PutBucketCorsInput) (req *request.Request, output *s3.PutBucketCorsOutput) {
	c.inc("PutBucketCors")
	return c.svc.PutBucketCorsRequest(input)
}

// PutBucketCors is a passthrough to the underlying PutBucketCors method.
// It will increment the count of requests made to PutBucketCors.
func (c *S3) PutBucketCors(input *s3.PutBucketCorsInput) (*s3.PutBucketCorsOutput, error) {
	c.inc("PutBucketCors")
	return c.svc.PutBucketCors(input)
}

// PutBucketCorsWithContext is a passthrough to the underlying PutBucketCorsWithContext method.
// It will increment the count of requests made to PutBucketCors.
func (c *S3) PutBucketCorsWithContext(ctx aws.Context, input *s3.PutBucketCorsInput, opts ...request.Option) (*s3.PutBucketCorsOutput, error) {
	c.inc("PutBucketCors")
	return c.svc.PutBucketCorsWithContext(ctx, input, opts...)
}

// PutBucketInventoryConfigurationRequest is a passthrough to the underlying PutBucketInventoryConfigurationRequest.
// It will increment the count of requests made to PutBucketInventoryConfiguration.
func (c *S3) PutBucketInventoryConfigurationRequest(input *s3.PutBucketInventoryConfigurationInput) (req *request.Request, output *s3.PutBucketInventoryConfigurationOutput) {
	c.inc("PutBucketInventoryConfiguration")
	return c.svc.PutBucketInventoryConfigurationRequest(input)
}

// PutBucketInventoryConfiguration is a passthrough to the underlying PutBucketInventoryConfiguration method.
// It will increment the count of requests made to PutBucketInventoryConfiguration.
func (c *S3) PutBucketInventoryConfiguration(input *s3.PutBucketInventoryConfigurationInput) (*s3.PutBucketInventoryConfigurationOutput, error) {
	c.inc("PutBucketInventoryConfiguration")
	return c.svc.PutBucketInventoryConfiguration(input)
}

// PutBucketInventoryConfigurationWithContext is a passthrough to the underlying PutBucketInventoryConfigurationWithContext method.
// It will increment the count of requests made to PutBucketInventoryConfiguration.
func (c *S3) PutBucketInventoryConfigurationWithContext(ctx aws.Context, input *s3.PutBucketInventoryConfigurationInput, opts ...request.Option) (*s3.PutBucketInventoryConfigurationOutput, error) {
	c.inc("PutBucketInventoryConfiguration")
	return c.svc.PutBucketInventoryConfigurationWithContext(ctx, input, opts...)
}

// PutBucketLifecycleRequest is a passthrough to the underlying PutBucketLifecycleRequest.
// It will increment the count of requests made to PutBucketLifecycle.
func (c *S3) PutBucketLifecycleRequest(input *s3.PutBucketLifecycleInput) (req *request.Request, output *s3.PutBucketLifecycleOutput) {
	c.inc("PutBucketLifecycle")
	return c.svc.PutBucketLifecycleRequest(input)
}

// PutBucketLifecycle is a passthrough to the underlying PutBucketLifecycle method.
// It will increment the count of requests made to PutBucketLifecycle.
func (c *S3) PutBucketLifecycle(input *s3.PutBucketLifecycleInput) (*s3.PutBucketLifecycleOutput, error) {
	c.inc("PutBucketLifecycle")
	return c.svc.PutBucketLifecycle(input)
}

// PutBucketLifecycleWithContext is a passthrough to the underlying PutBucketLifecycleWithContext method.
// It will increment the count of requests made to PutBucketLifecycle.
func (c *S3) PutBucketLifecycleWithContext(ctx aws.Context, input *s3.PutBucketLifecycleInput, opts ...request.Option) (*s3.PutBucketLifecycleOutput, error) {
	c.inc("PutBucketLifecycle")
	return c.svc.PutBucketLifecycleWithContext(ctx, input, opts...)
}

// PutBucketLifecycleConfigurationRequest is a passthrough to the underlying PutBucketLifecycleConfigurationRequest.
// It will increment the count of requests made to PutBucketLifecycleConfiguration.
func (c *S3) PutBucketLifecycleConfigurationRequest(input *s3.PutBucketLifecycleConfigurationInput) (req *request.Request, output *s3.PutBucketLifecycleConfigurationOutput) {
	c.inc("PutBucketLifecycleConfiguration")
	return c.svc.PutBucketLifecycleConfigurationRequest(input)
}

// PutBucketLifecycleConfiguration is a passthrough to the underlying PutBucketLifecycleConfiguration method.
// It will increment the count of requests made to PutBucketLifecycleConfiguration.
func (c *S3) PutBucketLifecycleConfiguration(input *s3.PutBucketLifecycleConfigurationInput) (*s3.PutBucketLifecycleConfigurationOutput, error) {
	c.inc("PutBucketLifecycleConfiguration")
	return c.svc.PutBucketLifecycleConfiguration(input)
}

// PutBucketLifecycleConfigurationWithContext is a passthrough to the underlying PutBucketLifecycleConfigurationWithContext method.
// It will increment the count of requests made to PutBucketLifecycleConfiguration.
func (c *S3) PutBucketLifecycleConfigurationWithContext(ctx aws.Context, input *s3.PutBucketLifecycleConfigurationInput, opts ...request.Option) (*s3.PutBucketLifecycleConfigurationOutput, error) {
	c.inc("PutBucketLifecycleConfiguration")
	return c.svc.PutBucketLifecycleConfigurationWithContext(ctx, input, opts...)
}

// PutBucketLoggingRequest is a passthrough to the underlying PutBucketLoggingRequest.
// It will increment the count of requests made to PutBucketLogging.
func (c *S3) PutBucketLoggingRequest(input *s3.PutBucketLoggingInput) (req *request.Request, output *s3.PutBucketLoggingOutput) {
	c.inc("PutBucketLogging")
	return c.svc.PutBucketLoggingRequest(input)
}

// PutBucketLogging is a passthrough to the underlying PutBucketLogging method.
// It will increment the count of requests made to PutBucketLogging.
func (c *S3) PutBucketLogging(input *s3.PutBucketLoggingInput) (*s3.PutBucketLoggingOutput, error) {
	c.inc("PutBucketLogging")
	return c.svc.PutBucketLogging(input)
}

// PutBucketLoggingWithContext is a passthrough to the underlying PutBucketLoggingWithContext method.
// It will increment the count of requests made to PutBucketLogging.
func (c *S3) PutBucketLoggingWithContext(ctx aws.Context, input *s3.PutBucketLoggingInput, opts ...request.Option) (*s3.PutBucketLoggingOutput, error) {
	c.inc("PutBucketLogging")
	return c.svc.PutBucketLoggingWithContext(ctx, input, opts...)
}

// PutBucketMetricsConfigurationRequest is a passthrough to the underlying PutBucketMetricsConfigurationRequest.
// It will increment the count of requests made to PutBucketMetricsConfiguration.
func (c *S3) PutBucketMetricsConfigurationRequest(input *s3.PutBucketMetricsConfigurationInput) (req *request.Request, output *s3.PutBucketMetricsConfigurationOutput) {
	c.inc("PutBucketMetricsConfiguration")
	return c.svc.PutBucketMetricsConfigurationRequest(input)
}

// PutBucketMetricsConfiguration is a passthrough to the underlying PutBucketMetricsConfiguration method.
// It will increment the count of requests made to PutBucketMetricsConfiguration.
func (c *S3) PutBucketMetricsConfiguration(input *s3.PutBucketMetricsConfigurationInput) (*s3.PutBucketMetricsConfigurationOutput, error) {
	c.inc("PutBucketMetricsConfiguration")
	return c.svc.PutBucketMetricsConfiguration(input)
}

// PutBucketMetricsConfigurationWithContext is a passthrough to the underlying PutBucketMetricsConfigurationWithContext method.
// It will increment the count of requests made to PutBucketMetricsConfiguration.
func (c *S3) PutBucketMetricsConfigurationWithContext(ctx aws.Context, input *s3.PutBucketMetricsConfigurationInput, opts ...request.Option) (*s3.PutBucketMetricsConfigurationOutput, error) {
	c.inc("PutBucketMetricsConfiguration")
	return c.svc.PutBucketMetricsConfigurationWithContext(ctx, input, opts...)
}

// PutBucketNotificationRequest is a passthrough to the underlying PutBucketNotificationRequest.
// It will increment the count of requests made to PutBucketNotification.
func (c *S3) PutBucketNotificationRequest(input *s3.PutBucketNotificationInput) (req *request.Request, output *s3.PutBucketNotificationOutput) {
	c.inc("PutBucketNotification")
	return c.svc.PutBucketNotificationRequest(input)
}

// PutBucketNotification is a passthrough to the underlying PutBucketNotification method.
// It will increment the count of requests made to PutBucketNotification.
func (c *S3) PutBucketNotification(input *s3.PutBucketNotificationInput) (*s3.PutBucketNotificationOutput, error) {
	c.inc("PutBucketNotification")
	return c.svc.PutBucketNotification(input)
}

// PutBucketNotificationWithContext is a passthrough to the underlying PutBucketNotificationWithContext method.
// It will increment the count of requests made to PutBucketNotification.
func (c *S3) PutBucketNotificationWithContext(ctx aws.Context, input *s3.PutBucketNotificationInput, opts ...request.Option) (*s3.PutBucketNotificationOutput, error) {
	c.inc("PutBucketNotification")
	return c.svc.PutBucketNotificationWithContext(ctx, input, opts...)
}

// PutBucketNotificationConfigurationRequest is a passthrough to the underlying PutBucketNotificationConfigurationRequest.
// It will increment the count of requests made to PutBucketNotificationConfiguration.
func (c *S3) PutBucketNotificationConfigurationRequest(input *s3.PutBucketNotificationConfigurationInput) (req *request.Request, output *s3.PutBucketNotificationConfigurationOutput) {
	c.inc("PutBucketNotificationConfiguration")
	return c.svc.PutBucketNotificationConfigurationRequest(input)
}

// PutBucketNotificationConfiguration is a passthrough to the underlying PutBucketNotificationConfiguration method.
// It will increment the count of requests made to PutBucketNotificationConfiguration.
func (c *S3) PutBucketNotificationConfiguration(input *s3.PutBucketNotificationConfigurationInput) (*s3.PutBucketNotificationConfigurationOutput, error) {
	c.inc("PutBucketNotificationConfiguration")
	return c.svc.PutBucketNotificationConfiguration(input)
}

// PutBucketNotificationConfigurationWithContext is a passthrough to the underlying PutBucketNotificationConfigurationWithContext method.
// It will increment the count of requests made to PutBucketNotificationConfiguration.
func (c *S3) PutBucketNotificationConfigurationWithContext(ctx aws.Context, input *s3.PutBucketNotificationConfigurationInput, opts ...request.Option) (*s3.PutBucketNotificationConfigurationOutput, error) {
	c.inc("PutBucketNotificationConfiguration")
	return c.svc.PutBucketNotificationConfigurationWithContext(ctx, input, opts...)
}

// PutBucketPolicyRequest is a passthrough to the underlying PutBucketPolicyRequest.
// It will increment the count of requests made to PutBucketPolicy.
func (c *S3) PutBucketPolicyRequest(input *s3.PutBucketPolicyInput) (req *request.Request, output *s3.PutBucketPolicyOutput) {
	c.inc("PutBucketPolicy")
	return c.svc.PutBucketPolicyRequest(input)
}

// PutBucketPolicy is a passthrough to the underlying PutBucketPolicy method.
// It will increment the count of requests made to PutBucketPolicy.
func (c *S3) PutBucketPolicy(input *s3.PutBucketPolicyInput) (*s3.PutBucketPolicyOutput, error) {
	c.inc("PutBucketPolicy")
	return c.svc.PutBucketPolicy(input)
}

// PutBucketPolicyWithContext is a passthrough to the underlying PutBucketPolicyWithContext method.
// It will increment the count of requests made to PutBucketPolicy.
func (c *S3) PutBucketPolicyWithContext(ctx aws.Context, input *s3.PutBucketPolicyInput, opts ...request.Option) (*s3.PutBucketPolicyOutput, error) {
	c.inc("PutBucketPolicy")
	return c.svc.PutBucketPolicyWithContext(ctx, input, opts...)
}

// PutBucketReplicationRequest is a passthrough to the underlying PutBucketReplicationRequest.
// It will increment the count of requests made to PutBucketReplication.
func (c *S3) PutBucketReplicationRequest(input *s3.PutBucketReplicationInput) (req *request.Request, output *s3.PutBucketReplicationOutput) {
	c.inc("PutBucketReplication")
	return c.svc.PutBucketReplicationRequest(input)
}

// PutBucketReplication is a passthrough to the underlying PutBucketReplication method.
// It will increment the count of requests made to PutBucketReplication.
func (c *S3) PutBucketReplication(input *s3.PutBucketReplicationInput) (*s3.PutBucketReplicationOutput, error) {
	c.inc("PutBucketReplication")
	return c.svc.PutBucketReplication(input)
}

// PutBucketReplicationWithContext is a passthrough to the underlying PutBucketReplicationWithContext method.
// It will increment the count of requests made to PutBucketReplication.
func (c *S3) PutBucketReplicationWithContext(ctx aws.Context, input *s3.PutBucketReplicationInput, opts ...request.Option) (*s3.PutBucketReplicationOutput, error) {
	c.inc("PutBucketReplication")
	return c.svc.PutBucketReplicationWithContext(ctx, input, opts...)
}

// PutBucketRequestPaymentRequest is a passthrough to the underlying PutBucketRequestPaymentRequest.
// It will increment the count of requests made to PutBucketRequestPayment.
func (c *S3) PutBucketRequestPaymentRequest(input *s3.PutBucketRequestPaymentInput) (req *request.Request, output *s3.PutBucketRequestPaymentOutput) {
	c.inc("PutBucketRequestPayment")
	return c.svc.PutBucketRequestPaymentRequest(input)
}

// PutBucketRequestPayment is a passthrough to the underlying PutBucketRequestPayment method.
// It will increment the count of requests made to PutBucketRequestPayment.
func (c *S3) PutBucketRequestPayment(input *s3.PutBucketRequestPaymentInput) (*s3.PutBucketRequestPaymentOutput, error) {
	c.inc("PutBucketRequestPayment")
	return c.svc.PutBucketRequestPayment(input)
}

// PutBucketRequestPaymentWithContext is a passthrough to the underlying PutBucketRequestPaymentWithContext method.
// It will increment the count of requests made to PutBucketRequestPayment.
func (c *S3) PutBucketRequestPaymentWithContext(ctx aws.Context, input *s3.PutBucketRequestPaymentInput, opts ...request.Option) (*s3.PutBucketRequestPaymentOutput, error) {
	c.inc("PutBucketRequestPayment")
	return c.svc.PutBucketRequestPaymentWithContext(ctx, input, opts...)
}

// PutBucketTaggingRequest is a passthrough to the underlying PutBucketTaggingRequest.
// It will increment the count of requests made to PutBucketTagging.
func (c *S3) PutBucketTaggingRequest(input *s3.PutBucketTaggingInput) (req *request.Request, output *s3.PutBucketTaggingOutput) {
	c.inc("PutBucketTagging")
	return c.svc.PutBucketTaggingRequest(input)
}

// PutBucketTagging is a passthrough to the underlying PutBucketTagging method.
// It will increment the count of requests made to PutBucketTagging.
func (c *S3) PutBucketTagging(input *s3.PutBucketTaggingInput) (*s3.PutBucketTaggingOutput, error) {
	c.inc("PutBucketTagging")
	return c.svc.PutBucketTagging(input)
}

// PutBucketTaggingWithContext is a passthrough to the underlying PutBucketTaggingWithContext method.
// It will increment the count of requests made to PutBucketTagging.
func (c *S3) PutBucketTaggingWithContext(ctx aws.Context, input *s3.PutBucketTaggingInput, opts ...request.Option) (*s3.PutBucketTaggingOutput, error) {
	c.inc("PutBucketTagging")
	return c.svc.PutBucketTaggingWithContext(ctx, input, opts...)
}

// PutBucketVersioningRequest is a passthrough to the underlying PutBucketVersioningRequest.
// It will increment the count of requests made to PutBucketVersioning.
func (c *S3) PutBucketVersioningRequest(input *s3.PutBucketVersioningInput) (req *request.Request, output *s3.PutBucketVersioningOutput) {
	c.inc("PutBucketVersioning")
	return c.svc.PutBucketVersioningRequest(input)
}

// PutBucketVersioning is a passthrough to the underlying PutBucketVersioning method.
// It will increment the count of requests made to PutBucketVersioning.
func (c *S3) PutBucketVersioning(input *s3.PutBucketVersioningInput) (*s3.PutBucketVersioningOutput, error) {
	c.inc("PutBucketVersioning")
	return c.svc.PutBucketVersioning(input)
}

// PutBucketVersioningWithContext is a passthrough to the underlying PutBucketVersioningWithContext method.
// It will increment the count of requests made to PutBucketVersioning.
func (c *S3) PutBucketVersioningWithContext(ctx aws.Context, input *s3.PutBucketVersioningInput, opts ...request.Option) (*s3.PutBucketVersioningOutput, error) {
	c.inc("PutBucketVersioning")
	return c.svc.PutBucketVersioningWithContext(ctx, input, opts...)
}

// PutBucketWebsiteRequest is a passthrough to the underlying PutBucketWebsiteRequest.
// It will increment the count of requests made to PutBucketWebsite.
func (c *S3) PutBucketWebsiteRequest(input *s3.PutBucketWebsiteInput) (req *request.Request, output *s3.PutBucketWebsiteOutput) {
	c.inc("PutBucketWebsite")
	return c.svc.PutBucketWebsiteRequest(input)
}

// PutBucketWebsite is a passthrough to the underlying PutBucketWebsite method.
// It will increment the count of requests made to PutBucketWebsite.
func (c *S3) PutBucketWebsite(input *s3.PutBucketWebsiteInput) (*s3.PutBucketWebsiteOutput, error) {
	c.inc("PutBucketWebsite")
	return c.svc.PutBucketWebsite(input)
}

// PutBucketWebsiteWithContext is a passthrough to the underlying PutBucketWebsiteWithContext method.
// It will increment the count of requests made to PutBucketWebsite.
func (c *S3) PutBucketWebsiteWithContext(ctx aws.Context, input *s3.PutBucketWebsiteInput, opts ...request.Option) (*s3.PutBucketWebsiteOutput, error) {
	c.inc("PutBucketWebsite")
	return c.svc.PutBucketWebsiteWithContext(ctx, input, opts...)
}

// PutObjectRequest is a passthrough to the underlying PutObjectRequest.
// It will increment the count of requests made to PutObject.
func (c *S3) PutObjectRequest(input *s3.PutObjectInput) (req *request.Request, output *s3.PutObjectOutput) {
	c.inc("PutObject")
	return c.svc.PutObjectRequest(input)
}

// PutObject is a passthrough to the underlying PutObject method.
// It will increment the count of requests made to PutObject.
func (c *S3) PutObject(input *s3.PutObjectInput) (*s3.PutObjectOutput, error) {
	c.inc("PutObject")
	return c.svc.PutObject(input)
}

// PutObjectWithContext is a passthrough to the underlying PutObjectWithContext method.
// It will increment the count of requests made to PutObject.
func (c *S3) PutObjectWithContext(ctx aws.Context, input *s3.PutObjectInput, opts ...request.Option) (*s3.PutObjectOutput, error) {
	c.inc("PutObject")
	return c.svc.PutObjectWithContext(ctx, input, opts...)
}

// PutObjectAclRequest is a passthrough to the underlying PutObjectAclRequest.
// It will increment the count of requests made to PutObjectAcl.
func (c *S3) PutObjectAclRequest(input *s3.PutObjectAclInput) (req *request.Request, output *s3.PutObjectAclOutput) {
	c.inc("PutObjectAcl")
	return c.svc.PutObjectAclRequest(input)
}

// PutObjectAcl is a passthrough to the underlying PutObjectAcl method.
// It will increment the count of requests made to PutObjectAcl.
func (c *S3) PutObjectAcl(input *s3.PutObjectAclInput) (*s3.PutObjectAclOutput, error) {
	c.inc("PutObjectAcl")
	return c.svc.PutObjectAcl(input)
}

// PutObjectAclWithContext is a passthrough to the underlying PutObjectAclWithContext method.
// It will increment the count of requests made to PutObjectAcl.
func (c *S3) PutObjectAclWithContext(ctx aws.Context, input *s3.PutObjectAclInput, opts ...request.Option) (*s3.PutObjectAclOutput, error) {
	c.inc("PutObjectAcl")
	return c.svc.PutObjectAclWithContext(ctx, input, opts...)
}

// PutObjectTaggingRequest is a passthrough to the underlying PutObjectTaggingRequest.
// It will increment the count of requests made to PutObjectTagging.
func (c *S3) PutObjectTaggingRequest(input *s3.PutObjectTaggingInput) (req *request.Request, output *s3.PutObjectTaggingOutput) {
	c.inc("PutObjectTagging")
	return c.svc.PutObjectTaggingRequest(input)
}

// PutObjectTagging is a passthrough to the underlying PutObjectTagging method.
// It will increment the count of requests made to PutObjectTagging.
func (c *S3) PutObjectTagging(input *s3.PutObjectTaggingInput) (*s3.PutObjectTaggingOutput, error) {
	c.inc("PutObjectTagging")
	return c.svc.PutObjectTagging(input)
}

// PutObjectTaggingWithContext is a passthrough to the underlying PutObjectTaggingWithContext method.
// It will increment the count of requests made to PutObjectTagging.
func (c *S3) PutObjectTaggingWithContext(ctx aws.Context, input *s3.PutObjectTaggingInput, opts ...request.Option) (*s3.PutObjectTaggingOutput, error) {
	c.inc("PutObjectTagging")
	return c.svc.PutObjectTaggingWithContext(ctx, input, opts...)
}

// RestoreObjectRequest is a passthrough to the underlying RestoreObjectRequest.
// It will increment the count of requests made to RestoreObject.
func (c *S3) RestoreObjectRequest(input *s3.RestoreObjectInput) (req *request.Request, output *s3.RestoreObjectOutput) {
	c.inc("RestoreObject")
	return c.svc.RestoreObjectRequest(input)
}

// RestoreObject is a passthrough to the underlying RestoreObject method.
// It will increment the count of requests made to RestoreObject.
func (c *S3) RestoreObject(input *s3.RestoreObjectInput) (*s3.RestoreObjectOutput, error) {
	c.inc("RestoreObject")
	return c.svc.RestoreObject(input)
}

// RestoreObjectWithContext is a passthrough to the underlying RestoreObjectWithContext method.
// It will increment the count of requests made to RestoreObject.
func (c *S3) RestoreObjectWithContext(ctx aws.Context, input *s3.RestoreObjectInput, opts ...request.Option) (*s3.RestoreObjectOutput, error) {
	c.inc("RestoreObject")
	return c.svc.RestoreObjectWithContext(ctx, input, opts...)
}

// UploadPartRequest is a passthrough to the underlying UploadPartRequest.
// It will increment the count of requests made to UploadPart.
func (c *S3) UploadPartRequest(input *s3.UploadPartInput) (req *request.Request, output *s3.UploadPartOutput) {
	c.inc("UploadPart")
	return c.svc.UploadPartRequest(input)
}

// UploadPart is a passthrough to the underlying UploadPart method.
// It will increment the count of requests made to UploadPart.
func (c *S3) UploadPart(input *s3.UploadPartInput) (*s3.UploadPartOutput, error) {
	c.inc("UploadPart")
	return c.svc.UploadPart(input)
}

// UploadPartWithContext is a passthrough to the underlying UploadPartWithContext method.
// It will increment the count of requests made to UploadPart.
func (c *S3) UploadPartWithContext(ctx aws.Context, input *s3.UploadPartInput, opts ...request.Option) (*s3.UploadPartOutput, error) {
	c.inc("UploadPart")
	return c.svc.UploadPartWithContext(ctx, input, opts...)
}

// UploadPartCopyRequest is a passthrough to the underlying UploadPartCopyRequest.
// It will increment the count of requests made to UploadPartCopy.
func (c *S3) UploadPartCopyRequest(input *s3.UploadPartCopyInput) (req *request.Request, output *s3.UploadPartCopyOutput) {
	c.inc("UploadPartCopy")
	return c.svc.UploadPartCopyRequest(input)
}

// UploadPartCopy is a passthrough to the underlying UploadPartCopy method.
// It will increment the count of requests made to UploadPartCopy.
func (c *S3) UploadPartCopy(input *s3.UploadPartCopyInput) (*s3.UploadPartCopyOutput, error) {
	c.inc("UploadPartCopy")
	return c.svc.UploadPartCopy(input)
}

// UploadPartCopyWithContext is a passthrough to the underlying UploadPartCopyWithContext method.
// It will increment the count of requests made to UploadPartCopy.
func (c *S3) UploadPartCopyWithContext(ctx aws.Context, input *s3.UploadPartCopyInput, opts ...request.Option) (*s3.UploadPartCopyOutput, error) {
	c.inc("UploadPartCopy")
	return c.svc.UploadPartCopyWithContext(ctx, input, opts...)
}
