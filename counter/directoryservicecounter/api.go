// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package directoryservicecounter

import (
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/directoryservice"
)

// AddIpRoutesRequest is a passthrough to the underlying AddIpRoutesRequest.
// It will increment the count of requests made to AddIpRoutes.
func (c *DirectoryService) AddIpRoutesRequest(input *directoryservice.AddIpRoutesInput) (req *request.Request, output *directoryservice.AddIpRoutesOutput) {
	c.inc("AddIpRoutes")
	return c.svc.AddIpRoutesRequest(input)
}

// AddIpRoutes is a passthrough to the underlying AddIpRoutes method.
// It will increment the count of requests made to AddIpRoutes.
func (c *DirectoryService) AddIpRoutes(input *directoryservice.AddIpRoutesInput) (*directoryservice.AddIpRoutesOutput, error) {
	c.inc("AddIpRoutes")
	return c.svc.AddIpRoutes(input)
}

// AddIpRoutesWithContext is a passthrough to the underlying AddIpRoutesWithContext method.
// It will increment the count of requests made to AddIpRoutes.
func (c *DirectoryService) AddIpRoutesWithContext(ctx aws.Context, input *directoryservice.AddIpRoutesInput, opts ...request.Option) (*directoryservice.AddIpRoutesOutput, error) {
	c.inc("AddIpRoutes")
	return c.svc.AddIpRoutesWithContext(ctx, input, opts...)
}

// AddTagsToResourceRequest is a passthrough to the underlying AddTagsToResourceRequest.
// It will increment the count of requests made to AddTagsToResource.
func (c *DirectoryService) AddTagsToResourceRequest(input *directoryservice.AddTagsToResourceInput) (req *request.Request, output *directoryservice.AddTagsToResourceOutput) {
	c.inc("AddTagsToResource")
	return c.svc.AddTagsToResourceRequest(input)
}

// AddTagsToResource is a passthrough to the underlying AddTagsToResource method.
// It will increment the count of requests made to AddTagsToResource.
func (c *DirectoryService) AddTagsToResource(input *directoryservice.AddTagsToResourceInput) (*directoryservice.AddTagsToResourceOutput, error) {
	c.inc("AddTagsToResource")
	return c.svc.AddTagsToResource(input)
}

// AddTagsToResourceWithContext is a passthrough to the underlying AddTagsToResourceWithContext method.
// It will increment the count of requests made to AddTagsToResource.
func (c *DirectoryService) AddTagsToResourceWithContext(ctx aws.Context, input *directoryservice.AddTagsToResourceInput, opts ...request.Option) (*directoryservice.AddTagsToResourceOutput, error) {
	c.inc("AddTagsToResource")
	return c.svc.AddTagsToResourceWithContext(ctx, input, opts...)
}

// CancelSchemaExtensionRequest is a passthrough to the underlying CancelSchemaExtensionRequest.
// It will increment the count of requests made to CancelSchemaExtension.
func (c *DirectoryService) CancelSchemaExtensionRequest(input *directoryservice.CancelSchemaExtensionInput) (req *request.Request, output *directoryservice.CancelSchemaExtensionOutput) {
	c.inc("CancelSchemaExtension")
	return c.svc.CancelSchemaExtensionRequest(input)
}

// CancelSchemaExtension is a passthrough to the underlying CancelSchemaExtension method.
// It will increment the count of requests made to CancelSchemaExtension.
func (c *DirectoryService) CancelSchemaExtension(input *directoryservice.CancelSchemaExtensionInput) (*directoryservice.CancelSchemaExtensionOutput, error) {
	c.inc("CancelSchemaExtension")
	return c.svc.CancelSchemaExtension(input)
}

// CancelSchemaExtensionWithContext is a passthrough to the underlying CancelSchemaExtensionWithContext method.
// It will increment the count of requests made to CancelSchemaExtension.
func (c *DirectoryService) CancelSchemaExtensionWithContext(ctx aws.Context, input *directoryservice.CancelSchemaExtensionInput, opts ...request.Option) (*directoryservice.CancelSchemaExtensionOutput, error) {
	c.inc("CancelSchemaExtension")
	return c.svc.CancelSchemaExtensionWithContext(ctx, input, opts...)
}

// ConnectDirectoryRequest is a passthrough to the underlying ConnectDirectoryRequest.
// It will increment the count of requests made to ConnectDirectory.
func (c *DirectoryService) ConnectDirectoryRequest(input *directoryservice.ConnectDirectoryInput) (req *request.Request, output *directoryservice.ConnectDirectoryOutput) {
	c.inc("ConnectDirectory")
	return c.svc.ConnectDirectoryRequest(input)
}

// ConnectDirectory is a passthrough to the underlying ConnectDirectory method.
// It will increment the count of requests made to ConnectDirectory.
func (c *DirectoryService) ConnectDirectory(input *directoryservice.ConnectDirectoryInput) (*directoryservice.ConnectDirectoryOutput, error) {
	c.inc("ConnectDirectory")
	return c.svc.ConnectDirectory(input)
}

// ConnectDirectoryWithContext is a passthrough to the underlying ConnectDirectoryWithContext method.
// It will increment the count of requests made to ConnectDirectory.
func (c *DirectoryService) ConnectDirectoryWithContext(ctx aws.Context, input *directoryservice.ConnectDirectoryInput, opts ...request.Option) (*directoryservice.ConnectDirectoryOutput, error) {
	c.inc("ConnectDirectory")
	return c.svc.ConnectDirectoryWithContext(ctx, input, opts...)
}

// CreateAliasRequest is a passthrough to the underlying CreateAliasRequest.
// It will increment the count of requests made to CreateAlias.
func (c *DirectoryService) CreateAliasRequest(input *directoryservice.CreateAliasInput) (req *request.Request, output *directoryservice.CreateAliasOutput) {
	c.inc("CreateAlias")
	return c.svc.CreateAliasRequest(input)
}

// CreateAlias is a passthrough to the underlying CreateAlias method.
// It will increment the count of requests made to CreateAlias.
func (c *DirectoryService) CreateAlias(input *directoryservice.CreateAliasInput) (*directoryservice.CreateAliasOutput, error) {
	c.inc("CreateAlias")
	return c.svc.CreateAlias(input)
}

// CreateAliasWithContext is a passthrough to the underlying CreateAliasWithContext method.
// It will increment the count of requests made to CreateAlias.
func (c *DirectoryService) CreateAliasWithContext(ctx aws.Context, input *directoryservice.CreateAliasInput, opts ...request.Option) (*directoryservice.CreateAliasOutput, error) {
	c.inc("CreateAlias")
	return c.svc.CreateAliasWithContext(ctx, input, opts...)
}

// CreateComputerRequest is a passthrough to the underlying CreateComputerRequest.
// It will increment the count of requests made to CreateComputer.
func (c *DirectoryService) CreateComputerRequest(input *directoryservice.CreateComputerInput) (req *request.Request, output *directoryservice.CreateComputerOutput) {
	c.inc("CreateComputer")
	return c.svc.CreateComputerRequest(input)
}

// CreateComputer is a passthrough to the underlying CreateComputer method.
// It will increment the count of requests made to CreateComputer.
func (c *DirectoryService) CreateComputer(input *directoryservice.CreateComputerInput) (*directoryservice.CreateComputerOutput, error) {
	c.inc("CreateComputer")
	return c.svc.CreateComputer(input)
}

// CreateComputerWithContext is a passthrough to the underlying CreateComputerWithContext method.
// It will increment the count of requests made to CreateComputer.
func (c *DirectoryService) CreateComputerWithContext(ctx aws.Context, input *directoryservice.CreateComputerInput, opts ...request.Option) (*directoryservice.CreateComputerOutput, error) {
	c.inc("CreateComputer")
	return c.svc.CreateComputerWithContext(ctx, input, opts...)
}

// CreateConditionalForwarderRequest is a passthrough to the underlying CreateConditionalForwarderRequest.
// It will increment the count of requests made to CreateConditionalForwarder.
func (c *DirectoryService) CreateConditionalForwarderRequest(input *directoryservice.CreateConditionalForwarderInput) (req *request.Request, output *directoryservice.CreateConditionalForwarderOutput) {
	c.inc("CreateConditionalForwarder")
	return c.svc.CreateConditionalForwarderRequest(input)
}

// CreateConditionalForwarder is a passthrough to the underlying CreateConditionalForwarder method.
// It will increment the count of requests made to CreateConditionalForwarder.
func (c *DirectoryService) CreateConditionalForwarder(input *directoryservice.CreateConditionalForwarderInput) (*directoryservice.CreateConditionalForwarderOutput, error) {
	c.inc("CreateConditionalForwarder")
	return c.svc.CreateConditionalForwarder(input)
}

// CreateConditionalForwarderWithContext is a passthrough to the underlying CreateConditionalForwarderWithContext method.
// It will increment the count of requests made to CreateConditionalForwarder.
func (c *DirectoryService) CreateConditionalForwarderWithContext(ctx aws.Context, input *directoryservice.CreateConditionalForwarderInput, opts ...request.Option) (*directoryservice.CreateConditionalForwarderOutput, error) {
	c.inc("CreateConditionalForwarder")
	return c.svc.CreateConditionalForwarderWithContext(ctx, input, opts...)
}

// CreateDirectoryRequest is a passthrough to the underlying CreateDirectoryRequest.
// It will increment the count of requests made to CreateDirectory.
func (c *DirectoryService) CreateDirectoryRequest(input *directoryservice.CreateDirectoryInput) (req *request.Request, output *directoryservice.CreateDirectoryOutput) {
	c.inc("CreateDirectory")
	return c.svc.CreateDirectoryRequest(input)
}

// CreateDirectory is a passthrough to the underlying CreateDirectory method.
// It will increment the count of requests made to CreateDirectory.
func (c *DirectoryService) CreateDirectory(input *directoryservice.CreateDirectoryInput) (*directoryservice.CreateDirectoryOutput, error) {
	c.inc("CreateDirectory")
	return c.svc.CreateDirectory(input)
}

// CreateDirectoryWithContext is a passthrough to the underlying CreateDirectoryWithContext method.
// It will increment the count of requests made to CreateDirectory.
func (c *DirectoryService) CreateDirectoryWithContext(ctx aws.Context, input *directoryservice.CreateDirectoryInput, opts ...request.Option) (*directoryservice.CreateDirectoryOutput, error) {
	c.inc("CreateDirectory")
	return c.svc.CreateDirectoryWithContext(ctx, input, opts...)
}

// CreateMicrosoftADRequest is a passthrough to the underlying CreateMicrosoftADRequest.
// It will increment the count of requests made to CreateMicrosoftAD.
func (c *DirectoryService) CreateMicrosoftADRequest(input *directoryservice.CreateMicrosoftADInput) (req *request.Request, output *directoryservice.CreateMicrosoftADOutput) {
	c.inc("CreateMicrosoftAD")
	return c.svc.CreateMicrosoftADRequest(input)
}

// CreateMicrosoftAD is a passthrough to the underlying CreateMicrosoftAD method.
// It will increment the count of requests made to CreateMicrosoftAD.
func (c *DirectoryService) CreateMicrosoftAD(input *directoryservice.CreateMicrosoftADInput) (*directoryservice.CreateMicrosoftADOutput, error) {
	c.inc("CreateMicrosoftAD")
	return c.svc.CreateMicrosoftAD(input)
}

// CreateMicrosoftADWithContext is a passthrough to the underlying CreateMicrosoftADWithContext method.
// It will increment the count of requests made to CreateMicrosoftAD.
func (c *DirectoryService) CreateMicrosoftADWithContext(ctx aws.Context, input *directoryservice.CreateMicrosoftADInput, opts ...request.Option) (*directoryservice.CreateMicrosoftADOutput, error) {
	c.inc("CreateMicrosoftAD")
	return c.svc.CreateMicrosoftADWithContext(ctx, input, opts...)
}

// CreateSnapshotRequest is a passthrough to the underlying CreateSnapshotRequest.
// It will increment the count of requests made to CreateSnapshot.
func (c *DirectoryService) CreateSnapshotRequest(input *directoryservice.CreateSnapshotInput) (req *request.Request, output *directoryservice.CreateSnapshotOutput) {
	c.inc("CreateSnapshot")
	return c.svc.CreateSnapshotRequest(input)
}

// CreateSnapshot is a passthrough to the underlying CreateSnapshot method.
// It will increment the count of requests made to CreateSnapshot.
func (c *DirectoryService) CreateSnapshot(input *directoryservice.CreateSnapshotInput) (*directoryservice.CreateSnapshotOutput, error) {
	c.inc("CreateSnapshot")
	return c.svc.CreateSnapshot(input)
}

// CreateSnapshotWithContext is a passthrough to the underlying CreateSnapshotWithContext method.
// It will increment the count of requests made to CreateSnapshot.
func (c *DirectoryService) CreateSnapshotWithContext(ctx aws.Context, input *directoryservice.CreateSnapshotInput, opts ...request.Option) (*directoryservice.CreateSnapshotOutput, error) {
	c.inc("CreateSnapshot")
	return c.svc.CreateSnapshotWithContext(ctx, input, opts...)
}

// CreateTrustRequest is a passthrough to the underlying CreateTrustRequest.
// It will increment the count of requests made to CreateTrust.
func (c *DirectoryService) CreateTrustRequest(input *directoryservice.CreateTrustInput) (req *request.Request, output *directoryservice.CreateTrustOutput) {
	c.inc("CreateTrust")
	return c.svc.CreateTrustRequest(input)
}

// CreateTrust is a passthrough to the underlying CreateTrust method.
// It will increment the count of requests made to CreateTrust.
func (c *DirectoryService) CreateTrust(input *directoryservice.CreateTrustInput) (*directoryservice.CreateTrustOutput, error) {
	c.inc("CreateTrust")
	return c.svc.CreateTrust(input)
}

// CreateTrustWithContext is a passthrough to the underlying CreateTrustWithContext method.
// It will increment the count of requests made to CreateTrust.
func (c *DirectoryService) CreateTrustWithContext(ctx aws.Context, input *directoryservice.CreateTrustInput, opts ...request.Option) (*directoryservice.CreateTrustOutput, error) {
	c.inc("CreateTrust")
	return c.svc.CreateTrustWithContext(ctx, input, opts...)
}

// DeleteConditionalForwarderRequest is a passthrough to the underlying DeleteConditionalForwarderRequest.
// It will increment the count of requests made to DeleteConditionalForwarder.
func (c *DirectoryService) DeleteConditionalForwarderRequest(input *directoryservice.DeleteConditionalForwarderInput) (req *request.Request, output *directoryservice.DeleteConditionalForwarderOutput) {
	c.inc("DeleteConditionalForwarder")
	return c.svc.DeleteConditionalForwarderRequest(input)
}

// DeleteConditionalForwarder is a passthrough to the underlying DeleteConditionalForwarder method.
// It will increment the count of requests made to DeleteConditionalForwarder.
func (c *DirectoryService) DeleteConditionalForwarder(input *directoryservice.DeleteConditionalForwarderInput) (*directoryservice.DeleteConditionalForwarderOutput, error) {
	c.inc("DeleteConditionalForwarder")
	return c.svc.DeleteConditionalForwarder(input)
}

// DeleteConditionalForwarderWithContext is a passthrough to the underlying DeleteConditionalForwarderWithContext method.
// It will increment the count of requests made to DeleteConditionalForwarder.
func (c *DirectoryService) DeleteConditionalForwarderWithContext(ctx aws.Context, input *directoryservice.DeleteConditionalForwarderInput, opts ...request.Option) (*directoryservice.DeleteConditionalForwarderOutput, error) {
	c.inc("DeleteConditionalForwarder")
	return c.svc.DeleteConditionalForwarderWithContext(ctx, input, opts...)
}

// DeleteDirectoryRequest is a passthrough to the underlying DeleteDirectoryRequest.
// It will increment the count of requests made to DeleteDirectory.
func (c *DirectoryService) DeleteDirectoryRequest(input *directoryservice.DeleteDirectoryInput) (req *request.Request, output *directoryservice.DeleteDirectoryOutput) {
	c.inc("DeleteDirectory")
	return c.svc.DeleteDirectoryRequest(input)
}

// DeleteDirectory is a passthrough to the underlying DeleteDirectory method.
// It will increment the count of requests made to DeleteDirectory.
func (c *DirectoryService) DeleteDirectory(input *directoryservice.DeleteDirectoryInput) (*directoryservice.DeleteDirectoryOutput, error) {
	c.inc("DeleteDirectory")
	return c.svc.DeleteDirectory(input)
}

// DeleteDirectoryWithContext is a passthrough to the underlying DeleteDirectoryWithContext method.
// It will increment the count of requests made to DeleteDirectory.
func (c *DirectoryService) DeleteDirectoryWithContext(ctx aws.Context, input *directoryservice.DeleteDirectoryInput, opts ...request.Option) (*directoryservice.DeleteDirectoryOutput, error) {
	c.inc("DeleteDirectory")
	return c.svc.DeleteDirectoryWithContext(ctx, input, opts...)
}

// DeleteSnapshotRequest is a passthrough to the underlying DeleteSnapshotRequest.
// It will increment the count of requests made to DeleteSnapshot.
func (c *DirectoryService) DeleteSnapshotRequest(input *directoryservice.DeleteSnapshotInput) (req *request.Request, output *directoryservice.DeleteSnapshotOutput) {
	c.inc("DeleteSnapshot")
	return c.svc.DeleteSnapshotRequest(input)
}

// DeleteSnapshot is a passthrough to the underlying DeleteSnapshot method.
// It will increment the count of requests made to DeleteSnapshot.
func (c *DirectoryService) DeleteSnapshot(input *directoryservice.DeleteSnapshotInput) (*directoryservice.DeleteSnapshotOutput, error) {
	c.inc("DeleteSnapshot")
	return c.svc.DeleteSnapshot(input)
}

// DeleteSnapshotWithContext is a passthrough to the underlying DeleteSnapshotWithContext method.
// It will increment the count of requests made to DeleteSnapshot.
func (c *DirectoryService) DeleteSnapshotWithContext(ctx aws.Context, input *directoryservice.DeleteSnapshotInput, opts ...request.Option) (*directoryservice.DeleteSnapshotOutput, error) {
	c.inc("DeleteSnapshot")
	return c.svc.DeleteSnapshotWithContext(ctx, input, opts...)
}

// DeleteTrustRequest is a passthrough to the underlying DeleteTrustRequest.
// It will increment the count of requests made to DeleteTrust.
func (c *DirectoryService) DeleteTrustRequest(input *directoryservice.DeleteTrustInput) (req *request.Request, output *directoryservice.DeleteTrustOutput) {
	c.inc("DeleteTrust")
	return c.svc.DeleteTrustRequest(input)
}

// DeleteTrust is a passthrough to the underlying DeleteTrust method.
// It will increment the count of requests made to DeleteTrust.
func (c *DirectoryService) DeleteTrust(input *directoryservice.DeleteTrustInput) (*directoryservice.DeleteTrustOutput, error) {
	c.inc("DeleteTrust")
	return c.svc.DeleteTrust(input)
}

// DeleteTrustWithContext is a passthrough to the underlying DeleteTrustWithContext method.
// It will increment the count of requests made to DeleteTrust.
func (c *DirectoryService) DeleteTrustWithContext(ctx aws.Context, input *directoryservice.DeleteTrustInput, opts ...request.Option) (*directoryservice.DeleteTrustOutput, error) {
	c.inc("DeleteTrust")
	return c.svc.DeleteTrustWithContext(ctx, input, opts...)
}

// DeregisterEventTopicRequest is a passthrough to the underlying DeregisterEventTopicRequest.
// It will increment the count of requests made to DeregisterEventTopic.
func (c *DirectoryService) DeregisterEventTopicRequest(input *directoryservice.DeregisterEventTopicInput) (req *request.Request, output *directoryservice.DeregisterEventTopicOutput) {
	c.inc("DeregisterEventTopic")
	return c.svc.DeregisterEventTopicRequest(input)
}

// DeregisterEventTopic is a passthrough to the underlying DeregisterEventTopic method.
// It will increment the count of requests made to DeregisterEventTopic.
func (c *DirectoryService) DeregisterEventTopic(input *directoryservice.DeregisterEventTopicInput) (*directoryservice.DeregisterEventTopicOutput, error) {
	c.inc("DeregisterEventTopic")
	return c.svc.DeregisterEventTopic(input)
}

// DeregisterEventTopicWithContext is a passthrough to the underlying DeregisterEventTopicWithContext method.
// It will increment the count of requests made to DeregisterEventTopic.
func (c *DirectoryService) DeregisterEventTopicWithContext(ctx aws.Context, input *directoryservice.DeregisterEventTopicInput, opts ...request.Option) (*directoryservice.DeregisterEventTopicOutput, error) {
	c.inc("DeregisterEventTopic")
	return c.svc.DeregisterEventTopicWithContext(ctx, input, opts...)
}

// DescribeConditionalForwardersRequest is a passthrough to the underlying DescribeConditionalForwardersRequest.
// It will increment the count of requests made to DescribeConditionalForwarders.
func (c *DirectoryService) DescribeConditionalForwardersRequest(input *directoryservice.DescribeConditionalForwardersInput) (req *request.Request, output *directoryservice.DescribeConditionalForwardersOutput) {
	c.inc("DescribeConditionalForwarders")
	return c.svc.DescribeConditionalForwardersRequest(input)
}

// DescribeConditionalForwarders is a passthrough to the underlying DescribeConditionalForwarders method.
// It will increment the count of requests made to DescribeConditionalForwarders.
func (c *DirectoryService) DescribeConditionalForwarders(input *directoryservice.DescribeConditionalForwardersInput) (*directoryservice.DescribeConditionalForwardersOutput, error) {
	c.inc("DescribeConditionalForwarders")
	return c.svc.DescribeConditionalForwarders(input)
}

// DescribeConditionalForwardersWithContext is a passthrough to the underlying DescribeConditionalForwardersWithContext method.
// It will increment the count of requests made to DescribeConditionalForwarders.
func (c *DirectoryService) DescribeConditionalForwardersWithContext(ctx aws.Context, input *directoryservice.DescribeConditionalForwardersInput, opts ...request.Option) (*directoryservice.DescribeConditionalForwardersOutput, error) {
	c.inc("DescribeConditionalForwarders")
	return c.svc.DescribeConditionalForwardersWithContext(ctx, input, opts...)
}

// DescribeDirectoriesRequest is a passthrough to the underlying DescribeDirectoriesRequest.
// It will increment the count of requests made to DescribeDirectories.
func (c *DirectoryService) DescribeDirectoriesRequest(input *directoryservice.DescribeDirectoriesInput) (req *request.Request, output *directoryservice.DescribeDirectoriesOutput) {
	c.inc("DescribeDirectories")
	return c.svc.DescribeDirectoriesRequest(input)
}

// DescribeDirectories is a passthrough to the underlying DescribeDirectories method.
// It will increment the count of requests made to DescribeDirectories.
func (c *DirectoryService) DescribeDirectories(input *directoryservice.DescribeDirectoriesInput) (*directoryservice.DescribeDirectoriesOutput, error) {
	c.inc("DescribeDirectories")
	return c.svc.DescribeDirectories(input)
}

// DescribeDirectoriesWithContext is a passthrough to the underlying DescribeDirectoriesWithContext method.
// It will increment the count of requests made to DescribeDirectories.
func (c *DirectoryService) DescribeDirectoriesWithContext(ctx aws.Context, input *directoryservice.DescribeDirectoriesInput, opts ...request.Option) (*directoryservice.DescribeDirectoriesOutput, error) {
	c.inc("DescribeDirectories")
	return c.svc.DescribeDirectoriesWithContext(ctx, input, opts...)
}

// DescribeDomainControllersRequest is a passthrough to the underlying DescribeDomainControllersRequest.
// It will increment the count of requests made to DescribeDomainControllers.
func (c *DirectoryService) DescribeDomainControllersRequest(input *directoryservice.DescribeDomainControllersInput) (req *request.Request, output *directoryservice.DescribeDomainControllersOutput) {
	c.inc("DescribeDomainControllers")
	return c.svc.DescribeDomainControllersRequest(input)
}

// DescribeDomainControllers is a passthrough to the underlying DescribeDomainControllers method.
// It will increment the count of requests made to DescribeDomainControllers.
func (c *DirectoryService) DescribeDomainControllers(input *directoryservice.DescribeDomainControllersInput) (*directoryservice.DescribeDomainControllersOutput, error) {
	c.inc("DescribeDomainControllers")
	return c.svc.DescribeDomainControllers(input)
}

// DescribeDomainControllersWithContext is a passthrough to the underlying DescribeDomainControllersWithContext method.
// It will increment the count of requests made to DescribeDomainControllers.
func (c *DirectoryService) DescribeDomainControllersWithContext(ctx aws.Context, input *directoryservice.DescribeDomainControllersInput, opts ...request.Option) (*directoryservice.DescribeDomainControllersOutput, error) {
	c.inc("DescribeDomainControllers")
	return c.svc.DescribeDomainControllersWithContext(ctx, input, opts...)
}

// DescribeDomainControllersPages is a passthrough to the underlying DescribeDomainControllersPages method.
// It will increment the count of requests made to DescribeDomainControllers on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeDomainControllersPagesWithContext to avoid this.
func (c *DirectoryService) DescribeDomainControllersPages(input *directoryservice.DescribeDomainControllersInput, fn func(*directoryservice.DescribeDomainControllersOutput, bool) bool) error {
	wrappedFn := func(page *directoryservice.DescribeDomainControllersOutput, lastPage bool) bool {
		c.inc("DescribeDomainControllers")
		return fn(page, lastPage)
	}
	return c.svc.DescribeDomainControllersPages(input, wrappedFn)
}

// DescribeDomainControllersPagesWithContext is a passthrough to the underlying DescribeDomainControllersPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeDomainControllers when applied to the request.
func (c *DirectoryService) DescribeDomainControllersPagesWithContext(ctx aws.Context, input *directoryservice.DescribeDomainControllersInput, fn func(*directoryservice.DescribeDomainControllersOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeDomainControllers"))
	return c.svc.DescribeDomainControllersPagesWithContext(ctx, input, fn, opts...)
}

// DescribeEventTopicsRequest is a passthrough to the underlying DescribeEventTopicsRequest.
// It will increment the count of requests made to DescribeEventTopics.
func (c *DirectoryService) DescribeEventTopicsRequest(input *directoryservice.DescribeEventTopicsInput) (req *request.Request, output *directoryservice.DescribeEventTopicsOutput) {
	c.inc("DescribeEventTopics")
	return c.svc.DescribeEventTopicsRequest(input)
}

// DescribeEventTopics is a passthrough to the underlying DescribeEventTopics method.
// It will increment the count of requests made to DescribeEventTopics.
func (c *DirectoryService) DescribeEventTopics(input *directoryservice.DescribeEventTopicsInput) (*directoryservice.DescribeEventTopicsOutput, error) {
	c.inc("DescribeEventTopics")
	return c.svc.DescribeEventTopics(input)
}

// DescribeEventTopicsWithContext is a passthrough to the underlying DescribeEventTopicsWithContext method.
// It will increment the count of requests made to DescribeEventTopics.
func (c *DirectoryService) DescribeEventTopicsWithContext(ctx aws.Context, input *directoryservice.DescribeEventTopicsInput, opts ...request.Option) (*directoryservice.DescribeEventTopicsOutput, error) {
	c.inc("DescribeEventTopics")
	return c.svc.DescribeEventTopicsWithContext(ctx, input, opts...)
}

// DescribeSnapshotsRequest is a passthrough to the underlying DescribeSnapshotsRequest.
// It will increment the count of requests made to DescribeSnapshots.
func (c *DirectoryService) DescribeSnapshotsRequest(input *directoryservice.DescribeSnapshotsInput) (req *request.Request, output *directoryservice.DescribeSnapshotsOutput) {
	c.inc("DescribeSnapshots")
	return c.svc.DescribeSnapshotsRequest(input)
}

// DescribeSnapshots is a passthrough to the underlying DescribeSnapshots method.
// It will increment the count of requests made to DescribeSnapshots.
func (c *DirectoryService) DescribeSnapshots(input *directoryservice.DescribeSnapshotsInput) (*directoryservice.DescribeSnapshotsOutput, error) {
	c.inc("DescribeSnapshots")
	return c.svc.DescribeSnapshots(input)
}

// DescribeSnapshotsWithContext is a passthrough to the underlying DescribeSnapshotsWithContext method.
// It will increment the count of requests made to DescribeSnapshots.
func (c *DirectoryService) DescribeSnapshotsWithContext(ctx aws.Context, input *directoryservice.DescribeSnapshotsInput, opts ...request.Option) (*directoryservice.DescribeSnapshotsOutput, error) {
	c.inc("DescribeSnapshots")
	return c.svc.DescribeSnapshotsWithContext(ctx, input, opts...)
}

// DescribeTrustsRequest is a passthrough to the underlying DescribeTrustsRequest.
// It will increment the count of requests made to DescribeTrusts.
func (c *DirectoryService) DescribeTrustsRequest(input *directoryservice.DescribeTrustsInput) (req *request.Request, output *directoryservice.DescribeTrustsOutput) {
	c.inc("DescribeTrusts")
	return c.svc.DescribeTrustsRequest(input)
}

// DescribeTrusts is a passthrough to the underlying DescribeTrusts method.
// It will increment the count of requests made to DescribeTrusts.
func (c *DirectoryService) DescribeTrusts(input *directoryservice.DescribeTrustsInput) (*directoryservice.DescribeTrustsOutput, error) {
	c.inc("DescribeTrusts")
	return c.svc.DescribeTrusts(input)
}

// DescribeTrustsWithContext is a passthrough to the underlying DescribeTrustsWithContext method.
// It will increment the count of requests made to DescribeTrusts.
func (c *DirectoryService) DescribeTrustsWithContext(ctx aws.Context, input *directoryservice.DescribeTrustsInput, opts ...request.Option) (*directoryservice.DescribeTrustsOutput, error) {
	c.inc("DescribeTrusts")
	return c.svc.DescribeTrustsWithContext(ctx, input, opts...)
}

// DisableRadiusRequest is a passthrough to the underlying DisableRadiusRequest.
// It will increment the count of requests made to DisableRadius.
func (c *DirectoryService) DisableRadiusRequest(input *directoryservice.DisableRadiusInput) (req *request.Request, output *directoryservice.DisableRadiusOutput) {
	c.inc("DisableRadius")
	return c.svc.DisableRadiusRequest(input)
}

// DisableRadius is a passthrough to the underlying DisableRadius method.
// It will increment the count of requests made to DisableRadius.
func (c *DirectoryService) DisableRadius(input *directoryservice.DisableRadiusInput) (*directoryservice.DisableRadiusOutput, error) {
	c.inc("DisableRadius")
	return c.svc.DisableRadius(input)
}

// DisableRadiusWithContext is a passthrough to the underlying DisableRadiusWithContext method.
// It will increment the count of requests made to DisableRadius.
func (c *DirectoryService) DisableRadiusWithContext(ctx aws.Context, input *directoryservice.DisableRadiusInput, opts ...request.Option) (*directoryservice.DisableRadiusOutput, error) {
	c.inc("DisableRadius")
	return c.svc.DisableRadiusWithContext(ctx, input, opts...)
}

// DisableSsoRequest is a passthrough to the underlying DisableSsoRequest.
// It will increment the count of requests made to DisableSso.
func (c *DirectoryService) DisableSsoRequest(input *directoryservice.DisableSsoInput) (req *request.Request, output *directoryservice.DisableSsoOutput) {
	c.inc("DisableSso")
	return c.svc.DisableSsoRequest(input)
}

// DisableSso is a passthrough to the underlying DisableSso method.
// It will increment the count of requests made to DisableSso.
func (c *DirectoryService) DisableSso(input *directoryservice.DisableSsoInput) (*directoryservice.DisableSsoOutput, error) {
	c.inc("DisableSso")
	return c.svc.DisableSso(input)
}

// DisableSsoWithContext is a passthrough to the underlying DisableSsoWithContext method.
// It will increment the count of requests made to DisableSso.
func (c *DirectoryService) DisableSsoWithContext(ctx aws.Context, input *directoryservice.DisableSsoInput, opts ...request.Option) (*directoryservice.DisableSsoOutput, error) {
	c.inc("DisableSso")
	return c.svc.DisableSsoWithContext(ctx, input, opts...)
}

// EnableRadiusRequest is a passthrough to the underlying EnableRadiusRequest.
// It will increment the count of requests made to EnableRadius.
func (c *DirectoryService) EnableRadiusRequest(input *directoryservice.EnableRadiusInput) (req *request.Request, output *directoryservice.EnableRadiusOutput) {
	c.inc("EnableRadius")
	return c.svc.EnableRadiusRequest(input)
}

// EnableRadius is a passthrough to the underlying EnableRadius method.
// It will increment the count of requests made to EnableRadius.
func (c *DirectoryService) EnableRadius(input *directoryservice.EnableRadiusInput) (*directoryservice.EnableRadiusOutput, error) {
	c.inc("EnableRadius")
	return c.svc.EnableRadius(input)
}

// EnableRadiusWithContext is a passthrough to the underlying EnableRadiusWithContext method.
// It will increment the count of requests made to EnableRadius.
func (c *DirectoryService) EnableRadiusWithContext(ctx aws.Context, input *directoryservice.EnableRadiusInput, opts ...request.Option) (*directoryservice.EnableRadiusOutput, error) {
	c.inc("EnableRadius")
	return c.svc.EnableRadiusWithContext(ctx, input, opts...)
}

// EnableSsoRequest is a passthrough to the underlying EnableSsoRequest.
// It will increment the count of requests made to EnableSso.
func (c *DirectoryService) EnableSsoRequest(input *directoryservice.EnableSsoInput) (req *request.Request, output *directoryservice.EnableSsoOutput) {
	c.inc("EnableSso")
	return c.svc.EnableSsoRequest(input)
}

// EnableSso is a passthrough to the underlying EnableSso method.
// It will increment the count of requests made to EnableSso.
func (c *DirectoryService) EnableSso(input *directoryservice.EnableSsoInput) (*directoryservice.EnableSsoOutput, error) {
	c.inc("EnableSso")
	return c.svc.EnableSso(input)
}

// EnableSsoWithContext is a passthrough to the underlying EnableSsoWithContext method.
// It will increment the count of requests made to EnableSso.
func (c *DirectoryService) EnableSsoWithContext(ctx aws.Context, input *directoryservice.EnableSsoInput, opts ...request.Option) (*directoryservice.EnableSsoOutput, error) {
	c.inc("EnableSso")
	return c.svc.EnableSsoWithContext(ctx, input, opts...)
}

// GetDirectoryLimitsRequest is a passthrough to the underlying GetDirectoryLimitsRequest.
// It will increment the count of requests made to GetDirectoryLimits.
func (c *DirectoryService) GetDirectoryLimitsRequest(input *directoryservice.GetDirectoryLimitsInput) (req *request.Request, output *directoryservice.GetDirectoryLimitsOutput) {
	c.inc("GetDirectoryLimits")
	return c.svc.GetDirectoryLimitsRequest(input)
}

// GetDirectoryLimits is a passthrough to the underlying GetDirectoryLimits method.
// It will increment the count of requests made to GetDirectoryLimits.
func (c *DirectoryService) GetDirectoryLimits(input *directoryservice.GetDirectoryLimitsInput) (*directoryservice.GetDirectoryLimitsOutput, error) {
	c.inc("GetDirectoryLimits")
	return c.svc.GetDirectoryLimits(input)
}

// GetDirectoryLimitsWithContext is a passthrough to the underlying GetDirectoryLimitsWithContext method.
// It will increment the count of requests made to GetDirectoryLimits.
func (c *DirectoryService) GetDirectoryLimitsWithContext(ctx aws.Context, input *directoryservice.GetDirectoryLimitsInput, opts ...request.Option) (*directoryservice.GetDirectoryLimitsOutput, error) {
	c.inc("GetDirectoryLimits")
	return c.svc.GetDirectoryLimitsWithContext(ctx, input, opts...)
}

// GetSnapshotLimitsRequest is a passthrough to the underlying GetSnapshotLimitsRequest.
// It will increment the count of requests made to GetSnapshotLimits.
func (c *DirectoryService) GetSnapshotLimitsRequest(input *directoryservice.GetSnapshotLimitsInput) (req *request.Request, output *directoryservice.GetSnapshotLimitsOutput) {
	c.inc("GetSnapshotLimits")
	return c.svc.GetSnapshotLimitsRequest(input)
}

// GetSnapshotLimits is a passthrough to the underlying GetSnapshotLimits method.
// It will increment the count of requests made to GetSnapshotLimits.
func (c *DirectoryService) GetSnapshotLimits(input *directoryservice.GetSnapshotLimitsInput) (*directoryservice.GetSnapshotLimitsOutput, error) {
	c.inc("GetSnapshotLimits")
	return c.svc.GetSnapshotLimits(input)
}

// GetSnapshotLimitsWithContext is a passthrough to the underlying GetSnapshotLimitsWithContext method.
// It will increment the count of requests made to GetSnapshotLimits.
func (c *DirectoryService) GetSnapshotLimitsWithContext(ctx aws.Context, input *directoryservice.GetSnapshotLimitsInput, opts ...request.Option) (*directoryservice.GetSnapshotLimitsOutput, error) {
	c.inc("GetSnapshotLimits")
	return c.svc.GetSnapshotLimitsWithContext(ctx, input, opts...)
}

// ListIpRoutesRequest is a passthrough to the underlying ListIpRoutesRequest.
// It will increment the count of requests made to ListIpRoutes.
func (c *DirectoryService) ListIpRoutesRequest(input *directoryservice.ListIpRoutesInput) (req *request.Request, output *directoryservice.ListIpRoutesOutput) {
	c.inc("ListIpRoutes")
	return c.svc.ListIpRoutesRequest(input)
}

// ListIpRoutes is a passthrough to the underlying ListIpRoutes method.
// It will increment the count of requests made to ListIpRoutes.
func (c *DirectoryService) ListIpRoutes(input *directoryservice.ListIpRoutesInput) (*directoryservice.ListIpRoutesOutput, error) {
	c.inc("ListIpRoutes")
	return c.svc.ListIpRoutes(input)
}

// ListIpRoutesWithContext is a passthrough to the underlying ListIpRoutesWithContext method.
// It will increment the count of requests made to ListIpRoutes.
func (c *DirectoryService) ListIpRoutesWithContext(ctx aws.Context, input *directoryservice.ListIpRoutesInput, opts ...request.Option) (*directoryservice.ListIpRoutesOutput, error) {
	c.inc("ListIpRoutes")
	return c.svc.ListIpRoutesWithContext(ctx, input, opts...)
}

// ListSchemaExtensionsRequest is a passthrough to the underlying ListSchemaExtensionsRequest.
// It will increment the count of requests made to ListSchemaExtensions.
func (c *DirectoryService) ListSchemaExtensionsRequest(input *directoryservice.ListSchemaExtensionsInput) (req *request.Request, output *directoryservice.ListSchemaExtensionsOutput) {
	c.inc("ListSchemaExtensions")
	return c.svc.ListSchemaExtensionsRequest(input)
}

// ListSchemaExtensions is a passthrough to the underlying ListSchemaExtensions method.
// It will increment the count of requests made to ListSchemaExtensions.
func (c *DirectoryService) ListSchemaExtensions(input *directoryservice.ListSchemaExtensionsInput) (*directoryservice.ListSchemaExtensionsOutput, error) {
	c.inc("ListSchemaExtensions")
	return c.svc.ListSchemaExtensions(input)
}

// ListSchemaExtensionsWithContext is a passthrough to the underlying ListSchemaExtensionsWithContext method.
// It will increment the count of requests made to ListSchemaExtensions.
func (c *DirectoryService) ListSchemaExtensionsWithContext(ctx aws.Context, input *directoryservice.ListSchemaExtensionsInput, opts ...request.Option) (*directoryservice.ListSchemaExtensionsOutput, error) {
	c.inc("ListSchemaExtensions")
	return c.svc.ListSchemaExtensionsWithContext(ctx, input, opts...)
}

// ListTagsForResourceRequest is a passthrough to the underlying ListTagsForResourceRequest.
// It will increment the count of requests made to ListTagsForResource.
func (c *DirectoryService) ListTagsForResourceRequest(input *directoryservice.ListTagsForResourceInput) (req *request.Request, output *directoryservice.ListTagsForResourceOutput) {
	c.inc("ListTagsForResource")
	return c.svc.ListTagsForResourceRequest(input)
}

// ListTagsForResource is a passthrough to the underlying ListTagsForResource method.
// It will increment the count of requests made to ListTagsForResource.
func (c *DirectoryService) ListTagsForResource(input *directoryservice.ListTagsForResourceInput) (*directoryservice.ListTagsForResourceOutput, error) {
	c.inc("ListTagsForResource")
	return c.svc.ListTagsForResource(input)
}

// ListTagsForResourceWithContext is a passthrough to the underlying ListTagsForResourceWithContext method.
// It will increment the count of requests made to ListTagsForResource.
func (c *DirectoryService) ListTagsForResourceWithContext(ctx aws.Context, input *directoryservice.ListTagsForResourceInput, opts ...request.Option) (*directoryservice.ListTagsForResourceOutput, error) {
	c.inc("ListTagsForResource")
	return c.svc.ListTagsForResourceWithContext(ctx, input, opts...)
}

// RegisterEventTopicRequest is a passthrough to the underlying RegisterEventTopicRequest.
// It will increment the count of requests made to RegisterEventTopic.
func (c *DirectoryService) RegisterEventTopicRequest(input *directoryservice.RegisterEventTopicInput) (req *request.Request, output *directoryservice.RegisterEventTopicOutput) {
	c.inc("RegisterEventTopic")
	return c.svc.RegisterEventTopicRequest(input)
}

// RegisterEventTopic is a passthrough to the underlying RegisterEventTopic method.
// It will increment the count of requests made to RegisterEventTopic.
func (c *DirectoryService) RegisterEventTopic(input *directoryservice.RegisterEventTopicInput) (*directoryservice.RegisterEventTopicOutput, error) {
	c.inc("RegisterEventTopic")
	return c.svc.RegisterEventTopic(input)
}

// RegisterEventTopicWithContext is a passthrough to the underlying RegisterEventTopicWithContext method.
// It will increment the count of requests made to RegisterEventTopic.
func (c *DirectoryService) RegisterEventTopicWithContext(ctx aws.Context, input *directoryservice.RegisterEventTopicInput, opts ...request.Option) (*directoryservice.RegisterEventTopicOutput, error) {
	c.inc("RegisterEventTopic")
	return c.svc.RegisterEventTopicWithContext(ctx, input, opts...)
}

// RemoveIpRoutesRequest is a passthrough to the underlying RemoveIpRoutesRequest.
// It will increment the count of requests made to RemoveIpRoutes.
func (c *DirectoryService) RemoveIpRoutesRequest(input *directoryservice.RemoveIpRoutesInput) (req *request.Request, output *directoryservice.RemoveIpRoutesOutput) {
	c.inc("RemoveIpRoutes")
	return c.svc.RemoveIpRoutesRequest(input)
}

// RemoveIpRoutes is a passthrough to the underlying RemoveIpRoutes method.
// It will increment the count of requests made to RemoveIpRoutes.
func (c *DirectoryService) RemoveIpRoutes(input *directoryservice.RemoveIpRoutesInput) (*directoryservice.RemoveIpRoutesOutput, error) {
	c.inc("RemoveIpRoutes")
	return c.svc.RemoveIpRoutes(input)
}

// RemoveIpRoutesWithContext is a passthrough to the underlying RemoveIpRoutesWithContext method.
// It will increment the count of requests made to RemoveIpRoutes.
func (c *DirectoryService) RemoveIpRoutesWithContext(ctx aws.Context, input *directoryservice.RemoveIpRoutesInput, opts ...request.Option) (*directoryservice.RemoveIpRoutesOutput, error) {
	c.inc("RemoveIpRoutes")
	return c.svc.RemoveIpRoutesWithContext(ctx, input, opts...)
}

// RemoveTagsFromResourceRequest is a passthrough to the underlying RemoveTagsFromResourceRequest.
// It will increment the count of requests made to RemoveTagsFromResource.
func (c *DirectoryService) RemoveTagsFromResourceRequest(input *directoryservice.RemoveTagsFromResourceInput) (req *request.Request, output *directoryservice.RemoveTagsFromResourceOutput) {
	c.inc("RemoveTagsFromResource")
	return c.svc.RemoveTagsFromResourceRequest(input)
}

// RemoveTagsFromResource is a passthrough to the underlying RemoveTagsFromResource method.
// It will increment the count of requests made to RemoveTagsFromResource.
func (c *DirectoryService) RemoveTagsFromResource(input *directoryservice.RemoveTagsFromResourceInput) (*directoryservice.RemoveTagsFromResourceOutput, error) {
	c.inc("RemoveTagsFromResource")
	return c.svc.RemoveTagsFromResource(input)
}

// RemoveTagsFromResourceWithContext is a passthrough to the underlying RemoveTagsFromResourceWithContext method.
// It will increment the count of requests made to RemoveTagsFromResource.
func (c *DirectoryService) RemoveTagsFromResourceWithContext(ctx aws.Context, input *directoryservice.RemoveTagsFromResourceInput, opts ...request.Option) (*directoryservice.RemoveTagsFromResourceOutput, error) {
	c.inc("RemoveTagsFromResource")
	return c.svc.RemoveTagsFromResourceWithContext(ctx, input, opts...)
}

// RestoreFromSnapshotRequest is a passthrough to the underlying RestoreFromSnapshotRequest.
// It will increment the count of requests made to RestoreFromSnapshot.
func (c *DirectoryService) RestoreFromSnapshotRequest(input *directoryservice.RestoreFromSnapshotInput) (req *request.Request, output *directoryservice.RestoreFromSnapshotOutput) {
	c.inc("RestoreFromSnapshot")
	return c.svc.RestoreFromSnapshotRequest(input)
}

// RestoreFromSnapshot is a passthrough to the underlying RestoreFromSnapshot method.
// It will increment the count of requests made to RestoreFromSnapshot.
func (c *DirectoryService) RestoreFromSnapshot(input *directoryservice.RestoreFromSnapshotInput) (*directoryservice.RestoreFromSnapshotOutput, error) {
	c.inc("RestoreFromSnapshot")
	return c.svc.RestoreFromSnapshot(input)
}

// RestoreFromSnapshotWithContext is a passthrough to the underlying RestoreFromSnapshotWithContext method.
// It will increment the count of requests made to RestoreFromSnapshot.
func (c *DirectoryService) RestoreFromSnapshotWithContext(ctx aws.Context, input *directoryservice.RestoreFromSnapshotInput, opts ...request.Option) (*directoryservice.RestoreFromSnapshotOutput, error) {
	c.inc("RestoreFromSnapshot")
	return c.svc.RestoreFromSnapshotWithContext(ctx, input, opts...)
}

// StartSchemaExtensionRequest is a passthrough to the underlying StartSchemaExtensionRequest.
// It will increment the count of requests made to StartSchemaExtension.
func (c *DirectoryService) StartSchemaExtensionRequest(input *directoryservice.StartSchemaExtensionInput) (req *request.Request, output *directoryservice.StartSchemaExtensionOutput) {
	c.inc("StartSchemaExtension")
	return c.svc.StartSchemaExtensionRequest(input)
}

// StartSchemaExtension is a passthrough to the underlying StartSchemaExtension method.
// It will increment the count of requests made to StartSchemaExtension.
func (c *DirectoryService) StartSchemaExtension(input *directoryservice.StartSchemaExtensionInput) (*directoryservice.StartSchemaExtensionOutput, error) {
	c.inc("StartSchemaExtension")
	return c.svc.StartSchemaExtension(input)
}

// StartSchemaExtensionWithContext is a passthrough to the underlying StartSchemaExtensionWithContext method.
// It will increment the count of requests made to StartSchemaExtension.
func (c *DirectoryService) StartSchemaExtensionWithContext(ctx aws.Context, input *directoryservice.StartSchemaExtensionInput, opts ...request.Option) (*directoryservice.StartSchemaExtensionOutput, error) {
	c.inc("StartSchemaExtension")
	return c.svc.StartSchemaExtensionWithContext(ctx, input, opts...)
}

// UpdateConditionalForwarderRequest is a passthrough to the underlying UpdateConditionalForwarderRequest.
// It will increment the count of requests made to UpdateConditionalForwarder.
func (c *DirectoryService) UpdateConditionalForwarderRequest(input *directoryservice.UpdateConditionalForwarderInput) (req *request.Request, output *directoryservice.UpdateConditionalForwarderOutput) {
	c.inc("UpdateConditionalForwarder")
	return c.svc.UpdateConditionalForwarderRequest(input)
}

// UpdateConditionalForwarder is a passthrough to the underlying UpdateConditionalForwarder method.
// It will increment the count of requests made to UpdateConditionalForwarder.
func (c *DirectoryService) UpdateConditionalForwarder(input *directoryservice.UpdateConditionalForwarderInput) (*directoryservice.UpdateConditionalForwarderOutput, error) {
	c.inc("UpdateConditionalForwarder")
	return c.svc.UpdateConditionalForwarder(input)
}

// UpdateConditionalForwarderWithContext is a passthrough to the underlying UpdateConditionalForwarderWithContext method.
// It will increment the count of requests made to UpdateConditionalForwarder.
func (c *DirectoryService) UpdateConditionalForwarderWithContext(ctx aws.Context, input *directoryservice.UpdateConditionalForwarderInput, opts ...request.Option) (*directoryservice.UpdateConditionalForwarderOutput, error) {
	c.inc("UpdateConditionalForwarder")
	return c.svc.UpdateConditionalForwarderWithContext(ctx, input, opts...)
}

// UpdateNumberOfDomainControllersRequest is a passthrough to the underlying UpdateNumberOfDomainControllersRequest.
// It will increment the count of requests made to UpdateNumberOfDomainControllers.
func (c *DirectoryService) UpdateNumberOfDomainControllersRequest(input *directoryservice.UpdateNumberOfDomainControllersInput) (req *request.Request, output *directoryservice.UpdateNumberOfDomainControllersOutput) {
	c.inc("UpdateNumberOfDomainControllers")
	return c.svc.UpdateNumberOfDomainControllersRequest(input)
}

// UpdateNumberOfDomainControllers is a passthrough to the underlying UpdateNumberOfDomainControllers method.
// It will increment the count of requests made to UpdateNumberOfDomainControllers.
func (c *DirectoryService) UpdateNumberOfDomainControllers(input *directoryservice.UpdateNumberOfDomainControllersInput) (*directoryservice.UpdateNumberOfDomainControllersOutput, error) {
	c.inc("UpdateNumberOfDomainControllers")
	return c.svc.UpdateNumberOfDomainControllers(input)
}

// UpdateNumberOfDomainControllersWithContext is a passthrough to the underlying UpdateNumberOfDomainControllersWithContext method.
// It will increment the count of requests made to UpdateNumberOfDomainControllers.
func (c *DirectoryService) UpdateNumberOfDomainControllersWithContext(ctx aws.Context, input *directoryservice.UpdateNumberOfDomainControllersInput, opts ...request.Option) (*directoryservice.UpdateNumberOfDomainControllersOutput, error) {
	c.inc("UpdateNumberOfDomainControllers")
	return c.svc.UpdateNumberOfDomainControllersWithContext(ctx, input, opts...)
}

// UpdateRadiusRequest is a passthrough to the underlying UpdateRadiusRequest.
// It will increment the count of requests made to UpdateRadius.
func (c *DirectoryService) UpdateRadiusRequest(input *directoryservice.UpdateRadiusInput) (req *request.Request, output *directoryservice.UpdateRadiusOutput) {
	c.inc("UpdateRadius")
	return c.svc.UpdateRadiusRequest(input)
}

// UpdateRadius is a passthrough to the underlying UpdateRadius method.
// It will increment the count of requests made to UpdateRadius.
func (c *DirectoryService) UpdateRadius(input *directoryservice.UpdateRadiusInput) (*directoryservice.UpdateRadiusOutput, error) {
	c.inc("UpdateRadius")
	return c.svc.UpdateRadius(input)
}

// UpdateRadiusWithContext is a passthrough to the underlying UpdateRadiusWithContext method.
// It will increment the count of requests made to UpdateRadius.
func (c *DirectoryService) UpdateRadiusWithContext(ctx aws.Context, input *directoryservice.UpdateRadiusInput, opts ...request.Option) (*directoryservice.UpdateRadiusOutput, error) {
	c.inc("UpdateRadius")
	return c.svc.UpdateRadiusWithContext(ctx, input, opts...)
}

// VerifyTrustRequest is a passthrough to the underlying VerifyTrustRequest.
// It will increment the count of requests made to VerifyTrust.
func (c *DirectoryService) VerifyTrustRequest(input *directoryservice.VerifyTrustInput) (req *request.Request, output *directoryservice.VerifyTrustOutput) {
	c.inc("VerifyTrust")
	return c.svc.VerifyTrustRequest(input)
}

// VerifyTrust is a passthrough to the underlying VerifyTrust method.
// It will increment the count of requests made to VerifyTrust.
func (c *DirectoryService) VerifyTrust(input *directoryservice.VerifyTrustInput) (*directoryservice.VerifyTrustOutput, error) {
	c.inc("VerifyTrust")
	return c.svc.VerifyTrust(input)
}

// VerifyTrustWithContext is a passthrough to the underlying VerifyTrustWithContext method.
// It will increment the count of requests made to VerifyTrust.
func (c *DirectoryService) VerifyTrustWithContext(ctx aws.Context, input *directoryservice.VerifyTrustInput, opts ...request.Option) (*directoryservice.VerifyTrustOutput, error) {
	c.inc("VerifyTrust")
	return c.svc.VerifyTrustWithContext(ctx, input, opts...)
}
