// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package applicationautoscalingcounter

import (
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/applicationautoscaling"
)

// DeleteScalingPolicyRequest is a passthrough to the underlying DeleteScalingPolicyRequest.
// It will increment the count of requests made to DeleteScalingPolicy.
func (c *ApplicationAutoScaling) DeleteScalingPolicyRequest(input *applicationautoscaling.DeleteScalingPolicyInput) (req *request.Request, output *applicationautoscaling.DeleteScalingPolicyOutput) {
	c.inc("DeleteScalingPolicy")
	return c.svc.DeleteScalingPolicyRequest(input)
}

// DeleteScalingPolicy is a passthrough to the underlying DeleteScalingPolicy method.
// It will increment the count of requests made to DeleteScalingPolicy.
func (c *ApplicationAutoScaling) DeleteScalingPolicy(input *applicationautoscaling.DeleteScalingPolicyInput) (*applicationautoscaling.DeleteScalingPolicyOutput, error) {
	c.inc("DeleteScalingPolicy")
	return c.svc.DeleteScalingPolicy(input)
}

// DeleteScalingPolicyWithContext is a passthrough to the underlying DeleteScalingPolicyWithContext method.
// It will increment the count of requests made to DeleteScalingPolicy.
func (c *ApplicationAutoScaling) DeleteScalingPolicyWithContext(ctx aws.Context, input *applicationautoscaling.DeleteScalingPolicyInput, opts ...request.Option) (*applicationautoscaling.DeleteScalingPolicyOutput, error) {
	c.inc("DeleteScalingPolicy")
	return c.svc.DeleteScalingPolicyWithContext(ctx, input, opts...)
}

// DeleteScheduledActionRequest is a passthrough to the underlying DeleteScheduledActionRequest.
// It will increment the count of requests made to DeleteScheduledAction.
func (c *ApplicationAutoScaling) DeleteScheduledActionRequest(input *applicationautoscaling.DeleteScheduledActionInput) (req *request.Request, output *applicationautoscaling.DeleteScheduledActionOutput) {
	c.inc("DeleteScheduledAction")
	return c.svc.DeleteScheduledActionRequest(input)
}

// DeleteScheduledAction is a passthrough to the underlying DeleteScheduledAction method.
// It will increment the count of requests made to DeleteScheduledAction.
func (c *ApplicationAutoScaling) DeleteScheduledAction(input *applicationautoscaling.DeleteScheduledActionInput) (*applicationautoscaling.DeleteScheduledActionOutput, error) {
	c.inc("DeleteScheduledAction")
	return c.svc.DeleteScheduledAction(input)
}

// DeleteScheduledActionWithContext is a passthrough to the underlying DeleteScheduledActionWithContext method.
// It will increment the count of requests made to DeleteScheduledAction.
func (c *ApplicationAutoScaling) DeleteScheduledActionWithContext(ctx aws.Context, input *applicationautoscaling.DeleteScheduledActionInput, opts ...request.Option) (*applicationautoscaling.DeleteScheduledActionOutput, error) {
	c.inc("DeleteScheduledAction")
	return c.svc.DeleteScheduledActionWithContext(ctx, input, opts...)
}

// DeregisterScalableTargetRequest is a passthrough to the underlying DeregisterScalableTargetRequest.
// It will increment the count of requests made to DeregisterScalableTarget.
func (c *ApplicationAutoScaling) DeregisterScalableTargetRequest(input *applicationautoscaling.DeregisterScalableTargetInput) (req *request.Request, output *applicationautoscaling.DeregisterScalableTargetOutput) {
	c.inc("DeregisterScalableTarget")
	return c.svc.DeregisterScalableTargetRequest(input)
}

// DeregisterScalableTarget is a passthrough to the underlying DeregisterScalableTarget method.
// It will increment the count of requests made to DeregisterScalableTarget.
func (c *ApplicationAutoScaling) DeregisterScalableTarget(input *applicationautoscaling.DeregisterScalableTargetInput) (*applicationautoscaling.DeregisterScalableTargetOutput, error) {
	c.inc("DeregisterScalableTarget")
	return c.svc.DeregisterScalableTarget(input)
}

// DeregisterScalableTargetWithContext is a passthrough to the underlying DeregisterScalableTargetWithContext method.
// It will increment the count of requests made to DeregisterScalableTarget.
func (c *ApplicationAutoScaling) DeregisterScalableTargetWithContext(ctx aws.Context, input *applicationautoscaling.DeregisterScalableTargetInput, opts ...request.Option) (*applicationautoscaling.DeregisterScalableTargetOutput, error) {
	c.inc("DeregisterScalableTarget")
	return c.svc.DeregisterScalableTargetWithContext(ctx, input, opts...)
}

// DescribeScalableTargetsRequest is a passthrough to the underlying DescribeScalableTargetsRequest.
// It will increment the count of requests made to DescribeScalableTargets.
func (c *ApplicationAutoScaling) DescribeScalableTargetsRequest(input *applicationautoscaling.DescribeScalableTargetsInput) (req *request.Request, output *applicationautoscaling.DescribeScalableTargetsOutput) {
	c.inc("DescribeScalableTargets")
	return c.svc.DescribeScalableTargetsRequest(input)
}

// DescribeScalableTargets is a passthrough to the underlying DescribeScalableTargets method.
// It will increment the count of requests made to DescribeScalableTargets.
func (c *ApplicationAutoScaling) DescribeScalableTargets(input *applicationautoscaling.DescribeScalableTargetsInput) (*applicationautoscaling.DescribeScalableTargetsOutput, error) {
	c.inc("DescribeScalableTargets")
	return c.svc.DescribeScalableTargets(input)
}

// DescribeScalableTargetsWithContext is a passthrough to the underlying DescribeScalableTargetsWithContext method.
// It will increment the count of requests made to DescribeScalableTargets.
func (c *ApplicationAutoScaling) DescribeScalableTargetsWithContext(ctx aws.Context, input *applicationautoscaling.DescribeScalableTargetsInput, opts ...request.Option) (*applicationautoscaling.DescribeScalableTargetsOutput, error) {
	c.inc("DescribeScalableTargets")
	return c.svc.DescribeScalableTargetsWithContext(ctx, input, opts...)
}

// DescribeScalableTargetsPages is a passthrough to the underlying DescribeScalableTargetsPages method.
// It will increment the count of requests made to DescribeScalableTargets on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeScalableTargetsPagesWithContext to avoid this.
func (c *ApplicationAutoScaling) DescribeScalableTargetsPages(input *applicationautoscaling.DescribeScalableTargetsInput, fn func(*applicationautoscaling.DescribeScalableTargetsOutput, bool) bool) error {
	wrappedFn := func(page *applicationautoscaling.DescribeScalableTargetsOutput, lastPage bool) bool {
		c.inc("DescribeScalableTargets")
		return fn(page, lastPage)
	}
	return c.svc.DescribeScalableTargetsPages(input, wrappedFn)
}

// DescribeScalableTargetsPagesWithContext is a passthrough to the underlying DescribeScalableTargetsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeScalableTargets when applied to the request.
func (c *ApplicationAutoScaling) DescribeScalableTargetsPagesWithContext(ctx aws.Context, input *applicationautoscaling.DescribeScalableTargetsInput, fn func(*applicationautoscaling.DescribeScalableTargetsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeScalableTargets"))
	return c.svc.DescribeScalableTargetsPagesWithContext(ctx, input, fn, opts...)
}

// DescribeScalingActivitiesRequest is a passthrough to the underlying DescribeScalingActivitiesRequest.
// It will increment the count of requests made to DescribeScalingActivities.
func (c *ApplicationAutoScaling) DescribeScalingActivitiesRequest(input *applicationautoscaling.DescribeScalingActivitiesInput) (req *request.Request, output *applicationautoscaling.DescribeScalingActivitiesOutput) {
	c.inc("DescribeScalingActivities")
	return c.svc.DescribeScalingActivitiesRequest(input)
}

// DescribeScalingActivities is a passthrough to the underlying DescribeScalingActivities method.
// It will increment the count of requests made to DescribeScalingActivities.
func (c *ApplicationAutoScaling) DescribeScalingActivities(input *applicationautoscaling.DescribeScalingActivitiesInput) (*applicationautoscaling.DescribeScalingActivitiesOutput, error) {
	c.inc("DescribeScalingActivities")
	return c.svc.DescribeScalingActivities(input)
}

// DescribeScalingActivitiesWithContext is a passthrough to the underlying DescribeScalingActivitiesWithContext method.
// It will increment the count of requests made to DescribeScalingActivities.
func (c *ApplicationAutoScaling) DescribeScalingActivitiesWithContext(ctx aws.Context, input *applicationautoscaling.DescribeScalingActivitiesInput, opts ...request.Option) (*applicationautoscaling.DescribeScalingActivitiesOutput, error) {
	c.inc("DescribeScalingActivities")
	return c.svc.DescribeScalingActivitiesWithContext(ctx, input, opts...)
}

// DescribeScalingActivitiesPages is a passthrough to the underlying DescribeScalingActivitiesPages method.
// It will increment the count of requests made to DescribeScalingActivities on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeScalingActivitiesPagesWithContext to avoid this.
func (c *ApplicationAutoScaling) DescribeScalingActivitiesPages(input *applicationautoscaling.DescribeScalingActivitiesInput, fn func(*applicationautoscaling.DescribeScalingActivitiesOutput, bool) bool) error {
	wrappedFn := func(page *applicationautoscaling.DescribeScalingActivitiesOutput, lastPage bool) bool {
		c.inc("DescribeScalingActivities")
		return fn(page, lastPage)
	}
	return c.svc.DescribeScalingActivitiesPages(input, wrappedFn)
}

// DescribeScalingActivitiesPagesWithContext is a passthrough to the underlying DescribeScalingActivitiesPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeScalingActivities when applied to the request.
func (c *ApplicationAutoScaling) DescribeScalingActivitiesPagesWithContext(ctx aws.Context, input *applicationautoscaling.DescribeScalingActivitiesInput, fn func(*applicationautoscaling.DescribeScalingActivitiesOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeScalingActivities"))
	return c.svc.DescribeScalingActivitiesPagesWithContext(ctx, input, fn, opts...)
}

// DescribeScalingPoliciesRequest is a passthrough to the underlying DescribeScalingPoliciesRequest.
// It will increment the count of requests made to DescribeScalingPolicies.
func (c *ApplicationAutoScaling) DescribeScalingPoliciesRequest(input *applicationautoscaling.DescribeScalingPoliciesInput) (req *request.Request, output *applicationautoscaling.DescribeScalingPoliciesOutput) {
	c.inc("DescribeScalingPolicies")
	return c.svc.DescribeScalingPoliciesRequest(input)
}

// DescribeScalingPolicies is a passthrough to the underlying DescribeScalingPolicies method.
// It will increment the count of requests made to DescribeScalingPolicies.
func (c *ApplicationAutoScaling) DescribeScalingPolicies(input *applicationautoscaling.DescribeScalingPoliciesInput) (*applicationautoscaling.DescribeScalingPoliciesOutput, error) {
	c.inc("DescribeScalingPolicies")
	return c.svc.DescribeScalingPolicies(input)
}

// DescribeScalingPoliciesWithContext is a passthrough to the underlying DescribeScalingPoliciesWithContext method.
// It will increment the count of requests made to DescribeScalingPolicies.
func (c *ApplicationAutoScaling) DescribeScalingPoliciesWithContext(ctx aws.Context, input *applicationautoscaling.DescribeScalingPoliciesInput, opts ...request.Option) (*applicationautoscaling.DescribeScalingPoliciesOutput, error) {
	c.inc("DescribeScalingPolicies")
	return c.svc.DescribeScalingPoliciesWithContext(ctx, input, opts...)
}

// DescribeScalingPoliciesPages is a passthrough to the underlying DescribeScalingPoliciesPages method.
// It will increment the count of requests made to DescribeScalingPolicies on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeScalingPoliciesPagesWithContext to avoid this.
func (c *ApplicationAutoScaling) DescribeScalingPoliciesPages(input *applicationautoscaling.DescribeScalingPoliciesInput, fn func(*applicationautoscaling.DescribeScalingPoliciesOutput, bool) bool) error {
	wrappedFn := func(page *applicationautoscaling.DescribeScalingPoliciesOutput, lastPage bool) bool {
		c.inc("DescribeScalingPolicies")
		return fn(page, lastPage)
	}
	return c.svc.DescribeScalingPoliciesPages(input, wrappedFn)
}

// DescribeScalingPoliciesPagesWithContext is a passthrough to the underlying DescribeScalingPoliciesPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeScalingPolicies when applied to the request.
func (c *ApplicationAutoScaling) DescribeScalingPoliciesPagesWithContext(ctx aws.Context, input *applicationautoscaling.DescribeScalingPoliciesInput, fn func(*applicationautoscaling.DescribeScalingPoliciesOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeScalingPolicies"))
	return c.svc.DescribeScalingPoliciesPagesWithContext(ctx, input, fn, opts...)
}

// DescribeScheduledActionsRequest is a passthrough to the underlying DescribeScheduledActionsRequest.
// It will increment the count of requests made to DescribeScheduledActions.
func (c *ApplicationAutoScaling) DescribeScheduledActionsRequest(input *applicationautoscaling.DescribeScheduledActionsInput) (req *request.Request, output *applicationautoscaling.DescribeScheduledActionsOutput) {
	c.inc("DescribeScheduledActions")
	return c.svc.DescribeScheduledActionsRequest(input)
}

// DescribeScheduledActions is a passthrough to the underlying DescribeScheduledActions method.
// It will increment the count of requests made to DescribeScheduledActions.
func (c *ApplicationAutoScaling) DescribeScheduledActions(input *applicationautoscaling.DescribeScheduledActionsInput) (*applicationautoscaling.DescribeScheduledActionsOutput, error) {
	c.inc("DescribeScheduledActions")
	return c.svc.DescribeScheduledActions(input)
}

// DescribeScheduledActionsWithContext is a passthrough to the underlying DescribeScheduledActionsWithContext method.
// It will increment the count of requests made to DescribeScheduledActions.
func (c *ApplicationAutoScaling) DescribeScheduledActionsWithContext(ctx aws.Context, input *applicationautoscaling.DescribeScheduledActionsInput, opts ...request.Option) (*applicationautoscaling.DescribeScheduledActionsOutput, error) {
	c.inc("DescribeScheduledActions")
	return c.svc.DescribeScheduledActionsWithContext(ctx, input, opts...)
}

// PutScalingPolicyRequest is a passthrough to the underlying PutScalingPolicyRequest.
// It will increment the count of requests made to PutScalingPolicy.
func (c *ApplicationAutoScaling) PutScalingPolicyRequest(input *applicationautoscaling.PutScalingPolicyInput) (req *request.Request, output *applicationautoscaling.PutScalingPolicyOutput) {
	c.inc("PutScalingPolicy")
	return c.svc.PutScalingPolicyRequest(input)
}

// PutScalingPolicy is a passthrough to the underlying PutScalingPolicy method.
// It will increment the count of requests made to PutScalingPolicy.
func (c *ApplicationAutoScaling) PutScalingPolicy(input *applicationautoscaling.PutScalingPolicyInput) (*applicationautoscaling.PutScalingPolicyOutput, error) {
	c.inc("PutScalingPolicy")
	return c.svc.PutScalingPolicy(input)
}

// PutScalingPolicyWithContext is a passthrough to the underlying PutScalingPolicyWithContext method.
// It will increment the count of requests made to PutScalingPolicy.
func (c *ApplicationAutoScaling) PutScalingPolicyWithContext(ctx aws.Context, input *applicationautoscaling.PutScalingPolicyInput, opts ...request.Option) (*applicationautoscaling.PutScalingPolicyOutput, error) {
	c.inc("PutScalingPolicy")
	return c.svc.PutScalingPolicyWithContext(ctx, input, opts...)
}

// PutScheduledActionRequest is a passthrough to the underlying PutScheduledActionRequest.
// It will increment the count of requests made to PutScheduledAction.
func (c *ApplicationAutoScaling) PutScheduledActionRequest(input *applicationautoscaling.PutScheduledActionInput) (req *request.Request, output *applicationautoscaling.PutScheduledActionOutput) {
	c.inc("PutScheduledAction")
	return c.svc.PutScheduledActionRequest(input)
}

// PutScheduledAction is a passthrough to the underlying PutScheduledAction method.
// It will increment the count of requests made to PutScheduledAction.
func (c *ApplicationAutoScaling) PutScheduledAction(input *applicationautoscaling.PutScheduledActionInput) (*applicationautoscaling.PutScheduledActionOutput, error) {
	c.inc("PutScheduledAction")
	return c.svc.PutScheduledAction(input)
}

// PutScheduledActionWithContext is a passthrough to the underlying PutScheduledActionWithContext method.
// It will increment the count of requests made to PutScheduledAction.
func (c *ApplicationAutoScaling) PutScheduledActionWithContext(ctx aws.Context, input *applicationautoscaling.PutScheduledActionInput, opts ...request.Option) (*applicationautoscaling.PutScheduledActionOutput, error) {
	c.inc("PutScheduledAction")
	return c.svc.PutScheduledActionWithContext(ctx, input, opts...)
}

// RegisterScalableTargetRequest is a passthrough to the underlying RegisterScalableTargetRequest.
// It will increment the count of requests made to RegisterScalableTarget.
func (c *ApplicationAutoScaling) RegisterScalableTargetRequest(input *applicationautoscaling.RegisterScalableTargetInput) (req *request.Request, output *applicationautoscaling.RegisterScalableTargetOutput) {
	c.inc("RegisterScalableTarget")
	return c.svc.RegisterScalableTargetRequest(input)
}

// RegisterScalableTarget is a passthrough to the underlying RegisterScalableTarget method.
// It will increment the count of requests made to RegisterScalableTarget.
func (c *ApplicationAutoScaling) RegisterScalableTarget(input *applicationautoscaling.RegisterScalableTargetInput) (*applicationautoscaling.RegisterScalableTargetOutput, error) {
	c.inc("RegisterScalableTarget")
	return c.svc.RegisterScalableTarget(input)
}

// RegisterScalableTargetWithContext is a passthrough to the underlying RegisterScalableTargetWithContext method.
// It will increment the count of requests made to RegisterScalableTarget.
func (c *ApplicationAutoScaling) RegisterScalableTargetWithContext(ctx aws.Context, input *applicationautoscaling.RegisterScalableTargetInput, opts ...request.Option) (*applicationautoscaling.RegisterScalableTargetOutput, error) {
	c.inc("RegisterScalableTarget")
	return c.svc.RegisterScalableTargetWithContext(ctx, input, opts...)
}
