// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package firehosecounter

import (
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/firehose"
)

// CreateDeliveryStreamRequest is a passthrough to the underlying CreateDeliveryStreamRequest.
// It will increment the count of requests made to CreateDeliveryStream.
func (c *Firehose) CreateDeliveryStreamRequest(input *firehose.CreateDeliveryStreamInput) (req *request.Request, output *firehose.CreateDeliveryStreamOutput) {
	c.inc("CreateDeliveryStream")
	return c.svc.CreateDeliveryStreamRequest(input)
}

// CreateDeliveryStream is a passthrough to the underlying CreateDeliveryStream method.
// It will increment the count of requests made to CreateDeliveryStream.
func (c *Firehose) CreateDeliveryStream(input *firehose.CreateDeliveryStreamInput) (*firehose.CreateDeliveryStreamOutput, error) {
	c.inc("CreateDeliveryStream")
	return c.svc.CreateDeliveryStream(input)
}

// CreateDeliveryStreamWithContext is a passthrough to the underlying CreateDeliveryStreamWithContext method.
// It will increment the count of requests made to CreateDeliveryStream.
func (c *Firehose) CreateDeliveryStreamWithContext(ctx aws.Context, input *firehose.CreateDeliveryStreamInput, opts ...request.Option) (*firehose.CreateDeliveryStreamOutput, error) {
	c.inc("CreateDeliveryStream")
	return c.svc.CreateDeliveryStreamWithContext(ctx, input, opts...)
}

// DeleteDeliveryStreamRequest is a passthrough to the underlying DeleteDeliveryStreamRequest.
// It will increment the count of requests made to DeleteDeliveryStream.
func (c *Firehose) DeleteDeliveryStreamRequest(input *firehose.DeleteDeliveryStreamInput) (req *request.Request, output *firehose.DeleteDeliveryStreamOutput) {
	c.inc("DeleteDeliveryStream")
	return c.svc.DeleteDeliveryStreamRequest(input)
}

// DeleteDeliveryStream is a passthrough to the underlying DeleteDeliveryStream method.
// It will increment the count of requests made to DeleteDeliveryStream.
func (c *Firehose) DeleteDeliveryStream(input *firehose.DeleteDeliveryStreamInput) (*firehose.DeleteDeliveryStreamOutput, error) {
	c.inc("DeleteDeliveryStream")
	return c.svc.DeleteDeliveryStream(input)
}

// DeleteDeliveryStreamWithContext is a passthrough to the underlying DeleteDeliveryStreamWithContext method.
// It will increment the count of requests made to DeleteDeliveryStream.
func (c *Firehose) DeleteDeliveryStreamWithContext(ctx aws.Context, input *firehose.DeleteDeliveryStreamInput, opts ...request.Option) (*firehose.DeleteDeliveryStreamOutput, error) {
	c.inc("DeleteDeliveryStream")
	return c.svc.DeleteDeliveryStreamWithContext(ctx, input, opts...)
}

// DescribeDeliveryStreamRequest is a passthrough to the underlying DescribeDeliveryStreamRequest.
// It will increment the count of requests made to DescribeDeliveryStream.
func (c *Firehose) DescribeDeliveryStreamRequest(input *firehose.DescribeDeliveryStreamInput) (req *request.Request, output *firehose.DescribeDeliveryStreamOutput) {
	c.inc("DescribeDeliveryStream")
	return c.svc.DescribeDeliveryStreamRequest(input)
}

// DescribeDeliveryStream is a passthrough to the underlying DescribeDeliveryStream method.
// It will increment the count of requests made to DescribeDeliveryStream.
func (c *Firehose) DescribeDeliveryStream(input *firehose.DescribeDeliveryStreamInput) (*firehose.DescribeDeliveryStreamOutput, error) {
	c.inc("DescribeDeliveryStream")
	return c.svc.DescribeDeliveryStream(input)
}

// DescribeDeliveryStreamWithContext is a passthrough to the underlying DescribeDeliveryStreamWithContext method.
// It will increment the count of requests made to DescribeDeliveryStream.
func (c *Firehose) DescribeDeliveryStreamWithContext(ctx aws.Context, input *firehose.DescribeDeliveryStreamInput, opts ...request.Option) (*firehose.DescribeDeliveryStreamOutput, error) {
	c.inc("DescribeDeliveryStream")
	return c.svc.DescribeDeliveryStreamWithContext(ctx, input, opts...)
}

// GetKinesisStreamRequest is a passthrough to the underlying GetKinesisStreamRequest.
// It will increment the count of requests made to GetKinesisStream.
func (c *Firehose) GetKinesisStreamRequest(input *firehose.GetKinesisStreamInput) (req *request.Request, output *firehose.GetKinesisStreamOutput) {
	c.inc("GetKinesisStream")
	return c.svc.GetKinesisStreamRequest(input)
}

// GetKinesisStream is a passthrough to the underlying GetKinesisStream method.
// It will increment the count of requests made to GetKinesisStream.
func (c *Firehose) GetKinesisStream(input *firehose.GetKinesisStreamInput) (*firehose.GetKinesisStreamOutput, error) {
	c.inc("GetKinesisStream")
	return c.svc.GetKinesisStream(input)
}

// GetKinesisStreamWithContext is a passthrough to the underlying GetKinesisStreamWithContext method.
// It will increment the count of requests made to GetKinesisStream.
func (c *Firehose) GetKinesisStreamWithContext(ctx aws.Context, input *firehose.GetKinesisStreamInput, opts ...request.Option) (*firehose.GetKinesisStreamOutput, error) {
	c.inc("GetKinesisStream")
	return c.svc.GetKinesisStreamWithContext(ctx, input, opts...)
}

// ListDeliveryStreamsRequest is a passthrough to the underlying ListDeliveryStreamsRequest.
// It will increment the count of requests made to ListDeliveryStreams.
func (c *Firehose) ListDeliveryStreamsRequest(input *firehose.ListDeliveryStreamsInput) (req *request.Request, output *firehose.ListDeliveryStreamsOutput) {
	c.inc("ListDeliveryStreams")
	return c.svc.ListDeliveryStreamsRequest(input)
}

// ListDeliveryStreams is a passthrough to the underlying ListDeliveryStreams method.
// It will increment the count of requests made to ListDeliveryStreams.
func (c *Firehose) ListDeliveryStreams(input *firehose.ListDeliveryStreamsInput) (*firehose.ListDeliveryStreamsOutput, error) {
	c.inc("ListDeliveryStreams")
	return c.svc.ListDeliveryStreams(input)
}

// ListDeliveryStreamsWithContext is a passthrough to the underlying ListDeliveryStreamsWithContext method.
// It will increment the count of requests made to ListDeliveryStreams.
func (c *Firehose) ListDeliveryStreamsWithContext(ctx aws.Context, input *firehose.ListDeliveryStreamsInput, opts ...request.Option) (*firehose.ListDeliveryStreamsOutput, error) {
	c.inc("ListDeliveryStreams")
	return c.svc.ListDeliveryStreamsWithContext(ctx, input, opts...)
}

// PutRecordRequest is a passthrough to the underlying PutRecordRequest.
// It will increment the count of requests made to PutRecord.
func (c *Firehose) PutRecordRequest(input *firehose.PutRecordInput) (req *request.Request, output *firehose.PutRecordOutput) {
	c.inc("PutRecord")
	return c.svc.PutRecordRequest(input)
}

// PutRecord is a passthrough to the underlying PutRecord method.
// It will increment the count of requests made to PutRecord.
func (c *Firehose) PutRecord(input *firehose.PutRecordInput) (*firehose.PutRecordOutput, error) {
	c.inc("PutRecord")
	return c.svc.PutRecord(input)
}

// PutRecordWithContext is a passthrough to the underlying PutRecordWithContext method.
// It will increment the count of requests made to PutRecord.
func (c *Firehose) PutRecordWithContext(ctx aws.Context, input *firehose.PutRecordInput, opts ...request.Option) (*firehose.PutRecordOutput, error) {
	c.inc("PutRecord")
	return c.svc.PutRecordWithContext(ctx, input, opts...)
}

// PutRecordBatchRequest is a passthrough to the underlying PutRecordBatchRequest.
// It will increment the count of requests made to PutRecordBatch.
func (c *Firehose) PutRecordBatchRequest(input *firehose.PutRecordBatchInput) (req *request.Request, output *firehose.PutRecordBatchOutput) {
	c.inc("PutRecordBatch")
	return c.svc.PutRecordBatchRequest(input)
}

// PutRecordBatch is a passthrough to the underlying PutRecordBatch method.
// It will increment the count of requests made to PutRecordBatch.
func (c *Firehose) PutRecordBatch(input *firehose.PutRecordBatchInput) (*firehose.PutRecordBatchOutput, error) {
	c.inc("PutRecordBatch")
	return c.svc.PutRecordBatch(input)
}

// PutRecordBatchWithContext is a passthrough to the underlying PutRecordBatchWithContext method.
// It will increment the count of requests made to PutRecordBatch.
func (c *Firehose) PutRecordBatchWithContext(ctx aws.Context, input *firehose.PutRecordBatchInput, opts ...request.Option) (*firehose.PutRecordBatchOutput, error) {
	c.inc("PutRecordBatch")
	return c.svc.PutRecordBatchWithContext(ctx, input, opts...)
}

// UpdateDestinationRequest is a passthrough to the underlying UpdateDestinationRequest.
// It will increment the count of requests made to UpdateDestination.
func (c *Firehose) UpdateDestinationRequest(input *firehose.UpdateDestinationInput) (req *request.Request, output *firehose.UpdateDestinationOutput) {
	c.inc("UpdateDestination")
	return c.svc.UpdateDestinationRequest(input)
}

// UpdateDestination is a passthrough to the underlying UpdateDestination method.
// It will increment the count of requests made to UpdateDestination.
func (c *Firehose) UpdateDestination(input *firehose.UpdateDestinationInput) (*firehose.UpdateDestinationOutput, error) {
	c.inc("UpdateDestination")
	return c.svc.UpdateDestination(input)
}

// UpdateDestinationWithContext is a passthrough to the underlying UpdateDestinationWithContext method.
// It will increment the count of requests made to UpdateDestination.
func (c *Firehose) UpdateDestinationWithContext(ctx aws.Context, input *firehose.UpdateDestinationInput, opts ...request.Option) (*firehose.UpdateDestinationOutput, error) {
	c.inc("UpdateDestination")
	return c.svc.UpdateDestinationWithContext(ctx, input, opts...)
}
