// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package databasemigrationservicecounter

import (
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/databasemigrationservice"
)

// AddTagsToResourceRequest is a passthrough to the underlying AddTagsToResourceRequest.
// It will increment the count of requests made to AddTagsToResource.
func (c *DatabaseMigrationService) AddTagsToResourceRequest(input *databasemigrationservice.AddTagsToResourceInput) (req *request.Request, output *databasemigrationservice.AddTagsToResourceOutput) {
	c.inc("AddTagsToResource")
	return c.svc.AddTagsToResourceRequest(input)
}

// AddTagsToResource is a passthrough to the underlying AddTagsToResource method.
// It will increment the count of requests made to AddTagsToResource.
func (c *DatabaseMigrationService) AddTagsToResource(input *databasemigrationservice.AddTagsToResourceInput) (*databasemigrationservice.AddTagsToResourceOutput, error) {
	c.inc("AddTagsToResource")
	return c.svc.AddTagsToResource(input)
}

// AddTagsToResourceWithContext is a passthrough to the underlying AddTagsToResourceWithContext method.
// It will increment the count of requests made to AddTagsToResource.
func (c *DatabaseMigrationService) AddTagsToResourceWithContext(ctx aws.Context, input *databasemigrationservice.AddTagsToResourceInput, opts ...request.Option) (*databasemigrationservice.AddTagsToResourceOutput, error) {
	c.inc("AddTagsToResource")
	return c.svc.AddTagsToResourceWithContext(ctx, input, opts...)
}

// CreateEndpointRequest is a passthrough to the underlying CreateEndpointRequest.
// It will increment the count of requests made to CreateEndpoint.
func (c *DatabaseMigrationService) CreateEndpointRequest(input *databasemigrationservice.CreateEndpointInput) (req *request.Request, output *databasemigrationservice.CreateEndpointOutput) {
	c.inc("CreateEndpoint")
	return c.svc.CreateEndpointRequest(input)
}

// CreateEndpoint is a passthrough to the underlying CreateEndpoint method.
// It will increment the count of requests made to CreateEndpoint.
func (c *DatabaseMigrationService) CreateEndpoint(input *databasemigrationservice.CreateEndpointInput) (*databasemigrationservice.CreateEndpointOutput, error) {
	c.inc("CreateEndpoint")
	return c.svc.CreateEndpoint(input)
}

// CreateEndpointWithContext is a passthrough to the underlying CreateEndpointWithContext method.
// It will increment the count of requests made to CreateEndpoint.
func (c *DatabaseMigrationService) CreateEndpointWithContext(ctx aws.Context, input *databasemigrationservice.CreateEndpointInput, opts ...request.Option) (*databasemigrationservice.CreateEndpointOutput, error) {
	c.inc("CreateEndpoint")
	return c.svc.CreateEndpointWithContext(ctx, input, opts...)
}

// CreateEventSubscriptionRequest is a passthrough to the underlying CreateEventSubscriptionRequest.
// It will increment the count of requests made to CreateEventSubscription.
func (c *DatabaseMigrationService) CreateEventSubscriptionRequest(input *databasemigrationservice.CreateEventSubscriptionInput) (req *request.Request, output *databasemigrationservice.CreateEventSubscriptionOutput) {
	c.inc("CreateEventSubscription")
	return c.svc.CreateEventSubscriptionRequest(input)
}

// CreateEventSubscription is a passthrough to the underlying CreateEventSubscription method.
// It will increment the count of requests made to CreateEventSubscription.
func (c *DatabaseMigrationService) CreateEventSubscription(input *databasemigrationservice.CreateEventSubscriptionInput) (*databasemigrationservice.CreateEventSubscriptionOutput, error) {
	c.inc("CreateEventSubscription")
	return c.svc.CreateEventSubscription(input)
}

// CreateEventSubscriptionWithContext is a passthrough to the underlying CreateEventSubscriptionWithContext method.
// It will increment the count of requests made to CreateEventSubscription.
func (c *DatabaseMigrationService) CreateEventSubscriptionWithContext(ctx aws.Context, input *databasemigrationservice.CreateEventSubscriptionInput, opts ...request.Option) (*databasemigrationservice.CreateEventSubscriptionOutput, error) {
	c.inc("CreateEventSubscription")
	return c.svc.CreateEventSubscriptionWithContext(ctx, input, opts...)
}

// CreateReplicationInstanceRequest is a passthrough to the underlying CreateReplicationInstanceRequest.
// It will increment the count of requests made to CreateReplicationInstance.
func (c *DatabaseMigrationService) CreateReplicationInstanceRequest(input *databasemigrationservice.CreateReplicationInstanceInput) (req *request.Request, output *databasemigrationservice.CreateReplicationInstanceOutput) {
	c.inc("CreateReplicationInstance")
	return c.svc.CreateReplicationInstanceRequest(input)
}

// CreateReplicationInstance is a passthrough to the underlying CreateReplicationInstance method.
// It will increment the count of requests made to CreateReplicationInstance.
func (c *DatabaseMigrationService) CreateReplicationInstance(input *databasemigrationservice.CreateReplicationInstanceInput) (*databasemigrationservice.CreateReplicationInstanceOutput, error) {
	c.inc("CreateReplicationInstance")
	return c.svc.CreateReplicationInstance(input)
}

// CreateReplicationInstanceWithContext is a passthrough to the underlying CreateReplicationInstanceWithContext method.
// It will increment the count of requests made to CreateReplicationInstance.
func (c *DatabaseMigrationService) CreateReplicationInstanceWithContext(ctx aws.Context, input *databasemigrationservice.CreateReplicationInstanceInput, opts ...request.Option) (*databasemigrationservice.CreateReplicationInstanceOutput, error) {
	c.inc("CreateReplicationInstance")
	return c.svc.CreateReplicationInstanceWithContext(ctx, input, opts...)
}

// CreateReplicationSubnetGroupRequest is a passthrough to the underlying CreateReplicationSubnetGroupRequest.
// It will increment the count of requests made to CreateReplicationSubnetGroup.
func (c *DatabaseMigrationService) CreateReplicationSubnetGroupRequest(input *databasemigrationservice.CreateReplicationSubnetGroupInput) (req *request.Request, output *databasemigrationservice.CreateReplicationSubnetGroupOutput) {
	c.inc("CreateReplicationSubnetGroup")
	return c.svc.CreateReplicationSubnetGroupRequest(input)
}

// CreateReplicationSubnetGroup is a passthrough to the underlying CreateReplicationSubnetGroup method.
// It will increment the count of requests made to CreateReplicationSubnetGroup.
func (c *DatabaseMigrationService) CreateReplicationSubnetGroup(input *databasemigrationservice.CreateReplicationSubnetGroupInput) (*databasemigrationservice.CreateReplicationSubnetGroupOutput, error) {
	c.inc("CreateReplicationSubnetGroup")
	return c.svc.CreateReplicationSubnetGroup(input)
}

// CreateReplicationSubnetGroupWithContext is a passthrough to the underlying CreateReplicationSubnetGroupWithContext method.
// It will increment the count of requests made to CreateReplicationSubnetGroup.
func (c *DatabaseMigrationService) CreateReplicationSubnetGroupWithContext(ctx aws.Context, input *databasemigrationservice.CreateReplicationSubnetGroupInput, opts ...request.Option) (*databasemigrationservice.CreateReplicationSubnetGroupOutput, error) {
	c.inc("CreateReplicationSubnetGroup")
	return c.svc.CreateReplicationSubnetGroupWithContext(ctx, input, opts...)
}

// CreateReplicationTaskRequest is a passthrough to the underlying CreateReplicationTaskRequest.
// It will increment the count of requests made to CreateReplicationTask.
func (c *DatabaseMigrationService) CreateReplicationTaskRequest(input *databasemigrationservice.CreateReplicationTaskInput) (req *request.Request, output *databasemigrationservice.CreateReplicationTaskOutput) {
	c.inc("CreateReplicationTask")
	return c.svc.CreateReplicationTaskRequest(input)
}

// CreateReplicationTask is a passthrough to the underlying CreateReplicationTask method.
// It will increment the count of requests made to CreateReplicationTask.
func (c *DatabaseMigrationService) CreateReplicationTask(input *databasemigrationservice.CreateReplicationTaskInput) (*databasemigrationservice.CreateReplicationTaskOutput, error) {
	c.inc("CreateReplicationTask")
	return c.svc.CreateReplicationTask(input)
}

// CreateReplicationTaskWithContext is a passthrough to the underlying CreateReplicationTaskWithContext method.
// It will increment the count of requests made to CreateReplicationTask.
func (c *DatabaseMigrationService) CreateReplicationTaskWithContext(ctx aws.Context, input *databasemigrationservice.CreateReplicationTaskInput, opts ...request.Option) (*databasemigrationservice.CreateReplicationTaskOutput, error) {
	c.inc("CreateReplicationTask")
	return c.svc.CreateReplicationTaskWithContext(ctx, input, opts...)
}

// DeleteCertificateRequest is a passthrough to the underlying DeleteCertificateRequest.
// It will increment the count of requests made to DeleteCertificate.
func (c *DatabaseMigrationService) DeleteCertificateRequest(input *databasemigrationservice.DeleteCertificateInput) (req *request.Request, output *databasemigrationservice.DeleteCertificateOutput) {
	c.inc("DeleteCertificate")
	return c.svc.DeleteCertificateRequest(input)
}

// DeleteCertificate is a passthrough to the underlying DeleteCertificate method.
// It will increment the count of requests made to DeleteCertificate.
func (c *DatabaseMigrationService) DeleteCertificate(input *databasemigrationservice.DeleteCertificateInput) (*databasemigrationservice.DeleteCertificateOutput, error) {
	c.inc("DeleteCertificate")
	return c.svc.DeleteCertificate(input)
}

// DeleteCertificateWithContext is a passthrough to the underlying DeleteCertificateWithContext method.
// It will increment the count of requests made to DeleteCertificate.
func (c *DatabaseMigrationService) DeleteCertificateWithContext(ctx aws.Context, input *databasemigrationservice.DeleteCertificateInput, opts ...request.Option) (*databasemigrationservice.DeleteCertificateOutput, error) {
	c.inc("DeleteCertificate")
	return c.svc.DeleteCertificateWithContext(ctx, input, opts...)
}

// DeleteEndpointRequest is a passthrough to the underlying DeleteEndpointRequest.
// It will increment the count of requests made to DeleteEndpoint.
func (c *DatabaseMigrationService) DeleteEndpointRequest(input *databasemigrationservice.DeleteEndpointInput) (req *request.Request, output *databasemigrationservice.DeleteEndpointOutput) {
	c.inc("DeleteEndpoint")
	return c.svc.DeleteEndpointRequest(input)
}

// DeleteEndpoint is a passthrough to the underlying DeleteEndpoint method.
// It will increment the count of requests made to DeleteEndpoint.
func (c *DatabaseMigrationService) DeleteEndpoint(input *databasemigrationservice.DeleteEndpointInput) (*databasemigrationservice.DeleteEndpointOutput, error) {
	c.inc("DeleteEndpoint")
	return c.svc.DeleteEndpoint(input)
}

// DeleteEndpointWithContext is a passthrough to the underlying DeleteEndpointWithContext method.
// It will increment the count of requests made to DeleteEndpoint.
func (c *DatabaseMigrationService) DeleteEndpointWithContext(ctx aws.Context, input *databasemigrationservice.DeleteEndpointInput, opts ...request.Option) (*databasemigrationservice.DeleteEndpointOutput, error) {
	c.inc("DeleteEndpoint")
	return c.svc.DeleteEndpointWithContext(ctx, input, opts...)
}

// DeleteEventSubscriptionRequest is a passthrough to the underlying DeleteEventSubscriptionRequest.
// It will increment the count of requests made to DeleteEventSubscription.
func (c *DatabaseMigrationService) DeleteEventSubscriptionRequest(input *databasemigrationservice.DeleteEventSubscriptionInput) (req *request.Request, output *databasemigrationservice.DeleteEventSubscriptionOutput) {
	c.inc("DeleteEventSubscription")
	return c.svc.DeleteEventSubscriptionRequest(input)
}

// DeleteEventSubscription is a passthrough to the underlying DeleteEventSubscription method.
// It will increment the count of requests made to DeleteEventSubscription.
func (c *DatabaseMigrationService) DeleteEventSubscription(input *databasemigrationservice.DeleteEventSubscriptionInput) (*databasemigrationservice.DeleteEventSubscriptionOutput, error) {
	c.inc("DeleteEventSubscription")
	return c.svc.DeleteEventSubscription(input)
}

// DeleteEventSubscriptionWithContext is a passthrough to the underlying DeleteEventSubscriptionWithContext method.
// It will increment the count of requests made to DeleteEventSubscription.
func (c *DatabaseMigrationService) DeleteEventSubscriptionWithContext(ctx aws.Context, input *databasemigrationservice.DeleteEventSubscriptionInput, opts ...request.Option) (*databasemigrationservice.DeleteEventSubscriptionOutput, error) {
	c.inc("DeleteEventSubscription")
	return c.svc.DeleteEventSubscriptionWithContext(ctx, input, opts...)
}

// DeleteReplicationInstanceRequest is a passthrough to the underlying DeleteReplicationInstanceRequest.
// It will increment the count of requests made to DeleteReplicationInstance.
func (c *DatabaseMigrationService) DeleteReplicationInstanceRequest(input *databasemigrationservice.DeleteReplicationInstanceInput) (req *request.Request, output *databasemigrationservice.DeleteReplicationInstanceOutput) {
	c.inc("DeleteReplicationInstance")
	return c.svc.DeleteReplicationInstanceRequest(input)
}

// DeleteReplicationInstance is a passthrough to the underlying DeleteReplicationInstance method.
// It will increment the count of requests made to DeleteReplicationInstance.
func (c *DatabaseMigrationService) DeleteReplicationInstance(input *databasemigrationservice.DeleteReplicationInstanceInput) (*databasemigrationservice.DeleteReplicationInstanceOutput, error) {
	c.inc("DeleteReplicationInstance")
	return c.svc.DeleteReplicationInstance(input)
}

// DeleteReplicationInstanceWithContext is a passthrough to the underlying DeleteReplicationInstanceWithContext method.
// It will increment the count of requests made to DeleteReplicationInstance.
func (c *DatabaseMigrationService) DeleteReplicationInstanceWithContext(ctx aws.Context, input *databasemigrationservice.DeleteReplicationInstanceInput, opts ...request.Option) (*databasemigrationservice.DeleteReplicationInstanceOutput, error) {
	c.inc("DeleteReplicationInstance")
	return c.svc.DeleteReplicationInstanceWithContext(ctx, input, opts...)
}

// DeleteReplicationSubnetGroupRequest is a passthrough to the underlying DeleteReplicationSubnetGroupRequest.
// It will increment the count of requests made to DeleteReplicationSubnetGroup.
func (c *DatabaseMigrationService) DeleteReplicationSubnetGroupRequest(input *databasemigrationservice.DeleteReplicationSubnetGroupInput) (req *request.Request, output *databasemigrationservice.DeleteReplicationSubnetGroupOutput) {
	c.inc("DeleteReplicationSubnetGroup")
	return c.svc.DeleteReplicationSubnetGroupRequest(input)
}

// DeleteReplicationSubnetGroup is a passthrough to the underlying DeleteReplicationSubnetGroup method.
// It will increment the count of requests made to DeleteReplicationSubnetGroup.
func (c *DatabaseMigrationService) DeleteReplicationSubnetGroup(input *databasemigrationservice.DeleteReplicationSubnetGroupInput) (*databasemigrationservice.DeleteReplicationSubnetGroupOutput, error) {
	c.inc("DeleteReplicationSubnetGroup")
	return c.svc.DeleteReplicationSubnetGroup(input)
}

// DeleteReplicationSubnetGroupWithContext is a passthrough to the underlying DeleteReplicationSubnetGroupWithContext method.
// It will increment the count of requests made to DeleteReplicationSubnetGroup.
func (c *DatabaseMigrationService) DeleteReplicationSubnetGroupWithContext(ctx aws.Context, input *databasemigrationservice.DeleteReplicationSubnetGroupInput, opts ...request.Option) (*databasemigrationservice.DeleteReplicationSubnetGroupOutput, error) {
	c.inc("DeleteReplicationSubnetGroup")
	return c.svc.DeleteReplicationSubnetGroupWithContext(ctx, input, opts...)
}

// DeleteReplicationTaskRequest is a passthrough to the underlying DeleteReplicationTaskRequest.
// It will increment the count of requests made to DeleteReplicationTask.
func (c *DatabaseMigrationService) DeleteReplicationTaskRequest(input *databasemigrationservice.DeleteReplicationTaskInput) (req *request.Request, output *databasemigrationservice.DeleteReplicationTaskOutput) {
	c.inc("DeleteReplicationTask")
	return c.svc.DeleteReplicationTaskRequest(input)
}

// DeleteReplicationTask is a passthrough to the underlying DeleteReplicationTask method.
// It will increment the count of requests made to DeleteReplicationTask.
func (c *DatabaseMigrationService) DeleteReplicationTask(input *databasemigrationservice.DeleteReplicationTaskInput) (*databasemigrationservice.DeleteReplicationTaskOutput, error) {
	c.inc("DeleteReplicationTask")
	return c.svc.DeleteReplicationTask(input)
}

// DeleteReplicationTaskWithContext is a passthrough to the underlying DeleteReplicationTaskWithContext method.
// It will increment the count of requests made to DeleteReplicationTask.
func (c *DatabaseMigrationService) DeleteReplicationTaskWithContext(ctx aws.Context, input *databasemigrationservice.DeleteReplicationTaskInput, opts ...request.Option) (*databasemigrationservice.DeleteReplicationTaskOutput, error) {
	c.inc("DeleteReplicationTask")
	return c.svc.DeleteReplicationTaskWithContext(ctx, input, opts...)
}

// DescribeAccountAttributesRequest is a passthrough to the underlying DescribeAccountAttributesRequest.
// It will increment the count of requests made to DescribeAccountAttributes.
func (c *DatabaseMigrationService) DescribeAccountAttributesRequest(input *databasemigrationservice.DescribeAccountAttributesInput) (req *request.Request, output *databasemigrationservice.DescribeAccountAttributesOutput) {
	c.inc("DescribeAccountAttributes")
	return c.svc.DescribeAccountAttributesRequest(input)
}

// DescribeAccountAttributes is a passthrough to the underlying DescribeAccountAttributes method.
// It will increment the count of requests made to DescribeAccountAttributes.
func (c *DatabaseMigrationService) DescribeAccountAttributes(input *databasemigrationservice.DescribeAccountAttributesInput) (*databasemigrationservice.DescribeAccountAttributesOutput, error) {
	c.inc("DescribeAccountAttributes")
	return c.svc.DescribeAccountAttributes(input)
}

// DescribeAccountAttributesWithContext is a passthrough to the underlying DescribeAccountAttributesWithContext method.
// It will increment the count of requests made to DescribeAccountAttributes.
func (c *DatabaseMigrationService) DescribeAccountAttributesWithContext(ctx aws.Context, input *databasemigrationservice.DescribeAccountAttributesInput, opts ...request.Option) (*databasemigrationservice.DescribeAccountAttributesOutput, error) {
	c.inc("DescribeAccountAttributes")
	return c.svc.DescribeAccountAttributesWithContext(ctx, input, opts...)
}

// DescribeCertificatesRequest is a passthrough to the underlying DescribeCertificatesRequest.
// It will increment the count of requests made to DescribeCertificates.
func (c *DatabaseMigrationService) DescribeCertificatesRequest(input *databasemigrationservice.DescribeCertificatesInput) (req *request.Request, output *databasemigrationservice.DescribeCertificatesOutput) {
	c.inc("DescribeCertificates")
	return c.svc.DescribeCertificatesRequest(input)
}

// DescribeCertificates is a passthrough to the underlying DescribeCertificates method.
// It will increment the count of requests made to DescribeCertificates.
func (c *DatabaseMigrationService) DescribeCertificates(input *databasemigrationservice.DescribeCertificatesInput) (*databasemigrationservice.DescribeCertificatesOutput, error) {
	c.inc("DescribeCertificates")
	return c.svc.DescribeCertificates(input)
}

// DescribeCertificatesWithContext is a passthrough to the underlying DescribeCertificatesWithContext method.
// It will increment the count of requests made to DescribeCertificates.
func (c *DatabaseMigrationService) DescribeCertificatesWithContext(ctx aws.Context, input *databasemigrationservice.DescribeCertificatesInput, opts ...request.Option) (*databasemigrationservice.DescribeCertificatesOutput, error) {
	c.inc("DescribeCertificates")
	return c.svc.DescribeCertificatesWithContext(ctx, input, opts...)
}

// DescribeCertificatesPages is a passthrough to the underlying DescribeCertificatesPages method.
// It will increment the count of requests made to DescribeCertificates on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeCertificatesPagesWithContext to avoid this.
func (c *DatabaseMigrationService) DescribeCertificatesPages(input *databasemigrationservice.DescribeCertificatesInput, fn func(*databasemigrationservice.DescribeCertificatesOutput, bool) bool) error {
	wrappedFn := func(page *databasemigrationservice.DescribeCertificatesOutput, lastPage bool) bool {
		c.inc("DescribeCertificates")
		return fn(page, lastPage)
	}
	return c.svc.DescribeCertificatesPages(input, wrappedFn)
}

// DescribeCertificatesPagesWithContext is a passthrough to the underlying DescribeCertificatesPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeCertificates when applied to the request.
func (c *DatabaseMigrationService) DescribeCertificatesPagesWithContext(ctx aws.Context, input *databasemigrationservice.DescribeCertificatesInput, fn func(*databasemigrationservice.DescribeCertificatesOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeCertificates"))
	return c.svc.DescribeCertificatesPagesWithContext(ctx, input, fn, opts...)
}

// DescribeConnectionsRequest is a passthrough to the underlying DescribeConnectionsRequest.
// It will increment the count of requests made to DescribeConnections.
func (c *DatabaseMigrationService) DescribeConnectionsRequest(input *databasemigrationservice.DescribeConnectionsInput) (req *request.Request, output *databasemigrationservice.DescribeConnectionsOutput) {
	c.inc("DescribeConnections")
	return c.svc.DescribeConnectionsRequest(input)
}

// DescribeConnections is a passthrough to the underlying DescribeConnections method.
// It will increment the count of requests made to DescribeConnections.
func (c *DatabaseMigrationService) DescribeConnections(input *databasemigrationservice.DescribeConnectionsInput) (*databasemigrationservice.DescribeConnectionsOutput, error) {
	c.inc("DescribeConnections")
	return c.svc.DescribeConnections(input)
}

// DescribeConnectionsWithContext is a passthrough to the underlying DescribeConnectionsWithContext method.
// It will increment the count of requests made to DescribeConnections.
func (c *DatabaseMigrationService) DescribeConnectionsWithContext(ctx aws.Context, input *databasemigrationservice.DescribeConnectionsInput, opts ...request.Option) (*databasemigrationservice.DescribeConnectionsOutput, error) {
	c.inc("DescribeConnections")
	return c.svc.DescribeConnectionsWithContext(ctx, input, opts...)
}

// DescribeConnectionsPages is a passthrough to the underlying DescribeConnectionsPages method.
// It will increment the count of requests made to DescribeConnections on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeConnectionsPagesWithContext to avoid this.
func (c *DatabaseMigrationService) DescribeConnectionsPages(input *databasemigrationservice.DescribeConnectionsInput, fn func(*databasemigrationservice.DescribeConnectionsOutput, bool) bool) error {
	wrappedFn := func(page *databasemigrationservice.DescribeConnectionsOutput, lastPage bool) bool {
		c.inc("DescribeConnections")
		return fn(page, lastPage)
	}
	return c.svc.DescribeConnectionsPages(input, wrappedFn)
}

// DescribeConnectionsPagesWithContext is a passthrough to the underlying DescribeConnectionsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeConnections when applied to the request.
func (c *DatabaseMigrationService) DescribeConnectionsPagesWithContext(ctx aws.Context, input *databasemigrationservice.DescribeConnectionsInput, fn func(*databasemigrationservice.DescribeConnectionsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeConnections"))
	return c.svc.DescribeConnectionsPagesWithContext(ctx, input, fn, opts...)
}

// DescribeEndpointTypesRequest is a passthrough to the underlying DescribeEndpointTypesRequest.
// It will increment the count of requests made to DescribeEndpointTypes.
func (c *DatabaseMigrationService) DescribeEndpointTypesRequest(input *databasemigrationservice.DescribeEndpointTypesInput) (req *request.Request, output *databasemigrationservice.DescribeEndpointTypesOutput) {
	c.inc("DescribeEndpointTypes")
	return c.svc.DescribeEndpointTypesRequest(input)
}

// DescribeEndpointTypes is a passthrough to the underlying DescribeEndpointTypes method.
// It will increment the count of requests made to DescribeEndpointTypes.
func (c *DatabaseMigrationService) DescribeEndpointTypes(input *databasemigrationservice.DescribeEndpointTypesInput) (*databasemigrationservice.DescribeEndpointTypesOutput, error) {
	c.inc("DescribeEndpointTypes")
	return c.svc.DescribeEndpointTypes(input)
}

// DescribeEndpointTypesWithContext is a passthrough to the underlying DescribeEndpointTypesWithContext method.
// It will increment the count of requests made to DescribeEndpointTypes.
func (c *DatabaseMigrationService) DescribeEndpointTypesWithContext(ctx aws.Context, input *databasemigrationservice.DescribeEndpointTypesInput, opts ...request.Option) (*databasemigrationservice.DescribeEndpointTypesOutput, error) {
	c.inc("DescribeEndpointTypes")
	return c.svc.DescribeEndpointTypesWithContext(ctx, input, opts...)
}

// DescribeEndpointTypesPages is a passthrough to the underlying DescribeEndpointTypesPages method.
// It will increment the count of requests made to DescribeEndpointTypes on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeEndpointTypesPagesWithContext to avoid this.
func (c *DatabaseMigrationService) DescribeEndpointTypesPages(input *databasemigrationservice.DescribeEndpointTypesInput, fn func(*databasemigrationservice.DescribeEndpointTypesOutput, bool) bool) error {
	wrappedFn := func(page *databasemigrationservice.DescribeEndpointTypesOutput, lastPage bool) bool {
		c.inc("DescribeEndpointTypes")
		return fn(page, lastPage)
	}
	return c.svc.DescribeEndpointTypesPages(input, wrappedFn)
}

// DescribeEndpointTypesPagesWithContext is a passthrough to the underlying DescribeEndpointTypesPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeEndpointTypes when applied to the request.
func (c *DatabaseMigrationService) DescribeEndpointTypesPagesWithContext(ctx aws.Context, input *databasemigrationservice.DescribeEndpointTypesInput, fn func(*databasemigrationservice.DescribeEndpointTypesOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeEndpointTypes"))
	return c.svc.DescribeEndpointTypesPagesWithContext(ctx, input, fn, opts...)
}

// DescribeEndpointsRequest is a passthrough to the underlying DescribeEndpointsRequest.
// It will increment the count of requests made to DescribeEndpoints.
func (c *DatabaseMigrationService) DescribeEndpointsRequest(input *databasemigrationservice.DescribeEndpointsInput) (req *request.Request, output *databasemigrationservice.DescribeEndpointsOutput) {
	c.inc("DescribeEndpoints")
	return c.svc.DescribeEndpointsRequest(input)
}

// DescribeEndpoints is a passthrough to the underlying DescribeEndpoints method.
// It will increment the count of requests made to DescribeEndpoints.
func (c *DatabaseMigrationService) DescribeEndpoints(input *databasemigrationservice.DescribeEndpointsInput) (*databasemigrationservice.DescribeEndpointsOutput, error) {
	c.inc("DescribeEndpoints")
	return c.svc.DescribeEndpoints(input)
}

// DescribeEndpointsWithContext is a passthrough to the underlying DescribeEndpointsWithContext method.
// It will increment the count of requests made to DescribeEndpoints.
func (c *DatabaseMigrationService) DescribeEndpointsWithContext(ctx aws.Context, input *databasemigrationservice.DescribeEndpointsInput, opts ...request.Option) (*databasemigrationservice.DescribeEndpointsOutput, error) {
	c.inc("DescribeEndpoints")
	return c.svc.DescribeEndpointsWithContext(ctx, input, opts...)
}

// DescribeEndpointsPages is a passthrough to the underlying DescribeEndpointsPages method.
// It will increment the count of requests made to DescribeEndpoints on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeEndpointsPagesWithContext to avoid this.
func (c *DatabaseMigrationService) DescribeEndpointsPages(input *databasemigrationservice.DescribeEndpointsInput, fn func(*databasemigrationservice.DescribeEndpointsOutput, bool) bool) error {
	wrappedFn := func(page *databasemigrationservice.DescribeEndpointsOutput, lastPage bool) bool {
		c.inc("DescribeEndpoints")
		return fn(page, lastPage)
	}
	return c.svc.DescribeEndpointsPages(input, wrappedFn)
}

// DescribeEndpointsPagesWithContext is a passthrough to the underlying DescribeEndpointsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeEndpoints when applied to the request.
func (c *DatabaseMigrationService) DescribeEndpointsPagesWithContext(ctx aws.Context, input *databasemigrationservice.DescribeEndpointsInput, fn func(*databasemigrationservice.DescribeEndpointsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeEndpoints"))
	return c.svc.DescribeEndpointsPagesWithContext(ctx, input, fn, opts...)
}

// DescribeEventCategoriesRequest is a passthrough to the underlying DescribeEventCategoriesRequest.
// It will increment the count of requests made to DescribeEventCategories.
func (c *DatabaseMigrationService) DescribeEventCategoriesRequest(input *databasemigrationservice.DescribeEventCategoriesInput) (req *request.Request, output *databasemigrationservice.DescribeEventCategoriesOutput) {
	c.inc("DescribeEventCategories")
	return c.svc.DescribeEventCategoriesRequest(input)
}

// DescribeEventCategories is a passthrough to the underlying DescribeEventCategories method.
// It will increment the count of requests made to DescribeEventCategories.
func (c *DatabaseMigrationService) DescribeEventCategories(input *databasemigrationservice.DescribeEventCategoriesInput) (*databasemigrationservice.DescribeEventCategoriesOutput, error) {
	c.inc("DescribeEventCategories")
	return c.svc.DescribeEventCategories(input)
}

// DescribeEventCategoriesWithContext is a passthrough to the underlying DescribeEventCategoriesWithContext method.
// It will increment the count of requests made to DescribeEventCategories.
func (c *DatabaseMigrationService) DescribeEventCategoriesWithContext(ctx aws.Context, input *databasemigrationservice.DescribeEventCategoriesInput, opts ...request.Option) (*databasemigrationservice.DescribeEventCategoriesOutput, error) {
	c.inc("DescribeEventCategories")
	return c.svc.DescribeEventCategoriesWithContext(ctx, input, opts...)
}

// DescribeEventSubscriptionsRequest is a passthrough to the underlying DescribeEventSubscriptionsRequest.
// It will increment the count of requests made to DescribeEventSubscriptions.
func (c *DatabaseMigrationService) DescribeEventSubscriptionsRequest(input *databasemigrationservice.DescribeEventSubscriptionsInput) (req *request.Request, output *databasemigrationservice.DescribeEventSubscriptionsOutput) {
	c.inc("DescribeEventSubscriptions")
	return c.svc.DescribeEventSubscriptionsRequest(input)
}

// DescribeEventSubscriptions is a passthrough to the underlying DescribeEventSubscriptions method.
// It will increment the count of requests made to DescribeEventSubscriptions.
func (c *DatabaseMigrationService) DescribeEventSubscriptions(input *databasemigrationservice.DescribeEventSubscriptionsInput) (*databasemigrationservice.DescribeEventSubscriptionsOutput, error) {
	c.inc("DescribeEventSubscriptions")
	return c.svc.DescribeEventSubscriptions(input)
}

// DescribeEventSubscriptionsWithContext is a passthrough to the underlying DescribeEventSubscriptionsWithContext method.
// It will increment the count of requests made to DescribeEventSubscriptions.
func (c *DatabaseMigrationService) DescribeEventSubscriptionsWithContext(ctx aws.Context, input *databasemigrationservice.DescribeEventSubscriptionsInput, opts ...request.Option) (*databasemigrationservice.DescribeEventSubscriptionsOutput, error) {
	c.inc("DescribeEventSubscriptions")
	return c.svc.DescribeEventSubscriptionsWithContext(ctx, input, opts...)
}

// DescribeEventSubscriptionsPages is a passthrough to the underlying DescribeEventSubscriptionsPages method.
// It will increment the count of requests made to DescribeEventSubscriptions on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeEventSubscriptionsPagesWithContext to avoid this.
func (c *DatabaseMigrationService) DescribeEventSubscriptionsPages(input *databasemigrationservice.DescribeEventSubscriptionsInput, fn func(*databasemigrationservice.DescribeEventSubscriptionsOutput, bool) bool) error {
	wrappedFn := func(page *databasemigrationservice.DescribeEventSubscriptionsOutput, lastPage bool) bool {
		c.inc("DescribeEventSubscriptions")
		return fn(page, lastPage)
	}
	return c.svc.DescribeEventSubscriptionsPages(input, wrappedFn)
}

// DescribeEventSubscriptionsPagesWithContext is a passthrough to the underlying DescribeEventSubscriptionsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeEventSubscriptions when applied to the request.
func (c *DatabaseMigrationService) DescribeEventSubscriptionsPagesWithContext(ctx aws.Context, input *databasemigrationservice.DescribeEventSubscriptionsInput, fn func(*databasemigrationservice.DescribeEventSubscriptionsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeEventSubscriptions"))
	return c.svc.DescribeEventSubscriptionsPagesWithContext(ctx, input, fn, opts...)
}

// DescribeEventsRequest is a passthrough to the underlying DescribeEventsRequest.
// It will increment the count of requests made to DescribeEvents.
func (c *DatabaseMigrationService) DescribeEventsRequest(input *databasemigrationservice.DescribeEventsInput) (req *request.Request, output *databasemigrationservice.DescribeEventsOutput) {
	c.inc("DescribeEvents")
	return c.svc.DescribeEventsRequest(input)
}

// DescribeEvents is a passthrough to the underlying DescribeEvents method.
// It will increment the count of requests made to DescribeEvents.
func (c *DatabaseMigrationService) DescribeEvents(input *databasemigrationservice.DescribeEventsInput) (*databasemigrationservice.DescribeEventsOutput, error) {
	c.inc("DescribeEvents")
	return c.svc.DescribeEvents(input)
}

// DescribeEventsWithContext is a passthrough to the underlying DescribeEventsWithContext method.
// It will increment the count of requests made to DescribeEvents.
func (c *DatabaseMigrationService) DescribeEventsWithContext(ctx aws.Context, input *databasemigrationservice.DescribeEventsInput, opts ...request.Option) (*databasemigrationservice.DescribeEventsOutput, error) {
	c.inc("DescribeEvents")
	return c.svc.DescribeEventsWithContext(ctx, input, opts...)
}

// DescribeEventsPages is a passthrough to the underlying DescribeEventsPages method.
// It will increment the count of requests made to DescribeEvents on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeEventsPagesWithContext to avoid this.
func (c *DatabaseMigrationService) DescribeEventsPages(input *databasemigrationservice.DescribeEventsInput, fn func(*databasemigrationservice.DescribeEventsOutput, bool) bool) error {
	wrappedFn := func(page *databasemigrationservice.DescribeEventsOutput, lastPage bool) bool {
		c.inc("DescribeEvents")
		return fn(page, lastPage)
	}
	return c.svc.DescribeEventsPages(input, wrappedFn)
}

// DescribeEventsPagesWithContext is a passthrough to the underlying DescribeEventsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeEvents when applied to the request.
func (c *DatabaseMigrationService) DescribeEventsPagesWithContext(ctx aws.Context, input *databasemigrationservice.DescribeEventsInput, fn func(*databasemigrationservice.DescribeEventsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeEvents"))
	return c.svc.DescribeEventsPagesWithContext(ctx, input, fn, opts...)
}

// DescribeOrderableReplicationInstancesRequest is a passthrough to the underlying DescribeOrderableReplicationInstancesRequest.
// It will increment the count of requests made to DescribeOrderableReplicationInstances.
func (c *DatabaseMigrationService) DescribeOrderableReplicationInstancesRequest(input *databasemigrationservice.DescribeOrderableReplicationInstancesInput) (req *request.Request, output *databasemigrationservice.DescribeOrderableReplicationInstancesOutput) {
	c.inc("DescribeOrderableReplicationInstances")
	return c.svc.DescribeOrderableReplicationInstancesRequest(input)
}

// DescribeOrderableReplicationInstances is a passthrough to the underlying DescribeOrderableReplicationInstances method.
// It will increment the count of requests made to DescribeOrderableReplicationInstances.
func (c *DatabaseMigrationService) DescribeOrderableReplicationInstances(input *databasemigrationservice.DescribeOrderableReplicationInstancesInput) (*databasemigrationservice.DescribeOrderableReplicationInstancesOutput, error) {
	c.inc("DescribeOrderableReplicationInstances")
	return c.svc.DescribeOrderableReplicationInstances(input)
}

// DescribeOrderableReplicationInstancesWithContext is a passthrough to the underlying DescribeOrderableReplicationInstancesWithContext method.
// It will increment the count of requests made to DescribeOrderableReplicationInstances.
func (c *DatabaseMigrationService) DescribeOrderableReplicationInstancesWithContext(ctx aws.Context, input *databasemigrationservice.DescribeOrderableReplicationInstancesInput, opts ...request.Option) (*databasemigrationservice.DescribeOrderableReplicationInstancesOutput, error) {
	c.inc("DescribeOrderableReplicationInstances")
	return c.svc.DescribeOrderableReplicationInstancesWithContext(ctx, input, opts...)
}

// DescribeOrderableReplicationInstancesPages is a passthrough to the underlying DescribeOrderableReplicationInstancesPages method.
// It will increment the count of requests made to DescribeOrderableReplicationInstances on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeOrderableReplicationInstancesPagesWithContext to avoid this.
func (c *DatabaseMigrationService) DescribeOrderableReplicationInstancesPages(input *databasemigrationservice.DescribeOrderableReplicationInstancesInput, fn func(*databasemigrationservice.DescribeOrderableReplicationInstancesOutput, bool) bool) error {
	wrappedFn := func(page *databasemigrationservice.DescribeOrderableReplicationInstancesOutput, lastPage bool) bool {
		c.inc("DescribeOrderableReplicationInstances")
		return fn(page, lastPage)
	}
	return c.svc.DescribeOrderableReplicationInstancesPages(input, wrappedFn)
}

// DescribeOrderableReplicationInstancesPagesWithContext is a passthrough to the underlying DescribeOrderableReplicationInstancesPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeOrderableReplicationInstances when applied to the request.
func (c *DatabaseMigrationService) DescribeOrderableReplicationInstancesPagesWithContext(ctx aws.Context, input *databasemigrationservice.DescribeOrderableReplicationInstancesInput, fn func(*databasemigrationservice.DescribeOrderableReplicationInstancesOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeOrderableReplicationInstances"))
	return c.svc.DescribeOrderableReplicationInstancesPagesWithContext(ctx, input, fn, opts...)
}

// DescribeRefreshSchemasStatusRequest is a passthrough to the underlying DescribeRefreshSchemasStatusRequest.
// It will increment the count of requests made to DescribeRefreshSchemasStatus.
func (c *DatabaseMigrationService) DescribeRefreshSchemasStatusRequest(input *databasemigrationservice.DescribeRefreshSchemasStatusInput) (req *request.Request, output *databasemigrationservice.DescribeRefreshSchemasStatusOutput) {
	c.inc("DescribeRefreshSchemasStatus")
	return c.svc.DescribeRefreshSchemasStatusRequest(input)
}

// DescribeRefreshSchemasStatus is a passthrough to the underlying DescribeRefreshSchemasStatus method.
// It will increment the count of requests made to DescribeRefreshSchemasStatus.
func (c *DatabaseMigrationService) DescribeRefreshSchemasStatus(input *databasemigrationservice.DescribeRefreshSchemasStatusInput) (*databasemigrationservice.DescribeRefreshSchemasStatusOutput, error) {
	c.inc("DescribeRefreshSchemasStatus")
	return c.svc.DescribeRefreshSchemasStatus(input)
}

// DescribeRefreshSchemasStatusWithContext is a passthrough to the underlying DescribeRefreshSchemasStatusWithContext method.
// It will increment the count of requests made to DescribeRefreshSchemasStatus.
func (c *DatabaseMigrationService) DescribeRefreshSchemasStatusWithContext(ctx aws.Context, input *databasemigrationservice.DescribeRefreshSchemasStatusInput, opts ...request.Option) (*databasemigrationservice.DescribeRefreshSchemasStatusOutput, error) {
	c.inc("DescribeRefreshSchemasStatus")
	return c.svc.DescribeRefreshSchemasStatusWithContext(ctx, input, opts...)
}

// DescribeReplicationInstanceTaskLogsRequest is a passthrough to the underlying DescribeReplicationInstanceTaskLogsRequest.
// It will increment the count of requests made to DescribeReplicationInstanceTaskLogs.
func (c *DatabaseMigrationService) DescribeReplicationInstanceTaskLogsRequest(input *databasemigrationservice.DescribeReplicationInstanceTaskLogsInput) (req *request.Request, output *databasemigrationservice.DescribeReplicationInstanceTaskLogsOutput) {
	c.inc("DescribeReplicationInstanceTaskLogs")
	return c.svc.DescribeReplicationInstanceTaskLogsRequest(input)
}

// DescribeReplicationInstanceTaskLogs is a passthrough to the underlying DescribeReplicationInstanceTaskLogs method.
// It will increment the count of requests made to DescribeReplicationInstanceTaskLogs.
func (c *DatabaseMigrationService) DescribeReplicationInstanceTaskLogs(input *databasemigrationservice.DescribeReplicationInstanceTaskLogsInput) (*databasemigrationservice.DescribeReplicationInstanceTaskLogsOutput, error) {
	c.inc("DescribeReplicationInstanceTaskLogs")
	return c.svc.DescribeReplicationInstanceTaskLogs(input)
}

// DescribeReplicationInstanceTaskLogsWithContext is a passthrough to the underlying DescribeReplicationInstanceTaskLogsWithContext method.
// It will increment the count of requests made to DescribeReplicationInstanceTaskLogs.
func (c *DatabaseMigrationService) DescribeReplicationInstanceTaskLogsWithContext(ctx aws.Context, input *databasemigrationservice.DescribeReplicationInstanceTaskLogsInput, opts ...request.Option) (*databasemigrationservice.DescribeReplicationInstanceTaskLogsOutput, error) {
	c.inc("DescribeReplicationInstanceTaskLogs")
	return c.svc.DescribeReplicationInstanceTaskLogsWithContext(ctx, input, opts...)
}

// DescribeReplicationInstanceTaskLogsPages is a passthrough to the underlying DescribeReplicationInstanceTaskLogsPages method.
// It will increment the count of requests made to DescribeReplicationInstanceTaskLogs on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeReplicationInstanceTaskLogsPagesWithContext to avoid this.
func (c *DatabaseMigrationService) DescribeReplicationInstanceTaskLogsPages(input *databasemigrationservice.DescribeReplicationInstanceTaskLogsInput, fn func(*databasemigrationservice.DescribeReplicationInstanceTaskLogsOutput, bool) bool) error {
	wrappedFn := func(page *databasemigrationservice.DescribeReplicationInstanceTaskLogsOutput, lastPage bool) bool {
		c.inc("DescribeReplicationInstanceTaskLogs")
		return fn(page, lastPage)
	}
	return c.svc.DescribeReplicationInstanceTaskLogsPages(input, wrappedFn)
}

// DescribeReplicationInstanceTaskLogsPagesWithContext is a passthrough to the underlying DescribeReplicationInstanceTaskLogsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeReplicationInstanceTaskLogs when applied to the request.
func (c *DatabaseMigrationService) DescribeReplicationInstanceTaskLogsPagesWithContext(ctx aws.Context, input *databasemigrationservice.DescribeReplicationInstanceTaskLogsInput, fn func(*databasemigrationservice.DescribeReplicationInstanceTaskLogsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeReplicationInstanceTaskLogs"))
	return c.svc.DescribeReplicationInstanceTaskLogsPagesWithContext(ctx, input, fn, opts...)
}

// DescribeReplicationInstancesRequest is a passthrough to the underlying DescribeReplicationInstancesRequest.
// It will increment the count of requests made to DescribeReplicationInstances.
func (c *DatabaseMigrationService) DescribeReplicationInstancesRequest(input *databasemigrationservice.DescribeReplicationInstancesInput) (req *request.Request, output *databasemigrationservice.DescribeReplicationInstancesOutput) {
	c.inc("DescribeReplicationInstances")
	return c.svc.DescribeReplicationInstancesRequest(input)
}

// DescribeReplicationInstances is a passthrough to the underlying DescribeReplicationInstances method.
// It will increment the count of requests made to DescribeReplicationInstances.
func (c *DatabaseMigrationService) DescribeReplicationInstances(input *databasemigrationservice.DescribeReplicationInstancesInput) (*databasemigrationservice.DescribeReplicationInstancesOutput, error) {
	c.inc("DescribeReplicationInstances")
	return c.svc.DescribeReplicationInstances(input)
}

// DescribeReplicationInstancesWithContext is a passthrough to the underlying DescribeReplicationInstancesWithContext method.
// It will increment the count of requests made to DescribeReplicationInstances.
func (c *DatabaseMigrationService) DescribeReplicationInstancesWithContext(ctx aws.Context, input *databasemigrationservice.DescribeReplicationInstancesInput, opts ...request.Option) (*databasemigrationservice.DescribeReplicationInstancesOutput, error) {
	c.inc("DescribeReplicationInstances")
	return c.svc.DescribeReplicationInstancesWithContext(ctx, input, opts...)
}

// DescribeReplicationInstancesPages is a passthrough to the underlying DescribeReplicationInstancesPages method.
// It will increment the count of requests made to DescribeReplicationInstances on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeReplicationInstancesPagesWithContext to avoid this.
func (c *DatabaseMigrationService) DescribeReplicationInstancesPages(input *databasemigrationservice.DescribeReplicationInstancesInput, fn func(*databasemigrationservice.DescribeReplicationInstancesOutput, bool) bool) error {
	wrappedFn := func(page *databasemigrationservice.DescribeReplicationInstancesOutput, lastPage bool) bool {
		c.inc("DescribeReplicationInstances")
		return fn(page, lastPage)
	}
	return c.svc.DescribeReplicationInstancesPages(input, wrappedFn)
}

// DescribeReplicationInstancesPagesWithContext is a passthrough to the underlying DescribeReplicationInstancesPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeReplicationInstances when applied to the request.
func (c *DatabaseMigrationService) DescribeReplicationInstancesPagesWithContext(ctx aws.Context, input *databasemigrationservice.DescribeReplicationInstancesInput, fn func(*databasemigrationservice.DescribeReplicationInstancesOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeReplicationInstances"))
	return c.svc.DescribeReplicationInstancesPagesWithContext(ctx, input, fn, opts...)
}

// DescribeReplicationSubnetGroupsRequest is a passthrough to the underlying DescribeReplicationSubnetGroupsRequest.
// It will increment the count of requests made to DescribeReplicationSubnetGroups.
func (c *DatabaseMigrationService) DescribeReplicationSubnetGroupsRequest(input *databasemigrationservice.DescribeReplicationSubnetGroupsInput) (req *request.Request, output *databasemigrationservice.DescribeReplicationSubnetGroupsOutput) {
	c.inc("DescribeReplicationSubnetGroups")
	return c.svc.DescribeReplicationSubnetGroupsRequest(input)
}

// DescribeReplicationSubnetGroups is a passthrough to the underlying DescribeReplicationSubnetGroups method.
// It will increment the count of requests made to DescribeReplicationSubnetGroups.
func (c *DatabaseMigrationService) DescribeReplicationSubnetGroups(input *databasemigrationservice.DescribeReplicationSubnetGroupsInput) (*databasemigrationservice.DescribeReplicationSubnetGroupsOutput, error) {
	c.inc("DescribeReplicationSubnetGroups")
	return c.svc.DescribeReplicationSubnetGroups(input)
}

// DescribeReplicationSubnetGroupsWithContext is a passthrough to the underlying DescribeReplicationSubnetGroupsWithContext method.
// It will increment the count of requests made to DescribeReplicationSubnetGroups.
func (c *DatabaseMigrationService) DescribeReplicationSubnetGroupsWithContext(ctx aws.Context, input *databasemigrationservice.DescribeReplicationSubnetGroupsInput, opts ...request.Option) (*databasemigrationservice.DescribeReplicationSubnetGroupsOutput, error) {
	c.inc("DescribeReplicationSubnetGroups")
	return c.svc.DescribeReplicationSubnetGroupsWithContext(ctx, input, opts...)
}

// DescribeReplicationSubnetGroupsPages is a passthrough to the underlying DescribeReplicationSubnetGroupsPages method.
// It will increment the count of requests made to DescribeReplicationSubnetGroups on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeReplicationSubnetGroupsPagesWithContext to avoid this.
func (c *DatabaseMigrationService) DescribeReplicationSubnetGroupsPages(input *databasemigrationservice.DescribeReplicationSubnetGroupsInput, fn func(*databasemigrationservice.DescribeReplicationSubnetGroupsOutput, bool) bool) error {
	wrappedFn := func(page *databasemigrationservice.DescribeReplicationSubnetGroupsOutput, lastPage bool) bool {
		c.inc("DescribeReplicationSubnetGroups")
		return fn(page, lastPage)
	}
	return c.svc.DescribeReplicationSubnetGroupsPages(input, wrappedFn)
}

// DescribeReplicationSubnetGroupsPagesWithContext is a passthrough to the underlying DescribeReplicationSubnetGroupsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeReplicationSubnetGroups when applied to the request.
func (c *DatabaseMigrationService) DescribeReplicationSubnetGroupsPagesWithContext(ctx aws.Context, input *databasemigrationservice.DescribeReplicationSubnetGroupsInput, fn func(*databasemigrationservice.DescribeReplicationSubnetGroupsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeReplicationSubnetGroups"))
	return c.svc.DescribeReplicationSubnetGroupsPagesWithContext(ctx, input, fn, opts...)
}

// DescribeReplicationTaskAssessmentResultsRequest is a passthrough to the underlying DescribeReplicationTaskAssessmentResultsRequest.
// It will increment the count of requests made to DescribeReplicationTaskAssessmentResults.
func (c *DatabaseMigrationService) DescribeReplicationTaskAssessmentResultsRequest(input *databasemigrationservice.DescribeReplicationTaskAssessmentResultsInput) (req *request.Request, output *databasemigrationservice.DescribeReplicationTaskAssessmentResultsOutput) {
	c.inc("DescribeReplicationTaskAssessmentResults")
	return c.svc.DescribeReplicationTaskAssessmentResultsRequest(input)
}

// DescribeReplicationTaskAssessmentResults is a passthrough to the underlying DescribeReplicationTaskAssessmentResults method.
// It will increment the count of requests made to DescribeReplicationTaskAssessmentResults.
func (c *DatabaseMigrationService) DescribeReplicationTaskAssessmentResults(input *databasemigrationservice.DescribeReplicationTaskAssessmentResultsInput) (*databasemigrationservice.DescribeReplicationTaskAssessmentResultsOutput, error) {
	c.inc("DescribeReplicationTaskAssessmentResults")
	return c.svc.DescribeReplicationTaskAssessmentResults(input)
}

// DescribeReplicationTaskAssessmentResultsWithContext is a passthrough to the underlying DescribeReplicationTaskAssessmentResultsWithContext method.
// It will increment the count of requests made to DescribeReplicationTaskAssessmentResults.
func (c *DatabaseMigrationService) DescribeReplicationTaskAssessmentResultsWithContext(ctx aws.Context, input *databasemigrationservice.DescribeReplicationTaskAssessmentResultsInput, opts ...request.Option) (*databasemigrationservice.DescribeReplicationTaskAssessmentResultsOutput, error) {
	c.inc("DescribeReplicationTaskAssessmentResults")
	return c.svc.DescribeReplicationTaskAssessmentResultsWithContext(ctx, input, opts...)
}

// DescribeReplicationTaskAssessmentResultsPages is a passthrough to the underlying DescribeReplicationTaskAssessmentResultsPages method.
// It will increment the count of requests made to DescribeReplicationTaskAssessmentResults on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeReplicationTaskAssessmentResultsPagesWithContext to avoid this.
func (c *DatabaseMigrationService) DescribeReplicationTaskAssessmentResultsPages(input *databasemigrationservice.DescribeReplicationTaskAssessmentResultsInput, fn func(*databasemigrationservice.DescribeReplicationTaskAssessmentResultsOutput, bool) bool) error {
	wrappedFn := func(page *databasemigrationservice.DescribeReplicationTaskAssessmentResultsOutput, lastPage bool) bool {
		c.inc("DescribeReplicationTaskAssessmentResults")
		return fn(page, lastPage)
	}
	return c.svc.DescribeReplicationTaskAssessmentResultsPages(input, wrappedFn)
}

// DescribeReplicationTaskAssessmentResultsPagesWithContext is a passthrough to the underlying DescribeReplicationTaskAssessmentResultsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeReplicationTaskAssessmentResults when applied to the request.
func (c *DatabaseMigrationService) DescribeReplicationTaskAssessmentResultsPagesWithContext(ctx aws.Context, input *databasemigrationservice.DescribeReplicationTaskAssessmentResultsInput, fn func(*databasemigrationservice.DescribeReplicationTaskAssessmentResultsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeReplicationTaskAssessmentResults"))
	return c.svc.DescribeReplicationTaskAssessmentResultsPagesWithContext(ctx, input, fn, opts...)
}

// DescribeReplicationTasksRequest is a passthrough to the underlying DescribeReplicationTasksRequest.
// It will increment the count of requests made to DescribeReplicationTasks.
func (c *DatabaseMigrationService) DescribeReplicationTasksRequest(input *databasemigrationservice.DescribeReplicationTasksInput) (req *request.Request, output *databasemigrationservice.DescribeReplicationTasksOutput) {
	c.inc("DescribeReplicationTasks")
	return c.svc.DescribeReplicationTasksRequest(input)
}

// DescribeReplicationTasks is a passthrough to the underlying DescribeReplicationTasks method.
// It will increment the count of requests made to DescribeReplicationTasks.
func (c *DatabaseMigrationService) DescribeReplicationTasks(input *databasemigrationservice.DescribeReplicationTasksInput) (*databasemigrationservice.DescribeReplicationTasksOutput, error) {
	c.inc("DescribeReplicationTasks")
	return c.svc.DescribeReplicationTasks(input)
}

// DescribeReplicationTasksWithContext is a passthrough to the underlying DescribeReplicationTasksWithContext method.
// It will increment the count of requests made to DescribeReplicationTasks.
func (c *DatabaseMigrationService) DescribeReplicationTasksWithContext(ctx aws.Context, input *databasemigrationservice.DescribeReplicationTasksInput, opts ...request.Option) (*databasemigrationservice.DescribeReplicationTasksOutput, error) {
	c.inc("DescribeReplicationTasks")
	return c.svc.DescribeReplicationTasksWithContext(ctx, input, opts...)
}

// DescribeReplicationTasksPages is a passthrough to the underlying DescribeReplicationTasksPages method.
// It will increment the count of requests made to DescribeReplicationTasks on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeReplicationTasksPagesWithContext to avoid this.
func (c *DatabaseMigrationService) DescribeReplicationTasksPages(input *databasemigrationservice.DescribeReplicationTasksInput, fn func(*databasemigrationservice.DescribeReplicationTasksOutput, bool) bool) error {
	wrappedFn := func(page *databasemigrationservice.DescribeReplicationTasksOutput, lastPage bool) bool {
		c.inc("DescribeReplicationTasks")
		return fn(page, lastPage)
	}
	return c.svc.DescribeReplicationTasksPages(input, wrappedFn)
}

// DescribeReplicationTasksPagesWithContext is a passthrough to the underlying DescribeReplicationTasksPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeReplicationTasks when applied to the request.
func (c *DatabaseMigrationService) DescribeReplicationTasksPagesWithContext(ctx aws.Context, input *databasemigrationservice.DescribeReplicationTasksInput, fn func(*databasemigrationservice.DescribeReplicationTasksOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeReplicationTasks"))
	return c.svc.DescribeReplicationTasksPagesWithContext(ctx, input, fn, opts...)
}

// DescribeSchemasRequest is a passthrough to the underlying DescribeSchemasRequest.
// It will increment the count of requests made to DescribeSchemas.
func (c *DatabaseMigrationService) DescribeSchemasRequest(input *databasemigrationservice.DescribeSchemasInput) (req *request.Request, output *databasemigrationservice.DescribeSchemasOutput) {
	c.inc("DescribeSchemas")
	return c.svc.DescribeSchemasRequest(input)
}

// DescribeSchemas is a passthrough to the underlying DescribeSchemas method.
// It will increment the count of requests made to DescribeSchemas.
func (c *DatabaseMigrationService) DescribeSchemas(input *databasemigrationservice.DescribeSchemasInput) (*databasemigrationservice.DescribeSchemasOutput, error) {
	c.inc("DescribeSchemas")
	return c.svc.DescribeSchemas(input)
}

// DescribeSchemasWithContext is a passthrough to the underlying DescribeSchemasWithContext method.
// It will increment the count of requests made to DescribeSchemas.
func (c *DatabaseMigrationService) DescribeSchemasWithContext(ctx aws.Context, input *databasemigrationservice.DescribeSchemasInput, opts ...request.Option) (*databasemigrationservice.DescribeSchemasOutput, error) {
	c.inc("DescribeSchemas")
	return c.svc.DescribeSchemasWithContext(ctx, input, opts...)
}

// DescribeSchemasPages is a passthrough to the underlying DescribeSchemasPages method.
// It will increment the count of requests made to DescribeSchemas on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeSchemasPagesWithContext to avoid this.
func (c *DatabaseMigrationService) DescribeSchemasPages(input *databasemigrationservice.DescribeSchemasInput, fn func(*databasemigrationservice.DescribeSchemasOutput, bool) bool) error {
	wrappedFn := func(page *databasemigrationservice.DescribeSchemasOutput, lastPage bool) bool {
		c.inc("DescribeSchemas")
		return fn(page, lastPage)
	}
	return c.svc.DescribeSchemasPages(input, wrappedFn)
}

// DescribeSchemasPagesWithContext is a passthrough to the underlying DescribeSchemasPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeSchemas when applied to the request.
func (c *DatabaseMigrationService) DescribeSchemasPagesWithContext(ctx aws.Context, input *databasemigrationservice.DescribeSchemasInput, fn func(*databasemigrationservice.DescribeSchemasOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeSchemas"))
	return c.svc.DescribeSchemasPagesWithContext(ctx, input, fn, opts...)
}

// DescribeTableStatisticsRequest is a passthrough to the underlying DescribeTableStatisticsRequest.
// It will increment the count of requests made to DescribeTableStatistics.
func (c *DatabaseMigrationService) DescribeTableStatisticsRequest(input *databasemigrationservice.DescribeTableStatisticsInput) (req *request.Request, output *databasemigrationservice.DescribeTableStatisticsOutput) {
	c.inc("DescribeTableStatistics")
	return c.svc.DescribeTableStatisticsRequest(input)
}

// DescribeTableStatistics is a passthrough to the underlying DescribeTableStatistics method.
// It will increment the count of requests made to DescribeTableStatistics.
func (c *DatabaseMigrationService) DescribeTableStatistics(input *databasemigrationservice.DescribeTableStatisticsInput) (*databasemigrationservice.DescribeTableStatisticsOutput, error) {
	c.inc("DescribeTableStatistics")
	return c.svc.DescribeTableStatistics(input)
}

// DescribeTableStatisticsWithContext is a passthrough to the underlying DescribeTableStatisticsWithContext method.
// It will increment the count of requests made to DescribeTableStatistics.
func (c *DatabaseMigrationService) DescribeTableStatisticsWithContext(ctx aws.Context, input *databasemigrationservice.DescribeTableStatisticsInput, opts ...request.Option) (*databasemigrationservice.DescribeTableStatisticsOutput, error) {
	c.inc("DescribeTableStatistics")
	return c.svc.DescribeTableStatisticsWithContext(ctx, input, opts...)
}

// DescribeTableStatisticsPages is a passthrough to the underlying DescribeTableStatisticsPages method.
// It will increment the count of requests made to DescribeTableStatistics on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeTableStatisticsPagesWithContext to avoid this.
func (c *DatabaseMigrationService) DescribeTableStatisticsPages(input *databasemigrationservice.DescribeTableStatisticsInput, fn func(*databasemigrationservice.DescribeTableStatisticsOutput, bool) bool) error {
	wrappedFn := func(page *databasemigrationservice.DescribeTableStatisticsOutput, lastPage bool) bool {
		c.inc("DescribeTableStatistics")
		return fn(page, lastPage)
	}
	return c.svc.DescribeTableStatisticsPages(input, wrappedFn)
}

// DescribeTableStatisticsPagesWithContext is a passthrough to the underlying DescribeTableStatisticsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeTableStatistics when applied to the request.
func (c *DatabaseMigrationService) DescribeTableStatisticsPagesWithContext(ctx aws.Context, input *databasemigrationservice.DescribeTableStatisticsInput, fn func(*databasemigrationservice.DescribeTableStatisticsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeTableStatistics"))
	return c.svc.DescribeTableStatisticsPagesWithContext(ctx, input, fn, opts...)
}

// ImportCertificateRequest is a passthrough to the underlying ImportCertificateRequest.
// It will increment the count of requests made to ImportCertificate.
func (c *DatabaseMigrationService) ImportCertificateRequest(input *databasemigrationservice.ImportCertificateInput) (req *request.Request, output *databasemigrationservice.ImportCertificateOutput) {
	c.inc("ImportCertificate")
	return c.svc.ImportCertificateRequest(input)
}

// ImportCertificate is a passthrough to the underlying ImportCertificate method.
// It will increment the count of requests made to ImportCertificate.
func (c *DatabaseMigrationService) ImportCertificate(input *databasemigrationservice.ImportCertificateInput) (*databasemigrationservice.ImportCertificateOutput, error) {
	c.inc("ImportCertificate")
	return c.svc.ImportCertificate(input)
}

// ImportCertificateWithContext is a passthrough to the underlying ImportCertificateWithContext method.
// It will increment the count of requests made to ImportCertificate.
func (c *DatabaseMigrationService) ImportCertificateWithContext(ctx aws.Context, input *databasemigrationservice.ImportCertificateInput, opts ...request.Option) (*databasemigrationservice.ImportCertificateOutput, error) {
	c.inc("ImportCertificate")
	return c.svc.ImportCertificateWithContext(ctx, input, opts...)
}

// ListTagsForResourceRequest is a passthrough to the underlying ListTagsForResourceRequest.
// It will increment the count of requests made to ListTagsForResource.
func (c *DatabaseMigrationService) ListTagsForResourceRequest(input *databasemigrationservice.ListTagsForResourceInput) (req *request.Request, output *databasemigrationservice.ListTagsForResourceOutput) {
	c.inc("ListTagsForResource")
	return c.svc.ListTagsForResourceRequest(input)
}

// ListTagsForResource is a passthrough to the underlying ListTagsForResource method.
// It will increment the count of requests made to ListTagsForResource.
func (c *DatabaseMigrationService) ListTagsForResource(input *databasemigrationservice.ListTagsForResourceInput) (*databasemigrationservice.ListTagsForResourceOutput, error) {
	c.inc("ListTagsForResource")
	return c.svc.ListTagsForResource(input)
}

// ListTagsForResourceWithContext is a passthrough to the underlying ListTagsForResourceWithContext method.
// It will increment the count of requests made to ListTagsForResource.
func (c *DatabaseMigrationService) ListTagsForResourceWithContext(ctx aws.Context, input *databasemigrationservice.ListTagsForResourceInput, opts ...request.Option) (*databasemigrationservice.ListTagsForResourceOutput, error) {
	c.inc("ListTagsForResource")
	return c.svc.ListTagsForResourceWithContext(ctx, input, opts...)
}

// ModifyEndpointRequest is a passthrough to the underlying ModifyEndpointRequest.
// It will increment the count of requests made to ModifyEndpoint.
func (c *DatabaseMigrationService) ModifyEndpointRequest(input *databasemigrationservice.ModifyEndpointInput) (req *request.Request, output *databasemigrationservice.ModifyEndpointOutput) {
	c.inc("ModifyEndpoint")
	return c.svc.ModifyEndpointRequest(input)
}

// ModifyEndpoint is a passthrough to the underlying ModifyEndpoint method.
// It will increment the count of requests made to ModifyEndpoint.
func (c *DatabaseMigrationService) ModifyEndpoint(input *databasemigrationservice.ModifyEndpointInput) (*databasemigrationservice.ModifyEndpointOutput, error) {
	c.inc("ModifyEndpoint")
	return c.svc.ModifyEndpoint(input)
}

// ModifyEndpointWithContext is a passthrough to the underlying ModifyEndpointWithContext method.
// It will increment the count of requests made to ModifyEndpoint.
func (c *DatabaseMigrationService) ModifyEndpointWithContext(ctx aws.Context, input *databasemigrationservice.ModifyEndpointInput, opts ...request.Option) (*databasemigrationservice.ModifyEndpointOutput, error) {
	c.inc("ModifyEndpoint")
	return c.svc.ModifyEndpointWithContext(ctx, input, opts...)
}

// ModifyEventSubscriptionRequest is a passthrough to the underlying ModifyEventSubscriptionRequest.
// It will increment the count of requests made to ModifyEventSubscription.
func (c *DatabaseMigrationService) ModifyEventSubscriptionRequest(input *databasemigrationservice.ModifyEventSubscriptionInput) (req *request.Request, output *databasemigrationservice.ModifyEventSubscriptionOutput) {
	c.inc("ModifyEventSubscription")
	return c.svc.ModifyEventSubscriptionRequest(input)
}

// ModifyEventSubscription is a passthrough to the underlying ModifyEventSubscription method.
// It will increment the count of requests made to ModifyEventSubscription.
func (c *DatabaseMigrationService) ModifyEventSubscription(input *databasemigrationservice.ModifyEventSubscriptionInput) (*databasemigrationservice.ModifyEventSubscriptionOutput, error) {
	c.inc("ModifyEventSubscription")
	return c.svc.ModifyEventSubscription(input)
}

// ModifyEventSubscriptionWithContext is a passthrough to the underlying ModifyEventSubscriptionWithContext method.
// It will increment the count of requests made to ModifyEventSubscription.
func (c *DatabaseMigrationService) ModifyEventSubscriptionWithContext(ctx aws.Context, input *databasemigrationservice.ModifyEventSubscriptionInput, opts ...request.Option) (*databasemigrationservice.ModifyEventSubscriptionOutput, error) {
	c.inc("ModifyEventSubscription")
	return c.svc.ModifyEventSubscriptionWithContext(ctx, input, opts...)
}

// ModifyReplicationInstanceRequest is a passthrough to the underlying ModifyReplicationInstanceRequest.
// It will increment the count of requests made to ModifyReplicationInstance.
func (c *DatabaseMigrationService) ModifyReplicationInstanceRequest(input *databasemigrationservice.ModifyReplicationInstanceInput) (req *request.Request, output *databasemigrationservice.ModifyReplicationInstanceOutput) {
	c.inc("ModifyReplicationInstance")
	return c.svc.ModifyReplicationInstanceRequest(input)
}

// ModifyReplicationInstance is a passthrough to the underlying ModifyReplicationInstance method.
// It will increment the count of requests made to ModifyReplicationInstance.
func (c *DatabaseMigrationService) ModifyReplicationInstance(input *databasemigrationservice.ModifyReplicationInstanceInput) (*databasemigrationservice.ModifyReplicationInstanceOutput, error) {
	c.inc("ModifyReplicationInstance")
	return c.svc.ModifyReplicationInstance(input)
}

// ModifyReplicationInstanceWithContext is a passthrough to the underlying ModifyReplicationInstanceWithContext method.
// It will increment the count of requests made to ModifyReplicationInstance.
func (c *DatabaseMigrationService) ModifyReplicationInstanceWithContext(ctx aws.Context, input *databasemigrationservice.ModifyReplicationInstanceInput, opts ...request.Option) (*databasemigrationservice.ModifyReplicationInstanceOutput, error) {
	c.inc("ModifyReplicationInstance")
	return c.svc.ModifyReplicationInstanceWithContext(ctx, input, opts...)
}

// ModifyReplicationSubnetGroupRequest is a passthrough to the underlying ModifyReplicationSubnetGroupRequest.
// It will increment the count of requests made to ModifyReplicationSubnetGroup.
func (c *DatabaseMigrationService) ModifyReplicationSubnetGroupRequest(input *databasemigrationservice.ModifyReplicationSubnetGroupInput) (req *request.Request, output *databasemigrationservice.ModifyReplicationSubnetGroupOutput) {
	c.inc("ModifyReplicationSubnetGroup")
	return c.svc.ModifyReplicationSubnetGroupRequest(input)
}

// ModifyReplicationSubnetGroup is a passthrough to the underlying ModifyReplicationSubnetGroup method.
// It will increment the count of requests made to ModifyReplicationSubnetGroup.
func (c *DatabaseMigrationService) ModifyReplicationSubnetGroup(input *databasemigrationservice.ModifyReplicationSubnetGroupInput) (*databasemigrationservice.ModifyReplicationSubnetGroupOutput, error) {
	c.inc("ModifyReplicationSubnetGroup")
	return c.svc.ModifyReplicationSubnetGroup(input)
}

// ModifyReplicationSubnetGroupWithContext is a passthrough to the underlying ModifyReplicationSubnetGroupWithContext method.
// It will increment the count of requests made to ModifyReplicationSubnetGroup.
func (c *DatabaseMigrationService) ModifyReplicationSubnetGroupWithContext(ctx aws.Context, input *databasemigrationservice.ModifyReplicationSubnetGroupInput, opts ...request.Option) (*databasemigrationservice.ModifyReplicationSubnetGroupOutput, error) {
	c.inc("ModifyReplicationSubnetGroup")
	return c.svc.ModifyReplicationSubnetGroupWithContext(ctx, input, opts...)
}

// ModifyReplicationTaskRequest is a passthrough to the underlying ModifyReplicationTaskRequest.
// It will increment the count of requests made to ModifyReplicationTask.
func (c *DatabaseMigrationService) ModifyReplicationTaskRequest(input *databasemigrationservice.ModifyReplicationTaskInput) (req *request.Request, output *databasemigrationservice.ModifyReplicationTaskOutput) {
	c.inc("ModifyReplicationTask")
	return c.svc.ModifyReplicationTaskRequest(input)
}

// ModifyReplicationTask is a passthrough to the underlying ModifyReplicationTask method.
// It will increment the count of requests made to ModifyReplicationTask.
func (c *DatabaseMigrationService) ModifyReplicationTask(input *databasemigrationservice.ModifyReplicationTaskInput) (*databasemigrationservice.ModifyReplicationTaskOutput, error) {
	c.inc("ModifyReplicationTask")
	return c.svc.ModifyReplicationTask(input)
}

// ModifyReplicationTaskWithContext is a passthrough to the underlying ModifyReplicationTaskWithContext method.
// It will increment the count of requests made to ModifyReplicationTask.
func (c *DatabaseMigrationService) ModifyReplicationTaskWithContext(ctx aws.Context, input *databasemigrationservice.ModifyReplicationTaskInput, opts ...request.Option) (*databasemigrationservice.ModifyReplicationTaskOutput, error) {
	c.inc("ModifyReplicationTask")
	return c.svc.ModifyReplicationTaskWithContext(ctx, input, opts...)
}

// RebootReplicationInstanceRequest is a passthrough to the underlying RebootReplicationInstanceRequest.
// It will increment the count of requests made to RebootReplicationInstance.
func (c *DatabaseMigrationService) RebootReplicationInstanceRequest(input *databasemigrationservice.RebootReplicationInstanceInput) (req *request.Request, output *databasemigrationservice.RebootReplicationInstanceOutput) {
	c.inc("RebootReplicationInstance")
	return c.svc.RebootReplicationInstanceRequest(input)
}

// RebootReplicationInstance is a passthrough to the underlying RebootReplicationInstance method.
// It will increment the count of requests made to RebootReplicationInstance.
func (c *DatabaseMigrationService) RebootReplicationInstance(input *databasemigrationservice.RebootReplicationInstanceInput) (*databasemigrationservice.RebootReplicationInstanceOutput, error) {
	c.inc("RebootReplicationInstance")
	return c.svc.RebootReplicationInstance(input)
}

// RebootReplicationInstanceWithContext is a passthrough to the underlying RebootReplicationInstanceWithContext method.
// It will increment the count of requests made to RebootReplicationInstance.
func (c *DatabaseMigrationService) RebootReplicationInstanceWithContext(ctx aws.Context, input *databasemigrationservice.RebootReplicationInstanceInput, opts ...request.Option) (*databasemigrationservice.RebootReplicationInstanceOutput, error) {
	c.inc("RebootReplicationInstance")
	return c.svc.RebootReplicationInstanceWithContext(ctx, input, opts...)
}

// RefreshSchemasRequest is a passthrough to the underlying RefreshSchemasRequest.
// It will increment the count of requests made to RefreshSchemas.
func (c *DatabaseMigrationService) RefreshSchemasRequest(input *databasemigrationservice.RefreshSchemasInput) (req *request.Request, output *databasemigrationservice.RefreshSchemasOutput) {
	c.inc("RefreshSchemas")
	return c.svc.RefreshSchemasRequest(input)
}

// RefreshSchemas is a passthrough to the underlying RefreshSchemas method.
// It will increment the count of requests made to RefreshSchemas.
func (c *DatabaseMigrationService) RefreshSchemas(input *databasemigrationservice.RefreshSchemasInput) (*databasemigrationservice.RefreshSchemasOutput, error) {
	c.inc("RefreshSchemas")
	return c.svc.RefreshSchemas(input)
}

// RefreshSchemasWithContext is a passthrough to the underlying RefreshSchemasWithContext method.
// It will increment the count of requests made to RefreshSchemas.
func (c *DatabaseMigrationService) RefreshSchemasWithContext(ctx aws.Context, input *databasemigrationservice.RefreshSchemasInput, opts ...request.Option) (*databasemigrationservice.RefreshSchemasOutput, error) {
	c.inc("RefreshSchemas")
	return c.svc.RefreshSchemasWithContext(ctx, input, opts...)
}

// ReloadTablesRequest is a passthrough to the underlying ReloadTablesRequest.
// It will increment the count of requests made to ReloadTables.
func (c *DatabaseMigrationService) ReloadTablesRequest(input *databasemigrationservice.ReloadTablesInput) (req *request.Request, output *databasemigrationservice.ReloadTablesOutput) {
	c.inc("ReloadTables")
	return c.svc.ReloadTablesRequest(input)
}

// ReloadTables is a passthrough to the underlying ReloadTables method.
// It will increment the count of requests made to ReloadTables.
func (c *DatabaseMigrationService) ReloadTables(input *databasemigrationservice.ReloadTablesInput) (*databasemigrationservice.ReloadTablesOutput, error) {
	c.inc("ReloadTables")
	return c.svc.ReloadTables(input)
}

// ReloadTablesWithContext is a passthrough to the underlying ReloadTablesWithContext method.
// It will increment the count of requests made to ReloadTables.
func (c *DatabaseMigrationService) ReloadTablesWithContext(ctx aws.Context, input *databasemigrationservice.ReloadTablesInput, opts ...request.Option) (*databasemigrationservice.ReloadTablesOutput, error) {
	c.inc("ReloadTables")
	return c.svc.ReloadTablesWithContext(ctx, input, opts...)
}

// RemoveTagsFromResourceRequest is a passthrough to the underlying RemoveTagsFromResourceRequest.
// It will increment the count of requests made to RemoveTagsFromResource.
func (c *DatabaseMigrationService) RemoveTagsFromResourceRequest(input *databasemigrationservice.RemoveTagsFromResourceInput) (req *request.Request, output *databasemigrationservice.RemoveTagsFromResourceOutput) {
	c.inc("RemoveTagsFromResource")
	return c.svc.RemoveTagsFromResourceRequest(input)
}

// RemoveTagsFromResource is a passthrough to the underlying RemoveTagsFromResource method.
// It will increment the count of requests made to RemoveTagsFromResource.
func (c *DatabaseMigrationService) RemoveTagsFromResource(input *databasemigrationservice.RemoveTagsFromResourceInput) (*databasemigrationservice.RemoveTagsFromResourceOutput, error) {
	c.inc("RemoveTagsFromResource")
	return c.svc.RemoveTagsFromResource(input)
}

// RemoveTagsFromResourceWithContext is a passthrough to the underlying RemoveTagsFromResourceWithContext method.
// It will increment the count of requests made to RemoveTagsFromResource.
func (c *DatabaseMigrationService) RemoveTagsFromResourceWithContext(ctx aws.Context, input *databasemigrationservice.RemoveTagsFromResourceInput, opts ...request.Option) (*databasemigrationservice.RemoveTagsFromResourceOutput, error) {
	c.inc("RemoveTagsFromResource")
	return c.svc.RemoveTagsFromResourceWithContext(ctx, input, opts...)
}

// StartReplicationTaskRequest is a passthrough to the underlying StartReplicationTaskRequest.
// It will increment the count of requests made to StartReplicationTask.
func (c *DatabaseMigrationService) StartReplicationTaskRequest(input *databasemigrationservice.StartReplicationTaskInput) (req *request.Request, output *databasemigrationservice.StartReplicationTaskOutput) {
	c.inc("StartReplicationTask")
	return c.svc.StartReplicationTaskRequest(input)
}

// StartReplicationTask is a passthrough to the underlying StartReplicationTask method.
// It will increment the count of requests made to StartReplicationTask.
func (c *DatabaseMigrationService) StartReplicationTask(input *databasemigrationservice.StartReplicationTaskInput) (*databasemigrationservice.StartReplicationTaskOutput, error) {
	c.inc("StartReplicationTask")
	return c.svc.StartReplicationTask(input)
}

// StartReplicationTaskWithContext is a passthrough to the underlying StartReplicationTaskWithContext method.
// It will increment the count of requests made to StartReplicationTask.
func (c *DatabaseMigrationService) StartReplicationTaskWithContext(ctx aws.Context, input *databasemigrationservice.StartReplicationTaskInput, opts ...request.Option) (*databasemigrationservice.StartReplicationTaskOutput, error) {
	c.inc("StartReplicationTask")
	return c.svc.StartReplicationTaskWithContext(ctx, input, opts...)
}

// StartReplicationTaskAssessmentRequest is a passthrough to the underlying StartReplicationTaskAssessmentRequest.
// It will increment the count of requests made to StartReplicationTaskAssessment.
func (c *DatabaseMigrationService) StartReplicationTaskAssessmentRequest(input *databasemigrationservice.StartReplicationTaskAssessmentInput) (req *request.Request, output *databasemigrationservice.StartReplicationTaskAssessmentOutput) {
	c.inc("StartReplicationTaskAssessment")
	return c.svc.StartReplicationTaskAssessmentRequest(input)
}

// StartReplicationTaskAssessment is a passthrough to the underlying StartReplicationTaskAssessment method.
// It will increment the count of requests made to StartReplicationTaskAssessment.
func (c *DatabaseMigrationService) StartReplicationTaskAssessment(input *databasemigrationservice.StartReplicationTaskAssessmentInput) (*databasemigrationservice.StartReplicationTaskAssessmentOutput, error) {
	c.inc("StartReplicationTaskAssessment")
	return c.svc.StartReplicationTaskAssessment(input)
}

// StartReplicationTaskAssessmentWithContext is a passthrough to the underlying StartReplicationTaskAssessmentWithContext method.
// It will increment the count of requests made to StartReplicationTaskAssessment.
func (c *DatabaseMigrationService) StartReplicationTaskAssessmentWithContext(ctx aws.Context, input *databasemigrationservice.StartReplicationTaskAssessmentInput, opts ...request.Option) (*databasemigrationservice.StartReplicationTaskAssessmentOutput, error) {
	c.inc("StartReplicationTaskAssessment")
	return c.svc.StartReplicationTaskAssessmentWithContext(ctx, input, opts...)
}

// StopReplicationTaskRequest is a passthrough to the underlying StopReplicationTaskRequest.
// It will increment the count of requests made to StopReplicationTask.
func (c *DatabaseMigrationService) StopReplicationTaskRequest(input *databasemigrationservice.StopReplicationTaskInput) (req *request.Request, output *databasemigrationservice.StopReplicationTaskOutput) {
	c.inc("StopReplicationTask")
	return c.svc.StopReplicationTaskRequest(input)
}

// StopReplicationTask is a passthrough to the underlying StopReplicationTask method.
// It will increment the count of requests made to StopReplicationTask.
func (c *DatabaseMigrationService) StopReplicationTask(input *databasemigrationservice.StopReplicationTaskInput) (*databasemigrationservice.StopReplicationTaskOutput, error) {
	c.inc("StopReplicationTask")
	return c.svc.StopReplicationTask(input)
}

// StopReplicationTaskWithContext is a passthrough to the underlying StopReplicationTaskWithContext method.
// It will increment the count of requests made to StopReplicationTask.
func (c *DatabaseMigrationService) StopReplicationTaskWithContext(ctx aws.Context, input *databasemigrationservice.StopReplicationTaskInput, opts ...request.Option) (*databasemigrationservice.StopReplicationTaskOutput, error) {
	c.inc("StopReplicationTask")
	return c.svc.StopReplicationTaskWithContext(ctx, input, opts...)
}

// TestConnectionRequest is a passthrough to the underlying TestConnectionRequest.
// It will increment the count of requests made to TestConnection.
func (c *DatabaseMigrationService) TestConnectionRequest(input *databasemigrationservice.TestConnectionInput) (req *request.Request, output *databasemigrationservice.TestConnectionOutput) {
	c.inc("TestConnection")
	return c.svc.TestConnectionRequest(input)
}

// TestConnection is a passthrough to the underlying TestConnection method.
// It will increment the count of requests made to TestConnection.
func (c *DatabaseMigrationService) TestConnection(input *databasemigrationservice.TestConnectionInput) (*databasemigrationservice.TestConnectionOutput, error) {
	c.inc("TestConnection")
	return c.svc.TestConnection(input)
}

// TestConnectionWithContext is a passthrough to the underlying TestConnectionWithContext method.
// It will increment the count of requests made to TestConnection.
func (c *DatabaseMigrationService) TestConnectionWithContext(ctx aws.Context, input *databasemigrationservice.TestConnectionInput, opts ...request.Option) (*databasemigrationservice.TestConnectionOutput, error) {
	c.inc("TestConnection")
	return c.svc.TestConnectionWithContext(ctx, input, opts...)
}
