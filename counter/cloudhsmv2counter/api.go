// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package cloudhsmv2counter

import (
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/cloudhsmv2"
)

// CreateClusterRequest is a passthrough to the underlying CreateClusterRequest.
// It will increment the count of requests made to CreateCluster.
func (c *CloudHSMV2) CreateClusterRequest(input *cloudhsmv2.CreateClusterInput) (req *request.Request, output *cloudhsmv2.CreateClusterOutput) {
	c.inc("CreateCluster")
	return c.svc.CreateClusterRequest(input)
}

// CreateCluster is a passthrough to the underlying CreateCluster method.
// It will increment the count of requests made to CreateCluster.
func (c *CloudHSMV2) CreateCluster(input *cloudhsmv2.CreateClusterInput) (*cloudhsmv2.CreateClusterOutput, error) {
	c.inc("CreateCluster")
	return c.svc.CreateCluster(input)
}

// CreateClusterWithContext is a passthrough to the underlying CreateClusterWithContext method.
// It will increment the count of requests made to CreateCluster.
func (c *CloudHSMV2) CreateClusterWithContext(ctx aws.Context, input *cloudhsmv2.CreateClusterInput, opts ...request.Option) (*cloudhsmv2.CreateClusterOutput, error) {
	c.inc("CreateCluster")
	return c.svc.CreateClusterWithContext(ctx, input, opts...)
}

// CreateHsmRequest is a passthrough to the underlying CreateHsmRequest.
// It will increment the count of requests made to CreateHsm.
func (c *CloudHSMV2) CreateHsmRequest(input *cloudhsmv2.CreateHsmInput) (req *request.Request, output *cloudhsmv2.CreateHsmOutput) {
	c.inc("CreateHsm")
	return c.svc.CreateHsmRequest(input)
}

// CreateHsm is a passthrough to the underlying CreateHsm method.
// It will increment the count of requests made to CreateHsm.
func (c *CloudHSMV2) CreateHsm(input *cloudhsmv2.CreateHsmInput) (*cloudhsmv2.CreateHsmOutput, error) {
	c.inc("CreateHsm")
	return c.svc.CreateHsm(input)
}

// CreateHsmWithContext is a passthrough to the underlying CreateHsmWithContext method.
// It will increment the count of requests made to CreateHsm.
func (c *CloudHSMV2) CreateHsmWithContext(ctx aws.Context, input *cloudhsmv2.CreateHsmInput, opts ...request.Option) (*cloudhsmv2.CreateHsmOutput, error) {
	c.inc("CreateHsm")
	return c.svc.CreateHsmWithContext(ctx, input, opts...)
}

// DeleteClusterRequest is a passthrough to the underlying DeleteClusterRequest.
// It will increment the count of requests made to DeleteCluster.
func (c *CloudHSMV2) DeleteClusterRequest(input *cloudhsmv2.DeleteClusterInput) (req *request.Request, output *cloudhsmv2.DeleteClusterOutput) {
	c.inc("DeleteCluster")
	return c.svc.DeleteClusterRequest(input)
}

// DeleteCluster is a passthrough to the underlying DeleteCluster method.
// It will increment the count of requests made to DeleteCluster.
func (c *CloudHSMV2) DeleteCluster(input *cloudhsmv2.DeleteClusterInput) (*cloudhsmv2.DeleteClusterOutput, error) {
	c.inc("DeleteCluster")
	return c.svc.DeleteCluster(input)
}

// DeleteClusterWithContext is a passthrough to the underlying DeleteClusterWithContext method.
// It will increment the count of requests made to DeleteCluster.
func (c *CloudHSMV2) DeleteClusterWithContext(ctx aws.Context, input *cloudhsmv2.DeleteClusterInput, opts ...request.Option) (*cloudhsmv2.DeleteClusterOutput, error) {
	c.inc("DeleteCluster")
	return c.svc.DeleteClusterWithContext(ctx, input, opts...)
}

// DeleteHsmRequest is a passthrough to the underlying DeleteHsmRequest.
// It will increment the count of requests made to DeleteHsm.
func (c *CloudHSMV2) DeleteHsmRequest(input *cloudhsmv2.DeleteHsmInput) (req *request.Request, output *cloudhsmv2.DeleteHsmOutput) {
	c.inc("DeleteHsm")
	return c.svc.DeleteHsmRequest(input)
}

// DeleteHsm is a passthrough to the underlying DeleteHsm method.
// It will increment the count of requests made to DeleteHsm.
func (c *CloudHSMV2) DeleteHsm(input *cloudhsmv2.DeleteHsmInput) (*cloudhsmv2.DeleteHsmOutput, error) {
	c.inc("DeleteHsm")
	return c.svc.DeleteHsm(input)
}

// DeleteHsmWithContext is a passthrough to the underlying DeleteHsmWithContext method.
// It will increment the count of requests made to DeleteHsm.
func (c *CloudHSMV2) DeleteHsmWithContext(ctx aws.Context, input *cloudhsmv2.DeleteHsmInput, opts ...request.Option) (*cloudhsmv2.DeleteHsmOutput, error) {
	c.inc("DeleteHsm")
	return c.svc.DeleteHsmWithContext(ctx, input, opts...)
}

// DescribeBackupsRequest is a passthrough to the underlying DescribeBackupsRequest.
// It will increment the count of requests made to DescribeBackups.
func (c *CloudHSMV2) DescribeBackupsRequest(input *cloudhsmv2.DescribeBackupsInput) (req *request.Request, output *cloudhsmv2.DescribeBackupsOutput) {
	c.inc("DescribeBackups")
	return c.svc.DescribeBackupsRequest(input)
}

// DescribeBackups is a passthrough to the underlying DescribeBackups method.
// It will increment the count of requests made to DescribeBackups.
func (c *CloudHSMV2) DescribeBackups(input *cloudhsmv2.DescribeBackupsInput) (*cloudhsmv2.DescribeBackupsOutput, error) {
	c.inc("DescribeBackups")
	return c.svc.DescribeBackups(input)
}

// DescribeBackupsWithContext is a passthrough to the underlying DescribeBackupsWithContext method.
// It will increment the count of requests made to DescribeBackups.
func (c *CloudHSMV2) DescribeBackupsWithContext(ctx aws.Context, input *cloudhsmv2.DescribeBackupsInput, opts ...request.Option) (*cloudhsmv2.DescribeBackupsOutput, error) {
	c.inc("DescribeBackups")
	return c.svc.DescribeBackupsWithContext(ctx, input, opts...)
}

// DescribeBackupsPages is a passthrough to the underlying DescribeBackupsPages method.
// It will increment the count of requests made to DescribeBackups on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeBackupsPagesWithContext to avoid this.
func (c *CloudHSMV2) DescribeBackupsPages(input *cloudhsmv2.DescribeBackupsInput, fn func(*cloudhsmv2.DescribeBackupsOutput, bool) bool) error {
	wrappedFn := func(page *cloudhsmv2.DescribeBackupsOutput, lastPage bool) bool {
		c.inc("DescribeBackups")
		return fn(page, lastPage)
	}
	return c.DescribeBackupsPages(input, wrappedFn)
}

// DescribeBackupsPagesWithContext is a passthrough to the underlying DescribeBackupsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeBackups when applied to the request.
func (c *CloudHSMV2) DescribeBackupsPagesWithContext(ctx aws.Context, input *cloudhsmv2.DescribeBackupsInput, fn func(*cloudhsmv2.DescribeBackupsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeBackups"))
	return c.DescribeBackupsPagesWithContext(ctx, input, fn, opts...)
}

// DescribeClustersRequest is a passthrough to the underlying DescribeClustersRequest.
// It will increment the count of requests made to DescribeClusters.
func (c *CloudHSMV2) DescribeClustersRequest(input *cloudhsmv2.DescribeClustersInput) (req *request.Request, output *cloudhsmv2.DescribeClustersOutput) {
	c.inc("DescribeClusters")
	return c.svc.DescribeClustersRequest(input)
}

// DescribeClusters is a passthrough to the underlying DescribeClusters method.
// It will increment the count of requests made to DescribeClusters.
func (c *CloudHSMV2) DescribeClusters(input *cloudhsmv2.DescribeClustersInput) (*cloudhsmv2.DescribeClustersOutput, error) {
	c.inc("DescribeClusters")
	return c.svc.DescribeClusters(input)
}

// DescribeClustersWithContext is a passthrough to the underlying DescribeClustersWithContext method.
// It will increment the count of requests made to DescribeClusters.
func (c *CloudHSMV2) DescribeClustersWithContext(ctx aws.Context, input *cloudhsmv2.DescribeClustersInput, opts ...request.Option) (*cloudhsmv2.DescribeClustersOutput, error) {
	c.inc("DescribeClusters")
	return c.svc.DescribeClustersWithContext(ctx, input, opts...)
}

// DescribeClustersPages is a passthrough to the underlying DescribeClustersPages method.
// It will increment the count of requests made to DescribeClusters on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeClustersPagesWithContext to avoid this.
func (c *CloudHSMV2) DescribeClustersPages(input *cloudhsmv2.DescribeClustersInput, fn func(*cloudhsmv2.DescribeClustersOutput, bool) bool) error {
	wrappedFn := func(page *cloudhsmv2.DescribeClustersOutput, lastPage bool) bool {
		c.inc("DescribeClusters")
		return fn(page, lastPage)
	}
	return c.DescribeClustersPages(input, wrappedFn)
}

// DescribeClustersPagesWithContext is a passthrough to the underlying DescribeClustersPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeClusters when applied to the request.
func (c *CloudHSMV2) DescribeClustersPagesWithContext(ctx aws.Context, input *cloudhsmv2.DescribeClustersInput, fn func(*cloudhsmv2.DescribeClustersOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeClusters"))
	return c.DescribeClustersPagesWithContext(ctx, input, fn, opts...)
}

// InitializeClusterRequest is a passthrough to the underlying InitializeClusterRequest.
// It will increment the count of requests made to InitializeCluster.
func (c *CloudHSMV2) InitializeClusterRequest(input *cloudhsmv2.InitializeClusterInput) (req *request.Request, output *cloudhsmv2.InitializeClusterOutput) {
	c.inc("InitializeCluster")
	return c.svc.InitializeClusterRequest(input)
}

// InitializeCluster is a passthrough to the underlying InitializeCluster method.
// It will increment the count of requests made to InitializeCluster.
func (c *CloudHSMV2) InitializeCluster(input *cloudhsmv2.InitializeClusterInput) (*cloudhsmv2.InitializeClusterOutput, error) {
	c.inc("InitializeCluster")
	return c.svc.InitializeCluster(input)
}

// InitializeClusterWithContext is a passthrough to the underlying InitializeClusterWithContext method.
// It will increment the count of requests made to InitializeCluster.
func (c *CloudHSMV2) InitializeClusterWithContext(ctx aws.Context, input *cloudhsmv2.InitializeClusterInput, opts ...request.Option) (*cloudhsmv2.InitializeClusterOutput, error) {
	c.inc("InitializeCluster")
	return c.svc.InitializeClusterWithContext(ctx, input, opts...)
}

// ListTagsRequest is a passthrough to the underlying ListTagsRequest.
// It will increment the count of requests made to ListTags.
func (c *CloudHSMV2) ListTagsRequest(input *cloudhsmv2.ListTagsInput) (req *request.Request, output *cloudhsmv2.ListTagsOutput) {
	c.inc("ListTags")
	return c.svc.ListTagsRequest(input)
}

// ListTags is a passthrough to the underlying ListTags method.
// It will increment the count of requests made to ListTags.
func (c *CloudHSMV2) ListTags(input *cloudhsmv2.ListTagsInput) (*cloudhsmv2.ListTagsOutput, error) {
	c.inc("ListTags")
	return c.svc.ListTags(input)
}

// ListTagsWithContext is a passthrough to the underlying ListTagsWithContext method.
// It will increment the count of requests made to ListTags.
func (c *CloudHSMV2) ListTagsWithContext(ctx aws.Context, input *cloudhsmv2.ListTagsInput, opts ...request.Option) (*cloudhsmv2.ListTagsOutput, error) {
	c.inc("ListTags")
	return c.svc.ListTagsWithContext(ctx, input, opts...)
}

// ListTagsPages is a passthrough to the underlying ListTagsPages method.
// It will increment the count of requests made to ListTags on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListTagsPagesWithContext to avoid this.
func (c *CloudHSMV2) ListTagsPages(input *cloudhsmv2.ListTagsInput, fn func(*cloudhsmv2.ListTagsOutput, bool) bool) error {
	wrappedFn := func(page *cloudhsmv2.ListTagsOutput, lastPage bool) bool {
		c.inc("ListTags")
		return fn(page, lastPage)
	}
	return c.ListTagsPages(input, wrappedFn)
}

// ListTagsPagesWithContext is a passthrough to the underlying ListTagsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListTags when applied to the request.
func (c *CloudHSMV2) ListTagsPagesWithContext(ctx aws.Context, input *cloudhsmv2.ListTagsInput, fn func(*cloudhsmv2.ListTagsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListTags"))
	return c.ListTagsPagesWithContext(ctx, input, fn, opts...)
}

// TagResourceRequest is a passthrough to the underlying TagResourceRequest.
// It will increment the count of requests made to TagResource.
func (c *CloudHSMV2) TagResourceRequest(input *cloudhsmv2.TagResourceInput) (req *request.Request, output *cloudhsmv2.TagResourceOutput) {
	c.inc("TagResource")
	return c.svc.TagResourceRequest(input)
}

// TagResource is a passthrough to the underlying TagResource method.
// It will increment the count of requests made to TagResource.
func (c *CloudHSMV2) TagResource(input *cloudhsmv2.TagResourceInput) (*cloudhsmv2.TagResourceOutput, error) {
	c.inc("TagResource")
	return c.svc.TagResource(input)
}

// TagResourceWithContext is a passthrough to the underlying TagResourceWithContext method.
// It will increment the count of requests made to TagResource.
func (c *CloudHSMV2) TagResourceWithContext(ctx aws.Context, input *cloudhsmv2.TagResourceInput, opts ...request.Option) (*cloudhsmv2.TagResourceOutput, error) {
	c.inc("TagResource")
	return c.svc.TagResourceWithContext(ctx, input, opts...)
}

// UntagResourceRequest is a passthrough to the underlying UntagResourceRequest.
// It will increment the count of requests made to UntagResource.
func (c *CloudHSMV2) UntagResourceRequest(input *cloudhsmv2.UntagResourceInput) (req *request.Request, output *cloudhsmv2.UntagResourceOutput) {
	c.inc("UntagResource")
	return c.svc.UntagResourceRequest(input)
}

// UntagResource is a passthrough to the underlying UntagResource method.
// It will increment the count of requests made to UntagResource.
func (c *CloudHSMV2) UntagResource(input *cloudhsmv2.UntagResourceInput) (*cloudhsmv2.UntagResourceOutput, error) {
	c.inc("UntagResource")
	return c.svc.UntagResource(input)
}

// UntagResourceWithContext is a passthrough to the underlying UntagResourceWithContext method.
// It will increment the count of requests made to UntagResource.
func (c *CloudHSMV2) UntagResourceWithContext(ctx aws.Context, input *cloudhsmv2.UntagResourceInput, opts ...request.Option) (*cloudhsmv2.UntagResourceOutput, error) {
	c.inc("UntagResource")
	return c.svc.UntagResourceWithContext(ctx, input, opts...)
}
