// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package medialivecounter

import (
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/medialive"
)

// CreateChannelRequest is a passthrough to the underlying CreateChannelRequest.
// It will increment the count of requests made to CreateChannel.
func (c *MediaLive) CreateChannelRequest(input *medialive.CreateChannelInput) (req *request.Request, output *medialive.CreateChannelOutput) {
	c.inc("CreateChannel")
	return c.svc.CreateChannelRequest(input)
}

// CreateChannel is a passthrough to the underlying CreateChannel method.
// It will increment the count of requests made to CreateChannel.
func (c *MediaLive) CreateChannel(input *medialive.CreateChannelInput) (*medialive.CreateChannelOutput, error) {
	c.inc("CreateChannel")
	return c.svc.CreateChannel(input)
}

// CreateChannelWithContext is a passthrough to the underlying CreateChannelWithContext method.
// It will increment the count of requests made to CreateChannel.
func (c *MediaLive) CreateChannelWithContext(ctx aws.Context, input *medialive.CreateChannelInput, opts ...request.Option) (*medialive.CreateChannelOutput, error) {
	c.inc("CreateChannel")
	return c.svc.CreateChannelWithContext(ctx, input, opts...)
}

// CreateInputRequest is a passthrough to the underlying CreateInputRequest.
// It will increment the count of requests made to CreateInput.
func (c *MediaLive) CreateInputRequest(input *medialive.CreateInputInput) (req *request.Request, output *medialive.CreateInputOutput) {
	c.inc("CreateInput")
	return c.svc.CreateInputRequest(input)
}

// CreateInput is a passthrough to the underlying CreateInput method.
// It will increment the count of requests made to CreateInput.
func (c *MediaLive) CreateInput(input *medialive.CreateInputInput) (*medialive.CreateInputOutput, error) {
	c.inc("CreateInput")
	return c.svc.CreateInput(input)
}

// CreateInputWithContext is a passthrough to the underlying CreateInputWithContext method.
// It will increment the count of requests made to CreateInput.
func (c *MediaLive) CreateInputWithContext(ctx aws.Context, input *medialive.CreateInputInput, opts ...request.Option) (*medialive.CreateInputOutput, error) {
	c.inc("CreateInput")
	return c.svc.CreateInputWithContext(ctx, input, opts...)
}

// CreateInputSecurityGroupRequest is a passthrough to the underlying CreateInputSecurityGroupRequest.
// It will increment the count of requests made to CreateInputSecurityGroup.
func (c *MediaLive) CreateInputSecurityGroupRequest(input *medialive.CreateInputSecurityGroupInput) (req *request.Request, output *medialive.CreateInputSecurityGroupOutput) {
	c.inc("CreateInputSecurityGroup")
	return c.svc.CreateInputSecurityGroupRequest(input)
}

// CreateInputSecurityGroup is a passthrough to the underlying CreateInputSecurityGroup method.
// It will increment the count of requests made to CreateInputSecurityGroup.
func (c *MediaLive) CreateInputSecurityGroup(input *medialive.CreateInputSecurityGroupInput) (*medialive.CreateInputSecurityGroupOutput, error) {
	c.inc("CreateInputSecurityGroup")
	return c.svc.CreateInputSecurityGroup(input)
}

// CreateInputSecurityGroupWithContext is a passthrough to the underlying CreateInputSecurityGroupWithContext method.
// It will increment the count of requests made to CreateInputSecurityGroup.
func (c *MediaLive) CreateInputSecurityGroupWithContext(ctx aws.Context, input *medialive.CreateInputSecurityGroupInput, opts ...request.Option) (*medialive.CreateInputSecurityGroupOutput, error) {
	c.inc("CreateInputSecurityGroup")
	return c.svc.CreateInputSecurityGroupWithContext(ctx, input, opts...)
}

// DeleteChannelRequest is a passthrough to the underlying DeleteChannelRequest.
// It will increment the count of requests made to DeleteChannel.
func (c *MediaLive) DeleteChannelRequest(input *medialive.DeleteChannelInput) (req *request.Request, output *medialive.DeleteChannelOutput) {
	c.inc("DeleteChannel")
	return c.svc.DeleteChannelRequest(input)
}

// DeleteChannel is a passthrough to the underlying DeleteChannel method.
// It will increment the count of requests made to DeleteChannel.
func (c *MediaLive) DeleteChannel(input *medialive.DeleteChannelInput) (*medialive.DeleteChannelOutput, error) {
	c.inc("DeleteChannel")
	return c.svc.DeleteChannel(input)
}

// DeleteChannelWithContext is a passthrough to the underlying DeleteChannelWithContext method.
// It will increment the count of requests made to DeleteChannel.
func (c *MediaLive) DeleteChannelWithContext(ctx aws.Context, input *medialive.DeleteChannelInput, opts ...request.Option) (*medialive.DeleteChannelOutput, error) {
	c.inc("DeleteChannel")
	return c.svc.DeleteChannelWithContext(ctx, input, opts...)
}

// DeleteInputRequest is a passthrough to the underlying DeleteInputRequest.
// It will increment the count of requests made to DeleteInput.
func (c *MediaLive) DeleteInputRequest(input *medialive.DeleteInputInput) (req *request.Request, output *medialive.DeleteInputOutput) {
	c.inc("DeleteInput")
	return c.svc.DeleteInputRequest(input)
}

// DeleteInput is a passthrough to the underlying DeleteInput method.
// It will increment the count of requests made to DeleteInput.
func (c *MediaLive) DeleteInput(input *medialive.DeleteInputInput) (*medialive.DeleteInputOutput, error) {
	c.inc("DeleteInput")
	return c.svc.DeleteInput(input)
}

// DeleteInputWithContext is a passthrough to the underlying DeleteInputWithContext method.
// It will increment the count of requests made to DeleteInput.
func (c *MediaLive) DeleteInputWithContext(ctx aws.Context, input *medialive.DeleteInputInput, opts ...request.Option) (*medialive.DeleteInputOutput, error) {
	c.inc("DeleteInput")
	return c.svc.DeleteInputWithContext(ctx, input, opts...)
}

// DeleteInputSecurityGroupRequest is a passthrough to the underlying DeleteInputSecurityGroupRequest.
// It will increment the count of requests made to DeleteInputSecurityGroup.
func (c *MediaLive) DeleteInputSecurityGroupRequest(input *medialive.DeleteInputSecurityGroupInput) (req *request.Request, output *medialive.DeleteInputSecurityGroupOutput) {
	c.inc("DeleteInputSecurityGroup")
	return c.svc.DeleteInputSecurityGroupRequest(input)
}

// DeleteInputSecurityGroup is a passthrough to the underlying DeleteInputSecurityGroup method.
// It will increment the count of requests made to DeleteInputSecurityGroup.
func (c *MediaLive) DeleteInputSecurityGroup(input *medialive.DeleteInputSecurityGroupInput) (*medialive.DeleteInputSecurityGroupOutput, error) {
	c.inc("DeleteInputSecurityGroup")
	return c.svc.DeleteInputSecurityGroup(input)
}

// DeleteInputSecurityGroupWithContext is a passthrough to the underlying DeleteInputSecurityGroupWithContext method.
// It will increment the count of requests made to DeleteInputSecurityGroup.
func (c *MediaLive) DeleteInputSecurityGroupWithContext(ctx aws.Context, input *medialive.DeleteInputSecurityGroupInput, opts ...request.Option) (*medialive.DeleteInputSecurityGroupOutput, error) {
	c.inc("DeleteInputSecurityGroup")
	return c.svc.DeleteInputSecurityGroupWithContext(ctx, input, opts...)
}

// DescribeChannelRequest is a passthrough to the underlying DescribeChannelRequest.
// It will increment the count of requests made to DescribeChannel.
func (c *MediaLive) DescribeChannelRequest(input *medialive.DescribeChannelInput) (req *request.Request, output *medialive.DescribeChannelOutput) {
	c.inc("DescribeChannel")
	return c.svc.DescribeChannelRequest(input)
}

// DescribeChannel is a passthrough to the underlying DescribeChannel method.
// It will increment the count of requests made to DescribeChannel.
func (c *MediaLive) DescribeChannel(input *medialive.DescribeChannelInput) (*medialive.DescribeChannelOutput, error) {
	c.inc("DescribeChannel")
	return c.svc.DescribeChannel(input)
}

// DescribeChannelWithContext is a passthrough to the underlying DescribeChannelWithContext method.
// It will increment the count of requests made to DescribeChannel.
func (c *MediaLive) DescribeChannelWithContext(ctx aws.Context, input *medialive.DescribeChannelInput, opts ...request.Option) (*medialive.DescribeChannelOutput, error) {
	c.inc("DescribeChannel")
	return c.svc.DescribeChannelWithContext(ctx, input, opts...)
}

// DescribeInputRequest is a passthrough to the underlying DescribeInputRequest.
// It will increment the count of requests made to DescribeInput.
func (c *MediaLive) DescribeInputRequest(input *medialive.DescribeInputInput) (req *request.Request, output *medialive.DescribeInputOutput) {
	c.inc("DescribeInput")
	return c.svc.DescribeInputRequest(input)
}

// DescribeInput is a passthrough to the underlying DescribeInput method.
// It will increment the count of requests made to DescribeInput.
func (c *MediaLive) DescribeInput(input *medialive.DescribeInputInput) (*medialive.DescribeInputOutput, error) {
	c.inc("DescribeInput")
	return c.svc.DescribeInput(input)
}

// DescribeInputWithContext is a passthrough to the underlying DescribeInputWithContext method.
// It will increment the count of requests made to DescribeInput.
func (c *MediaLive) DescribeInputWithContext(ctx aws.Context, input *medialive.DescribeInputInput, opts ...request.Option) (*medialive.DescribeInputOutput, error) {
	c.inc("DescribeInput")
	return c.svc.DescribeInputWithContext(ctx, input, opts...)
}

// DescribeInputSecurityGroupRequest is a passthrough to the underlying DescribeInputSecurityGroupRequest.
// It will increment the count of requests made to DescribeInputSecurityGroup.
func (c *MediaLive) DescribeInputSecurityGroupRequest(input *medialive.DescribeInputSecurityGroupInput) (req *request.Request, output *medialive.DescribeInputSecurityGroupOutput) {
	c.inc("DescribeInputSecurityGroup")
	return c.svc.DescribeInputSecurityGroupRequest(input)
}

// DescribeInputSecurityGroup is a passthrough to the underlying DescribeInputSecurityGroup method.
// It will increment the count of requests made to DescribeInputSecurityGroup.
func (c *MediaLive) DescribeInputSecurityGroup(input *medialive.DescribeInputSecurityGroupInput) (*medialive.DescribeInputSecurityGroupOutput, error) {
	c.inc("DescribeInputSecurityGroup")
	return c.svc.DescribeInputSecurityGroup(input)
}

// DescribeInputSecurityGroupWithContext is a passthrough to the underlying DescribeInputSecurityGroupWithContext method.
// It will increment the count of requests made to DescribeInputSecurityGroup.
func (c *MediaLive) DescribeInputSecurityGroupWithContext(ctx aws.Context, input *medialive.DescribeInputSecurityGroupInput, opts ...request.Option) (*medialive.DescribeInputSecurityGroupOutput, error) {
	c.inc("DescribeInputSecurityGroup")
	return c.svc.DescribeInputSecurityGroupWithContext(ctx, input, opts...)
}

// ListChannelsRequest is a passthrough to the underlying ListChannelsRequest.
// It will increment the count of requests made to ListChannels.
func (c *MediaLive) ListChannelsRequest(input *medialive.ListChannelsInput) (req *request.Request, output *medialive.ListChannelsOutput) {
	c.inc("ListChannels")
	return c.svc.ListChannelsRequest(input)
}

// ListChannels is a passthrough to the underlying ListChannels method.
// It will increment the count of requests made to ListChannels.
func (c *MediaLive) ListChannels(input *medialive.ListChannelsInput) (*medialive.ListChannelsOutput, error) {
	c.inc("ListChannels")
	return c.svc.ListChannels(input)
}

// ListChannelsWithContext is a passthrough to the underlying ListChannelsWithContext method.
// It will increment the count of requests made to ListChannels.
func (c *MediaLive) ListChannelsWithContext(ctx aws.Context, input *medialive.ListChannelsInput, opts ...request.Option) (*medialive.ListChannelsOutput, error) {
	c.inc("ListChannels")
	return c.svc.ListChannelsWithContext(ctx, input, opts...)
}

// ListChannelsPages is a passthrough to the underlying ListChannelsPages method.
// It will increment the count of requests made to ListChannels on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListChannelsPagesWithContext to avoid this.
func (c *MediaLive) ListChannelsPages(input *medialive.ListChannelsInput, fn func(*medialive.ListChannelsOutput, bool) bool) error {
	wrappedFn := func(page *medialive.ListChannelsOutput, lastPage bool) bool {
		c.inc("ListChannels")
		return fn(page, lastPage)
	}
	return c.svc.ListChannelsPages(input, wrappedFn)
}

// ListChannelsPagesWithContext is a passthrough to the underlying ListChannelsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListChannels when applied to the request.
func (c *MediaLive) ListChannelsPagesWithContext(ctx aws.Context, input *medialive.ListChannelsInput, fn func(*medialive.ListChannelsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListChannels"))
	return c.svc.ListChannelsPagesWithContext(ctx, input, fn, opts...)
}

// ListInputSecurityGroupsRequest is a passthrough to the underlying ListInputSecurityGroupsRequest.
// It will increment the count of requests made to ListInputSecurityGroups.
func (c *MediaLive) ListInputSecurityGroupsRequest(input *medialive.ListInputSecurityGroupsInput) (req *request.Request, output *medialive.ListInputSecurityGroupsOutput) {
	c.inc("ListInputSecurityGroups")
	return c.svc.ListInputSecurityGroupsRequest(input)
}

// ListInputSecurityGroups is a passthrough to the underlying ListInputSecurityGroups method.
// It will increment the count of requests made to ListInputSecurityGroups.
func (c *MediaLive) ListInputSecurityGroups(input *medialive.ListInputSecurityGroupsInput) (*medialive.ListInputSecurityGroupsOutput, error) {
	c.inc("ListInputSecurityGroups")
	return c.svc.ListInputSecurityGroups(input)
}

// ListInputSecurityGroupsWithContext is a passthrough to the underlying ListInputSecurityGroupsWithContext method.
// It will increment the count of requests made to ListInputSecurityGroups.
func (c *MediaLive) ListInputSecurityGroupsWithContext(ctx aws.Context, input *medialive.ListInputSecurityGroupsInput, opts ...request.Option) (*medialive.ListInputSecurityGroupsOutput, error) {
	c.inc("ListInputSecurityGroups")
	return c.svc.ListInputSecurityGroupsWithContext(ctx, input, opts...)
}

// ListInputSecurityGroupsPages is a passthrough to the underlying ListInputSecurityGroupsPages method.
// It will increment the count of requests made to ListInputSecurityGroups on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListInputSecurityGroupsPagesWithContext to avoid this.
func (c *MediaLive) ListInputSecurityGroupsPages(input *medialive.ListInputSecurityGroupsInput, fn func(*medialive.ListInputSecurityGroupsOutput, bool) bool) error {
	wrappedFn := func(page *medialive.ListInputSecurityGroupsOutput, lastPage bool) bool {
		c.inc("ListInputSecurityGroups")
		return fn(page, lastPage)
	}
	return c.svc.ListInputSecurityGroupsPages(input, wrappedFn)
}

// ListInputSecurityGroupsPagesWithContext is a passthrough to the underlying ListInputSecurityGroupsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListInputSecurityGroups when applied to the request.
func (c *MediaLive) ListInputSecurityGroupsPagesWithContext(ctx aws.Context, input *medialive.ListInputSecurityGroupsInput, fn func(*medialive.ListInputSecurityGroupsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListInputSecurityGroups"))
	return c.svc.ListInputSecurityGroupsPagesWithContext(ctx, input, fn, opts...)
}

// ListInputsRequest is a passthrough to the underlying ListInputsRequest.
// It will increment the count of requests made to ListInputs.
func (c *MediaLive) ListInputsRequest(input *medialive.ListInputsInput) (req *request.Request, output *medialive.ListInputsOutput) {
	c.inc("ListInputs")
	return c.svc.ListInputsRequest(input)
}

// ListInputs is a passthrough to the underlying ListInputs method.
// It will increment the count of requests made to ListInputs.
func (c *MediaLive) ListInputs(input *medialive.ListInputsInput) (*medialive.ListInputsOutput, error) {
	c.inc("ListInputs")
	return c.svc.ListInputs(input)
}

// ListInputsWithContext is a passthrough to the underlying ListInputsWithContext method.
// It will increment the count of requests made to ListInputs.
func (c *MediaLive) ListInputsWithContext(ctx aws.Context, input *medialive.ListInputsInput, opts ...request.Option) (*medialive.ListInputsOutput, error) {
	c.inc("ListInputs")
	return c.svc.ListInputsWithContext(ctx, input, opts...)
}

// ListInputsPages is a passthrough to the underlying ListInputsPages method.
// It will increment the count of requests made to ListInputs on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListInputsPagesWithContext to avoid this.
func (c *MediaLive) ListInputsPages(input *medialive.ListInputsInput, fn func(*medialive.ListInputsOutput, bool) bool) error {
	wrappedFn := func(page *medialive.ListInputsOutput, lastPage bool) bool {
		c.inc("ListInputs")
		return fn(page, lastPage)
	}
	return c.svc.ListInputsPages(input, wrappedFn)
}

// ListInputsPagesWithContext is a passthrough to the underlying ListInputsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListInputs when applied to the request.
func (c *MediaLive) ListInputsPagesWithContext(ctx aws.Context, input *medialive.ListInputsInput, fn func(*medialive.ListInputsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListInputs"))
	return c.svc.ListInputsPagesWithContext(ctx, input, fn, opts...)
}

// StartChannelRequest is a passthrough to the underlying StartChannelRequest.
// It will increment the count of requests made to StartChannel.
func (c *MediaLive) StartChannelRequest(input *medialive.StartChannelInput) (req *request.Request, output *medialive.StartChannelOutput) {
	c.inc("StartChannel")
	return c.svc.StartChannelRequest(input)
}

// StartChannel is a passthrough to the underlying StartChannel method.
// It will increment the count of requests made to StartChannel.
func (c *MediaLive) StartChannel(input *medialive.StartChannelInput) (*medialive.StartChannelOutput, error) {
	c.inc("StartChannel")
	return c.svc.StartChannel(input)
}

// StartChannelWithContext is a passthrough to the underlying StartChannelWithContext method.
// It will increment the count of requests made to StartChannel.
func (c *MediaLive) StartChannelWithContext(ctx aws.Context, input *medialive.StartChannelInput, opts ...request.Option) (*medialive.StartChannelOutput, error) {
	c.inc("StartChannel")
	return c.svc.StartChannelWithContext(ctx, input, opts...)
}

// StopChannelRequest is a passthrough to the underlying StopChannelRequest.
// It will increment the count of requests made to StopChannel.
func (c *MediaLive) StopChannelRequest(input *medialive.StopChannelInput) (req *request.Request, output *medialive.StopChannelOutput) {
	c.inc("StopChannel")
	return c.svc.StopChannelRequest(input)
}

// StopChannel is a passthrough to the underlying StopChannel method.
// It will increment the count of requests made to StopChannel.
func (c *MediaLive) StopChannel(input *medialive.StopChannelInput) (*medialive.StopChannelOutput, error) {
	c.inc("StopChannel")
	return c.svc.StopChannel(input)
}

// StopChannelWithContext is a passthrough to the underlying StopChannelWithContext method.
// It will increment the count of requests made to StopChannel.
func (c *MediaLive) StopChannelWithContext(ctx aws.Context, input *medialive.StopChannelInput, opts ...request.Option) (*medialive.StopChannelOutput, error) {
	c.inc("StopChannel")
	return c.svc.StopChannelWithContext(ctx, input, opts...)
}
