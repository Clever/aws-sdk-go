// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package directconnectcounter

import (
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/directconnect"
)

// AllocateConnectionOnInterconnectRequest is a passthrough to the underlying AllocateConnectionOnInterconnectRequest.
// It will increment the count of requests made to AllocateConnectionOnInterconnect.
func (c *DirectConnect) AllocateConnectionOnInterconnectRequest(input *directconnect.AllocateConnectionOnInterconnectInput) (req *request.Request, output *directconnect.Connection) {
	c.inc("AllocateConnectionOnInterconnect")
	return c.svc.AllocateConnectionOnInterconnectRequest(input)
}

// AllocateConnectionOnInterconnect is a passthrough to the underlying AllocateConnectionOnInterconnect method.
// It will increment the count of requests made to AllocateConnectionOnInterconnect.
func (c *DirectConnect) AllocateConnectionOnInterconnect(input *directconnect.AllocateConnectionOnInterconnectInput) (*directconnect.Connection, error) {
	c.inc("AllocateConnectionOnInterconnect")
	return c.svc.AllocateConnectionOnInterconnect(input)
}

// AllocateConnectionOnInterconnectWithContext is a passthrough to the underlying AllocateConnectionOnInterconnectWithContext method.
// It will increment the count of requests made to AllocateConnectionOnInterconnect.
func (c *DirectConnect) AllocateConnectionOnInterconnectWithContext(ctx aws.Context, input *directconnect.AllocateConnectionOnInterconnectInput, opts ...request.Option) (*directconnect.Connection, error) {
	c.inc("AllocateConnectionOnInterconnect")
	return c.svc.AllocateConnectionOnInterconnectWithContext(ctx, input, opts...)
}

// AllocateHostedConnectionRequest is a passthrough to the underlying AllocateHostedConnectionRequest.
// It will increment the count of requests made to AllocateHostedConnection.
func (c *DirectConnect) AllocateHostedConnectionRequest(input *directconnect.AllocateHostedConnectionInput) (req *request.Request, output *directconnect.Connection) {
	c.inc("AllocateHostedConnection")
	return c.svc.AllocateHostedConnectionRequest(input)
}

// AllocateHostedConnection is a passthrough to the underlying AllocateHostedConnection method.
// It will increment the count of requests made to AllocateHostedConnection.
func (c *DirectConnect) AllocateHostedConnection(input *directconnect.AllocateHostedConnectionInput) (*directconnect.Connection, error) {
	c.inc("AllocateHostedConnection")
	return c.svc.AllocateHostedConnection(input)
}

// AllocateHostedConnectionWithContext is a passthrough to the underlying AllocateHostedConnectionWithContext method.
// It will increment the count of requests made to AllocateHostedConnection.
func (c *DirectConnect) AllocateHostedConnectionWithContext(ctx aws.Context, input *directconnect.AllocateHostedConnectionInput, opts ...request.Option) (*directconnect.Connection, error) {
	c.inc("AllocateHostedConnection")
	return c.svc.AllocateHostedConnectionWithContext(ctx, input, opts...)
}

// AllocatePrivateVirtualInterfaceRequest is a passthrough to the underlying AllocatePrivateVirtualInterfaceRequest.
// It will increment the count of requests made to AllocatePrivateVirtualInterface.
func (c *DirectConnect) AllocatePrivateVirtualInterfaceRequest(input *directconnect.AllocatePrivateVirtualInterfaceInput) (req *request.Request, output *directconnect.VirtualInterface) {
	c.inc("AllocatePrivateVirtualInterface")
	return c.svc.AllocatePrivateVirtualInterfaceRequest(input)
}

// AllocatePrivateVirtualInterface is a passthrough to the underlying AllocatePrivateVirtualInterface method.
// It will increment the count of requests made to AllocatePrivateVirtualInterface.
func (c *DirectConnect) AllocatePrivateVirtualInterface(input *directconnect.AllocatePrivateVirtualInterfaceInput) (*directconnect.VirtualInterface, error) {
	c.inc("AllocatePrivateVirtualInterface")
	return c.svc.AllocatePrivateVirtualInterface(input)
}

// AllocatePrivateVirtualInterfaceWithContext is a passthrough to the underlying AllocatePrivateVirtualInterfaceWithContext method.
// It will increment the count of requests made to AllocatePrivateVirtualInterface.
func (c *DirectConnect) AllocatePrivateVirtualInterfaceWithContext(ctx aws.Context, input *directconnect.AllocatePrivateVirtualInterfaceInput, opts ...request.Option) (*directconnect.VirtualInterface, error) {
	c.inc("AllocatePrivateVirtualInterface")
	return c.svc.AllocatePrivateVirtualInterfaceWithContext(ctx, input, opts...)
}

// AllocatePublicVirtualInterfaceRequest is a passthrough to the underlying AllocatePublicVirtualInterfaceRequest.
// It will increment the count of requests made to AllocatePublicVirtualInterface.
func (c *DirectConnect) AllocatePublicVirtualInterfaceRequest(input *directconnect.AllocatePublicVirtualInterfaceInput) (req *request.Request, output *directconnect.VirtualInterface) {
	c.inc("AllocatePublicVirtualInterface")
	return c.svc.AllocatePublicVirtualInterfaceRequest(input)
}

// AllocatePublicVirtualInterface is a passthrough to the underlying AllocatePublicVirtualInterface method.
// It will increment the count of requests made to AllocatePublicVirtualInterface.
func (c *DirectConnect) AllocatePublicVirtualInterface(input *directconnect.AllocatePublicVirtualInterfaceInput) (*directconnect.VirtualInterface, error) {
	c.inc("AllocatePublicVirtualInterface")
	return c.svc.AllocatePublicVirtualInterface(input)
}

// AllocatePublicVirtualInterfaceWithContext is a passthrough to the underlying AllocatePublicVirtualInterfaceWithContext method.
// It will increment the count of requests made to AllocatePublicVirtualInterface.
func (c *DirectConnect) AllocatePublicVirtualInterfaceWithContext(ctx aws.Context, input *directconnect.AllocatePublicVirtualInterfaceInput, opts ...request.Option) (*directconnect.VirtualInterface, error) {
	c.inc("AllocatePublicVirtualInterface")
	return c.svc.AllocatePublicVirtualInterfaceWithContext(ctx, input, opts...)
}

// AssociateConnectionWithLagRequest is a passthrough to the underlying AssociateConnectionWithLagRequest.
// It will increment the count of requests made to AssociateConnectionWithLag.
func (c *DirectConnect) AssociateConnectionWithLagRequest(input *directconnect.AssociateConnectionWithLagInput) (req *request.Request, output *directconnect.Connection) {
	c.inc("AssociateConnectionWithLag")
	return c.svc.AssociateConnectionWithLagRequest(input)
}

// AssociateConnectionWithLag is a passthrough to the underlying AssociateConnectionWithLag method.
// It will increment the count of requests made to AssociateConnectionWithLag.
func (c *DirectConnect) AssociateConnectionWithLag(input *directconnect.AssociateConnectionWithLagInput) (*directconnect.Connection, error) {
	c.inc("AssociateConnectionWithLag")
	return c.svc.AssociateConnectionWithLag(input)
}

// AssociateConnectionWithLagWithContext is a passthrough to the underlying AssociateConnectionWithLagWithContext method.
// It will increment the count of requests made to AssociateConnectionWithLag.
func (c *DirectConnect) AssociateConnectionWithLagWithContext(ctx aws.Context, input *directconnect.AssociateConnectionWithLagInput, opts ...request.Option) (*directconnect.Connection, error) {
	c.inc("AssociateConnectionWithLag")
	return c.svc.AssociateConnectionWithLagWithContext(ctx, input, opts...)
}

// AssociateHostedConnectionRequest is a passthrough to the underlying AssociateHostedConnectionRequest.
// It will increment the count of requests made to AssociateHostedConnection.
func (c *DirectConnect) AssociateHostedConnectionRequest(input *directconnect.AssociateHostedConnectionInput) (req *request.Request, output *directconnect.Connection) {
	c.inc("AssociateHostedConnection")
	return c.svc.AssociateHostedConnectionRequest(input)
}

// AssociateHostedConnection is a passthrough to the underlying AssociateHostedConnection method.
// It will increment the count of requests made to AssociateHostedConnection.
func (c *DirectConnect) AssociateHostedConnection(input *directconnect.AssociateHostedConnectionInput) (*directconnect.Connection, error) {
	c.inc("AssociateHostedConnection")
	return c.svc.AssociateHostedConnection(input)
}

// AssociateHostedConnectionWithContext is a passthrough to the underlying AssociateHostedConnectionWithContext method.
// It will increment the count of requests made to AssociateHostedConnection.
func (c *DirectConnect) AssociateHostedConnectionWithContext(ctx aws.Context, input *directconnect.AssociateHostedConnectionInput, opts ...request.Option) (*directconnect.Connection, error) {
	c.inc("AssociateHostedConnection")
	return c.svc.AssociateHostedConnectionWithContext(ctx, input, opts...)
}

// AssociateVirtualInterfaceRequest is a passthrough to the underlying AssociateVirtualInterfaceRequest.
// It will increment the count of requests made to AssociateVirtualInterface.
func (c *DirectConnect) AssociateVirtualInterfaceRequest(input *directconnect.AssociateVirtualInterfaceInput) (req *request.Request, output *directconnect.VirtualInterface) {
	c.inc("AssociateVirtualInterface")
	return c.svc.AssociateVirtualInterfaceRequest(input)
}

// AssociateVirtualInterface is a passthrough to the underlying AssociateVirtualInterface method.
// It will increment the count of requests made to AssociateVirtualInterface.
func (c *DirectConnect) AssociateVirtualInterface(input *directconnect.AssociateVirtualInterfaceInput) (*directconnect.VirtualInterface, error) {
	c.inc("AssociateVirtualInterface")
	return c.svc.AssociateVirtualInterface(input)
}

// AssociateVirtualInterfaceWithContext is a passthrough to the underlying AssociateVirtualInterfaceWithContext method.
// It will increment the count of requests made to AssociateVirtualInterface.
func (c *DirectConnect) AssociateVirtualInterfaceWithContext(ctx aws.Context, input *directconnect.AssociateVirtualInterfaceInput, opts ...request.Option) (*directconnect.VirtualInterface, error) {
	c.inc("AssociateVirtualInterface")
	return c.svc.AssociateVirtualInterfaceWithContext(ctx, input, opts...)
}

// ConfirmConnectionRequest is a passthrough to the underlying ConfirmConnectionRequest.
// It will increment the count of requests made to ConfirmConnection.
func (c *DirectConnect) ConfirmConnectionRequest(input *directconnect.ConfirmConnectionInput) (req *request.Request, output *directconnect.ConfirmConnectionOutput) {
	c.inc("ConfirmConnection")
	return c.svc.ConfirmConnectionRequest(input)
}

// ConfirmConnection is a passthrough to the underlying ConfirmConnection method.
// It will increment the count of requests made to ConfirmConnection.
func (c *DirectConnect) ConfirmConnection(input *directconnect.ConfirmConnectionInput) (*directconnect.ConfirmConnectionOutput, error) {
	c.inc("ConfirmConnection")
	return c.svc.ConfirmConnection(input)
}

// ConfirmConnectionWithContext is a passthrough to the underlying ConfirmConnectionWithContext method.
// It will increment the count of requests made to ConfirmConnection.
func (c *DirectConnect) ConfirmConnectionWithContext(ctx aws.Context, input *directconnect.ConfirmConnectionInput, opts ...request.Option) (*directconnect.ConfirmConnectionOutput, error) {
	c.inc("ConfirmConnection")
	return c.svc.ConfirmConnectionWithContext(ctx, input, opts...)
}

// ConfirmPrivateVirtualInterfaceRequest is a passthrough to the underlying ConfirmPrivateVirtualInterfaceRequest.
// It will increment the count of requests made to ConfirmPrivateVirtualInterface.
func (c *DirectConnect) ConfirmPrivateVirtualInterfaceRequest(input *directconnect.ConfirmPrivateVirtualInterfaceInput) (req *request.Request, output *directconnect.ConfirmPrivateVirtualInterfaceOutput) {
	c.inc("ConfirmPrivateVirtualInterface")
	return c.svc.ConfirmPrivateVirtualInterfaceRequest(input)
}

// ConfirmPrivateVirtualInterface is a passthrough to the underlying ConfirmPrivateVirtualInterface method.
// It will increment the count of requests made to ConfirmPrivateVirtualInterface.
func (c *DirectConnect) ConfirmPrivateVirtualInterface(input *directconnect.ConfirmPrivateVirtualInterfaceInput) (*directconnect.ConfirmPrivateVirtualInterfaceOutput, error) {
	c.inc("ConfirmPrivateVirtualInterface")
	return c.svc.ConfirmPrivateVirtualInterface(input)
}

// ConfirmPrivateVirtualInterfaceWithContext is a passthrough to the underlying ConfirmPrivateVirtualInterfaceWithContext method.
// It will increment the count of requests made to ConfirmPrivateVirtualInterface.
func (c *DirectConnect) ConfirmPrivateVirtualInterfaceWithContext(ctx aws.Context, input *directconnect.ConfirmPrivateVirtualInterfaceInput, opts ...request.Option) (*directconnect.ConfirmPrivateVirtualInterfaceOutput, error) {
	c.inc("ConfirmPrivateVirtualInterface")
	return c.svc.ConfirmPrivateVirtualInterfaceWithContext(ctx, input, opts...)
}

// ConfirmPublicVirtualInterfaceRequest is a passthrough to the underlying ConfirmPublicVirtualInterfaceRequest.
// It will increment the count of requests made to ConfirmPublicVirtualInterface.
func (c *DirectConnect) ConfirmPublicVirtualInterfaceRequest(input *directconnect.ConfirmPublicVirtualInterfaceInput) (req *request.Request, output *directconnect.ConfirmPublicVirtualInterfaceOutput) {
	c.inc("ConfirmPublicVirtualInterface")
	return c.svc.ConfirmPublicVirtualInterfaceRequest(input)
}

// ConfirmPublicVirtualInterface is a passthrough to the underlying ConfirmPublicVirtualInterface method.
// It will increment the count of requests made to ConfirmPublicVirtualInterface.
func (c *DirectConnect) ConfirmPublicVirtualInterface(input *directconnect.ConfirmPublicVirtualInterfaceInput) (*directconnect.ConfirmPublicVirtualInterfaceOutput, error) {
	c.inc("ConfirmPublicVirtualInterface")
	return c.svc.ConfirmPublicVirtualInterface(input)
}

// ConfirmPublicVirtualInterfaceWithContext is a passthrough to the underlying ConfirmPublicVirtualInterfaceWithContext method.
// It will increment the count of requests made to ConfirmPublicVirtualInterface.
func (c *DirectConnect) ConfirmPublicVirtualInterfaceWithContext(ctx aws.Context, input *directconnect.ConfirmPublicVirtualInterfaceInput, opts ...request.Option) (*directconnect.ConfirmPublicVirtualInterfaceOutput, error) {
	c.inc("ConfirmPublicVirtualInterface")
	return c.svc.ConfirmPublicVirtualInterfaceWithContext(ctx, input, opts...)
}

// CreateBGPPeerRequest is a passthrough to the underlying CreateBGPPeerRequest.
// It will increment the count of requests made to CreateBGPPeer.
func (c *DirectConnect) CreateBGPPeerRequest(input *directconnect.CreateBGPPeerInput) (req *request.Request, output *directconnect.CreateBGPPeerOutput) {
	c.inc("CreateBGPPeer")
	return c.svc.CreateBGPPeerRequest(input)
}

// CreateBGPPeer is a passthrough to the underlying CreateBGPPeer method.
// It will increment the count of requests made to CreateBGPPeer.
func (c *DirectConnect) CreateBGPPeer(input *directconnect.CreateBGPPeerInput) (*directconnect.CreateBGPPeerOutput, error) {
	c.inc("CreateBGPPeer")
	return c.svc.CreateBGPPeer(input)
}

// CreateBGPPeerWithContext is a passthrough to the underlying CreateBGPPeerWithContext method.
// It will increment the count of requests made to CreateBGPPeer.
func (c *DirectConnect) CreateBGPPeerWithContext(ctx aws.Context, input *directconnect.CreateBGPPeerInput, opts ...request.Option) (*directconnect.CreateBGPPeerOutput, error) {
	c.inc("CreateBGPPeer")
	return c.svc.CreateBGPPeerWithContext(ctx, input, opts...)
}

// CreateConnectionRequest is a passthrough to the underlying CreateConnectionRequest.
// It will increment the count of requests made to CreateConnection.
func (c *DirectConnect) CreateConnectionRequest(input *directconnect.CreateConnectionInput) (req *request.Request, output *directconnect.Connection) {
	c.inc("CreateConnection")
	return c.svc.CreateConnectionRequest(input)
}

// CreateConnection is a passthrough to the underlying CreateConnection method.
// It will increment the count of requests made to CreateConnection.
func (c *DirectConnect) CreateConnection(input *directconnect.CreateConnectionInput) (*directconnect.Connection, error) {
	c.inc("CreateConnection")
	return c.svc.CreateConnection(input)
}

// CreateConnectionWithContext is a passthrough to the underlying CreateConnectionWithContext method.
// It will increment the count of requests made to CreateConnection.
func (c *DirectConnect) CreateConnectionWithContext(ctx aws.Context, input *directconnect.CreateConnectionInput, opts ...request.Option) (*directconnect.Connection, error) {
	c.inc("CreateConnection")
	return c.svc.CreateConnectionWithContext(ctx, input, opts...)
}

// CreateInterconnectRequest is a passthrough to the underlying CreateInterconnectRequest.
// It will increment the count of requests made to CreateInterconnect.
func (c *DirectConnect) CreateInterconnectRequest(input *directconnect.CreateInterconnectInput) (req *request.Request, output *directconnect.Interconnect) {
	c.inc("CreateInterconnect")
	return c.svc.CreateInterconnectRequest(input)
}

// CreateInterconnect is a passthrough to the underlying CreateInterconnect method.
// It will increment the count of requests made to CreateInterconnect.
func (c *DirectConnect) CreateInterconnect(input *directconnect.CreateInterconnectInput) (*directconnect.Interconnect, error) {
	c.inc("CreateInterconnect")
	return c.svc.CreateInterconnect(input)
}

// CreateInterconnectWithContext is a passthrough to the underlying CreateInterconnectWithContext method.
// It will increment the count of requests made to CreateInterconnect.
func (c *DirectConnect) CreateInterconnectWithContext(ctx aws.Context, input *directconnect.CreateInterconnectInput, opts ...request.Option) (*directconnect.Interconnect, error) {
	c.inc("CreateInterconnect")
	return c.svc.CreateInterconnectWithContext(ctx, input, opts...)
}

// CreateLagRequest is a passthrough to the underlying CreateLagRequest.
// It will increment the count of requests made to CreateLag.
func (c *DirectConnect) CreateLagRequest(input *directconnect.CreateLagInput) (req *request.Request, output *directconnect.Lag) {
	c.inc("CreateLag")
	return c.svc.CreateLagRequest(input)
}

// CreateLag is a passthrough to the underlying CreateLag method.
// It will increment the count of requests made to CreateLag.
func (c *DirectConnect) CreateLag(input *directconnect.CreateLagInput) (*directconnect.Lag, error) {
	c.inc("CreateLag")
	return c.svc.CreateLag(input)
}

// CreateLagWithContext is a passthrough to the underlying CreateLagWithContext method.
// It will increment the count of requests made to CreateLag.
func (c *DirectConnect) CreateLagWithContext(ctx aws.Context, input *directconnect.CreateLagInput, opts ...request.Option) (*directconnect.Lag, error) {
	c.inc("CreateLag")
	return c.svc.CreateLagWithContext(ctx, input, opts...)
}

// CreatePrivateVirtualInterfaceRequest is a passthrough to the underlying CreatePrivateVirtualInterfaceRequest.
// It will increment the count of requests made to CreatePrivateVirtualInterface.
func (c *DirectConnect) CreatePrivateVirtualInterfaceRequest(input *directconnect.CreatePrivateVirtualInterfaceInput) (req *request.Request, output *directconnect.VirtualInterface) {
	c.inc("CreatePrivateVirtualInterface")
	return c.svc.CreatePrivateVirtualInterfaceRequest(input)
}

// CreatePrivateVirtualInterface is a passthrough to the underlying CreatePrivateVirtualInterface method.
// It will increment the count of requests made to CreatePrivateVirtualInterface.
func (c *DirectConnect) CreatePrivateVirtualInterface(input *directconnect.CreatePrivateVirtualInterfaceInput) (*directconnect.VirtualInterface, error) {
	c.inc("CreatePrivateVirtualInterface")
	return c.svc.CreatePrivateVirtualInterface(input)
}

// CreatePrivateVirtualInterfaceWithContext is a passthrough to the underlying CreatePrivateVirtualInterfaceWithContext method.
// It will increment the count of requests made to CreatePrivateVirtualInterface.
func (c *DirectConnect) CreatePrivateVirtualInterfaceWithContext(ctx aws.Context, input *directconnect.CreatePrivateVirtualInterfaceInput, opts ...request.Option) (*directconnect.VirtualInterface, error) {
	c.inc("CreatePrivateVirtualInterface")
	return c.svc.CreatePrivateVirtualInterfaceWithContext(ctx, input, opts...)
}

// CreatePublicVirtualInterfaceRequest is a passthrough to the underlying CreatePublicVirtualInterfaceRequest.
// It will increment the count of requests made to CreatePublicVirtualInterface.
func (c *DirectConnect) CreatePublicVirtualInterfaceRequest(input *directconnect.CreatePublicVirtualInterfaceInput) (req *request.Request, output *directconnect.VirtualInterface) {
	c.inc("CreatePublicVirtualInterface")
	return c.svc.CreatePublicVirtualInterfaceRequest(input)
}

// CreatePublicVirtualInterface is a passthrough to the underlying CreatePublicVirtualInterface method.
// It will increment the count of requests made to CreatePublicVirtualInterface.
func (c *DirectConnect) CreatePublicVirtualInterface(input *directconnect.CreatePublicVirtualInterfaceInput) (*directconnect.VirtualInterface, error) {
	c.inc("CreatePublicVirtualInterface")
	return c.svc.CreatePublicVirtualInterface(input)
}

// CreatePublicVirtualInterfaceWithContext is a passthrough to the underlying CreatePublicVirtualInterfaceWithContext method.
// It will increment the count of requests made to CreatePublicVirtualInterface.
func (c *DirectConnect) CreatePublicVirtualInterfaceWithContext(ctx aws.Context, input *directconnect.CreatePublicVirtualInterfaceInput, opts ...request.Option) (*directconnect.VirtualInterface, error) {
	c.inc("CreatePublicVirtualInterface")
	return c.svc.CreatePublicVirtualInterfaceWithContext(ctx, input, opts...)
}

// DeleteBGPPeerRequest is a passthrough to the underlying DeleteBGPPeerRequest.
// It will increment the count of requests made to DeleteBGPPeer.
func (c *DirectConnect) DeleteBGPPeerRequest(input *directconnect.DeleteBGPPeerInput) (req *request.Request, output *directconnect.DeleteBGPPeerOutput) {
	c.inc("DeleteBGPPeer")
	return c.svc.DeleteBGPPeerRequest(input)
}

// DeleteBGPPeer is a passthrough to the underlying DeleteBGPPeer method.
// It will increment the count of requests made to DeleteBGPPeer.
func (c *DirectConnect) DeleteBGPPeer(input *directconnect.DeleteBGPPeerInput) (*directconnect.DeleteBGPPeerOutput, error) {
	c.inc("DeleteBGPPeer")
	return c.svc.DeleteBGPPeer(input)
}

// DeleteBGPPeerWithContext is a passthrough to the underlying DeleteBGPPeerWithContext method.
// It will increment the count of requests made to DeleteBGPPeer.
func (c *DirectConnect) DeleteBGPPeerWithContext(ctx aws.Context, input *directconnect.DeleteBGPPeerInput, opts ...request.Option) (*directconnect.DeleteBGPPeerOutput, error) {
	c.inc("DeleteBGPPeer")
	return c.svc.DeleteBGPPeerWithContext(ctx, input, opts...)
}

// DeleteConnectionRequest is a passthrough to the underlying DeleteConnectionRequest.
// It will increment the count of requests made to DeleteConnection.
func (c *DirectConnect) DeleteConnectionRequest(input *directconnect.DeleteConnectionInput) (req *request.Request, output *directconnect.Connection) {
	c.inc("DeleteConnection")
	return c.svc.DeleteConnectionRequest(input)
}

// DeleteConnection is a passthrough to the underlying DeleteConnection method.
// It will increment the count of requests made to DeleteConnection.
func (c *DirectConnect) DeleteConnection(input *directconnect.DeleteConnectionInput) (*directconnect.Connection, error) {
	c.inc("DeleteConnection")
	return c.svc.DeleteConnection(input)
}

// DeleteConnectionWithContext is a passthrough to the underlying DeleteConnectionWithContext method.
// It will increment the count of requests made to DeleteConnection.
func (c *DirectConnect) DeleteConnectionWithContext(ctx aws.Context, input *directconnect.DeleteConnectionInput, opts ...request.Option) (*directconnect.Connection, error) {
	c.inc("DeleteConnection")
	return c.svc.DeleteConnectionWithContext(ctx, input, opts...)
}

// DeleteInterconnectRequest is a passthrough to the underlying DeleteInterconnectRequest.
// It will increment the count of requests made to DeleteInterconnect.
func (c *DirectConnect) DeleteInterconnectRequest(input *directconnect.DeleteInterconnectInput) (req *request.Request, output *directconnect.DeleteInterconnectOutput) {
	c.inc("DeleteInterconnect")
	return c.svc.DeleteInterconnectRequest(input)
}

// DeleteInterconnect is a passthrough to the underlying DeleteInterconnect method.
// It will increment the count of requests made to DeleteInterconnect.
func (c *DirectConnect) DeleteInterconnect(input *directconnect.DeleteInterconnectInput) (*directconnect.DeleteInterconnectOutput, error) {
	c.inc("DeleteInterconnect")
	return c.svc.DeleteInterconnect(input)
}

// DeleteInterconnectWithContext is a passthrough to the underlying DeleteInterconnectWithContext method.
// It will increment the count of requests made to DeleteInterconnect.
func (c *DirectConnect) DeleteInterconnectWithContext(ctx aws.Context, input *directconnect.DeleteInterconnectInput, opts ...request.Option) (*directconnect.DeleteInterconnectOutput, error) {
	c.inc("DeleteInterconnect")
	return c.svc.DeleteInterconnectWithContext(ctx, input, opts...)
}

// DeleteLagRequest is a passthrough to the underlying DeleteLagRequest.
// It will increment the count of requests made to DeleteLag.
func (c *DirectConnect) DeleteLagRequest(input *directconnect.DeleteLagInput) (req *request.Request, output *directconnect.Lag) {
	c.inc("DeleteLag")
	return c.svc.DeleteLagRequest(input)
}

// DeleteLag is a passthrough to the underlying DeleteLag method.
// It will increment the count of requests made to DeleteLag.
func (c *DirectConnect) DeleteLag(input *directconnect.DeleteLagInput) (*directconnect.Lag, error) {
	c.inc("DeleteLag")
	return c.svc.DeleteLag(input)
}

// DeleteLagWithContext is a passthrough to the underlying DeleteLagWithContext method.
// It will increment the count of requests made to DeleteLag.
func (c *DirectConnect) DeleteLagWithContext(ctx aws.Context, input *directconnect.DeleteLagInput, opts ...request.Option) (*directconnect.Lag, error) {
	c.inc("DeleteLag")
	return c.svc.DeleteLagWithContext(ctx, input, opts...)
}

// DeleteVirtualInterfaceRequest is a passthrough to the underlying DeleteVirtualInterfaceRequest.
// It will increment the count of requests made to DeleteVirtualInterface.
func (c *DirectConnect) DeleteVirtualInterfaceRequest(input *directconnect.DeleteVirtualInterfaceInput) (req *request.Request, output *directconnect.DeleteVirtualInterfaceOutput) {
	c.inc("DeleteVirtualInterface")
	return c.svc.DeleteVirtualInterfaceRequest(input)
}

// DeleteVirtualInterface is a passthrough to the underlying DeleteVirtualInterface method.
// It will increment the count of requests made to DeleteVirtualInterface.
func (c *DirectConnect) DeleteVirtualInterface(input *directconnect.DeleteVirtualInterfaceInput) (*directconnect.DeleteVirtualInterfaceOutput, error) {
	c.inc("DeleteVirtualInterface")
	return c.svc.DeleteVirtualInterface(input)
}

// DeleteVirtualInterfaceWithContext is a passthrough to the underlying DeleteVirtualInterfaceWithContext method.
// It will increment the count of requests made to DeleteVirtualInterface.
func (c *DirectConnect) DeleteVirtualInterfaceWithContext(ctx aws.Context, input *directconnect.DeleteVirtualInterfaceInput, opts ...request.Option) (*directconnect.DeleteVirtualInterfaceOutput, error) {
	c.inc("DeleteVirtualInterface")
	return c.svc.DeleteVirtualInterfaceWithContext(ctx, input, opts...)
}

// DescribeConnectionLoaRequest is a passthrough to the underlying DescribeConnectionLoaRequest.
// It will increment the count of requests made to DescribeConnectionLoa.
func (c *DirectConnect) DescribeConnectionLoaRequest(input *directconnect.DescribeConnectionLoaInput) (req *request.Request, output *directconnect.DescribeConnectionLoaOutput) {
	c.inc("DescribeConnectionLoa")
	return c.svc.DescribeConnectionLoaRequest(input)
}

// DescribeConnectionLoa is a passthrough to the underlying DescribeConnectionLoa method.
// It will increment the count of requests made to DescribeConnectionLoa.
func (c *DirectConnect) DescribeConnectionLoa(input *directconnect.DescribeConnectionLoaInput) (*directconnect.DescribeConnectionLoaOutput, error) {
	c.inc("DescribeConnectionLoa")
	return c.svc.DescribeConnectionLoa(input)
}

// DescribeConnectionLoaWithContext is a passthrough to the underlying DescribeConnectionLoaWithContext method.
// It will increment the count of requests made to DescribeConnectionLoa.
func (c *DirectConnect) DescribeConnectionLoaWithContext(ctx aws.Context, input *directconnect.DescribeConnectionLoaInput, opts ...request.Option) (*directconnect.DescribeConnectionLoaOutput, error) {
	c.inc("DescribeConnectionLoa")
	return c.svc.DescribeConnectionLoaWithContext(ctx, input, opts...)
}

// DescribeConnectionsRequest is a passthrough to the underlying DescribeConnectionsRequest.
// It will increment the count of requests made to DescribeConnections.
func (c *DirectConnect) DescribeConnectionsRequest(input *directconnect.DescribeConnectionsInput) (req *request.Request, output *directconnect.Connections) {
	c.inc("DescribeConnections")
	return c.svc.DescribeConnectionsRequest(input)
}

// DescribeConnections is a passthrough to the underlying DescribeConnections method.
// It will increment the count of requests made to DescribeConnections.
func (c *DirectConnect) DescribeConnections(input *directconnect.DescribeConnectionsInput) (*directconnect.Connections, error) {
	c.inc("DescribeConnections")
	return c.svc.DescribeConnections(input)
}

// DescribeConnectionsWithContext is a passthrough to the underlying DescribeConnectionsWithContext method.
// It will increment the count of requests made to DescribeConnections.
func (c *DirectConnect) DescribeConnectionsWithContext(ctx aws.Context, input *directconnect.DescribeConnectionsInput, opts ...request.Option) (*directconnect.Connections, error) {
	c.inc("DescribeConnections")
	return c.svc.DescribeConnectionsWithContext(ctx, input, opts...)
}

// DescribeConnectionsOnInterconnectRequest is a passthrough to the underlying DescribeConnectionsOnInterconnectRequest.
// It will increment the count of requests made to DescribeConnectionsOnInterconnect.
func (c *DirectConnect) DescribeConnectionsOnInterconnectRequest(input *directconnect.DescribeConnectionsOnInterconnectInput) (req *request.Request, output *directconnect.Connections) {
	c.inc("DescribeConnectionsOnInterconnect")
	return c.svc.DescribeConnectionsOnInterconnectRequest(input)
}

// DescribeConnectionsOnInterconnect is a passthrough to the underlying DescribeConnectionsOnInterconnect method.
// It will increment the count of requests made to DescribeConnectionsOnInterconnect.
func (c *DirectConnect) DescribeConnectionsOnInterconnect(input *directconnect.DescribeConnectionsOnInterconnectInput) (*directconnect.Connections, error) {
	c.inc("DescribeConnectionsOnInterconnect")
	return c.svc.DescribeConnectionsOnInterconnect(input)
}

// DescribeConnectionsOnInterconnectWithContext is a passthrough to the underlying DescribeConnectionsOnInterconnectWithContext method.
// It will increment the count of requests made to DescribeConnectionsOnInterconnect.
func (c *DirectConnect) DescribeConnectionsOnInterconnectWithContext(ctx aws.Context, input *directconnect.DescribeConnectionsOnInterconnectInput, opts ...request.Option) (*directconnect.Connections, error) {
	c.inc("DescribeConnectionsOnInterconnect")
	return c.svc.DescribeConnectionsOnInterconnectWithContext(ctx, input, opts...)
}

// DescribeHostedConnectionsRequest is a passthrough to the underlying DescribeHostedConnectionsRequest.
// It will increment the count of requests made to DescribeHostedConnections.
func (c *DirectConnect) DescribeHostedConnectionsRequest(input *directconnect.DescribeHostedConnectionsInput) (req *request.Request, output *directconnect.Connections) {
	c.inc("DescribeHostedConnections")
	return c.svc.DescribeHostedConnectionsRequest(input)
}

// DescribeHostedConnections is a passthrough to the underlying DescribeHostedConnections method.
// It will increment the count of requests made to DescribeHostedConnections.
func (c *DirectConnect) DescribeHostedConnections(input *directconnect.DescribeHostedConnectionsInput) (*directconnect.Connections, error) {
	c.inc("DescribeHostedConnections")
	return c.svc.DescribeHostedConnections(input)
}

// DescribeHostedConnectionsWithContext is a passthrough to the underlying DescribeHostedConnectionsWithContext method.
// It will increment the count of requests made to DescribeHostedConnections.
func (c *DirectConnect) DescribeHostedConnectionsWithContext(ctx aws.Context, input *directconnect.DescribeHostedConnectionsInput, opts ...request.Option) (*directconnect.Connections, error) {
	c.inc("DescribeHostedConnections")
	return c.svc.DescribeHostedConnectionsWithContext(ctx, input, opts...)
}

// DescribeInterconnectLoaRequest is a passthrough to the underlying DescribeInterconnectLoaRequest.
// It will increment the count of requests made to DescribeInterconnectLoa.
func (c *DirectConnect) DescribeInterconnectLoaRequest(input *directconnect.DescribeInterconnectLoaInput) (req *request.Request, output *directconnect.DescribeInterconnectLoaOutput) {
	c.inc("DescribeInterconnectLoa")
	return c.svc.DescribeInterconnectLoaRequest(input)
}

// DescribeInterconnectLoa is a passthrough to the underlying DescribeInterconnectLoa method.
// It will increment the count of requests made to DescribeInterconnectLoa.
func (c *DirectConnect) DescribeInterconnectLoa(input *directconnect.DescribeInterconnectLoaInput) (*directconnect.DescribeInterconnectLoaOutput, error) {
	c.inc("DescribeInterconnectLoa")
	return c.svc.DescribeInterconnectLoa(input)
}

// DescribeInterconnectLoaWithContext is a passthrough to the underlying DescribeInterconnectLoaWithContext method.
// It will increment the count of requests made to DescribeInterconnectLoa.
func (c *DirectConnect) DescribeInterconnectLoaWithContext(ctx aws.Context, input *directconnect.DescribeInterconnectLoaInput, opts ...request.Option) (*directconnect.DescribeInterconnectLoaOutput, error) {
	c.inc("DescribeInterconnectLoa")
	return c.svc.DescribeInterconnectLoaWithContext(ctx, input, opts...)
}

// DescribeInterconnectsRequest is a passthrough to the underlying DescribeInterconnectsRequest.
// It will increment the count of requests made to DescribeInterconnects.
func (c *DirectConnect) DescribeInterconnectsRequest(input *directconnect.DescribeInterconnectsInput) (req *request.Request, output *directconnect.DescribeInterconnectsOutput) {
	c.inc("DescribeInterconnects")
	return c.svc.DescribeInterconnectsRequest(input)
}

// DescribeInterconnects is a passthrough to the underlying DescribeInterconnects method.
// It will increment the count of requests made to DescribeInterconnects.
func (c *DirectConnect) DescribeInterconnects(input *directconnect.DescribeInterconnectsInput) (*directconnect.DescribeInterconnectsOutput, error) {
	c.inc("DescribeInterconnects")
	return c.svc.DescribeInterconnects(input)
}

// DescribeInterconnectsWithContext is a passthrough to the underlying DescribeInterconnectsWithContext method.
// It will increment the count of requests made to DescribeInterconnects.
func (c *DirectConnect) DescribeInterconnectsWithContext(ctx aws.Context, input *directconnect.DescribeInterconnectsInput, opts ...request.Option) (*directconnect.DescribeInterconnectsOutput, error) {
	c.inc("DescribeInterconnects")
	return c.svc.DescribeInterconnectsWithContext(ctx, input, opts...)
}

// DescribeLagsRequest is a passthrough to the underlying DescribeLagsRequest.
// It will increment the count of requests made to DescribeLags.
func (c *DirectConnect) DescribeLagsRequest(input *directconnect.DescribeLagsInput) (req *request.Request, output *directconnect.DescribeLagsOutput) {
	c.inc("DescribeLags")
	return c.svc.DescribeLagsRequest(input)
}

// DescribeLags is a passthrough to the underlying DescribeLags method.
// It will increment the count of requests made to DescribeLags.
func (c *DirectConnect) DescribeLags(input *directconnect.DescribeLagsInput) (*directconnect.DescribeLagsOutput, error) {
	c.inc("DescribeLags")
	return c.svc.DescribeLags(input)
}

// DescribeLagsWithContext is a passthrough to the underlying DescribeLagsWithContext method.
// It will increment the count of requests made to DescribeLags.
func (c *DirectConnect) DescribeLagsWithContext(ctx aws.Context, input *directconnect.DescribeLagsInput, opts ...request.Option) (*directconnect.DescribeLagsOutput, error) {
	c.inc("DescribeLags")
	return c.svc.DescribeLagsWithContext(ctx, input, opts...)
}

// DescribeLoaRequest is a passthrough to the underlying DescribeLoaRequest.
// It will increment the count of requests made to DescribeLoa.
func (c *DirectConnect) DescribeLoaRequest(input *directconnect.DescribeLoaInput) (req *request.Request, output *directconnect.Loa) {
	c.inc("DescribeLoa")
	return c.svc.DescribeLoaRequest(input)
}

// DescribeLoa is a passthrough to the underlying DescribeLoa method.
// It will increment the count of requests made to DescribeLoa.
func (c *DirectConnect) DescribeLoa(input *directconnect.DescribeLoaInput) (*directconnect.Loa, error) {
	c.inc("DescribeLoa")
	return c.svc.DescribeLoa(input)
}

// DescribeLoaWithContext is a passthrough to the underlying DescribeLoaWithContext method.
// It will increment the count of requests made to DescribeLoa.
func (c *DirectConnect) DescribeLoaWithContext(ctx aws.Context, input *directconnect.DescribeLoaInput, opts ...request.Option) (*directconnect.Loa, error) {
	c.inc("DescribeLoa")
	return c.svc.DescribeLoaWithContext(ctx, input, opts...)
}

// DescribeLocationsRequest is a passthrough to the underlying DescribeLocationsRequest.
// It will increment the count of requests made to DescribeLocations.
func (c *DirectConnect) DescribeLocationsRequest(input *directconnect.DescribeLocationsInput) (req *request.Request, output *directconnect.DescribeLocationsOutput) {
	c.inc("DescribeLocations")
	return c.svc.DescribeLocationsRequest(input)
}

// DescribeLocations is a passthrough to the underlying DescribeLocations method.
// It will increment the count of requests made to DescribeLocations.
func (c *DirectConnect) DescribeLocations(input *directconnect.DescribeLocationsInput) (*directconnect.DescribeLocationsOutput, error) {
	c.inc("DescribeLocations")
	return c.svc.DescribeLocations(input)
}

// DescribeLocationsWithContext is a passthrough to the underlying DescribeLocationsWithContext method.
// It will increment the count of requests made to DescribeLocations.
func (c *DirectConnect) DescribeLocationsWithContext(ctx aws.Context, input *directconnect.DescribeLocationsInput, opts ...request.Option) (*directconnect.DescribeLocationsOutput, error) {
	c.inc("DescribeLocations")
	return c.svc.DescribeLocationsWithContext(ctx, input, opts...)
}

// DescribeTagsRequest is a passthrough to the underlying DescribeTagsRequest.
// It will increment the count of requests made to DescribeTags.
func (c *DirectConnect) DescribeTagsRequest(input *directconnect.DescribeTagsInput) (req *request.Request, output *directconnect.DescribeTagsOutput) {
	c.inc("DescribeTags")
	return c.svc.DescribeTagsRequest(input)
}

// DescribeTags is a passthrough to the underlying DescribeTags method.
// It will increment the count of requests made to DescribeTags.
func (c *DirectConnect) DescribeTags(input *directconnect.DescribeTagsInput) (*directconnect.DescribeTagsOutput, error) {
	c.inc("DescribeTags")
	return c.svc.DescribeTags(input)
}

// DescribeTagsWithContext is a passthrough to the underlying DescribeTagsWithContext method.
// It will increment the count of requests made to DescribeTags.
func (c *DirectConnect) DescribeTagsWithContext(ctx aws.Context, input *directconnect.DescribeTagsInput, opts ...request.Option) (*directconnect.DescribeTagsOutput, error) {
	c.inc("DescribeTags")
	return c.svc.DescribeTagsWithContext(ctx, input, opts...)
}

// DescribeVirtualGatewaysRequest is a passthrough to the underlying DescribeVirtualGatewaysRequest.
// It will increment the count of requests made to DescribeVirtualGateways.
func (c *DirectConnect) DescribeVirtualGatewaysRequest(input *directconnect.DescribeVirtualGatewaysInput) (req *request.Request, output *directconnect.DescribeVirtualGatewaysOutput) {
	c.inc("DescribeVirtualGateways")
	return c.svc.DescribeVirtualGatewaysRequest(input)
}

// DescribeVirtualGateways is a passthrough to the underlying DescribeVirtualGateways method.
// It will increment the count of requests made to DescribeVirtualGateways.
func (c *DirectConnect) DescribeVirtualGateways(input *directconnect.DescribeVirtualGatewaysInput) (*directconnect.DescribeVirtualGatewaysOutput, error) {
	c.inc("DescribeVirtualGateways")
	return c.svc.DescribeVirtualGateways(input)
}

// DescribeVirtualGatewaysWithContext is a passthrough to the underlying DescribeVirtualGatewaysWithContext method.
// It will increment the count of requests made to DescribeVirtualGateways.
func (c *DirectConnect) DescribeVirtualGatewaysWithContext(ctx aws.Context, input *directconnect.DescribeVirtualGatewaysInput, opts ...request.Option) (*directconnect.DescribeVirtualGatewaysOutput, error) {
	c.inc("DescribeVirtualGateways")
	return c.svc.DescribeVirtualGatewaysWithContext(ctx, input, opts...)
}

// DescribeVirtualInterfacesRequest is a passthrough to the underlying DescribeVirtualInterfacesRequest.
// It will increment the count of requests made to DescribeVirtualInterfaces.
func (c *DirectConnect) DescribeVirtualInterfacesRequest(input *directconnect.DescribeVirtualInterfacesInput) (req *request.Request, output *directconnect.DescribeVirtualInterfacesOutput) {
	c.inc("DescribeVirtualInterfaces")
	return c.svc.DescribeVirtualInterfacesRequest(input)
}

// DescribeVirtualInterfaces is a passthrough to the underlying DescribeVirtualInterfaces method.
// It will increment the count of requests made to DescribeVirtualInterfaces.
func (c *DirectConnect) DescribeVirtualInterfaces(input *directconnect.DescribeVirtualInterfacesInput) (*directconnect.DescribeVirtualInterfacesOutput, error) {
	c.inc("DescribeVirtualInterfaces")
	return c.svc.DescribeVirtualInterfaces(input)
}

// DescribeVirtualInterfacesWithContext is a passthrough to the underlying DescribeVirtualInterfacesWithContext method.
// It will increment the count of requests made to DescribeVirtualInterfaces.
func (c *DirectConnect) DescribeVirtualInterfacesWithContext(ctx aws.Context, input *directconnect.DescribeVirtualInterfacesInput, opts ...request.Option) (*directconnect.DescribeVirtualInterfacesOutput, error) {
	c.inc("DescribeVirtualInterfaces")
	return c.svc.DescribeVirtualInterfacesWithContext(ctx, input, opts...)
}

// DisassociateConnectionFromLagRequest is a passthrough to the underlying DisassociateConnectionFromLagRequest.
// It will increment the count of requests made to DisassociateConnectionFromLag.
func (c *DirectConnect) DisassociateConnectionFromLagRequest(input *directconnect.DisassociateConnectionFromLagInput) (req *request.Request, output *directconnect.Connection) {
	c.inc("DisassociateConnectionFromLag")
	return c.svc.DisassociateConnectionFromLagRequest(input)
}

// DisassociateConnectionFromLag is a passthrough to the underlying DisassociateConnectionFromLag method.
// It will increment the count of requests made to DisassociateConnectionFromLag.
func (c *DirectConnect) DisassociateConnectionFromLag(input *directconnect.DisassociateConnectionFromLagInput) (*directconnect.Connection, error) {
	c.inc("DisassociateConnectionFromLag")
	return c.svc.DisassociateConnectionFromLag(input)
}

// DisassociateConnectionFromLagWithContext is a passthrough to the underlying DisassociateConnectionFromLagWithContext method.
// It will increment the count of requests made to DisassociateConnectionFromLag.
func (c *DirectConnect) DisassociateConnectionFromLagWithContext(ctx aws.Context, input *directconnect.DisassociateConnectionFromLagInput, opts ...request.Option) (*directconnect.Connection, error) {
	c.inc("DisassociateConnectionFromLag")
	return c.svc.DisassociateConnectionFromLagWithContext(ctx, input, opts...)
}

// TagResourceRequest is a passthrough to the underlying TagResourceRequest.
// It will increment the count of requests made to TagResource.
func (c *DirectConnect) TagResourceRequest(input *directconnect.TagResourceInput) (req *request.Request, output *directconnect.TagResourceOutput) {
	c.inc("TagResource")
	return c.svc.TagResourceRequest(input)
}

// TagResource is a passthrough to the underlying TagResource method.
// It will increment the count of requests made to TagResource.
func (c *DirectConnect) TagResource(input *directconnect.TagResourceInput) (*directconnect.TagResourceOutput, error) {
	c.inc("TagResource")
	return c.svc.TagResource(input)
}

// TagResourceWithContext is a passthrough to the underlying TagResourceWithContext method.
// It will increment the count of requests made to TagResource.
func (c *DirectConnect) TagResourceWithContext(ctx aws.Context, input *directconnect.TagResourceInput, opts ...request.Option) (*directconnect.TagResourceOutput, error) {
	c.inc("TagResource")
	return c.svc.TagResourceWithContext(ctx, input, opts...)
}

// UntagResourceRequest is a passthrough to the underlying UntagResourceRequest.
// It will increment the count of requests made to UntagResource.
func (c *DirectConnect) UntagResourceRequest(input *directconnect.UntagResourceInput) (req *request.Request, output *directconnect.UntagResourceOutput) {
	c.inc("UntagResource")
	return c.svc.UntagResourceRequest(input)
}

// UntagResource is a passthrough to the underlying UntagResource method.
// It will increment the count of requests made to UntagResource.
func (c *DirectConnect) UntagResource(input *directconnect.UntagResourceInput) (*directconnect.UntagResourceOutput, error) {
	c.inc("UntagResource")
	return c.svc.UntagResource(input)
}

// UntagResourceWithContext is a passthrough to the underlying UntagResourceWithContext method.
// It will increment the count of requests made to UntagResource.
func (c *DirectConnect) UntagResourceWithContext(ctx aws.Context, input *directconnect.UntagResourceInput, opts ...request.Option) (*directconnect.UntagResourceOutput, error) {
	c.inc("UntagResource")
	return c.svc.UntagResourceWithContext(ctx, input, opts...)
}

// UpdateLagRequest is a passthrough to the underlying UpdateLagRequest.
// It will increment the count of requests made to UpdateLag.
func (c *DirectConnect) UpdateLagRequest(input *directconnect.UpdateLagInput) (req *request.Request, output *directconnect.Lag) {
	c.inc("UpdateLag")
	return c.svc.UpdateLagRequest(input)
}

// UpdateLag is a passthrough to the underlying UpdateLag method.
// It will increment the count of requests made to UpdateLag.
func (c *DirectConnect) UpdateLag(input *directconnect.UpdateLagInput) (*directconnect.Lag, error) {
	c.inc("UpdateLag")
	return c.svc.UpdateLag(input)
}

// UpdateLagWithContext is a passthrough to the underlying UpdateLagWithContext method.
// It will increment the count of requests made to UpdateLag.
func (c *DirectConnect) UpdateLagWithContext(ctx aws.Context, input *directconnect.UpdateLagInput, opts ...request.Option) (*directconnect.Lag, error) {
	c.inc("UpdateLag")
	return c.svc.UpdateLagWithContext(ctx, input, opts...)
}
