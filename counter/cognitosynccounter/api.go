// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package cognitosynccounter

import (
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/cognitosync"
)

// BulkPublishRequest is a passthrough to the underlying BulkPublishRequest.
// It will increment the count of requests made to BulkPublish.
func (c *CognitoSync) BulkPublishRequest(input *cognitosync.BulkPublishInput) (req *request.Request, output *cognitosync.BulkPublishOutput) {
	c.inc("BulkPublish")
	return c.svc.BulkPublishRequest(input)
}

// BulkPublish is a passthrough to the underlying BulkPublish method.
// It will increment the count of requests made to BulkPublish.
func (c *CognitoSync) BulkPublish(input *cognitosync.BulkPublishInput) (*cognitosync.BulkPublishOutput, error) {
	c.inc("BulkPublish")
	return c.svc.BulkPublish(input)
}

// BulkPublishWithContext is a passthrough to the underlying BulkPublishWithContext method.
// It will increment the count of requests made to BulkPublish.
func (c *CognitoSync) BulkPublishWithContext(ctx aws.Context, input *cognitosync.BulkPublishInput, opts ...request.Option) (*cognitosync.BulkPublishOutput, error) {
	c.inc("BulkPublish")
	return c.svc.BulkPublishWithContext(ctx, input, opts...)
}

// DeleteDatasetRequest is a passthrough to the underlying DeleteDatasetRequest.
// It will increment the count of requests made to DeleteDataset.
func (c *CognitoSync) DeleteDatasetRequest(input *cognitosync.DeleteDatasetInput) (req *request.Request, output *cognitosync.DeleteDatasetOutput) {
	c.inc("DeleteDataset")
	return c.svc.DeleteDatasetRequest(input)
}

// DeleteDataset is a passthrough to the underlying DeleteDataset method.
// It will increment the count of requests made to DeleteDataset.
func (c *CognitoSync) DeleteDataset(input *cognitosync.DeleteDatasetInput) (*cognitosync.DeleteDatasetOutput, error) {
	c.inc("DeleteDataset")
	return c.svc.DeleteDataset(input)
}

// DeleteDatasetWithContext is a passthrough to the underlying DeleteDatasetWithContext method.
// It will increment the count of requests made to DeleteDataset.
func (c *CognitoSync) DeleteDatasetWithContext(ctx aws.Context, input *cognitosync.DeleteDatasetInput, opts ...request.Option) (*cognitosync.DeleteDatasetOutput, error) {
	c.inc("DeleteDataset")
	return c.svc.DeleteDatasetWithContext(ctx, input, opts...)
}

// DescribeDatasetRequest is a passthrough to the underlying DescribeDatasetRequest.
// It will increment the count of requests made to DescribeDataset.
func (c *CognitoSync) DescribeDatasetRequest(input *cognitosync.DescribeDatasetInput) (req *request.Request, output *cognitosync.DescribeDatasetOutput) {
	c.inc("DescribeDataset")
	return c.svc.DescribeDatasetRequest(input)
}

// DescribeDataset is a passthrough to the underlying DescribeDataset method.
// It will increment the count of requests made to DescribeDataset.
func (c *CognitoSync) DescribeDataset(input *cognitosync.DescribeDatasetInput) (*cognitosync.DescribeDatasetOutput, error) {
	c.inc("DescribeDataset")
	return c.svc.DescribeDataset(input)
}

// DescribeDatasetWithContext is a passthrough to the underlying DescribeDatasetWithContext method.
// It will increment the count of requests made to DescribeDataset.
func (c *CognitoSync) DescribeDatasetWithContext(ctx aws.Context, input *cognitosync.DescribeDatasetInput, opts ...request.Option) (*cognitosync.DescribeDatasetOutput, error) {
	c.inc("DescribeDataset")
	return c.svc.DescribeDatasetWithContext(ctx, input, opts...)
}

// DescribeIdentityPoolUsageRequest is a passthrough to the underlying DescribeIdentityPoolUsageRequest.
// It will increment the count of requests made to DescribeIdentityPoolUsage.
func (c *CognitoSync) DescribeIdentityPoolUsageRequest(input *cognitosync.DescribeIdentityPoolUsageInput) (req *request.Request, output *cognitosync.DescribeIdentityPoolUsageOutput) {
	c.inc("DescribeIdentityPoolUsage")
	return c.svc.DescribeIdentityPoolUsageRequest(input)
}

// DescribeIdentityPoolUsage is a passthrough to the underlying DescribeIdentityPoolUsage method.
// It will increment the count of requests made to DescribeIdentityPoolUsage.
func (c *CognitoSync) DescribeIdentityPoolUsage(input *cognitosync.DescribeIdentityPoolUsageInput) (*cognitosync.DescribeIdentityPoolUsageOutput, error) {
	c.inc("DescribeIdentityPoolUsage")
	return c.svc.DescribeIdentityPoolUsage(input)
}

// DescribeIdentityPoolUsageWithContext is a passthrough to the underlying DescribeIdentityPoolUsageWithContext method.
// It will increment the count of requests made to DescribeIdentityPoolUsage.
func (c *CognitoSync) DescribeIdentityPoolUsageWithContext(ctx aws.Context, input *cognitosync.DescribeIdentityPoolUsageInput, opts ...request.Option) (*cognitosync.DescribeIdentityPoolUsageOutput, error) {
	c.inc("DescribeIdentityPoolUsage")
	return c.svc.DescribeIdentityPoolUsageWithContext(ctx, input, opts...)
}

// DescribeIdentityUsageRequest is a passthrough to the underlying DescribeIdentityUsageRequest.
// It will increment the count of requests made to DescribeIdentityUsage.
func (c *CognitoSync) DescribeIdentityUsageRequest(input *cognitosync.DescribeIdentityUsageInput) (req *request.Request, output *cognitosync.DescribeIdentityUsageOutput) {
	c.inc("DescribeIdentityUsage")
	return c.svc.DescribeIdentityUsageRequest(input)
}

// DescribeIdentityUsage is a passthrough to the underlying DescribeIdentityUsage method.
// It will increment the count of requests made to DescribeIdentityUsage.
func (c *CognitoSync) DescribeIdentityUsage(input *cognitosync.DescribeIdentityUsageInput) (*cognitosync.DescribeIdentityUsageOutput, error) {
	c.inc("DescribeIdentityUsage")
	return c.svc.DescribeIdentityUsage(input)
}

// DescribeIdentityUsageWithContext is a passthrough to the underlying DescribeIdentityUsageWithContext method.
// It will increment the count of requests made to DescribeIdentityUsage.
func (c *CognitoSync) DescribeIdentityUsageWithContext(ctx aws.Context, input *cognitosync.DescribeIdentityUsageInput, opts ...request.Option) (*cognitosync.DescribeIdentityUsageOutput, error) {
	c.inc("DescribeIdentityUsage")
	return c.svc.DescribeIdentityUsageWithContext(ctx, input, opts...)
}

// GetBulkPublishDetailsRequest is a passthrough to the underlying GetBulkPublishDetailsRequest.
// It will increment the count of requests made to GetBulkPublishDetails.
func (c *CognitoSync) GetBulkPublishDetailsRequest(input *cognitosync.GetBulkPublishDetailsInput) (req *request.Request, output *cognitosync.GetBulkPublishDetailsOutput) {
	c.inc("GetBulkPublishDetails")
	return c.svc.GetBulkPublishDetailsRequest(input)
}

// GetBulkPublishDetails is a passthrough to the underlying GetBulkPublishDetails method.
// It will increment the count of requests made to GetBulkPublishDetails.
func (c *CognitoSync) GetBulkPublishDetails(input *cognitosync.GetBulkPublishDetailsInput) (*cognitosync.GetBulkPublishDetailsOutput, error) {
	c.inc("GetBulkPublishDetails")
	return c.svc.GetBulkPublishDetails(input)
}

// GetBulkPublishDetailsWithContext is a passthrough to the underlying GetBulkPublishDetailsWithContext method.
// It will increment the count of requests made to GetBulkPublishDetails.
func (c *CognitoSync) GetBulkPublishDetailsWithContext(ctx aws.Context, input *cognitosync.GetBulkPublishDetailsInput, opts ...request.Option) (*cognitosync.GetBulkPublishDetailsOutput, error) {
	c.inc("GetBulkPublishDetails")
	return c.svc.GetBulkPublishDetailsWithContext(ctx, input, opts...)
}

// GetCognitoEventsRequest is a passthrough to the underlying GetCognitoEventsRequest.
// It will increment the count of requests made to GetCognitoEvents.
func (c *CognitoSync) GetCognitoEventsRequest(input *cognitosync.GetCognitoEventsInput) (req *request.Request, output *cognitosync.GetCognitoEventsOutput) {
	c.inc("GetCognitoEvents")
	return c.svc.GetCognitoEventsRequest(input)
}

// GetCognitoEvents is a passthrough to the underlying GetCognitoEvents method.
// It will increment the count of requests made to GetCognitoEvents.
func (c *CognitoSync) GetCognitoEvents(input *cognitosync.GetCognitoEventsInput) (*cognitosync.GetCognitoEventsOutput, error) {
	c.inc("GetCognitoEvents")
	return c.svc.GetCognitoEvents(input)
}

// GetCognitoEventsWithContext is a passthrough to the underlying GetCognitoEventsWithContext method.
// It will increment the count of requests made to GetCognitoEvents.
func (c *CognitoSync) GetCognitoEventsWithContext(ctx aws.Context, input *cognitosync.GetCognitoEventsInput, opts ...request.Option) (*cognitosync.GetCognitoEventsOutput, error) {
	c.inc("GetCognitoEvents")
	return c.svc.GetCognitoEventsWithContext(ctx, input, opts...)
}

// GetIdentityPoolConfigurationRequest is a passthrough to the underlying GetIdentityPoolConfigurationRequest.
// It will increment the count of requests made to GetIdentityPoolConfiguration.
func (c *CognitoSync) GetIdentityPoolConfigurationRequest(input *cognitosync.GetIdentityPoolConfigurationInput) (req *request.Request, output *cognitosync.GetIdentityPoolConfigurationOutput) {
	c.inc("GetIdentityPoolConfiguration")
	return c.svc.GetIdentityPoolConfigurationRequest(input)
}

// GetIdentityPoolConfiguration is a passthrough to the underlying GetIdentityPoolConfiguration method.
// It will increment the count of requests made to GetIdentityPoolConfiguration.
func (c *CognitoSync) GetIdentityPoolConfiguration(input *cognitosync.GetIdentityPoolConfigurationInput) (*cognitosync.GetIdentityPoolConfigurationOutput, error) {
	c.inc("GetIdentityPoolConfiguration")
	return c.svc.GetIdentityPoolConfiguration(input)
}

// GetIdentityPoolConfigurationWithContext is a passthrough to the underlying GetIdentityPoolConfigurationWithContext method.
// It will increment the count of requests made to GetIdentityPoolConfiguration.
func (c *CognitoSync) GetIdentityPoolConfigurationWithContext(ctx aws.Context, input *cognitosync.GetIdentityPoolConfigurationInput, opts ...request.Option) (*cognitosync.GetIdentityPoolConfigurationOutput, error) {
	c.inc("GetIdentityPoolConfiguration")
	return c.svc.GetIdentityPoolConfigurationWithContext(ctx, input, opts...)
}

// ListDatasetsRequest is a passthrough to the underlying ListDatasetsRequest.
// It will increment the count of requests made to ListDatasets.
func (c *CognitoSync) ListDatasetsRequest(input *cognitosync.ListDatasetsInput) (req *request.Request, output *cognitosync.ListDatasetsOutput) {
	c.inc("ListDatasets")
	return c.svc.ListDatasetsRequest(input)
}

// ListDatasets is a passthrough to the underlying ListDatasets method.
// It will increment the count of requests made to ListDatasets.
func (c *CognitoSync) ListDatasets(input *cognitosync.ListDatasetsInput) (*cognitosync.ListDatasetsOutput, error) {
	c.inc("ListDatasets")
	return c.svc.ListDatasets(input)
}

// ListDatasetsWithContext is a passthrough to the underlying ListDatasetsWithContext method.
// It will increment the count of requests made to ListDatasets.
func (c *CognitoSync) ListDatasetsWithContext(ctx aws.Context, input *cognitosync.ListDatasetsInput, opts ...request.Option) (*cognitosync.ListDatasetsOutput, error) {
	c.inc("ListDatasets")
	return c.svc.ListDatasetsWithContext(ctx, input, opts...)
}

// ListIdentityPoolUsageRequest is a passthrough to the underlying ListIdentityPoolUsageRequest.
// It will increment the count of requests made to ListIdentityPoolUsage.
func (c *CognitoSync) ListIdentityPoolUsageRequest(input *cognitosync.ListIdentityPoolUsageInput) (req *request.Request, output *cognitosync.ListIdentityPoolUsageOutput) {
	c.inc("ListIdentityPoolUsage")
	return c.svc.ListIdentityPoolUsageRequest(input)
}

// ListIdentityPoolUsage is a passthrough to the underlying ListIdentityPoolUsage method.
// It will increment the count of requests made to ListIdentityPoolUsage.
func (c *CognitoSync) ListIdentityPoolUsage(input *cognitosync.ListIdentityPoolUsageInput) (*cognitosync.ListIdentityPoolUsageOutput, error) {
	c.inc("ListIdentityPoolUsage")
	return c.svc.ListIdentityPoolUsage(input)
}

// ListIdentityPoolUsageWithContext is a passthrough to the underlying ListIdentityPoolUsageWithContext method.
// It will increment the count of requests made to ListIdentityPoolUsage.
func (c *CognitoSync) ListIdentityPoolUsageWithContext(ctx aws.Context, input *cognitosync.ListIdentityPoolUsageInput, opts ...request.Option) (*cognitosync.ListIdentityPoolUsageOutput, error) {
	c.inc("ListIdentityPoolUsage")
	return c.svc.ListIdentityPoolUsageWithContext(ctx, input, opts...)
}

// ListRecordsRequest is a passthrough to the underlying ListRecordsRequest.
// It will increment the count of requests made to ListRecords.
func (c *CognitoSync) ListRecordsRequest(input *cognitosync.ListRecordsInput) (req *request.Request, output *cognitosync.ListRecordsOutput) {
	c.inc("ListRecords")
	return c.svc.ListRecordsRequest(input)
}

// ListRecords is a passthrough to the underlying ListRecords method.
// It will increment the count of requests made to ListRecords.
func (c *CognitoSync) ListRecords(input *cognitosync.ListRecordsInput) (*cognitosync.ListRecordsOutput, error) {
	c.inc("ListRecords")
	return c.svc.ListRecords(input)
}

// ListRecordsWithContext is a passthrough to the underlying ListRecordsWithContext method.
// It will increment the count of requests made to ListRecords.
func (c *CognitoSync) ListRecordsWithContext(ctx aws.Context, input *cognitosync.ListRecordsInput, opts ...request.Option) (*cognitosync.ListRecordsOutput, error) {
	c.inc("ListRecords")
	return c.svc.ListRecordsWithContext(ctx, input, opts...)
}

// RegisterDeviceRequest is a passthrough to the underlying RegisterDeviceRequest.
// It will increment the count of requests made to RegisterDevice.
func (c *CognitoSync) RegisterDeviceRequest(input *cognitosync.RegisterDeviceInput) (req *request.Request, output *cognitosync.RegisterDeviceOutput) {
	c.inc("RegisterDevice")
	return c.svc.RegisterDeviceRequest(input)
}

// RegisterDevice is a passthrough to the underlying RegisterDevice method.
// It will increment the count of requests made to RegisterDevice.
func (c *CognitoSync) RegisterDevice(input *cognitosync.RegisterDeviceInput) (*cognitosync.RegisterDeviceOutput, error) {
	c.inc("RegisterDevice")
	return c.svc.RegisterDevice(input)
}

// RegisterDeviceWithContext is a passthrough to the underlying RegisterDeviceWithContext method.
// It will increment the count of requests made to RegisterDevice.
func (c *CognitoSync) RegisterDeviceWithContext(ctx aws.Context, input *cognitosync.RegisterDeviceInput, opts ...request.Option) (*cognitosync.RegisterDeviceOutput, error) {
	c.inc("RegisterDevice")
	return c.svc.RegisterDeviceWithContext(ctx, input, opts...)
}

// SetCognitoEventsRequest is a passthrough to the underlying SetCognitoEventsRequest.
// It will increment the count of requests made to SetCognitoEvents.
func (c *CognitoSync) SetCognitoEventsRequest(input *cognitosync.SetCognitoEventsInput) (req *request.Request, output *cognitosync.SetCognitoEventsOutput) {
	c.inc("SetCognitoEvents")
	return c.svc.SetCognitoEventsRequest(input)
}

// SetCognitoEvents is a passthrough to the underlying SetCognitoEvents method.
// It will increment the count of requests made to SetCognitoEvents.
func (c *CognitoSync) SetCognitoEvents(input *cognitosync.SetCognitoEventsInput) (*cognitosync.SetCognitoEventsOutput, error) {
	c.inc("SetCognitoEvents")
	return c.svc.SetCognitoEvents(input)
}

// SetCognitoEventsWithContext is a passthrough to the underlying SetCognitoEventsWithContext method.
// It will increment the count of requests made to SetCognitoEvents.
func (c *CognitoSync) SetCognitoEventsWithContext(ctx aws.Context, input *cognitosync.SetCognitoEventsInput, opts ...request.Option) (*cognitosync.SetCognitoEventsOutput, error) {
	c.inc("SetCognitoEvents")
	return c.svc.SetCognitoEventsWithContext(ctx, input, opts...)
}

// SetIdentityPoolConfigurationRequest is a passthrough to the underlying SetIdentityPoolConfigurationRequest.
// It will increment the count of requests made to SetIdentityPoolConfiguration.
func (c *CognitoSync) SetIdentityPoolConfigurationRequest(input *cognitosync.SetIdentityPoolConfigurationInput) (req *request.Request, output *cognitosync.SetIdentityPoolConfigurationOutput) {
	c.inc("SetIdentityPoolConfiguration")
	return c.svc.SetIdentityPoolConfigurationRequest(input)
}

// SetIdentityPoolConfiguration is a passthrough to the underlying SetIdentityPoolConfiguration method.
// It will increment the count of requests made to SetIdentityPoolConfiguration.
func (c *CognitoSync) SetIdentityPoolConfiguration(input *cognitosync.SetIdentityPoolConfigurationInput) (*cognitosync.SetIdentityPoolConfigurationOutput, error) {
	c.inc("SetIdentityPoolConfiguration")
	return c.svc.SetIdentityPoolConfiguration(input)
}

// SetIdentityPoolConfigurationWithContext is a passthrough to the underlying SetIdentityPoolConfigurationWithContext method.
// It will increment the count of requests made to SetIdentityPoolConfiguration.
func (c *CognitoSync) SetIdentityPoolConfigurationWithContext(ctx aws.Context, input *cognitosync.SetIdentityPoolConfigurationInput, opts ...request.Option) (*cognitosync.SetIdentityPoolConfigurationOutput, error) {
	c.inc("SetIdentityPoolConfiguration")
	return c.svc.SetIdentityPoolConfigurationWithContext(ctx, input, opts...)
}

// SubscribeToDatasetRequest is a passthrough to the underlying SubscribeToDatasetRequest.
// It will increment the count of requests made to SubscribeToDataset.
func (c *CognitoSync) SubscribeToDatasetRequest(input *cognitosync.SubscribeToDatasetInput) (req *request.Request, output *cognitosync.SubscribeToDatasetOutput) {
	c.inc("SubscribeToDataset")
	return c.svc.SubscribeToDatasetRequest(input)
}

// SubscribeToDataset is a passthrough to the underlying SubscribeToDataset method.
// It will increment the count of requests made to SubscribeToDataset.
func (c *CognitoSync) SubscribeToDataset(input *cognitosync.SubscribeToDatasetInput) (*cognitosync.SubscribeToDatasetOutput, error) {
	c.inc("SubscribeToDataset")
	return c.svc.SubscribeToDataset(input)
}

// SubscribeToDatasetWithContext is a passthrough to the underlying SubscribeToDatasetWithContext method.
// It will increment the count of requests made to SubscribeToDataset.
func (c *CognitoSync) SubscribeToDatasetWithContext(ctx aws.Context, input *cognitosync.SubscribeToDatasetInput, opts ...request.Option) (*cognitosync.SubscribeToDatasetOutput, error) {
	c.inc("SubscribeToDataset")
	return c.svc.SubscribeToDatasetWithContext(ctx, input, opts...)
}

// UnsubscribeFromDatasetRequest is a passthrough to the underlying UnsubscribeFromDatasetRequest.
// It will increment the count of requests made to UnsubscribeFromDataset.
func (c *CognitoSync) UnsubscribeFromDatasetRequest(input *cognitosync.UnsubscribeFromDatasetInput) (req *request.Request, output *cognitosync.UnsubscribeFromDatasetOutput) {
	c.inc("UnsubscribeFromDataset")
	return c.svc.UnsubscribeFromDatasetRequest(input)
}

// UnsubscribeFromDataset is a passthrough to the underlying UnsubscribeFromDataset method.
// It will increment the count of requests made to UnsubscribeFromDataset.
func (c *CognitoSync) UnsubscribeFromDataset(input *cognitosync.UnsubscribeFromDatasetInput) (*cognitosync.UnsubscribeFromDatasetOutput, error) {
	c.inc("UnsubscribeFromDataset")
	return c.svc.UnsubscribeFromDataset(input)
}

// UnsubscribeFromDatasetWithContext is a passthrough to the underlying UnsubscribeFromDatasetWithContext method.
// It will increment the count of requests made to UnsubscribeFromDataset.
func (c *CognitoSync) UnsubscribeFromDatasetWithContext(ctx aws.Context, input *cognitosync.UnsubscribeFromDatasetInput, opts ...request.Option) (*cognitosync.UnsubscribeFromDatasetOutput, error) {
	c.inc("UnsubscribeFromDataset")
	return c.svc.UnsubscribeFromDatasetWithContext(ctx, input, opts...)
}

// UpdateRecordsRequest is a passthrough to the underlying UpdateRecordsRequest.
// It will increment the count of requests made to UpdateRecords.
func (c *CognitoSync) UpdateRecordsRequest(input *cognitosync.UpdateRecordsInput) (req *request.Request, output *cognitosync.UpdateRecordsOutput) {
	c.inc("UpdateRecords")
	return c.svc.UpdateRecordsRequest(input)
}

// UpdateRecords is a passthrough to the underlying UpdateRecords method.
// It will increment the count of requests made to UpdateRecords.
func (c *CognitoSync) UpdateRecords(input *cognitosync.UpdateRecordsInput) (*cognitosync.UpdateRecordsOutput, error) {
	c.inc("UpdateRecords")
	return c.svc.UpdateRecords(input)
}

// UpdateRecordsWithContext is a passthrough to the underlying UpdateRecordsWithContext method.
// It will increment the count of requests made to UpdateRecords.
func (c *CognitoSync) UpdateRecordsWithContext(ctx aws.Context, input *cognitosync.UpdateRecordsInput, opts ...request.Option) (*cognitosync.UpdateRecordsOutput, error) {
	c.inc("UpdateRecords")
	return c.svc.UpdateRecordsWithContext(ctx, input, opts...)
}
