// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package mediastorecounter

import (
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/mediastore"
)

// CreateContainerRequest is a passthrough to the underlying CreateContainerRequest.
// It will increment the count of requests made to CreateContainer.
func (c *MediaStore) CreateContainerRequest(input *mediastore.CreateContainerInput) (req *request.Request, output *mediastore.CreateContainerOutput) {
	c.inc("CreateContainer")
	return c.svc.CreateContainerRequest(input)
}

// CreateContainer is a passthrough to the underlying CreateContainer method.
// It will increment the count of requests made to CreateContainer.
func (c *MediaStore) CreateContainer(input *mediastore.CreateContainerInput) (*mediastore.CreateContainerOutput, error) {
	c.inc("CreateContainer")
	return c.svc.CreateContainer(input)
}

// CreateContainerWithContext is a passthrough to the underlying CreateContainerWithContext method.
// It will increment the count of requests made to CreateContainer.
func (c *MediaStore) CreateContainerWithContext(ctx aws.Context, input *mediastore.CreateContainerInput, opts ...request.Option) (*mediastore.CreateContainerOutput, error) {
	c.inc("CreateContainer")
	return c.svc.CreateContainerWithContext(ctx, input, opts...)
}

// DeleteContainerRequest is a passthrough to the underlying DeleteContainerRequest.
// It will increment the count of requests made to DeleteContainer.
func (c *MediaStore) DeleteContainerRequest(input *mediastore.DeleteContainerInput) (req *request.Request, output *mediastore.DeleteContainerOutput) {
	c.inc("DeleteContainer")
	return c.svc.DeleteContainerRequest(input)
}

// DeleteContainer is a passthrough to the underlying DeleteContainer method.
// It will increment the count of requests made to DeleteContainer.
func (c *MediaStore) DeleteContainer(input *mediastore.DeleteContainerInput) (*mediastore.DeleteContainerOutput, error) {
	c.inc("DeleteContainer")
	return c.svc.DeleteContainer(input)
}

// DeleteContainerWithContext is a passthrough to the underlying DeleteContainerWithContext method.
// It will increment the count of requests made to DeleteContainer.
func (c *MediaStore) DeleteContainerWithContext(ctx aws.Context, input *mediastore.DeleteContainerInput, opts ...request.Option) (*mediastore.DeleteContainerOutput, error) {
	c.inc("DeleteContainer")
	return c.svc.DeleteContainerWithContext(ctx, input, opts...)
}

// DeleteContainerPolicyRequest is a passthrough to the underlying DeleteContainerPolicyRequest.
// It will increment the count of requests made to DeleteContainerPolicy.
func (c *MediaStore) DeleteContainerPolicyRequest(input *mediastore.DeleteContainerPolicyInput) (req *request.Request, output *mediastore.DeleteContainerPolicyOutput) {
	c.inc("DeleteContainerPolicy")
	return c.svc.DeleteContainerPolicyRequest(input)
}

// DeleteContainerPolicy is a passthrough to the underlying DeleteContainerPolicy method.
// It will increment the count of requests made to DeleteContainerPolicy.
func (c *MediaStore) DeleteContainerPolicy(input *mediastore.DeleteContainerPolicyInput) (*mediastore.DeleteContainerPolicyOutput, error) {
	c.inc("DeleteContainerPolicy")
	return c.svc.DeleteContainerPolicy(input)
}

// DeleteContainerPolicyWithContext is a passthrough to the underlying DeleteContainerPolicyWithContext method.
// It will increment the count of requests made to DeleteContainerPolicy.
func (c *MediaStore) DeleteContainerPolicyWithContext(ctx aws.Context, input *mediastore.DeleteContainerPolicyInput, opts ...request.Option) (*mediastore.DeleteContainerPolicyOutput, error) {
	c.inc("DeleteContainerPolicy")
	return c.svc.DeleteContainerPolicyWithContext(ctx, input, opts...)
}

// DeleteCorsPolicyRequest is a passthrough to the underlying DeleteCorsPolicyRequest.
// It will increment the count of requests made to DeleteCorsPolicy.
func (c *MediaStore) DeleteCorsPolicyRequest(input *mediastore.DeleteCorsPolicyInput) (req *request.Request, output *mediastore.DeleteCorsPolicyOutput) {
	c.inc("DeleteCorsPolicy")
	return c.svc.DeleteCorsPolicyRequest(input)
}

// DeleteCorsPolicy is a passthrough to the underlying DeleteCorsPolicy method.
// It will increment the count of requests made to DeleteCorsPolicy.
func (c *MediaStore) DeleteCorsPolicy(input *mediastore.DeleteCorsPolicyInput) (*mediastore.DeleteCorsPolicyOutput, error) {
	c.inc("DeleteCorsPolicy")
	return c.svc.DeleteCorsPolicy(input)
}

// DeleteCorsPolicyWithContext is a passthrough to the underlying DeleteCorsPolicyWithContext method.
// It will increment the count of requests made to DeleteCorsPolicy.
func (c *MediaStore) DeleteCorsPolicyWithContext(ctx aws.Context, input *mediastore.DeleteCorsPolicyInput, opts ...request.Option) (*mediastore.DeleteCorsPolicyOutput, error) {
	c.inc("DeleteCorsPolicy")
	return c.svc.DeleteCorsPolicyWithContext(ctx, input, opts...)
}

// DescribeContainerRequest is a passthrough to the underlying DescribeContainerRequest.
// It will increment the count of requests made to DescribeContainer.
func (c *MediaStore) DescribeContainerRequest(input *mediastore.DescribeContainerInput) (req *request.Request, output *mediastore.DescribeContainerOutput) {
	c.inc("DescribeContainer")
	return c.svc.DescribeContainerRequest(input)
}

// DescribeContainer is a passthrough to the underlying DescribeContainer method.
// It will increment the count of requests made to DescribeContainer.
func (c *MediaStore) DescribeContainer(input *mediastore.DescribeContainerInput) (*mediastore.DescribeContainerOutput, error) {
	c.inc("DescribeContainer")
	return c.svc.DescribeContainer(input)
}

// DescribeContainerWithContext is a passthrough to the underlying DescribeContainerWithContext method.
// It will increment the count of requests made to DescribeContainer.
func (c *MediaStore) DescribeContainerWithContext(ctx aws.Context, input *mediastore.DescribeContainerInput, opts ...request.Option) (*mediastore.DescribeContainerOutput, error) {
	c.inc("DescribeContainer")
	return c.svc.DescribeContainerWithContext(ctx, input, opts...)
}

// GetContainerPolicyRequest is a passthrough to the underlying GetContainerPolicyRequest.
// It will increment the count of requests made to GetContainerPolicy.
func (c *MediaStore) GetContainerPolicyRequest(input *mediastore.GetContainerPolicyInput) (req *request.Request, output *mediastore.GetContainerPolicyOutput) {
	c.inc("GetContainerPolicy")
	return c.svc.GetContainerPolicyRequest(input)
}

// GetContainerPolicy is a passthrough to the underlying GetContainerPolicy method.
// It will increment the count of requests made to GetContainerPolicy.
func (c *MediaStore) GetContainerPolicy(input *mediastore.GetContainerPolicyInput) (*mediastore.GetContainerPolicyOutput, error) {
	c.inc("GetContainerPolicy")
	return c.svc.GetContainerPolicy(input)
}

// GetContainerPolicyWithContext is a passthrough to the underlying GetContainerPolicyWithContext method.
// It will increment the count of requests made to GetContainerPolicy.
func (c *MediaStore) GetContainerPolicyWithContext(ctx aws.Context, input *mediastore.GetContainerPolicyInput, opts ...request.Option) (*mediastore.GetContainerPolicyOutput, error) {
	c.inc("GetContainerPolicy")
	return c.svc.GetContainerPolicyWithContext(ctx, input, opts...)
}

// GetCorsPolicyRequest is a passthrough to the underlying GetCorsPolicyRequest.
// It will increment the count of requests made to GetCorsPolicy.
func (c *MediaStore) GetCorsPolicyRequest(input *mediastore.GetCorsPolicyInput) (req *request.Request, output *mediastore.GetCorsPolicyOutput) {
	c.inc("GetCorsPolicy")
	return c.svc.GetCorsPolicyRequest(input)
}

// GetCorsPolicy is a passthrough to the underlying GetCorsPolicy method.
// It will increment the count of requests made to GetCorsPolicy.
func (c *MediaStore) GetCorsPolicy(input *mediastore.GetCorsPolicyInput) (*mediastore.GetCorsPolicyOutput, error) {
	c.inc("GetCorsPolicy")
	return c.svc.GetCorsPolicy(input)
}

// GetCorsPolicyWithContext is a passthrough to the underlying GetCorsPolicyWithContext method.
// It will increment the count of requests made to GetCorsPolicy.
func (c *MediaStore) GetCorsPolicyWithContext(ctx aws.Context, input *mediastore.GetCorsPolicyInput, opts ...request.Option) (*mediastore.GetCorsPolicyOutput, error) {
	c.inc("GetCorsPolicy")
	return c.svc.GetCorsPolicyWithContext(ctx, input, opts...)
}

// ListContainersRequest is a passthrough to the underlying ListContainersRequest.
// It will increment the count of requests made to ListContainers.
func (c *MediaStore) ListContainersRequest(input *mediastore.ListContainersInput) (req *request.Request, output *mediastore.ListContainersOutput) {
	c.inc("ListContainers")
	return c.svc.ListContainersRequest(input)
}

// ListContainers is a passthrough to the underlying ListContainers method.
// It will increment the count of requests made to ListContainers.
func (c *MediaStore) ListContainers(input *mediastore.ListContainersInput) (*mediastore.ListContainersOutput, error) {
	c.inc("ListContainers")
	return c.svc.ListContainers(input)
}

// ListContainersWithContext is a passthrough to the underlying ListContainersWithContext method.
// It will increment the count of requests made to ListContainers.
func (c *MediaStore) ListContainersWithContext(ctx aws.Context, input *mediastore.ListContainersInput, opts ...request.Option) (*mediastore.ListContainersOutput, error) {
	c.inc("ListContainers")
	return c.svc.ListContainersWithContext(ctx, input, opts...)
}

// PutContainerPolicyRequest is a passthrough to the underlying PutContainerPolicyRequest.
// It will increment the count of requests made to PutContainerPolicy.
func (c *MediaStore) PutContainerPolicyRequest(input *mediastore.PutContainerPolicyInput) (req *request.Request, output *mediastore.PutContainerPolicyOutput) {
	c.inc("PutContainerPolicy")
	return c.svc.PutContainerPolicyRequest(input)
}

// PutContainerPolicy is a passthrough to the underlying PutContainerPolicy method.
// It will increment the count of requests made to PutContainerPolicy.
func (c *MediaStore) PutContainerPolicy(input *mediastore.PutContainerPolicyInput) (*mediastore.PutContainerPolicyOutput, error) {
	c.inc("PutContainerPolicy")
	return c.svc.PutContainerPolicy(input)
}

// PutContainerPolicyWithContext is a passthrough to the underlying PutContainerPolicyWithContext method.
// It will increment the count of requests made to PutContainerPolicy.
func (c *MediaStore) PutContainerPolicyWithContext(ctx aws.Context, input *mediastore.PutContainerPolicyInput, opts ...request.Option) (*mediastore.PutContainerPolicyOutput, error) {
	c.inc("PutContainerPolicy")
	return c.svc.PutContainerPolicyWithContext(ctx, input, opts...)
}

// PutCorsPolicyRequest is a passthrough to the underlying PutCorsPolicyRequest.
// It will increment the count of requests made to PutCorsPolicy.
func (c *MediaStore) PutCorsPolicyRequest(input *mediastore.PutCorsPolicyInput) (req *request.Request, output *mediastore.PutCorsPolicyOutput) {
	c.inc("PutCorsPolicy")
	return c.svc.PutCorsPolicyRequest(input)
}

// PutCorsPolicy is a passthrough to the underlying PutCorsPolicy method.
// It will increment the count of requests made to PutCorsPolicy.
func (c *MediaStore) PutCorsPolicy(input *mediastore.PutCorsPolicyInput) (*mediastore.PutCorsPolicyOutput, error) {
	c.inc("PutCorsPolicy")
	return c.svc.PutCorsPolicy(input)
}

// PutCorsPolicyWithContext is a passthrough to the underlying PutCorsPolicyWithContext method.
// It will increment the count of requests made to PutCorsPolicy.
func (c *MediaStore) PutCorsPolicyWithContext(ctx aws.Context, input *mediastore.PutCorsPolicyInput, opts ...request.Option) (*mediastore.PutCorsPolicyOutput, error) {
	c.inc("PutCorsPolicy")
	return c.svc.PutCorsPolicyWithContext(ctx, input, opts...)
}
