// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package acmcounter

import (
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/acm"
)

// AddTagsToCertificateRequest is a passthrough to the underlying AddTagsToCertificateRequest.
// It will increment the count of requests made to AddTagsToCertificate.
func (c *ACM) AddTagsToCertificateRequest(input *acm.AddTagsToCertificateInput) (req *request.Request, output *acm.AddTagsToCertificateOutput) {
	c.inc("AddTagsToCertificate")
	return c.svc.AddTagsToCertificateRequest(input)
}

// AddTagsToCertificate is a passthrough to the underlying AddTagsToCertificate method.
// It will increment the count of requests made to AddTagsToCertificate.
func (c *ACM) AddTagsToCertificate(input *acm.AddTagsToCertificateInput) (*acm.AddTagsToCertificateOutput, error) {
	c.inc("AddTagsToCertificate")
	return c.svc.AddTagsToCertificate(input)
}

// AddTagsToCertificateWithContext is a passthrough to the underlying AddTagsToCertificateWithContext method.
// It will increment the count of requests made to AddTagsToCertificate.
func (c *ACM) AddTagsToCertificateWithContext(ctx aws.Context, input *acm.AddTagsToCertificateInput, opts ...request.Option) (*acm.AddTagsToCertificateOutput, error) {
	c.inc("AddTagsToCertificate")
	return c.svc.AddTagsToCertificateWithContext(ctx, input, opts...)
}

// DeleteCertificateRequest is a passthrough to the underlying DeleteCertificateRequest.
// It will increment the count of requests made to DeleteCertificate.
func (c *ACM) DeleteCertificateRequest(input *acm.DeleteCertificateInput) (req *request.Request, output *acm.DeleteCertificateOutput) {
	c.inc("DeleteCertificate")
	return c.svc.DeleteCertificateRequest(input)
}

// DeleteCertificate is a passthrough to the underlying DeleteCertificate method.
// It will increment the count of requests made to DeleteCertificate.
func (c *ACM) DeleteCertificate(input *acm.DeleteCertificateInput) (*acm.DeleteCertificateOutput, error) {
	c.inc("DeleteCertificate")
	return c.svc.DeleteCertificate(input)
}

// DeleteCertificateWithContext is a passthrough to the underlying DeleteCertificateWithContext method.
// It will increment the count of requests made to DeleteCertificate.
func (c *ACM) DeleteCertificateWithContext(ctx aws.Context, input *acm.DeleteCertificateInput, opts ...request.Option) (*acm.DeleteCertificateOutput, error) {
	c.inc("DeleteCertificate")
	return c.svc.DeleteCertificateWithContext(ctx, input, opts...)
}

// DescribeCertificateRequest is a passthrough to the underlying DescribeCertificateRequest.
// It will increment the count of requests made to DescribeCertificate.
func (c *ACM) DescribeCertificateRequest(input *acm.DescribeCertificateInput) (req *request.Request, output *acm.DescribeCertificateOutput) {
	c.inc("DescribeCertificate")
	return c.svc.DescribeCertificateRequest(input)
}

// DescribeCertificate is a passthrough to the underlying DescribeCertificate method.
// It will increment the count of requests made to DescribeCertificate.
func (c *ACM) DescribeCertificate(input *acm.DescribeCertificateInput) (*acm.DescribeCertificateOutput, error) {
	c.inc("DescribeCertificate")
	return c.svc.DescribeCertificate(input)
}

// DescribeCertificateWithContext is a passthrough to the underlying DescribeCertificateWithContext method.
// It will increment the count of requests made to DescribeCertificate.
func (c *ACM) DescribeCertificateWithContext(ctx aws.Context, input *acm.DescribeCertificateInput, opts ...request.Option) (*acm.DescribeCertificateOutput, error) {
	c.inc("DescribeCertificate")
	return c.svc.DescribeCertificateWithContext(ctx, input, opts...)
}

// GetCertificateRequest is a passthrough to the underlying GetCertificateRequest.
// It will increment the count of requests made to GetCertificate.
func (c *ACM) GetCertificateRequest(input *acm.GetCertificateInput) (req *request.Request, output *acm.GetCertificateOutput) {
	c.inc("GetCertificate")
	return c.svc.GetCertificateRequest(input)
}

// GetCertificate is a passthrough to the underlying GetCertificate method.
// It will increment the count of requests made to GetCertificate.
func (c *ACM) GetCertificate(input *acm.GetCertificateInput) (*acm.GetCertificateOutput, error) {
	c.inc("GetCertificate")
	return c.svc.GetCertificate(input)
}

// GetCertificateWithContext is a passthrough to the underlying GetCertificateWithContext method.
// It will increment the count of requests made to GetCertificate.
func (c *ACM) GetCertificateWithContext(ctx aws.Context, input *acm.GetCertificateInput, opts ...request.Option) (*acm.GetCertificateOutput, error) {
	c.inc("GetCertificate")
	return c.svc.GetCertificateWithContext(ctx, input, opts...)
}

// ImportCertificateRequest is a passthrough to the underlying ImportCertificateRequest.
// It will increment the count of requests made to ImportCertificate.
func (c *ACM) ImportCertificateRequest(input *acm.ImportCertificateInput) (req *request.Request, output *acm.ImportCertificateOutput) {
	c.inc("ImportCertificate")
	return c.svc.ImportCertificateRequest(input)
}

// ImportCertificate is a passthrough to the underlying ImportCertificate method.
// It will increment the count of requests made to ImportCertificate.
func (c *ACM) ImportCertificate(input *acm.ImportCertificateInput) (*acm.ImportCertificateOutput, error) {
	c.inc("ImportCertificate")
	return c.svc.ImportCertificate(input)
}

// ImportCertificateWithContext is a passthrough to the underlying ImportCertificateWithContext method.
// It will increment the count of requests made to ImportCertificate.
func (c *ACM) ImportCertificateWithContext(ctx aws.Context, input *acm.ImportCertificateInput, opts ...request.Option) (*acm.ImportCertificateOutput, error) {
	c.inc("ImportCertificate")
	return c.svc.ImportCertificateWithContext(ctx, input, opts...)
}

// ListCertificatesRequest is a passthrough to the underlying ListCertificatesRequest.
// It will increment the count of requests made to ListCertificates.
func (c *ACM) ListCertificatesRequest(input *acm.ListCertificatesInput) (req *request.Request, output *acm.ListCertificatesOutput) {
	c.inc("ListCertificates")
	return c.svc.ListCertificatesRequest(input)
}

// ListCertificates is a passthrough to the underlying ListCertificates method.
// It will increment the count of requests made to ListCertificates.
func (c *ACM) ListCertificates(input *acm.ListCertificatesInput) (*acm.ListCertificatesOutput, error) {
	c.inc("ListCertificates")
	return c.svc.ListCertificates(input)
}

// ListCertificatesWithContext is a passthrough to the underlying ListCertificatesWithContext method.
// It will increment the count of requests made to ListCertificates.
func (c *ACM) ListCertificatesWithContext(ctx aws.Context, input *acm.ListCertificatesInput, opts ...request.Option) (*acm.ListCertificatesOutput, error) {
	c.inc("ListCertificates")
	return c.svc.ListCertificatesWithContext(ctx, input, opts...)
}

// ListCertificatesPages is a passthrough to the underlying ListCertificatesPages method.
// It will increment the count of requests made to ListCertificates on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListCertificatesPagesWithContext to avoid this.
func (c *ACM) ListCertificatesPages(input *acm.ListCertificatesInput, fn func(*acm.ListCertificatesOutput, bool) bool) error {
	wrappedFn := func(page *acm.ListCertificatesOutput, lastPage bool) bool {
		c.inc("ListCertificates")
		return fn(page, lastPage)
	}
	return c.ListCertificatesPages(input, wrappedFn)
}

// ListCertificatesPagesWithContext is a passthrough to the underlying ListCertificatesPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListCertificates when applied to the request.
func (c *ACM) ListCertificatesPagesWithContext(ctx aws.Context, input *acm.ListCertificatesInput, fn func(*acm.ListCertificatesOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListCertificates"))
	return c.ListCertificatesPagesWithContext(ctx, input, fn, opts...)
}

// ListTagsForCertificateRequest is a passthrough to the underlying ListTagsForCertificateRequest.
// It will increment the count of requests made to ListTagsForCertificate.
func (c *ACM) ListTagsForCertificateRequest(input *acm.ListTagsForCertificateInput) (req *request.Request, output *acm.ListTagsForCertificateOutput) {
	c.inc("ListTagsForCertificate")
	return c.svc.ListTagsForCertificateRequest(input)
}

// ListTagsForCertificate is a passthrough to the underlying ListTagsForCertificate method.
// It will increment the count of requests made to ListTagsForCertificate.
func (c *ACM) ListTagsForCertificate(input *acm.ListTagsForCertificateInput) (*acm.ListTagsForCertificateOutput, error) {
	c.inc("ListTagsForCertificate")
	return c.svc.ListTagsForCertificate(input)
}

// ListTagsForCertificateWithContext is a passthrough to the underlying ListTagsForCertificateWithContext method.
// It will increment the count of requests made to ListTagsForCertificate.
func (c *ACM) ListTagsForCertificateWithContext(ctx aws.Context, input *acm.ListTagsForCertificateInput, opts ...request.Option) (*acm.ListTagsForCertificateOutput, error) {
	c.inc("ListTagsForCertificate")
	return c.svc.ListTagsForCertificateWithContext(ctx, input, opts...)
}

// RemoveTagsFromCertificateRequest is a passthrough to the underlying RemoveTagsFromCertificateRequest.
// It will increment the count of requests made to RemoveTagsFromCertificate.
func (c *ACM) RemoveTagsFromCertificateRequest(input *acm.RemoveTagsFromCertificateInput) (req *request.Request, output *acm.RemoveTagsFromCertificateOutput) {
	c.inc("RemoveTagsFromCertificate")
	return c.svc.RemoveTagsFromCertificateRequest(input)
}

// RemoveTagsFromCertificate is a passthrough to the underlying RemoveTagsFromCertificate method.
// It will increment the count of requests made to RemoveTagsFromCertificate.
func (c *ACM) RemoveTagsFromCertificate(input *acm.RemoveTagsFromCertificateInput) (*acm.RemoveTagsFromCertificateOutput, error) {
	c.inc("RemoveTagsFromCertificate")
	return c.svc.RemoveTagsFromCertificate(input)
}

// RemoveTagsFromCertificateWithContext is a passthrough to the underlying RemoveTagsFromCertificateWithContext method.
// It will increment the count of requests made to RemoveTagsFromCertificate.
func (c *ACM) RemoveTagsFromCertificateWithContext(ctx aws.Context, input *acm.RemoveTagsFromCertificateInput, opts ...request.Option) (*acm.RemoveTagsFromCertificateOutput, error) {
	c.inc("RemoveTagsFromCertificate")
	return c.svc.RemoveTagsFromCertificateWithContext(ctx, input, opts...)
}

// RequestCertificateRequest is a passthrough to the underlying RequestCertificateRequest.
// It will increment the count of requests made to RequestCertificate.
func (c *ACM) RequestCertificateRequest(input *acm.RequestCertificateInput) (req *request.Request, output *acm.RequestCertificateOutput) {
	c.inc("RequestCertificate")
	return c.svc.RequestCertificateRequest(input)
}

// RequestCertificate is a passthrough to the underlying RequestCertificate method.
// It will increment the count of requests made to RequestCertificate.
func (c *ACM) RequestCertificate(input *acm.RequestCertificateInput) (*acm.RequestCertificateOutput, error) {
	c.inc("RequestCertificate")
	return c.svc.RequestCertificate(input)
}

// RequestCertificateWithContext is a passthrough to the underlying RequestCertificateWithContext method.
// It will increment the count of requests made to RequestCertificate.
func (c *ACM) RequestCertificateWithContext(ctx aws.Context, input *acm.RequestCertificateInput, opts ...request.Option) (*acm.RequestCertificateOutput, error) {
	c.inc("RequestCertificate")
	return c.svc.RequestCertificateWithContext(ctx, input, opts...)
}

// ResendValidationEmailRequest is a passthrough to the underlying ResendValidationEmailRequest.
// It will increment the count of requests made to ResendValidationEmail.
func (c *ACM) ResendValidationEmailRequest(input *acm.ResendValidationEmailInput) (req *request.Request, output *acm.ResendValidationEmailOutput) {
	c.inc("ResendValidationEmail")
	return c.svc.ResendValidationEmailRequest(input)
}

// ResendValidationEmail is a passthrough to the underlying ResendValidationEmail method.
// It will increment the count of requests made to ResendValidationEmail.
func (c *ACM) ResendValidationEmail(input *acm.ResendValidationEmailInput) (*acm.ResendValidationEmailOutput, error) {
	c.inc("ResendValidationEmail")
	return c.svc.ResendValidationEmail(input)
}

// ResendValidationEmailWithContext is a passthrough to the underlying ResendValidationEmailWithContext method.
// It will increment the count of requests made to ResendValidationEmail.
func (c *ACM) ResendValidationEmailWithContext(ctx aws.Context, input *acm.ResendValidationEmailInput, opts ...request.Option) (*acm.ResendValidationEmailOutput, error) {
	c.inc("ResendValidationEmail")
	return c.svc.ResendValidationEmailWithContext(ctx, input, opts...)
}
