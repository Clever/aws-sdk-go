// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package elasticbeanstalkcounter

import (
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/elasticbeanstalk"
)

// AbortEnvironmentUpdateRequest is a passthrough to the underlying AbortEnvironmentUpdateRequest.
// It will increment the count of requests made to AbortEnvironmentUpdate.
func (c *ElasticBeanstalk) AbortEnvironmentUpdateRequest(input *elasticbeanstalk.AbortEnvironmentUpdateInput) (req *request.Request, output *elasticbeanstalk.AbortEnvironmentUpdateOutput) {
	c.inc("AbortEnvironmentUpdate")
	return c.svc.AbortEnvironmentUpdateRequest(input)
}

// AbortEnvironmentUpdate is a passthrough to the underlying AbortEnvironmentUpdate method.
// It will increment the count of requests made to AbortEnvironmentUpdate.
func (c *ElasticBeanstalk) AbortEnvironmentUpdate(input *elasticbeanstalk.AbortEnvironmentUpdateInput) (*elasticbeanstalk.AbortEnvironmentUpdateOutput, error) {
	c.inc("AbortEnvironmentUpdate")
	return c.svc.AbortEnvironmentUpdate(input)
}

// AbortEnvironmentUpdateWithContext is a passthrough to the underlying AbortEnvironmentUpdateWithContext method.
// It will increment the count of requests made to AbortEnvironmentUpdate.
func (c *ElasticBeanstalk) AbortEnvironmentUpdateWithContext(ctx aws.Context, input *elasticbeanstalk.AbortEnvironmentUpdateInput, opts ...request.Option) (*elasticbeanstalk.AbortEnvironmentUpdateOutput, error) {
	c.inc("AbortEnvironmentUpdate")
	return c.svc.AbortEnvironmentUpdateWithContext(ctx, input, opts...)
}

// ApplyEnvironmentManagedActionRequest is a passthrough to the underlying ApplyEnvironmentManagedActionRequest.
// It will increment the count of requests made to ApplyEnvironmentManagedAction.
func (c *ElasticBeanstalk) ApplyEnvironmentManagedActionRequest(input *elasticbeanstalk.ApplyEnvironmentManagedActionInput) (req *request.Request, output *elasticbeanstalk.ApplyEnvironmentManagedActionOutput) {
	c.inc("ApplyEnvironmentManagedAction")
	return c.svc.ApplyEnvironmentManagedActionRequest(input)
}

// ApplyEnvironmentManagedAction is a passthrough to the underlying ApplyEnvironmentManagedAction method.
// It will increment the count of requests made to ApplyEnvironmentManagedAction.
func (c *ElasticBeanstalk) ApplyEnvironmentManagedAction(input *elasticbeanstalk.ApplyEnvironmentManagedActionInput) (*elasticbeanstalk.ApplyEnvironmentManagedActionOutput, error) {
	c.inc("ApplyEnvironmentManagedAction")
	return c.svc.ApplyEnvironmentManagedAction(input)
}

// ApplyEnvironmentManagedActionWithContext is a passthrough to the underlying ApplyEnvironmentManagedActionWithContext method.
// It will increment the count of requests made to ApplyEnvironmentManagedAction.
func (c *ElasticBeanstalk) ApplyEnvironmentManagedActionWithContext(ctx aws.Context, input *elasticbeanstalk.ApplyEnvironmentManagedActionInput, opts ...request.Option) (*elasticbeanstalk.ApplyEnvironmentManagedActionOutput, error) {
	c.inc("ApplyEnvironmentManagedAction")
	return c.svc.ApplyEnvironmentManagedActionWithContext(ctx, input, opts...)
}

// CheckDNSAvailabilityRequest is a passthrough to the underlying CheckDNSAvailabilityRequest.
// It will increment the count of requests made to CheckDNSAvailability.
func (c *ElasticBeanstalk) CheckDNSAvailabilityRequest(input *elasticbeanstalk.CheckDNSAvailabilityInput) (req *request.Request, output *elasticbeanstalk.CheckDNSAvailabilityOutput) {
	c.inc("CheckDNSAvailability")
	return c.svc.CheckDNSAvailabilityRequest(input)
}

// CheckDNSAvailability is a passthrough to the underlying CheckDNSAvailability method.
// It will increment the count of requests made to CheckDNSAvailability.
func (c *ElasticBeanstalk) CheckDNSAvailability(input *elasticbeanstalk.CheckDNSAvailabilityInput) (*elasticbeanstalk.CheckDNSAvailabilityOutput, error) {
	c.inc("CheckDNSAvailability")
	return c.svc.CheckDNSAvailability(input)
}

// CheckDNSAvailabilityWithContext is a passthrough to the underlying CheckDNSAvailabilityWithContext method.
// It will increment the count of requests made to CheckDNSAvailability.
func (c *ElasticBeanstalk) CheckDNSAvailabilityWithContext(ctx aws.Context, input *elasticbeanstalk.CheckDNSAvailabilityInput, opts ...request.Option) (*elasticbeanstalk.CheckDNSAvailabilityOutput, error) {
	c.inc("CheckDNSAvailability")
	return c.svc.CheckDNSAvailabilityWithContext(ctx, input, opts...)
}

// ComposeEnvironmentsRequest is a passthrough to the underlying ComposeEnvironmentsRequest.
// It will increment the count of requests made to ComposeEnvironments.
func (c *ElasticBeanstalk) ComposeEnvironmentsRequest(input *elasticbeanstalk.ComposeEnvironmentsInput) (req *request.Request, output *elasticbeanstalk.EnvironmentDescriptionsMessage) {
	c.inc("ComposeEnvironments")
	return c.svc.ComposeEnvironmentsRequest(input)
}

// ComposeEnvironments is a passthrough to the underlying ComposeEnvironments method.
// It will increment the count of requests made to ComposeEnvironments.
func (c *ElasticBeanstalk) ComposeEnvironments(input *elasticbeanstalk.ComposeEnvironmentsInput) (*elasticbeanstalk.EnvironmentDescriptionsMessage, error) {
	c.inc("ComposeEnvironments")
	return c.svc.ComposeEnvironments(input)
}

// ComposeEnvironmentsWithContext is a passthrough to the underlying ComposeEnvironmentsWithContext method.
// It will increment the count of requests made to ComposeEnvironments.
func (c *ElasticBeanstalk) ComposeEnvironmentsWithContext(ctx aws.Context, input *elasticbeanstalk.ComposeEnvironmentsInput, opts ...request.Option) (*elasticbeanstalk.EnvironmentDescriptionsMessage, error) {
	c.inc("ComposeEnvironments")
	return c.svc.ComposeEnvironmentsWithContext(ctx, input, opts...)
}

// CreateApplicationRequest is a passthrough to the underlying CreateApplicationRequest.
// It will increment the count of requests made to CreateApplication.
func (c *ElasticBeanstalk) CreateApplicationRequest(input *elasticbeanstalk.CreateApplicationInput) (req *request.Request, output *elasticbeanstalk.ApplicationDescriptionMessage) {
	c.inc("CreateApplication")
	return c.svc.CreateApplicationRequest(input)
}

// CreateApplication is a passthrough to the underlying CreateApplication method.
// It will increment the count of requests made to CreateApplication.
func (c *ElasticBeanstalk) CreateApplication(input *elasticbeanstalk.CreateApplicationInput) (*elasticbeanstalk.ApplicationDescriptionMessage, error) {
	c.inc("CreateApplication")
	return c.svc.CreateApplication(input)
}

// CreateApplicationWithContext is a passthrough to the underlying CreateApplicationWithContext method.
// It will increment the count of requests made to CreateApplication.
func (c *ElasticBeanstalk) CreateApplicationWithContext(ctx aws.Context, input *elasticbeanstalk.CreateApplicationInput, opts ...request.Option) (*elasticbeanstalk.ApplicationDescriptionMessage, error) {
	c.inc("CreateApplication")
	return c.svc.CreateApplicationWithContext(ctx, input, opts...)
}

// CreateApplicationVersionRequest is a passthrough to the underlying CreateApplicationVersionRequest.
// It will increment the count of requests made to CreateApplicationVersion.
func (c *ElasticBeanstalk) CreateApplicationVersionRequest(input *elasticbeanstalk.CreateApplicationVersionInput) (req *request.Request, output *elasticbeanstalk.ApplicationVersionDescriptionMessage) {
	c.inc("CreateApplicationVersion")
	return c.svc.CreateApplicationVersionRequest(input)
}

// CreateApplicationVersion is a passthrough to the underlying CreateApplicationVersion method.
// It will increment the count of requests made to CreateApplicationVersion.
func (c *ElasticBeanstalk) CreateApplicationVersion(input *elasticbeanstalk.CreateApplicationVersionInput) (*elasticbeanstalk.ApplicationVersionDescriptionMessage, error) {
	c.inc("CreateApplicationVersion")
	return c.svc.CreateApplicationVersion(input)
}

// CreateApplicationVersionWithContext is a passthrough to the underlying CreateApplicationVersionWithContext method.
// It will increment the count of requests made to CreateApplicationVersion.
func (c *ElasticBeanstalk) CreateApplicationVersionWithContext(ctx aws.Context, input *elasticbeanstalk.CreateApplicationVersionInput, opts ...request.Option) (*elasticbeanstalk.ApplicationVersionDescriptionMessage, error) {
	c.inc("CreateApplicationVersion")
	return c.svc.CreateApplicationVersionWithContext(ctx, input, opts...)
}

// CreateConfigurationTemplateRequest is a passthrough to the underlying CreateConfigurationTemplateRequest.
// It will increment the count of requests made to CreateConfigurationTemplate.
func (c *ElasticBeanstalk) CreateConfigurationTemplateRequest(input *elasticbeanstalk.CreateConfigurationTemplateInput) (req *request.Request, output *elasticbeanstalk.ConfigurationSettingsDescription) {
	c.inc("CreateConfigurationTemplate")
	return c.svc.CreateConfigurationTemplateRequest(input)
}

// CreateConfigurationTemplate is a passthrough to the underlying CreateConfigurationTemplate method.
// It will increment the count of requests made to CreateConfigurationTemplate.
func (c *ElasticBeanstalk) CreateConfigurationTemplate(input *elasticbeanstalk.CreateConfigurationTemplateInput) (*elasticbeanstalk.ConfigurationSettingsDescription, error) {
	c.inc("CreateConfigurationTemplate")
	return c.svc.CreateConfigurationTemplate(input)
}

// CreateConfigurationTemplateWithContext is a passthrough to the underlying CreateConfigurationTemplateWithContext method.
// It will increment the count of requests made to CreateConfigurationTemplate.
func (c *ElasticBeanstalk) CreateConfigurationTemplateWithContext(ctx aws.Context, input *elasticbeanstalk.CreateConfigurationTemplateInput, opts ...request.Option) (*elasticbeanstalk.ConfigurationSettingsDescription, error) {
	c.inc("CreateConfigurationTemplate")
	return c.svc.CreateConfigurationTemplateWithContext(ctx, input, opts...)
}

// CreateEnvironmentRequest is a passthrough to the underlying CreateEnvironmentRequest.
// It will increment the count of requests made to CreateEnvironment.
func (c *ElasticBeanstalk) CreateEnvironmentRequest(input *elasticbeanstalk.CreateEnvironmentInput) (req *request.Request, output *elasticbeanstalk.EnvironmentDescription) {
	c.inc("CreateEnvironment")
	return c.svc.CreateEnvironmentRequest(input)
}

// CreateEnvironment is a passthrough to the underlying CreateEnvironment method.
// It will increment the count of requests made to CreateEnvironment.
func (c *ElasticBeanstalk) CreateEnvironment(input *elasticbeanstalk.CreateEnvironmentInput) (*elasticbeanstalk.EnvironmentDescription, error) {
	c.inc("CreateEnvironment")
	return c.svc.CreateEnvironment(input)
}

// CreateEnvironmentWithContext is a passthrough to the underlying CreateEnvironmentWithContext method.
// It will increment the count of requests made to CreateEnvironment.
func (c *ElasticBeanstalk) CreateEnvironmentWithContext(ctx aws.Context, input *elasticbeanstalk.CreateEnvironmentInput, opts ...request.Option) (*elasticbeanstalk.EnvironmentDescription, error) {
	c.inc("CreateEnvironment")
	return c.svc.CreateEnvironmentWithContext(ctx, input, opts...)
}

// CreatePlatformVersionRequest is a passthrough to the underlying CreatePlatformVersionRequest.
// It will increment the count of requests made to CreatePlatformVersion.
func (c *ElasticBeanstalk) CreatePlatformVersionRequest(input *elasticbeanstalk.CreatePlatformVersionInput) (req *request.Request, output *elasticbeanstalk.CreatePlatformVersionOutput) {
	c.inc("CreatePlatformVersion")
	return c.svc.CreatePlatformVersionRequest(input)
}

// CreatePlatformVersion is a passthrough to the underlying CreatePlatformVersion method.
// It will increment the count of requests made to CreatePlatformVersion.
func (c *ElasticBeanstalk) CreatePlatformVersion(input *elasticbeanstalk.CreatePlatformVersionInput) (*elasticbeanstalk.CreatePlatformVersionOutput, error) {
	c.inc("CreatePlatformVersion")
	return c.svc.CreatePlatformVersion(input)
}

// CreatePlatformVersionWithContext is a passthrough to the underlying CreatePlatformVersionWithContext method.
// It will increment the count of requests made to CreatePlatformVersion.
func (c *ElasticBeanstalk) CreatePlatformVersionWithContext(ctx aws.Context, input *elasticbeanstalk.CreatePlatformVersionInput, opts ...request.Option) (*elasticbeanstalk.CreatePlatformVersionOutput, error) {
	c.inc("CreatePlatformVersion")
	return c.svc.CreatePlatformVersionWithContext(ctx, input, opts...)
}

// CreateStorageLocationRequest is a passthrough to the underlying CreateStorageLocationRequest.
// It will increment the count of requests made to CreateStorageLocation.
func (c *ElasticBeanstalk) CreateStorageLocationRequest(input *elasticbeanstalk.CreateStorageLocationInput) (req *request.Request, output *elasticbeanstalk.CreateStorageLocationOutput) {
	c.inc("CreateStorageLocation")
	return c.svc.CreateStorageLocationRequest(input)
}

// CreateStorageLocation is a passthrough to the underlying CreateStorageLocation method.
// It will increment the count of requests made to CreateStorageLocation.
func (c *ElasticBeanstalk) CreateStorageLocation(input *elasticbeanstalk.CreateStorageLocationInput) (*elasticbeanstalk.CreateStorageLocationOutput, error) {
	c.inc("CreateStorageLocation")
	return c.svc.CreateStorageLocation(input)
}

// CreateStorageLocationWithContext is a passthrough to the underlying CreateStorageLocationWithContext method.
// It will increment the count of requests made to CreateStorageLocation.
func (c *ElasticBeanstalk) CreateStorageLocationWithContext(ctx aws.Context, input *elasticbeanstalk.CreateStorageLocationInput, opts ...request.Option) (*elasticbeanstalk.CreateStorageLocationOutput, error) {
	c.inc("CreateStorageLocation")
	return c.svc.CreateStorageLocationWithContext(ctx, input, opts...)
}

// DeleteApplicationRequest is a passthrough to the underlying DeleteApplicationRequest.
// It will increment the count of requests made to DeleteApplication.
func (c *ElasticBeanstalk) DeleteApplicationRequest(input *elasticbeanstalk.DeleteApplicationInput) (req *request.Request, output *elasticbeanstalk.DeleteApplicationOutput) {
	c.inc("DeleteApplication")
	return c.svc.DeleteApplicationRequest(input)
}

// DeleteApplication is a passthrough to the underlying DeleteApplication method.
// It will increment the count of requests made to DeleteApplication.
func (c *ElasticBeanstalk) DeleteApplication(input *elasticbeanstalk.DeleteApplicationInput) (*elasticbeanstalk.DeleteApplicationOutput, error) {
	c.inc("DeleteApplication")
	return c.svc.DeleteApplication(input)
}

// DeleteApplicationWithContext is a passthrough to the underlying DeleteApplicationWithContext method.
// It will increment the count of requests made to DeleteApplication.
func (c *ElasticBeanstalk) DeleteApplicationWithContext(ctx aws.Context, input *elasticbeanstalk.DeleteApplicationInput, opts ...request.Option) (*elasticbeanstalk.DeleteApplicationOutput, error) {
	c.inc("DeleteApplication")
	return c.svc.DeleteApplicationWithContext(ctx, input, opts...)
}

// DeleteApplicationVersionRequest is a passthrough to the underlying DeleteApplicationVersionRequest.
// It will increment the count of requests made to DeleteApplicationVersion.
func (c *ElasticBeanstalk) DeleteApplicationVersionRequest(input *elasticbeanstalk.DeleteApplicationVersionInput) (req *request.Request, output *elasticbeanstalk.DeleteApplicationVersionOutput) {
	c.inc("DeleteApplicationVersion")
	return c.svc.DeleteApplicationVersionRequest(input)
}

// DeleteApplicationVersion is a passthrough to the underlying DeleteApplicationVersion method.
// It will increment the count of requests made to DeleteApplicationVersion.
func (c *ElasticBeanstalk) DeleteApplicationVersion(input *elasticbeanstalk.DeleteApplicationVersionInput) (*elasticbeanstalk.DeleteApplicationVersionOutput, error) {
	c.inc("DeleteApplicationVersion")
	return c.svc.DeleteApplicationVersion(input)
}

// DeleteApplicationVersionWithContext is a passthrough to the underlying DeleteApplicationVersionWithContext method.
// It will increment the count of requests made to DeleteApplicationVersion.
func (c *ElasticBeanstalk) DeleteApplicationVersionWithContext(ctx aws.Context, input *elasticbeanstalk.DeleteApplicationVersionInput, opts ...request.Option) (*elasticbeanstalk.DeleteApplicationVersionOutput, error) {
	c.inc("DeleteApplicationVersion")
	return c.svc.DeleteApplicationVersionWithContext(ctx, input, opts...)
}

// DeleteConfigurationTemplateRequest is a passthrough to the underlying DeleteConfigurationTemplateRequest.
// It will increment the count of requests made to DeleteConfigurationTemplate.
func (c *ElasticBeanstalk) DeleteConfigurationTemplateRequest(input *elasticbeanstalk.DeleteConfigurationTemplateInput) (req *request.Request, output *elasticbeanstalk.DeleteConfigurationTemplateOutput) {
	c.inc("DeleteConfigurationTemplate")
	return c.svc.DeleteConfigurationTemplateRequest(input)
}

// DeleteConfigurationTemplate is a passthrough to the underlying DeleteConfigurationTemplate method.
// It will increment the count of requests made to DeleteConfigurationTemplate.
func (c *ElasticBeanstalk) DeleteConfigurationTemplate(input *elasticbeanstalk.DeleteConfigurationTemplateInput) (*elasticbeanstalk.DeleteConfigurationTemplateOutput, error) {
	c.inc("DeleteConfigurationTemplate")
	return c.svc.DeleteConfigurationTemplate(input)
}

// DeleteConfigurationTemplateWithContext is a passthrough to the underlying DeleteConfigurationTemplateWithContext method.
// It will increment the count of requests made to DeleteConfigurationTemplate.
func (c *ElasticBeanstalk) DeleteConfigurationTemplateWithContext(ctx aws.Context, input *elasticbeanstalk.DeleteConfigurationTemplateInput, opts ...request.Option) (*elasticbeanstalk.DeleteConfigurationTemplateOutput, error) {
	c.inc("DeleteConfigurationTemplate")
	return c.svc.DeleteConfigurationTemplateWithContext(ctx, input, opts...)
}

// DeleteEnvironmentConfigurationRequest is a passthrough to the underlying DeleteEnvironmentConfigurationRequest.
// It will increment the count of requests made to DeleteEnvironmentConfiguration.
func (c *ElasticBeanstalk) DeleteEnvironmentConfigurationRequest(input *elasticbeanstalk.DeleteEnvironmentConfigurationInput) (req *request.Request, output *elasticbeanstalk.DeleteEnvironmentConfigurationOutput) {
	c.inc("DeleteEnvironmentConfiguration")
	return c.svc.DeleteEnvironmentConfigurationRequest(input)
}

// DeleteEnvironmentConfiguration is a passthrough to the underlying DeleteEnvironmentConfiguration method.
// It will increment the count of requests made to DeleteEnvironmentConfiguration.
func (c *ElasticBeanstalk) DeleteEnvironmentConfiguration(input *elasticbeanstalk.DeleteEnvironmentConfigurationInput) (*elasticbeanstalk.DeleteEnvironmentConfigurationOutput, error) {
	c.inc("DeleteEnvironmentConfiguration")
	return c.svc.DeleteEnvironmentConfiguration(input)
}

// DeleteEnvironmentConfigurationWithContext is a passthrough to the underlying DeleteEnvironmentConfigurationWithContext method.
// It will increment the count of requests made to DeleteEnvironmentConfiguration.
func (c *ElasticBeanstalk) DeleteEnvironmentConfigurationWithContext(ctx aws.Context, input *elasticbeanstalk.DeleteEnvironmentConfigurationInput, opts ...request.Option) (*elasticbeanstalk.DeleteEnvironmentConfigurationOutput, error) {
	c.inc("DeleteEnvironmentConfiguration")
	return c.svc.DeleteEnvironmentConfigurationWithContext(ctx, input, opts...)
}

// DeletePlatformVersionRequest is a passthrough to the underlying DeletePlatformVersionRequest.
// It will increment the count of requests made to DeletePlatformVersion.
func (c *ElasticBeanstalk) DeletePlatformVersionRequest(input *elasticbeanstalk.DeletePlatformVersionInput) (req *request.Request, output *elasticbeanstalk.DeletePlatformVersionOutput) {
	c.inc("DeletePlatformVersion")
	return c.svc.DeletePlatformVersionRequest(input)
}

// DeletePlatformVersion is a passthrough to the underlying DeletePlatformVersion method.
// It will increment the count of requests made to DeletePlatformVersion.
func (c *ElasticBeanstalk) DeletePlatformVersion(input *elasticbeanstalk.DeletePlatformVersionInput) (*elasticbeanstalk.DeletePlatformVersionOutput, error) {
	c.inc("DeletePlatformVersion")
	return c.svc.DeletePlatformVersion(input)
}

// DeletePlatformVersionWithContext is a passthrough to the underlying DeletePlatformVersionWithContext method.
// It will increment the count of requests made to DeletePlatformVersion.
func (c *ElasticBeanstalk) DeletePlatformVersionWithContext(ctx aws.Context, input *elasticbeanstalk.DeletePlatformVersionInput, opts ...request.Option) (*elasticbeanstalk.DeletePlatformVersionOutput, error) {
	c.inc("DeletePlatformVersion")
	return c.svc.DeletePlatformVersionWithContext(ctx, input, opts...)
}

// DescribeApplicationVersionsRequest is a passthrough to the underlying DescribeApplicationVersionsRequest.
// It will increment the count of requests made to DescribeApplicationVersions.
func (c *ElasticBeanstalk) DescribeApplicationVersionsRequest(input *elasticbeanstalk.DescribeApplicationVersionsInput) (req *request.Request, output *elasticbeanstalk.DescribeApplicationVersionsOutput) {
	c.inc("DescribeApplicationVersions")
	return c.svc.DescribeApplicationVersionsRequest(input)
}

// DescribeApplicationVersions is a passthrough to the underlying DescribeApplicationVersions method.
// It will increment the count of requests made to DescribeApplicationVersions.
func (c *ElasticBeanstalk) DescribeApplicationVersions(input *elasticbeanstalk.DescribeApplicationVersionsInput) (*elasticbeanstalk.DescribeApplicationVersionsOutput, error) {
	c.inc("DescribeApplicationVersions")
	return c.svc.DescribeApplicationVersions(input)
}

// DescribeApplicationVersionsWithContext is a passthrough to the underlying DescribeApplicationVersionsWithContext method.
// It will increment the count of requests made to DescribeApplicationVersions.
func (c *ElasticBeanstalk) DescribeApplicationVersionsWithContext(ctx aws.Context, input *elasticbeanstalk.DescribeApplicationVersionsInput, opts ...request.Option) (*elasticbeanstalk.DescribeApplicationVersionsOutput, error) {
	c.inc("DescribeApplicationVersions")
	return c.svc.DescribeApplicationVersionsWithContext(ctx, input, opts...)
}

// DescribeApplicationsRequest is a passthrough to the underlying DescribeApplicationsRequest.
// It will increment the count of requests made to DescribeApplications.
func (c *ElasticBeanstalk) DescribeApplicationsRequest(input *elasticbeanstalk.DescribeApplicationsInput) (req *request.Request, output *elasticbeanstalk.DescribeApplicationsOutput) {
	c.inc("DescribeApplications")
	return c.svc.DescribeApplicationsRequest(input)
}

// DescribeApplications is a passthrough to the underlying DescribeApplications method.
// It will increment the count of requests made to DescribeApplications.
func (c *ElasticBeanstalk) DescribeApplications(input *elasticbeanstalk.DescribeApplicationsInput) (*elasticbeanstalk.DescribeApplicationsOutput, error) {
	c.inc("DescribeApplications")
	return c.svc.DescribeApplications(input)
}

// DescribeApplicationsWithContext is a passthrough to the underlying DescribeApplicationsWithContext method.
// It will increment the count of requests made to DescribeApplications.
func (c *ElasticBeanstalk) DescribeApplicationsWithContext(ctx aws.Context, input *elasticbeanstalk.DescribeApplicationsInput, opts ...request.Option) (*elasticbeanstalk.DescribeApplicationsOutput, error) {
	c.inc("DescribeApplications")
	return c.svc.DescribeApplicationsWithContext(ctx, input, opts...)
}

// DescribeConfigurationOptionsRequest is a passthrough to the underlying DescribeConfigurationOptionsRequest.
// It will increment the count of requests made to DescribeConfigurationOptions.
func (c *ElasticBeanstalk) DescribeConfigurationOptionsRequest(input *elasticbeanstalk.DescribeConfigurationOptionsInput) (req *request.Request, output *elasticbeanstalk.DescribeConfigurationOptionsOutput) {
	c.inc("DescribeConfigurationOptions")
	return c.svc.DescribeConfigurationOptionsRequest(input)
}

// DescribeConfigurationOptions is a passthrough to the underlying DescribeConfigurationOptions method.
// It will increment the count of requests made to DescribeConfigurationOptions.
func (c *ElasticBeanstalk) DescribeConfigurationOptions(input *elasticbeanstalk.DescribeConfigurationOptionsInput) (*elasticbeanstalk.DescribeConfigurationOptionsOutput, error) {
	c.inc("DescribeConfigurationOptions")
	return c.svc.DescribeConfigurationOptions(input)
}

// DescribeConfigurationOptionsWithContext is a passthrough to the underlying DescribeConfigurationOptionsWithContext method.
// It will increment the count of requests made to DescribeConfigurationOptions.
func (c *ElasticBeanstalk) DescribeConfigurationOptionsWithContext(ctx aws.Context, input *elasticbeanstalk.DescribeConfigurationOptionsInput, opts ...request.Option) (*elasticbeanstalk.DescribeConfigurationOptionsOutput, error) {
	c.inc("DescribeConfigurationOptions")
	return c.svc.DescribeConfigurationOptionsWithContext(ctx, input, opts...)
}

// DescribeConfigurationSettingsRequest is a passthrough to the underlying DescribeConfigurationSettingsRequest.
// It will increment the count of requests made to DescribeConfigurationSettings.
func (c *ElasticBeanstalk) DescribeConfigurationSettingsRequest(input *elasticbeanstalk.DescribeConfigurationSettingsInput) (req *request.Request, output *elasticbeanstalk.DescribeConfigurationSettingsOutput) {
	c.inc("DescribeConfigurationSettings")
	return c.svc.DescribeConfigurationSettingsRequest(input)
}

// DescribeConfigurationSettings is a passthrough to the underlying DescribeConfigurationSettings method.
// It will increment the count of requests made to DescribeConfigurationSettings.
func (c *ElasticBeanstalk) DescribeConfigurationSettings(input *elasticbeanstalk.DescribeConfigurationSettingsInput) (*elasticbeanstalk.DescribeConfigurationSettingsOutput, error) {
	c.inc("DescribeConfigurationSettings")
	return c.svc.DescribeConfigurationSettings(input)
}

// DescribeConfigurationSettingsWithContext is a passthrough to the underlying DescribeConfigurationSettingsWithContext method.
// It will increment the count of requests made to DescribeConfigurationSettings.
func (c *ElasticBeanstalk) DescribeConfigurationSettingsWithContext(ctx aws.Context, input *elasticbeanstalk.DescribeConfigurationSettingsInput, opts ...request.Option) (*elasticbeanstalk.DescribeConfigurationSettingsOutput, error) {
	c.inc("DescribeConfigurationSettings")
	return c.svc.DescribeConfigurationSettingsWithContext(ctx, input, opts...)
}

// DescribeEnvironmentHealthRequest is a passthrough to the underlying DescribeEnvironmentHealthRequest.
// It will increment the count of requests made to DescribeEnvironmentHealth.
func (c *ElasticBeanstalk) DescribeEnvironmentHealthRequest(input *elasticbeanstalk.DescribeEnvironmentHealthInput) (req *request.Request, output *elasticbeanstalk.DescribeEnvironmentHealthOutput) {
	c.inc("DescribeEnvironmentHealth")
	return c.svc.DescribeEnvironmentHealthRequest(input)
}

// DescribeEnvironmentHealth is a passthrough to the underlying DescribeEnvironmentHealth method.
// It will increment the count of requests made to DescribeEnvironmentHealth.
func (c *ElasticBeanstalk) DescribeEnvironmentHealth(input *elasticbeanstalk.DescribeEnvironmentHealthInput) (*elasticbeanstalk.DescribeEnvironmentHealthOutput, error) {
	c.inc("DescribeEnvironmentHealth")
	return c.svc.DescribeEnvironmentHealth(input)
}

// DescribeEnvironmentHealthWithContext is a passthrough to the underlying DescribeEnvironmentHealthWithContext method.
// It will increment the count of requests made to DescribeEnvironmentHealth.
func (c *ElasticBeanstalk) DescribeEnvironmentHealthWithContext(ctx aws.Context, input *elasticbeanstalk.DescribeEnvironmentHealthInput, opts ...request.Option) (*elasticbeanstalk.DescribeEnvironmentHealthOutput, error) {
	c.inc("DescribeEnvironmentHealth")
	return c.svc.DescribeEnvironmentHealthWithContext(ctx, input, opts...)
}

// DescribeEnvironmentManagedActionHistoryRequest is a passthrough to the underlying DescribeEnvironmentManagedActionHistoryRequest.
// It will increment the count of requests made to DescribeEnvironmentManagedActionHistory.
func (c *ElasticBeanstalk) DescribeEnvironmentManagedActionHistoryRequest(input *elasticbeanstalk.DescribeEnvironmentManagedActionHistoryInput) (req *request.Request, output *elasticbeanstalk.DescribeEnvironmentManagedActionHistoryOutput) {
	c.inc("DescribeEnvironmentManagedActionHistory")
	return c.svc.DescribeEnvironmentManagedActionHistoryRequest(input)
}

// DescribeEnvironmentManagedActionHistory is a passthrough to the underlying DescribeEnvironmentManagedActionHistory method.
// It will increment the count of requests made to DescribeEnvironmentManagedActionHistory.
func (c *ElasticBeanstalk) DescribeEnvironmentManagedActionHistory(input *elasticbeanstalk.DescribeEnvironmentManagedActionHistoryInput) (*elasticbeanstalk.DescribeEnvironmentManagedActionHistoryOutput, error) {
	c.inc("DescribeEnvironmentManagedActionHistory")
	return c.svc.DescribeEnvironmentManagedActionHistory(input)
}

// DescribeEnvironmentManagedActionHistoryWithContext is a passthrough to the underlying DescribeEnvironmentManagedActionHistoryWithContext method.
// It will increment the count of requests made to DescribeEnvironmentManagedActionHistory.
func (c *ElasticBeanstalk) DescribeEnvironmentManagedActionHistoryWithContext(ctx aws.Context, input *elasticbeanstalk.DescribeEnvironmentManagedActionHistoryInput, opts ...request.Option) (*elasticbeanstalk.DescribeEnvironmentManagedActionHistoryOutput, error) {
	c.inc("DescribeEnvironmentManagedActionHistory")
	return c.svc.DescribeEnvironmentManagedActionHistoryWithContext(ctx, input, opts...)
}

// DescribeEnvironmentManagedActionsRequest is a passthrough to the underlying DescribeEnvironmentManagedActionsRequest.
// It will increment the count of requests made to DescribeEnvironmentManagedActions.
func (c *ElasticBeanstalk) DescribeEnvironmentManagedActionsRequest(input *elasticbeanstalk.DescribeEnvironmentManagedActionsInput) (req *request.Request, output *elasticbeanstalk.DescribeEnvironmentManagedActionsOutput) {
	c.inc("DescribeEnvironmentManagedActions")
	return c.svc.DescribeEnvironmentManagedActionsRequest(input)
}

// DescribeEnvironmentManagedActions is a passthrough to the underlying DescribeEnvironmentManagedActions method.
// It will increment the count of requests made to DescribeEnvironmentManagedActions.
func (c *ElasticBeanstalk) DescribeEnvironmentManagedActions(input *elasticbeanstalk.DescribeEnvironmentManagedActionsInput) (*elasticbeanstalk.DescribeEnvironmentManagedActionsOutput, error) {
	c.inc("DescribeEnvironmentManagedActions")
	return c.svc.DescribeEnvironmentManagedActions(input)
}

// DescribeEnvironmentManagedActionsWithContext is a passthrough to the underlying DescribeEnvironmentManagedActionsWithContext method.
// It will increment the count of requests made to DescribeEnvironmentManagedActions.
func (c *ElasticBeanstalk) DescribeEnvironmentManagedActionsWithContext(ctx aws.Context, input *elasticbeanstalk.DescribeEnvironmentManagedActionsInput, opts ...request.Option) (*elasticbeanstalk.DescribeEnvironmentManagedActionsOutput, error) {
	c.inc("DescribeEnvironmentManagedActions")
	return c.svc.DescribeEnvironmentManagedActionsWithContext(ctx, input, opts...)
}

// DescribeEnvironmentResourcesRequest is a passthrough to the underlying DescribeEnvironmentResourcesRequest.
// It will increment the count of requests made to DescribeEnvironmentResources.
func (c *ElasticBeanstalk) DescribeEnvironmentResourcesRequest(input *elasticbeanstalk.DescribeEnvironmentResourcesInput) (req *request.Request, output *elasticbeanstalk.DescribeEnvironmentResourcesOutput) {
	c.inc("DescribeEnvironmentResources")
	return c.svc.DescribeEnvironmentResourcesRequest(input)
}

// DescribeEnvironmentResources is a passthrough to the underlying DescribeEnvironmentResources method.
// It will increment the count of requests made to DescribeEnvironmentResources.
func (c *ElasticBeanstalk) DescribeEnvironmentResources(input *elasticbeanstalk.DescribeEnvironmentResourcesInput) (*elasticbeanstalk.DescribeEnvironmentResourcesOutput, error) {
	c.inc("DescribeEnvironmentResources")
	return c.svc.DescribeEnvironmentResources(input)
}

// DescribeEnvironmentResourcesWithContext is a passthrough to the underlying DescribeEnvironmentResourcesWithContext method.
// It will increment the count of requests made to DescribeEnvironmentResources.
func (c *ElasticBeanstalk) DescribeEnvironmentResourcesWithContext(ctx aws.Context, input *elasticbeanstalk.DescribeEnvironmentResourcesInput, opts ...request.Option) (*elasticbeanstalk.DescribeEnvironmentResourcesOutput, error) {
	c.inc("DescribeEnvironmentResources")
	return c.svc.DescribeEnvironmentResourcesWithContext(ctx, input, opts...)
}

// DescribeEnvironmentsRequest is a passthrough to the underlying DescribeEnvironmentsRequest.
// It will increment the count of requests made to DescribeEnvironments.
func (c *ElasticBeanstalk) DescribeEnvironmentsRequest(input *elasticbeanstalk.DescribeEnvironmentsInput) (req *request.Request, output *elasticbeanstalk.EnvironmentDescriptionsMessage) {
	c.inc("DescribeEnvironments")
	return c.svc.DescribeEnvironmentsRequest(input)
}

// DescribeEnvironments is a passthrough to the underlying DescribeEnvironments method.
// It will increment the count of requests made to DescribeEnvironments.
func (c *ElasticBeanstalk) DescribeEnvironments(input *elasticbeanstalk.DescribeEnvironmentsInput) (*elasticbeanstalk.EnvironmentDescriptionsMessage, error) {
	c.inc("DescribeEnvironments")
	return c.svc.DescribeEnvironments(input)
}

// DescribeEnvironmentsWithContext is a passthrough to the underlying DescribeEnvironmentsWithContext method.
// It will increment the count of requests made to DescribeEnvironments.
func (c *ElasticBeanstalk) DescribeEnvironmentsWithContext(ctx aws.Context, input *elasticbeanstalk.DescribeEnvironmentsInput, opts ...request.Option) (*elasticbeanstalk.EnvironmentDescriptionsMessage, error) {
	c.inc("DescribeEnvironments")
	return c.svc.DescribeEnvironmentsWithContext(ctx, input, opts...)
}

// DescribeEventsRequest is a passthrough to the underlying DescribeEventsRequest.
// It will increment the count of requests made to DescribeEvents.
func (c *ElasticBeanstalk) DescribeEventsRequest(input *elasticbeanstalk.DescribeEventsInput) (req *request.Request, output *elasticbeanstalk.DescribeEventsOutput) {
	c.inc("DescribeEvents")
	return c.svc.DescribeEventsRequest(input)
}

// DescribeEvents is a passthrough to the underlying DescribeEvents method.
// It will increment the count of requests made to DescribeEvents.
func (c *ElasticBeanstalk) DescribeEvents(input *elasticbeanstalk.DescribeEventsInput) (*elasticbeanstalk.DescribeEventsOutput, error) {
	c.inc("DescribeEvents")
	return c.svc.DescribeEvents(input)
}

// DescribeEventsWithContext is a passthrough to the underlying DescribeEventsWithContext method.
// It will increment the count of requests made to DescribeEvents.
func (c *ElasticBeanstalk) DescribeEventsWithContext(ctx aws.Context, input *elasticbeanstalk.DescribeEventsInput, opts ...request.Option) (*elasticbeanstalk.DescribeEventsOutput, error) {
	c.inc("DescribeEvents")
	return c.svc.DescribeEventsWithContext(ctx, input, opts...)
}

// DescribeEventsPages is a passthrough to the underlying DescribeEventsPages method.
// It will increment the count of requests made to DescribeEvents on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeEventsPagesWithContext to avoid this.
func (c *ElasticBeanstalk) DescribeEventsPages(input *elasticbeanstalk.DescribeEventsInput, fn func(*elasticbeanstalk.DescribeEventsOutput, bool) bool) error {
	wrappedFn := func(page *elasticbeanstalk.DescribeEventsOutput, lastPage bool) bool {
		c.inc("DescribeEvents")
		return fn(page, lastPage)
	}
	return c.DescribeEventsPages(input, wrappedFn)
}

// DescribeEventsPagesWithContext is a passthrough to the underlying DescribeEventsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeEvents when applied to the request.
func (c *ElasticBeanstalk) DescribeEventsPagesWithContext(ctx aws.Context, input *elasticbeanstalk.DescribeEventsInput, fn func(*elasticbeanstalk.DescribeEventsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeEvents"))
	return c.DescribeEventsPagesWithContext(ctx, input, fn, opts...)
}

// DescribeInstancesHealthRequest is a passthrough to the underlying DescribeInstancesHealthRequest.
// It will increment the count of requests made to DescribeInstancesHealth.
func (c *ElasticBeanstalk) DescribeInstancesHealthRequest(input *elasticbeanstalk.DescribeInstancesHealthInput) (req *request.Request, output *elasticbeanstalk.DescribeInstancesHealthOutput) {
	c.inc("DescribeInstancesHealth")
	return c.svc.DescribeInstancesHealthRequest(input)
}

// DescribeInstancesHealth is a passthrough to the underlying DescribeInstancesHealth method.
// It will increment the count of requests made to DescribeInstancesHealth.
func (c *ElasticBeanstalk) DescribeInstancesHealth(input *elasticbeanstalk.DescribeInstancesHealthInput) (*elasticbeanstalk.DescribeInstancesHealthOutput, error) {
	c.inc("DescribeInstancesHealth")
	return c.svc.DescribeInstancesHealth(input)
}

// DescribeInstancesHealthWithContext is a passthrough to the underlying DescribeInstancesHealthWithContext method.
// It will increment the count of requests made to DescribeInstancesHealth.
func (c *ElasticBeanstalk) DescribeInstancesHealthWithContext(ctx aws.Context, input *elasticbeanstalk.DescribeInstancesHealthInput, opts ...request.Option) (*elasticbeanstalk.DescribeInstancesHealthOutput, error) {
	c.inc("DescribeInstancesHealth")
	return c.svc.DescribeInstancesHealthWithContext(ctx, input, opts...)
}

// DescribePlatformVersionRequest is a passthrough to the underlying DescribePlatformVersionRequest.
// It will increment the count of requests made to DescribePlatformVersion.
func (c *ElasticBeanstalk) DescribePlatformVersionRequest(input *elasticbeanstalk.DescribePlatformVersionInput) (req *request.Request, output *elasticbeanstalk.DescribePlatformVersionOutput) {
	c.inc("DescribePlatformVersion")
	return c.svc.DescribePlatformVersionRequest(input)
}

// DescribePlatformVersion is a passthrough to the underlying DescribePlatformVersion method.
// It will increment the count of requests made to DescribePlatformVersion.
func (c *ElasticBeanstalk) DescribePlatformVersion(input *elasticbeanstalk.DescribePlatformVersionInput) (*elasticbeanstalk.DescribePlatformVersionOutput, error) {
	c.inc("DescribePlatformVersion")
	return c.svc.DescribePlatformVersion(input)
}

// DescribePlatformVersionWithContext is a passthrough to the underlying DescribePlatformVersionWithContext method.
// It will increment the count of requests made to DescribePlatformVersion.
func (c *ElasticBeanstalk) DescribePlatformVersionWithContext(ctx aws.Context, input *elasticbeanstalk.DescribePlatformVersionInput, opts ...request.Option) (*elasticbeanstalk.DescribePlatformVersionOutput, error) {
	c.inc("DescribePlatformVersion")
	return c.svc.DescribePlatformVersionWithContext(ctx, input, opts...)
}

// ListAvailableSolutionStacksRequest is a passthrough to the underlying ListAvailableSolutionStacksRequest.
// It will increment the count of requests made to ListAvailableSolutionStacks.
func (c *ElasticBeanstalk) ListAvailableSolutionStacksRequest(input *elasticbeanstalk.ListAvailableSolutionStacksInput) (req *request.Request, output *elasticbeanstalk.ListAvailableSolutionStacksOutput) {
	c.inc("ListAvailableSolutionStacks")
	return c.svc.ListAvailableSolutionStacksRequest(input)
}

// ListAvailableSolutionStacks is a passthrough to the underlying ListAvailableSolutionStacks method.
// It will increment the count of requests made to ListAvailableSolutionStacks.
func (c *ElasticBeanstalk) ListAvailableSolutionStacks(input *elasticbeanstalk.ListAvailableSolutionStacksInput) (*elasticbeanstalk.ListAvailableSolutionStacksOutput, error) {
	c.inc("ListAvailableSolutionStacks")
	return c.svc.ListAvailableSolutionStacks(input)
}

// ListAvailableSolutionStacksWithContext is a passthrough to the underlying ListAvailableSolutionStacksWithContext method.
// It will increment the count of requests made to ListAvailableSolutionStacks.
func (c *ElasticBeanstalk) ListAvailableSolutionStacksWithContext(ctx aws.Context, input *elasticbeanstalk.ListAvailableSolutionStacksInput, opts ...request.Option) (*elasticbeanstalk.ListAvailableSolutionStacksOutput, error) {
	c.inc("ListAvailableSolutionStacks")
	return c.svc.ListAvailableSolutionStacksWithContext(ctx, input, opts...)
}

// ListPlatformVersionsRequest is a passthrough to the underlying ListPlatformVersionsRequest.
// It will increment the count of requests made to ListPlatformVersions.
func (c *ElasticBeanstalk) ListPlatformVersionsRequest(input *elasticbeanstalk.ListPlatformVersionsInput) (req *request.Request, output *elasticbeanstalk.ListPlatformVersionsOutput) {
	c.inc("ListPlatformVersions")
	return c.svc.ListPlatformVersionsRequest(input)
}

// ListPlatformVersions is a passthrough to the underlying ListPlatformVersions method.
// It will increment the count of requests made to ListPlatformVersions.
func (c *ElasticBeanstalk) ListPlatformVersions(input *elasticbeanstalk.ListPlatformVersionsInput) (*elasticbeanstalk.ListPlatformVersionsOutput, error) {
	c.inc("ListPlatformVersions")
	return c.svc.ListPlatformVersions(input)
}

// ListPlatformVersionsWithContext is a passthrough to the underlying ListPlatformVersionsWithContext method.
// It will increment the count of requests made to ListPlatformVersions.
func (c *ElasticBeanstalk) ListPlatformVersionsWithContext(ctx aws.Context, input *elasticbeanstalk.ListPlatformVersionsInput, opts ...request.Option) (*elasticbeanstalk.ListPlatformVersionsOutput, error) {
	c.inc("ListPlatformVersions")
	return c.svc.ListPlatformVersionsWithContext(ctx, input, opts...)
}

// ListTagsForResourceRequest is a passthrough to the underlying ListTagsForResourceRequest.
// It will increment the count of requests made to ListTagsForResource.
func (c *ElasticBeanstalk) ListTagsForResourceRequest(input *elasticbeanstalk.ListTagsForResourceInput) (req *request.Request, output *elasticbeanstalk.ListTagsForResourceOutput) {
	c.inc("ListTagsForResource")
	return c.svc.ListTagsForResourceRequest(input)
}

// ListTagsForResource is a passthrough to the underlying ListTagsForResource method.
// It will increment the count of requests made to ListTagsForResource.
func (c *ElasticBeanstalk) ListTagsForResource(input *elasticbeanstalk.ListTagsForResourceInput) (*elasticbeanstalk.ListTagsForResourceOutput, error) {
	c.inc("ListTagsForResource")
	return c.svc.ListTagsForResource(input)
}

// ListTagsForResourceWithContext is a passthrough to the underlying ListTagsForResourceWithContext method.
// It will increment the count of requests made to ListTagsForResource.
func (c *ElasticBeanstalk) ListTagsForResourceWithContext(ctx aws.Context, input *elasticbeanstalk.ListTagsForResourceInput, opts ...request.Option) (*elasticbeanstalk.ListTagsForResourceOutput, error) {
	c.inc("ListTagsForResource")
	return c.svc.ListTagsForResourceWithContext(ctx, input, opts...)
}

// RebuildEnvironmentRequest is a passthrough to the underlying RebuildEnvironmentRequest.
// It will increment the count of requests made to RebuildEnvironment.
func (c *ElasticBeanstalk) RebuildEnvironmentRequest(input *elasticbeanstalk.RebuildEnvironmentInput) (req *request.Request, output *elasticbeanstalk.RebuildEnvironmentOutput) {
	c.inc("RebuildEnvironment")
	return c.svc.RebuildEnvironmentRequest(input)
}

// RebuildEnvironment is a passthrough to the underlying RebuildEnvironment method.
// It will increment the count of requests made to RebuildEnvironment.
func (c *ElasticBeanstalk) RebuildEnvironment(input *elasticbeanstalk.RebuildEnvironmentInput) (*elasticbeanstalk.RebuildEnvironmentOutput, error) {
	c.inc("RebuildEnvironment")
	return c.svc.RebuildEnvironment(input)
}

// RebuildEnvironmentWithContext is a passthrough to the underlying RebuildEnvironmentWithContext method.
// It will increment the count of requests made to RebuildEnvironment.
func (c *ElasticBeanstalk) RebuildEnvironmentWithContext(ctx aws.Context, input *elasticbeanstalk.RebuildEnvironmentInput, opts ...request.Option) (*elasticbeanstalk.RebuildEnvironmentOutput, error) {
	c.inc("RebuildEnvironment")
	return c.svc.RebuildEnvironmentWithContext(ctx, input, opts...)
}

// RequestEnvironmentInfoRequest is a passthrough to the underlying RequestEnvironmentInfoRequest.
// It will increment the count of requests made to RequestEnvironmentInfo.
func (c *ElasticBeanstalk) RequestEnvironmentInfoRequest(input *elasticbeanstalk.RequestEnvironmentInfoInput) (req *request.Request, output *elasticbeanstalk.RequestEnvironmentInfoOutput) {
	c.inc("RequestEnvironmentInfo")
	return c.svc.RequestEnvironmentInfoRequest(input)
}

// RequestEnvironmentInfo is a passthrough to the underlying RequestEnvironmentInfo method.
// It will increment the count of requests made to RequestEnvironmentInfo.
func (c *ElasticBeanstalk) RequestEnvironmentInfo(input *elasticbeanstalk.RequestEnvironmentInfoInput) (*elasticbeanstalk.RequestEnvironmentInfoOutput, error) {
	c.inc("RequestEnvironmentInfo")
	return c.svc.RequestEnvironmentInfo(input)
}

// RequestEnvironmentInfoWithContext is a passthrough to the underlying RequestEnvironmentInfoWithContext method.
// It will increment the count of requests made to RequestEnvironmentInfo.
func (c *ElasticBeanstalk) RequestEnvironmentInfoWithContext(ctx aws.Context, input *elasticbeanstalk.RequestEnvironmentInfoInput, opts ...request.Option) (*elasticbeanstalk.RequestEnvironmentInfoOutput, error) {
	c.inc("RequestEnvironmentInfo")
	return c.svc.RequestEnvironmentInfoWithContext(ctx, input, opts...)
}

// RestartAppServerRequest is a passthrough to the underlying RestartAppServerRequest.
// It will increment the count of requests made to RestartAppServer.
func (c *ElasticBeanstalk) RestartAppServerRequest(input *elasticbeanstalk.RestartAppServerInput) (req *request.Request, output *elasticbeanstalk.RestartAppServerOutput) {
	c.inc("RestartAppServer")
	return c.svc.RestartAppServerRequest(input)
}

// RestartAppServer is a passthrough to the underlying RestartAppServer method.
// It will increment the count of requests made to RestartAppServer.
func (c *ElasticBeanstalk) RestartAppServer(input *elasticbeanstalk.RestartAppServerInput) (*elasticbeanstalk.RestartAppServerOutput, error) {
	c.inc("RestartAppServer")
	return c.svc.RestartAppServer(input)
}

// RestartAppServerWithContext is a passthrough to the underlying RestartAppServerWithContext method.
// It will increment the count of requests made to RestartAppServer.
func (c *ElasticBeanstalk) RestartAppServerWithContext(ctx aws.Context, input *elasticbeanstalk.RestartAppServerInput, opts ...request.Option) (*elasticbeanstalk.RestartAppServerOutput, error) {
	c.inc("RestartAppServer")
	return c.svc.RestartAppServerWithContext(ctx, input, opts...)
}

// RetrieveEnvironmentInfoRequest is a passthrough to the underlying RetrieveEnvironmentInfoRequest.
// It will increment the count of requests made to RetrieveEnvironmentInfo.
func (c *ElasticBeanstalk) RetrieveEnvironmentInfoRequest(input *elasticbeanstalk.RetrieveEnvironmentInfoInput) (req *request.Request, output *elasticbeanstalk.RetrieveEnvironmentInfoOutput) {
	c.inc("RetrieveEnvironmentInfo")
	return c.svc.RetrieveEnvironmentInfoRequest(input)
}

// RetrieveEnvironmentInfo is a passthrough to the underlying RetrieveEnvironmentInfo method.
// It will increment the count of requests made to RetrieveEnvironmentInfo.
func (c *ElasticBeanstalk) RetrieveEnvironmentInfo(input *elasticbeanstalk.RetrieveEnvironmentInfoInput) (*elasticbeanstalk.RetrieveEnvironmentInfoOutput, error) {
	c.inc("RetrieveEnvironmentInfo")
	return c.svc.RetrieveEnvironmentInfo(input)
}

// RetrieveEnvironmentInfoWithContext is a passthrough to the underlying RetrieveEnvironmentInfoWithContext method.
// It will increment the count of requests made to RetrieveEnvironmentInfo.
func (c *ElasticBeanstalk) RetrieveEnvironmentInfoWithContext(ctx aws.Context, input *elasticbeanstalk.RetrieveEnvironmentInfoInput, opts ...request.Option) (*elasticbeanstalk.RetrieveEnvironmentInfoOutput, error) {
	c.inc("RetrieveEnvironmentInfo")
	return c.svc.RetrieveEnvironmentInfoWithContext(ctx, input, opts...)
}

// SwapEnvironmentCNAMEsRequest is a passthrough to the underlying SwapEnvironmentCNAMEsRequest.
// It will increment the count of requests made to SwapEnvironmentCNAMEs.
func (c *ElasticBeanstalk) SwapEnvironmentCNAMEsRequest(input *elasticbeanstalk.SwapEnvironmentCNAMEsInput) (req *request.Request, output *elasticbeanstalk.SwapEnvironmentCNAMEsOutput) {
	c.inc("SwapEnvironmentCNAMEs")
	return c.svc.SwapEnvironmentCNAMEsRequest(input)
}

// SwapEnvironmentCNAMEs is a passthrough to the underlying SwapEnvironmentCNAMEs method.
// It will increment the count of requests made to SwapEnvironmentCNAMEs.
func (c *ElasticBeanstalk) SwapEnvironmentCNAMEs(input *elasticbeanstalk.SwapEnvironmentCNAMEsInput) (*elasticbeanstalk.SwapEnvironmentCNAMEsOutput, error) {
	c.inc("SwapEnvironmentCNAMEs")
	return c.svc.SwapEnvironmentCNAMEs(input)
}

// SwapEnvironmentCNAMEsWithContext is a passthrough to the underlying SwapEnvironmentCNAMEsWithContext method.
// It will increment the count of requests made to SwapEnvironmentCNAMEs.
func (c *ElasticBeanstalk) SwapEnvironmentCNAMEsWithContext(ctx aws.Context, input *elasticbeanstalk.SwapEnvironmentCNAMEsInput, opts ...request.Option) (*elasticbeanstalk.SwapEnvironmentCNAMEsOutput, error) {
	c.inc("SwapEnvironmentCNAMEs")
	return c.svc.SwapEnvironmentCNAMEsWithContext(ctx, input, opts...)
}

// TerminateEnvironmentRequest is a passthrough to the underlying TerminateEnvironmentRequest.
// It will increment the count of requests made to TerminateEnvironment.
func (c *ElasticBeanstalk) TerminateEnvironmentRequest(input *elasticbeanstalk.TerminateEnvironmentInput) (req *request.Request, output *elasticbeanstalk.EnvironmentDescription) {
	c.inc("TerminateEnvironment")
	return c.svc.TerminateEnvironmentRequest(input)
}

// TerminateEnvironment is a passthrough to the underlying TerminateEnvironment method.
// It will increment the count of requests made to TerminateEnvironment.
func (c *ElasticBeanstalk) TerminateEnvironment(input *elasticbeanstalk.TerminateEnvironmentInput) (*elasticbeanstalk.EnvironmentDescription, error) {
	c.inc("TerminateEnvironment")
	return c.svc.TerminateEnvironment(input)
}

// TerminateEnvironmentWithContext is a passthrough to the underlying TerminateEnvironmentWithContext method.
// It will increment the count of requests made to TerminateEnvironment.
func (c *ElasticBeanstalk) TerminateEnvironmentWithContext(ctx aws.Context, input *elasticbeanstalk.TerminateEnvironmentInput, opts ...request.Option) (*elasticbeanstalk.EnvironmentDescription, error) {
	c.inc("TerminateEnvironment")
	return c.svc.TerminateEnvironmentWithContext(ctx, input, opts...)
}

// UpdateApplicationRequest is a passthrough to the underlying UpdateApplicationRequest.
// It will increment the count of requests made to UpdateApplication.
func (c *ElasticBeanstalk) UpdateApplicationRequest(input *elasticbeanstalk.UpdateApplicationInput) (req *request.Request, output *elasticbeanstalk.ApplicationDescriptionMessage) {
	c.inc("UpdateApplication")
	return c.svc.UpdateApplicationRequest(input)
}

// UpdateApplication is a passthrough to the underlying UpdateApplication method.
// It will increment the count of requests made to UpdateApplication.
func (c *ElasticBeanstalk) UpdateApplication(input *elasticbeanstalk.UpdateApplicationInput) (*elasticbeanstalk.ApplicationDescriptionMessage, error) {
	c.inc("UpdateApplication")
	return c.svc.UpdateApplication(input)
}

// UpdateApplicationWithContext is a passthrough to the underlying UpdateApplicationWithContext method.
// It will increment the count of requests made to UpdateApplication.
func (c *ElasticBeanstalk) UpdateApplicationWithContext(ctx aws.Context, input *elasticbeanstalk.UpdateApplicationInput, opts ...request.Option) (*elasticbeanstalk.ApplicationDescriptionMessage, error) {
	c.inc("UpdateApplication")
	return c.svc.UpdateApplicationWithContext(ctx, input, opts...)
}

// UpdateApplicationResourceLifecycleRequest is a passthrough to the underlying UpdateApplicationResourceLifecycleRequest.
// It will increment the count of requests made to UpdateApplicationResourceLifecycle.
func (c *ElasticBeanstalk) UpdateApplicationResourceLifecycleRequest(input *elasticbeanstalk.UpdateApplicationResourceLifecycleInput) (req *request.Request, output *elasticbeanstalk.UpdateApplicationResourceLifecycleOutput) {
	c.inc("UpdateApplicationResourceLifecycle")
	return c.svc.UpdateApplicationResourceLifecycleRequest(input)
}

// UpdateApplicationResourceLifecycle is a passthrough to the underlying UpdateApplicationResourceLifecycle method.
// It will increment the count of requests made to UpdateApplicationResourceLifecycle.
func (c *ElasticBeanstalk) UpdateApplicationResourceLifecycle(input *elasticbeanstalk.UpdateApplicationResourceLifecycleInput) (*elasticbeanstalk.UpdateApplicationResourceLifecycleOutput, error) {
	c.inc("UpdateApplicationResourceLifecycle")
	return c.svc.UpdateApplicationResourceLifecycle(input)
}

// UpdateApplicationResourceLifecycleWithContext is a passthrough to the underlying UpdateApplicationResourceLifecycleWithContext method.
// It will increment the count of requests made to UpdateApplicationResourceLifecycle.
func (c *ElasticBeanstalk) UpdateApplicationResourceLifecycleWithContext(ctx aws.Context, input *elasticbeanstalk.UpdateApplicationResourceLifecycleInput, opts ...request.Option) (*elasticbeanstalk.UpdateApplicationResourceLifecycleOutput, error) {
	c.inc("UpdateApplicationResourceLifecycle")
	return c.svc.UpdateApplicationResourceLifecycleWithContext(ctx, input, opts...)
}

// UpdateApplicationVersionRequest is a passthrough to the underlying UpdateApplicationVersionRequest.
// It will increment the count of requests made to UpdateApplicationVersion.
func (c *ElasticBeanstalk) UpdateApplicationVersionRequest(input *elasticbeanstalk.UpdateApplicationVersionInput) (req *request.Request, output *elasticbeanstalk.ApplicationVersionDescriptionMessage) {
	c.inc("UpdateApplicationVersion")
	return c.svc.UpdateApplicationVersionRequest(input)
}

// UpdateApplicationVersion is a passthrough to the underlying UpdateApplicationVersion method.
// It will increment the count of requests made to UpdateApplicationVersion.
func (c *ElasticBeanstalk) UpdateApplicationVersion(input *elasticbeanstalk.UpdateApplicationVersionInput) (*elasticbeanstalk.ApplicationVersionDescriptionMessage, error) {
	c.inc("UpdateApplicationVersion")
	return c.svc.UpdateApplicationVersion(input)
}

// UpdateApplicationVersionWithContext is a passthrough to the underlying UpdateApplicationVersionWithContext method.
// It will increment the count of requests made to UpdateApplicationVersion.
func (c *ElasticBeanstalk) UpdateApplicationVersionWithContext(ctx aws.Context, input *elasticbeanstalk.UpdateApplicationVersionInput, opts ...request.Option) (*elasticbeanstalk.ApplicationVersionDescriptionMessage, error) {
	c.inc("UpdateApplicationVersion")
	return c.svc.UpdateApplicationVersionWithContext(ctx, input, opts...)
}

// UpdateConfigurationTemplateRequest is a passthrough to the underlying UpdateConfigurationTemplateRequest.
// It will increment the count of requests made to UpdateConfigurationTemplate.
func (c *ElasticBeanstalk) UpdateConfigurationTemplateRequest(input *elasticbeanstalk.UpdateConfigurationTemplateInput) (req *request.Request, output *elasticbeanstalk.ConfigurationSettingsDescription) {
	c.inc("UpdateConfigurationTemplate")
	return c.svc.UpdateConfigurationTemplateRequest(input)
}

// UpdateConfigurationTemplate is a passthrough to the underlying UpdateConfigurationTemplate method.
// It will increment the count of requests made to UpdateConfigurationTemplate.
func (c *ElasticBeanstalk) UpdateConfigurationTemplate(input *elasticbeanstalk.UpdateConfigurationTemplateInput) (*elasticbeanstalk.ConfigurationSettingsDescription, error) {
	c.inc("UpdateConfigurationTemplate")
	return c.svc.UpdateConfigurationTemplate(input)
}

// UpdateConfigurationTemplateWithContext is a passthrough to the underlying UpdateConfigurationTemplateWithContext method.
// It will increment the count of requests made to UpdateConfigurationTemplate.
func (c *ElasticBeanstalk) UpdateConfigurationTemplateWithContext(ctx aws.Context, input *elasticbeanstalk.UpdateConfigurationTemplateInput, opts ...request.Option) (*elasticbeanstalk.ConfigurationSettingsDescription, error) {
	c.inc("UpdateConfigurationTemplate")
	return c.svc.UpdateConfigurationTemplateWithContext(ctx, input, opts...)
}

// UpdateEnvironmentRequest is a passthrough to the underlying UpdateEnvironmentRequest.
// It will increment the count of requests made to UpdateEnvironment.
func (c *ElasticBeanstalk) UpdateEnvironmentRequest(input *elasticbeanstalk.UpdateEnvironmentInput) (req *request.Request, output *elasticbeanstalk.EnvironmentDescription) {
	c.inc("UpdateEnvironment")
	return c.svc.UpdateEnvironmentRequest(input)
}

// UpdateEnvironment is a passthrough to the underlying UpdateEnvironment method.
// It will increment the count of requests made to UpdateEnvironment.
func (c *ElasticBeanstalk) UpdateEnvironment(input *elasticbeanstalk.UpdateEnvironmentInput) (*elasticbeanstalk.EnvironmentDescription, error) {
	c.inc("UpdateEnvironment")
	return c.svc.UpdateEnvironment(input)
}

// UpdateEnvironmentWithContext is a passthrough to the underlying UpdateEnvironmentWithContext method.
// It will increment the count of requests made to UpdateEnvironment.
func (c *ElasticBeanstalk) UpdateEnvironmentWithContext(ctx aws.Context, input *elasticbeanstalk.UpdateEnvironmentInput, opts ...request.Option) (*elasticbeanstalk.EnvironmentDescription, error) {
	c.inc("UpdateEnvironment")
	return c.svc.UpdateEnvironmentWithContext(ctx, input, opts...)
}

// UpdateTagsForResourceRequest is a passthrough to the underlying UpdateTagsForResourceRequest.
// It will increment the count of requests made to UpdateTagsForResource.
func (c *ElasticBeanstalk) UpdateTagsForResourceRequest(input *elasticbeanstalk.UpdateTagsForResourceInput) (req *request.Request, output *elasticbeanstalk.UpdateTagsForResourceOutput) {
	c.inc("UpdateTagsForResource")
	return c.svc.UpdateTagsForResourceRequest(input)
}

// UpdateTagsForResource is a passthrough to the underlying UpdateTagsForResource method.
// It will increment the count of requests made to UpdateTagsForResource.
func (c *ElasticBeanstalk) UpdateTagsForResource(input *elasticbeanstalk.UpdateTagsForResourceInput) (*elasticbeanstalk.UpdateTagsForResourceOutput, error) {
	c.inc("UpdateTagsForResource")
	return c.svc.UpdateTagsForResource(input)
}

// UpdateTagsForResourceWithContext is a passthrough to the underlying UpdateTagsForResourceWithContext method.
// It will increment the count of requests made to UpdateTagsForResource.
func (c *ElasticBeanstalk) UpdateTagsForResourceWithContext(ctx aws.Context, input *elasticbeanstalk.UpdateTagsForResourceInput, opts ...request.Option) (*elasticbeanstalk.UpdateTagsForResourceOutput, error) {
	c.inc("UpdateTagsForResource")
	return c.svc.UpdateTagsForResourceWithContext(ctx, input, opts...)
}

// ValidateConfigurationSettingsRequest is a passthrough to the underlying ValidateConfigurationSettingsRequest.
// It will increment the count of requests made to ValidateConfigurationSettings.
func (c *ElasticBeanstalk) ValidateConfigurationSettingsRequest(input *elasticbeanstalk.ValidateConfigurationSettingsInput) (req *request.Request, output *elasticbeanstalk.ValidateConfigurationSettingsOutput) {
	c.inc("ValidateConfigurationSettings")
	return c.svc.ValidateConfigurationSettingsRequest(input)
}

// ValidateConfigurationSettings is a passthrough to the underlying ValidateConfigurationSettings method.
// It will increment the count of requests made to ValidateConfigurationSettings.
func (c *ElasticBeanstalk) ValidateConfigurationSettings(input *elasticbeanstalk.ValidateConfigurationSettingsInput) (*elasticbeanstalk.ValidateConfigurationSettingsOutput, error) {
	c.inc("ValidateConfigurationSettings")
	return c.svc.ValidateConfigurationSettings(input)
}

// ValidateConfigurationSettingsWithContext is a passthrough to the underlying ValidateConfigurationSettingsWithContext method.
// It will increment the count of requests made to ValidateConfigurationSettings.
func (c *ElasticBeanstalk) ValidateConfigurationSettingsWithContext(ctx aws.Context, input *elasticbeanstalk.ValidateConfigurationSettingsInput, opts ...request.Option) (*elasticbeanstalk.ValidateConfigurationSettingsOutput, error) {
	c.inc("ValidateConfigurationSettings")
	return c.svc.ValidateConfigurationSettingsWithContext(ctx, input, opts...)
}
