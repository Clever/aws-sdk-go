// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package lexmodelbuildingservicecounter

import (
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/lexmodelbuildingservice"
)

// CreateBotVersionRequest is a passthrough to the underlying CreateBotVersionRequest.
// It will increment the count of requests made to CreateBotVersion.
func (c *LexModelBuildingService) CreateBotVersionRequest(input *lexmodelbuildingservice.CreateBotVersionInput) (req *request.Request, output *lexmodelbuildingservice.CreateBotVersionOutput) {
	c.inc("CreateBotVersion")
	return c.svc.CreateBotVersionRequest(input)
}

// CreateBotVersion is a passthrough to the underlying CreateBotVersion method.
// It will increment the count of requests made to CreateBotVersion.
func (c *LexModelBuildingService) CreateBotVersion(input *lexmodelbuildingservice.CreateBotVersionInput) (*lexmodelbuildingservice.CreateBotVersionOutput, error) {
	c.inc("CreateBotVersion")
	return c.svc.CreateBotVersion(input)
}

// CreateBotVersionWithContext is a passthrough to the underlying CreateBotVersionWithContext method.
// It will increment the count of requests made to CreateBotVersion.
func (c *LexModelBuildingService) CreateBotVersionWithContext(ctx aws.Context, input *lexmodelbuildingservice.CreateBotVersionInput, opts ...request.Option) (*lexmodelbuildingservice.CreateBotVersionOutput, error) {
	c.inc("CreateBotVersion")
	return c.svc.CreateBotVersionWithContext(ctx, input, opts...)
}

// CreateIntentVersionRequest is a passthrough to the underlying CreateIntentVersionRequest.
// It will increment the count of requests made to CreateIntentVersion.
func (c *LexModelBuildingService) CreateIntentVersionRequest(input *lexmodelbuildingservice.CreateIntentVersionInput) (req *request.Request, output *lexmodelbuildingservice.CreateIntentVersionOutput) {
	c.inc("CreateIntentVersion")
	return c.svc.CreateIntentVersionRequest(input)
}

// CreateIntentVersion is a passthrough to the underlying CreateIntentVersion method.
// It will increment the count of requests made to CreateIntentVersion.
func (c *LexModelBuildingService) CreateIntentVersion(input *lexmodelbuildingservice.CreateIntentVersionInput) (*lexmodelbuildingservice.CreateIntentVersionOutput, error) {
	c.inc("CreateIntentVersion")
	return c.svc.CreateIntentVersion(input)
}

// CreateIntentVersionWithContext is a passthrough to the underlying CreateIntentVersionWithContext method.
// It will increment the count of requests made to CreateIntentVersion.
func (c *LexModelBuildingService) CreateIntentVersionWithContext(ctx aws.Context, input *lexmodelbuildingservice.CreateIntentVersionInput, opts ...request.Option) (*lexmodelbuildingservice.CreateIntentVersionOutput, error) {
	c.inc("CreateIntentVersion")
	return c.svc.CreateIntentVersionWithContext(ctx, input, opts...)
}

// CreateSlotTypeVersionRequest is a passthrough to the underlying CreateSlotTypeVersionRequest.
// It will increment the count of requests made to CreateSlotTypeVersion.
func (c *LexModelBuildingService) CreateSlotTypeVersionRequest(input *lexmodelbuildingservice.CreateSlotTypeVersionInput) (req *request.Request, output *lexmodelbuildingservice.CreateSlotTypeVersionOutput) {
	c.inc("CreateSlotTypeVersion")
	return c.svc.CreateSlotTypeVersionRequest(input)
}

// CreateSlotTypeVersion is a passthrough to the underlying CreateSlotTypeVersion method.
// It will increment the count of requests made to CreateSlotTypeVersion.
func (c *LexModelBuildingService) CreateSlotTypeVersion(input *lexmodelbuildingservice.CreateSlotTypeVersionInput) (*lexmodelbuildingservice.CreateSlotTypeVersionOutput, error) {
	c.inc("CreateSlotTypeVersion")
	return c.svc.CreateSlotTypeVersion(input)
}

// CreateSlotTypeVersionWithContext is a passthrough to the underlying CreateSlotTypeVersionWithContext method.
// It will increment the count of requests made to CreateSlotTypeVersion.
func (c *LexModelBuildingService) CreateSlotTypeVersionWithContext(ctx aws.Context, input *lexmodelbuildingservice.CreateSlotTypeVersionInput, opts ...request.Option) (*lexmodelbuildingservice.CreateSlotTypeVersionOutput, error) {
	c.inc("CreateSlotTypeVersion")
	return c.svc.CreateSlotTypeVersionWithContext(ctx, input, opts...)
}

// DeleteBotRequest is a passthrough to the underlying DeleteBotRequest.
// It will increment the count of requests made to DeleteBot.
func (c *LexModelBuildingService) DeleteBotRequest(input *lexmodelbuildingservice.DeleteBotInput) (req *request.Request, output *lexmodelbuildingservice.DeleteBotOutput) {
	c.inc("DeleteBot")
	return c.svc.DeleteBotRequest(input)
}

// DeleteBot is a passthrough to the underlying DeleteBot method.
// It will increment the count of requests made to DeleteBot.
func (c *LexModelBuildingService) DeleteBot(input *lexmodelbuildingservice.DeleteBotInput) (*lexmodelbuildingservice.DeleteBotOutput, error) {
	c.inc("DeleteBot")
	return c.svc.DeleteBot(input)
}

// DeleteBotWithContext is a passthrough to the underlying DeleteBotWithContext method.
// It will increment the count of requests made to DeleteBot.
func (c *LexModelBuildingService) DeleteBotWithContext(ctx aws.Context, input *lexmodelbuildingservice.DeleteBotInput, opts ...request.Option) (*lexmodelbuildingservice.DeleteBotOutput, error) {
	c.inc("DeleteBot")
	return c.svc.DeleteBotWithContext(ctx, input, opts...)
}

// DeleteBotAliasRequest is a passthrough to the underlying DeleteBotAliasRequest.
// It will increment the count of requests made to DeleteBotAlias.
func (c *LexModelBuildingService) DeleteBotAliasRequest(input *lexmodelbuildingservice.DeleteBotAliasInput) (req *request.Request, output *lexmodelbuildingservice.DeleteBotAliasOutput) {
	c.inc("DeleteBotAlias")
	return c.svc.DeleteBotAliasRequest(input)
}

// DeleteBotAlias is a passthrough to the underlying DeleteBotAlias method.
// It will increment the count of requests made to DeleteBotAlias.
func (c *LexModelBuildingService) DeleteBotAlias(input *lexmodelbuildingservice.DeleteBotAliasInput) (*lexmodelbuildingservice.DeleteBotAliasOutput, error) {
	c.inc("DeleteBotAlias")
	return c.svc.DeleteBotAlias(input)
}

// DeleteBotAliasWithContext is a passthrough to the underlying DeleteBotAliasWithContext method.
// It will increment the count of requests made to DeleteBotAlias.
func (c *LexModelBuildingService) DeleteBotAliasWithContext(ctx aws.Context, input *lexmodelbuildingservice.DeleteBotAliasInput, opts ...request.Option) (*lexmodelbuildingservice.DeleteBotAliasOutput, error) {
	c.inc("DeleteBotAlias")
	return c.svc.DeleteBotAliasWithContext(ctx, input, opts...)
}

// DeleteBotChannelAssociationRequest is a passthrough to the underlying DeleteBotChannelAssociationRequest.
// It will increment the count of requests made to DeleteBotChannelAssociation.
func (c *LexModelBuildingService) DeleteBotChannelAssociationRequest(input *lexmodelbuildingservice.DeleteBotChannelAssociationInput) (req *request.Request, output *lexmodelbuildingservice.DeleteBotChannelAssociationOutput) {
	c.inc("DeleteBotChannelAssociation")
	return c.svc.DeleteBotChannelAssociationRequest(input)
}

// DeleteBotChannelAssociation is a passthrough to the underlying DeleteBotChannelAssociation method.
// It will increment the count of requests made to DeleteBotChannelAssociation.
func (c *LexModelBuildingService) DeleteBotChannelAssociation(input *lexmodelbuildingservice.DeleteBotChannelAssociationInput) (*lexmodelbuildingservice.DeleteBotChannelAssociationOutput, error) {
	c.inc("DeleteBotChannelAssociation")
	return c.svc.DeleteBotChannelAssociation(input)
}

// DeleteBotChannelAssociationWithContext is a passthrough to the underlying DeleteBotChannelAssociationWithContext method.
// It will increment the count of requests made to DeleteBotChannelAssociation.
func (c *LexModelBuildingService) DeleteBotChannelAssociationWithContext(ctx aws.Context, input *lexmodelbuildingservice.DeleteBotChannelAssociationInput, opts ...request.Option) (*lexmodelbuildingservice.DeleteBotChannelAssociationOutput, error) {
	c.inc("DeleteBotChannelAssociation")
	return c.svc.DeleteBotChannelAssociationWithContext(ctx, input, opts...)
}

// DeleteBotVersionRequest is a passthrough to the underlying DeleteBotVersionRequest.
// It will increment the count of requests made to DeleteBotVersion.
func (c *LexModelBuildingService) DeleteBotVersionRequest(input *lexmodelbuildingservice.DeleteBotVersionInput) (req *request.Request, output *lexmodelbuildingservice.DeleteBotVersionOutput) {
	c.inc("DeleteBotVersion")
	return c.svc.DeleteBotVersionRequest(input)
}

// DeleteBotVersion is a passthrough to the underlying DeleteBotVersion method.
// It will increment the count of requests made to DeleteBotVersion.
func (c *LexModelBuildingService) DeleteBotVersion(input *lexmodelbuildingservice.DeleteBotVersionInput) (*lexmodelbuildingservice.DeleteBotVersionOutput, error) {
	c.inc("DeleteBotVersion")
	return c.svc.DeleteBotVersion(input)
}

// DeleteBotVersionWithContext is a passthrough to the underlying DeleteBotVersionWithContext method.
// It will increment the count of requests made to DeleteBotVersion.
func (c *LexModelBuildingService) DeleteBotVersionWithContext(ctx aws.Context, input *lexmodelbuildingservice.DeleteBotVersionInput, opts ...request.Option) (*lexmodelbuildingservice.DeleteBotVersionOutput, error) {
	c.inc("DeleteBotVersion")
	return c.svc.DeleteBotVersionWithContext(ctx, input, opts...)
}

// DeleteIntentRequest is a passthrough to the underlying DeleteIntentRequest.
// It will increment the count of requests made to DeleteIntent.
func (c *LexModelBuildingService) DeleteIntentRequest(input *lexmodelbuildingservice.DeleteIntentInput) (req *request.Request, output *lexmodelbuildingservice.DeleteIntentOutput) {
	c.inc("DeleteIntent")
	return c.svc.DeleteIntentRequest(input)
}

// DeleteIntent is a passthrough to the underlying DeleteIntent method.
// It will increment the count of requests made to DeleteIntent.
func (c *LexModelBuildingService) DeleteIntent(input *lexmodelbuildingservice.DeleteIntentInput) (*lexmodelbuildingservice.DeleteIntentOutput, error) {
	c.inc("DeleteIntent")
	return c.svc.DeleteIntent(input)
}

// DeleteIntentWithContext is a passthrough to the underlying DeleteIntentWithContext method.
// It will increment the count of requests made to DeleteIntent.
func (c *LexModelBuildingService) DeleteIntentWithContext(ctx aws.Context, input *lexmodelbuildingservice.DeleteIntentInput, opts ...request.Option) (*lexmodelbuildingservice.DeleteIntentOutput, error) {
	c.inc("DeleteIntent")
	return c.svc.DeleteIntentWithContext(ctx, input, opts...)
}

// DeleteIntentVersionRequest is a passthrough to the underlying DeleteIntentVersionRequest.
// It will increment the count of requests made to DeleteIntentVersion.
func (c *LexModelBuildingService) DeleteIntentVersionRequest(input *lexmodelbuildingservice.DeleteIntentVersionInput) (req *request.Request, output *lexmodelbuildingservice.DeleteIntentVersionOutput) {
	c.inc("DeleteIntentVersion")
	return c.svc.DeleteIntentVersionRequest(input)
}

// DeleteIntentVersion is a passthrough to the underlying DeleteIntentVersion method.
// It will increment the count of requests made to DeleteIntentVersion.
func (c *LexModelBuildingService) DeleteIntentVersion(input *lexmodelbuildingservice.DeleteIntentVersionInput) (*lexmodelbuildingservice.DeleteIntentVersionOutput, error) {
	c.inc("DeleteIntentVersion")
	return c.svc.DeleteIntentVersion(input)
}

// DeleteIntentVersionWithContext is a passthrough to the underlying DeleteIntentVersionWithContext method.
// It will increment the count of requests made to DeleteIntentVersion.
func (c *LexModelBuildingService) DeleteIntentVersionWithContext(ctx aws.Context, input *lexmodelbuildingservice.DeleteIntentVersionInput, opts ...request.Option) (*lexmodelbuildingservice.DeleteIntentVersionOutput, error) {
	c.inc("DeleteIntentVersion")
	return c.svc.DeleteIntentVersionWithContext(ctx, input, opts...)
}

// DeleteSlotTypeRequest is a passthrough to the underlying DeleteSlotTypeRequest.
// It will increment the count of requests made to DeleteSlotType.
func (c *LexModelBuildingService) DeleteSlotTypeRequest(input *lexmodelbuildingservice.DeleteSlotTypeInput) (req *request.Request, output *lexmodelbuildingservice.DeleteSlotTypeOutput) {
	c.inc("DeleteSlotType")
	return c.svc.DeleteSlotTypeRequest(input)
}

// DeleteSlotType is a passthrough to the underlying DeleteSlotType method.
// It will increment the count of requests made to DeleteSlotType.
func (c *LexModelBuildingService) DeleteSlotType(input *lexmodelbuildingservice.DeleteSlotTypeInput) (*lexmodelbuildingservice.DeleteSlotTypeOutput, error) {
	c.inc("DeleteSlotType")
	return c.svc.DeleteSlotType(input)
}

// DeleteSlotTypeWithContext is a passthrough to the underlying DeleteSlotTypeWithContext method.
// It will increment the count of requests made to DeleteSlotType.
func (c *LexModelBuildingService) DeleteSlotTypeWithContext(ctx aws.Context, input *lexmodelbuildingservice.DeleteSlotTypeInput, opts ...request.Option) (*lexmodelbuildingservice.DeleteSlotTypeOutput, error) {
	c.inc("DeleteSlotType")
	return c.svc.DeleteSlotTypeWithContext(ctx, input, opts...)
}

// DeleteSlotTypeVersionRequest is a passthrough to the underlying DeleteSlotTypeVersionRequest.
// It will increment the count of requests made to DeleteSlotTypeVersion.
func (c *LexModelBuildingService) DeleteSlotTypeVersionRequest(input *lexmodelbuildingservice.DeleteSlotTypeVersionInput) (req *request.Request, output *lexmodelbuildingservice.DeleteSlotTypeVersionOutput) {
	c.inc("DeleteSlotTypeVersion")
	return c.svc.DeleteSlotTypeVersionRequest(input)
}

// DeleteSlotTypeVersion is a passthrough to the underlying DeleteSlotTypeVersion method.
// It will increment the count of requests made to DeleteSlotTypeVersion.
func (c *LexModelBuildingService) DeleteSlotTypeVersion(input *lexmodelbuildingservice.DeleteSlotTypeVersionInput) (*lexmodelbuildingservice.DeleteSlotTypeVersionOutput, error) {
	c.inc("DeleteSlotTypeVersion")
	return c.svc.DeleteSlotTypeVersion(input)
}

// DeleteSlotTypeVersionWithContext is a passthrough to the underlying DeleteSlotTypeVersionWithContext method.
// It will increment the count of requests made to DeleteSlotTypeVersion.
func (c *LexModelBuildingService) DeleteSlotTypeVersionWithContext(ctx aws.Context, input *lexmodelbuildingservice.DeleteSlotTypeVersionInput, opts ...request.Option) (*lexmodelbuildingservice.DeleteSlotTypeVersionOutput, error) {
	c.inc("DeleteSlotTypeVersion")
	return c.svc.DeleteSlotTypeVersionWithContext(ctx, input, opts...)
}

// DeleteUtterancesRequest is a passthrough to the underlying DeleteUtterancesRequest.
// It will increment the count of requests made to DeleteUtterances.
func (c *LexModelBuildingService) DeleteUtterancesRequest(input *lexmodelbuildingservice.DeleteUtterancesInput) (req *request.Request, output *lexmodelbuildingservice.DeleteUtterancesOutput) {
	c.inc("DeleteUtterances")
	return c.svc.DeleteUtterancesRequest(input)
}

// DeleteUtterances is a passthrough to the underlying DeleteUtterances method.
// It will increment the count of requests made to DeleteUtterances.
func (c *LexModelBuildingService) DeleteUtterances(input *lexmodelbuildingservice.DeleteUtterancesInput) (*lexmodelbuildingservice.DeleteUtterancesOutput, error) {
	c.inc("DeleteUtterances")
	return c.svc.DeleteUtterances(input)
}

// DeleteUtterancesWithContext is a passthrough to the underlying DeleteUtterancesWithContext method.
// It will increment the count of requests made to DeleteUtterances.
func (c *LexModelBuildingService) DeleteUtterancesWithContext(ctx aws.Context, input *lexmodelbuildingservice.DeleteUtterancesInput, opts ...request.Option) (*lexmodelbuildingservice.DeleteUtterancesOutput, error) {
	c.inc("DeleteUtterances")
	return c.svc.DeleteUtterancesWithContext(ctx, input, opts...)
}

// GetBotRequest is a passthrough to the underlying GetBotRequest.
// It will increment the count of requests made to GetBot.
func (c *LexModelBuildingService) GetBotRequest(input *lexmodelbuildingservice.GetBotInput) (req *request.Request, output *lexmodelbuildingservice.GetBotOutput) {
	c.inc("GetBot")
	return c.svc.GetBotRequest(input)
}

// GetBot is a passthrough to the underlying GetBot method.
// It will increment the count of requests made to GetBot.
func (c *LexModelBuildingService) GetBot(input *lexmodelbuildingservice.GetBotInput) (*lexmodelbuildingservice.GetBotOutput, error) {
	c.inc("GetBot")
	return c.svc.GetBot(input)
}

// GetBotWithContext is a passthrough to the underlying GetBotWithContext method.
// It will increment the count of requests made to GetBot.
func (c *LexModelBuildingService) GetBotWithContext(ctx aws.Context, input *lexmodelbuildingservice.GetBotInput, opts ...request.Option) (*lexmodelbuildingservice.GetBotOutput, error) {
	c.inc("GetBot")
	return c.svc.GetBotWithContext(ctx, input, opts...)
}

// GetBotAliasRequest is a passthrough to the underlying GetBotAliasRequest.
// It will increment the count of requests made to GetBotAlias.
func (c *LexModelBuildingService) GetBotAliasRequest(input *lexmodelbuildingservice.GetBotAliasInput) (req *request.Request, output *lexmodelbuildingservice.GetBotAliasOutput) {
	c.inc("GetBotAlias")
	return c.svc.GetBotAliasRequest(input)
}

// GetBotAlias is a passthrough to the underlying GetBotAlias method.
// It will increment the count of requests made to GetBotAlias.
func (c *LexModelBuildingService) GetBotAlias(input *lexmodelbuildingservice.GetBotAliasInput) (*lexmodelbuildingservice.GetBotAliasOutput, error) {
	c.inc("GetBotAlias")
	return c.svc.GetBotAlias(input)
}

// GetBotAliasWithContext is a passthrough to the underlying GetBotAliasWithContext method.
// It will increment the count of requests made to GetBotAlias.
func (c *LexModelBuildingService) GetBotAliasWithContext(ctx aws.Context, input *lexmodelbuildingservice.GetBotAliasInput, opts ...request.Option) (*lexmodelbuildingservice.GetBotAliasOutput, error) {
	c.inc("GetBotAlias")
	return c.svc.GetBotAliasWithContext(ctx, input, opts...)
}

// GetBotAliasesRequest is a passthrough to the underlying GetBotAliasesRequest.
// It will increment the count of requests made to GetBotAliases.
func (c *LexModelBuildingService) GetBotAliasesRequest(input *lexmodelbuildingservice.GetBotAliasesInput) (req *request.Request, output *lexmodelbuildingservice.GetBotAliasesOutput) {
	c.inc("GetBotAliases")
	return c.svc.GetBotAliasesRequest(input)
}

// GetBotAliases is a passthrough to the underlying GetBotAliases method.
// It will increment the count of requests made to GetBotAliases.
func (c *LexModelBuildingService) GetBotAliases(input *lexmodelbuildingservice.GetBotAliasesInput) (*lexmodelbuildingservice.GetBotAliasesOutput, error) {
	c.inc("GetBotAliases")
	return c.svc.GetBotAliases(input)
}

// GetBotAliasesWithContext is a passthrough to the underlying GetBotAliasesWithContext method.
// It will increment the count of requests made to GetBotAliases.
func (c *LexModelBuildingService) GetBotAliasesWithContext(ctx aws.Context, input *lexmodelbuildingservice.GetBotAliasesInput, opts ...request.Option) (*lexmodelbuildingservice.GetBotAliasesOutput, error) {
	c.inc("GetBotAliases")
	return c.svc.GetBotAliasesWithContext(ctx, input, opts...)
}

// GetBotAliasesPages is a passthrough to the underlying GetBotAliasesPages method.
// It will increment the count of requests made to GetBotAliases on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use GetBotAliasesPagesWithContext to avoid this.
func (c *LexModelBuildingService) GetBotAliasesPages(input *lexmodelbuildingservice.GetBotAliasesInput, fn func(*lexmodelbuildingservice.GetBotAliasesOutput, bool) bool) error {
	wrappedFn := func(page *lexmodelbuildingservice.GetBotAliasesOutput, lastPage bool) bool {
		c.inc("GetBotAliases")
		return fn(page, lastPage)
	}
	return c.svc.GetBotAliasesPages(input, wrappedFn)
}

// GetBotAliasesPagesWithContext is a passthrough to the underlying GetBotAliasesPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to GetBotAliases when applied to the request.
func (c *LexModelBuildingService) GetBotAliasesPagesWithContext(ctx aws.Context, input *lexmodelbuildingservice.GetBotAliasesInput, fn func(*lexmodelbuildingservice.GetBotAliasesOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("GetBotAliases"))
	return c.svc.GetBotAliasesPagesWithContext(ctx, input, fn, opts...)
}

// GetBotChannelAssociationRequest is a passthrough to the underlying GetBotChannelAssociationRequest.
// It will increment the count of requests made to GetBotChannelAssociation.
func (c *LexModelBuildingService) GetBotChannelAssociationRequest(input *lexmodelbuildingservice.GetBotChannelAssociationInput) (req *request.Request, output *lexmodelbuildingservice.GetBotChannelAssociationOutput) {
	c.inc("GetBotChannelAssociation")
	return c.svc.GetBotChannelAssociationRequest(input)
}

// GetBotChannelAssociation is a passthrough to the underlying GetBotChannelAssociation method.
// It will increment the count of requests made to GetBotChannelAssociation.
func (c *LexModelBuildingService) GetBotChannelAssociation(input *lexmodelbuildingservice.GetBotChannelAssociationInput) (*lexmodelbuildingservice.GetBotChannelAssociationOutput, error) {
	c.inc("GetBotChannelAssociation")
	return c.svc.GetBotChannelAssociation(input)
}

// GetBotChannelAssociationWithContext is a passthrough to the underlying GetBotChannelAssociationWithContext method.
// It will increment the count of requests made to GetBotChannelAssociation.
func (c *LexModelBuildingService) GetBotChannelAssociationWithContext(ctx aws.Context, input *lexmodelbuildingservice.GetBotChannelAssociationInput, opts ...request.Option) (*lexmodelbuildingservice.GetBotChannelAssociationOutput, error) {
	c.inc("GetBotChannelAssociation")
	return c.svc.GetBotChannelAssociationWithContext(ctx, input, opts...)
}

// GetBotChannelAssociationsRequest is a passthrough to the underlying GetBotChannelAssociationsRequest.
// It will increment the count of requests made to GetBotChannelAssociations.
func (c *LexModelBuildingService) GetBotChannelAssociationsRequest(input *lexmodelbuildingservice.GetBotChannelAssociationsInput) (req *request.Request, output *lexmodelbuildingservice.GetBotChannelAssociationsOutput) {
	c.inc("GetBotChannelAssociations")
	return c.svc.GetBotChannelAssociationsRequest(input)
}

// GetBotChannelAssociations is a passthrough to the underlying GetBotChannelAssociations method.
// It will increment the count of requests made to GetBotChannelAssociations.
func (c *LexModelBuildingService) GetBotChannelAssociations(input *lexmodelbuildingservice.GetBotChannelAssociationsInput) (*lexmodelbuildingservice.GetBotChannelAssociationsOutput, error) {
	c.inc("GetBotChannelAssociations")
	return c.svc.GetBotChannelAssociations(input)
}

// GetBotChannelAssociationsWithContext is a passthrough to the underlying GetBotChannelAssociationsWithContext method.
// It will increment the count of requests made to GetBotChannelAssociations.
func (c *LexModelBuildingService) GetBotChannelAssociationsWithContext(ctx aws.Context, input *lexmodelbuildingservice.GetBotChannelAssociationsInput, opts ...request.Option) (*lexmodelbuildingservice.GetBotChannelAssociationsOutput, error) {
	c.inc("GetBotChannelAssociations")
	return c.svc.GetBotChannelAssociationsWithContext(ctx, input, opts...)
}

// GetBotChannelAssociationsPages is a passthrough to the underlying GetBotChannelAssociationsPages method.
// It will increment the count of requests made to GetBotChannelAssociations on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use GetBotChannelAssociationsPagesWithContext to avoid this.
func (c *LexModelBuildingService) GetBotChannelAssociationsPages(input *lexmodelbuildingservice.GetBotChannelAssociationsInput, fn func(*lexmodelbuildingservice.GetBotChannelAssociationsOutput, bool) bool) error {
	wrappedFn := func(page *lexmodelbuildingservice.GetBotChannelAssociationsOutput, lastPage bool) bool {
		c.inc("GetBotChannelAssociations")
		return fn(page, lastPage)
	}
	return c.svc.GetBotChannelAssociationsPages(input, wrappedFn)
}

// GetBotChannelAssociationsPagesWithContext is a passthrough to the underlying GetBotChannelAssociationsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to GetBotChannelAssociations when applied to the request.
func (c *LexModelBuildingService) GetBotChannelAssociationsPagesWithContext(ctx aws.Context, input *lexmodelbuildingservice.GetBotChannelAssociationsInput, fn func(*lexmodelbuildingservice.GetBotChannelAssociationsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("GetBotChannelAssociations"))
	return c.svc.GetBotChannelAssociationsPagesWithContext(ctx, input, fn, opts...)
}

// GetBotVersionsRequest is a passthrough to the underlying GetBotVersionsRequest.
// It will increment the count of requests made to GetBotVersions.
func (c *LexModelBuildingService) GetBotVersionsRequest(input *lexmodelbuildingservice.GetBotVersionsInput) (req *request.Request, output *lexmodelbuildingservice.GetBotVersionsOutput) {
	c.inc("GetBotVersions")
	return c.svc.GetBotVersionsRequest(input)
}

// GetBotVersions is a passthrough to the underlying GetBotVersions method.
// It will increment the count of requests made to GetBotVersions.
func (c *LexModelBuildingService) GetBotVersions(input *lexmodelbuildingservice.GetBotVersionsInput) (*lexmodelbuildingservice.GetBotVersionsOutput, error) {
	c.inc("GetBotVersions")
	return c.svc.GetBotVersions(input)
}

// GetBotVersionsWithContext is a passthrough to the underlying GetBotVersionsWithContext method.
// It will increment the count of requests made to GetBotVersions.
func (c *LexModelBuildingService) GetBotVersionsWithContext(ctx aws.Context, input *lexmodelbuildingservice.GetBotVersionsInput, opts ...request.Option) (*lexmodelbuildingservice.GetBotVersionsOutput, error) {
	c.inc("GetBotVersions")
	return c.svc.GetBotVersionsWithContext(ctx, input, opts...)
}

// GetBotVersionsPages is a passthrough to the underlying GetBotVersionsPages method.
// It will increment the count of requests made to GetBotVersions on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use GetBotVersionsPagesWithContext to avoid this.
func (c *LexModelBuildingService) GetBotVersionsPages(input *lexmodelbuildingservice.GetBotVersionsInput, fn func(*lexmodelbuildingservice.GetBotVersionsOutput, bool) bool) error {
	wrappedFn := func(page *lexmodelbuildingservice.GetBotVersionsOutput, lastPage bool) bool {
		c.inc("GetBotVersions")
		return fn(page, lastPage)
	}
	return c.svc.GetBotVersionsPages(input, wrappedFn)
}

// GetBotVersionsPagesWithContext is a passthrough to the underlying GetBotVersionsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to GetBotVersions when applied to the request.
func (c *LexModelBuildingService) GetBotVersionsPagesWithContext(ctx aws.Context, input *lexmodelbuildingservice.GetBotVersionsInput, fn func(*lexmodelbuildingservice.GetBotVersionsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("GetBotVersions"))
	return c.svc.GetBotVersionsPagesWithContext(ctx, input, fn, opts...)
}

// GetBotsRequest is a passthrough to the underlying GetBotsRequest.
// It will increment the count of requests made to GetBots.
func (c *LexModelBuildingService) GetBotsRequest(input *lexmodelbuildingservice.GetBotsInput) (req *request.Request, output *lexmodelbuildingservice.GetBotsOutput) {
	c.inc("GetBots")
	return c.svc.GetBotsRequest(input)
}

// GetBots is a passthrough to the underlying GetBots method.
// It will increment the count of requests made to GetBots.
func (c *LexModelBuildingService) GetBots(input *lexmodelbuildingservice.GetBotsInput) (*lexmodelbuildingservice.GetBotsOutput, error) {
	c.inc("GetBots")
	return c.svc.GetBots(input)
}

// GetBotsWithContext is a passthrough to the underlying GetBotsWithContext method.
// It will increment the count of requests made to GetBots.
func (c *LexModelBuildingService) GetBotsWithContext(ctx aws.Context, input *lexmodelbuildingservice.GetBotsInput, opts ...request.Option) (*lexmodelbuildingservice.GetBotsOutput, error) {
	c.inc("GetBots")
	return c.svc.GetBotsWithContext(ctx, input, opts...)
}

// GetBotsPages is a passthrough to the underlying GetBotsPages method.
// It will increment the count of requests made to GetBots on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use GetBotsPagesWithContext to avoid this.
func (c *LexModelBuildingService) GetBotsPages(input *lexmodelbuildingservice.GetBotsInput, fn func(*lexmodelbuildingservice.GetBotsOutput, bool) bool) error {
	wrappedFn := func(page *lexmodelbuildingservice.GetBotsOutput, lastPage bool) bool {
		c.inc("GetBots")
		return fn(page, lastPage)
	}
	return c.svc.GetBotsPages(input, wrappedFn)
}

// GetBotsPagesWithContext is a passthrough to the underlying GetBotsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to GetBots when applied to the request.
func (c *LexModelBuildingService) GetBotsPagesWithContext(ctx aws.Context, input *lexmodelbuildingservice.GetBotsInput, fn func(*lexmodelbuildingservice.GetBotsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("GetBots"))
	return c.svc.GetBotsPagesWithContext(ctx, input, fn, opts...)
}

// GetBuiltinIntentRequest is a passthrough to the underlying GetBuiltinIntentRequest.
// It will increment the count of requests made to GetBuiltinIntent.
func (c *LexModelBuildingService) GetBuiltinIntentRequest(input *lexmodelbuildingservice.GetBuiltinIntentInput) (req *request.Request, output *lexmodelbuildingservice.GetBuiltinIntentOutput) {
	c.inc("GetBuiltinIntent")
	return c.svc.GetBuiltinIntentRequest(input)
}

// GetBuiltinIntent is a passthrough to the underlying GetBuiltinIntent method.
// It will increment the count of requests made to GetBuiltinIntent.
func (c *LexModelBuildingService) GetBuiltinIntent(input *lexmodelbuildingservice.GetBuiltinIntentInput) (*lexmodelbuildingservice.GetBuiltinIntentOutput, error) {
	c.inc("GetBuiltinIntent")
	return c.svc.GetBuiltinIntent(input)
}

// GetBuiltinIntentWithContext is a passthrough to the underlying GetBuiltinIntentWithContext method.
// It will increment the count of requests made to GetBuiltinIntent.
func (c *LexModelBuildingService) GetBuiltinIntentWithContext(ctx aws.Context, input *lexmodelbuildingservice.GetBuiltinIntentInput, opts ...request.Option) (*lexmodelbuildingservice.GetBuiltinIntentOutput, error) {
	c.inc("GetBuiltinIntent")
	return c.svc.GetBuiltinIntentWithContext(ctx, input, opts...)
}

// GetBuiltinIntentsRequest is a passthrough to the underlying GetBuiltinIntentsRequest.
// It will increment the count of requests made to GetBuiltinIntents.
func (c *LexModelBuildingService) GetBuiltinIntentsRequest(input *lexmodelbuildingservice.GetBuiltinIntentsInput) (req *request.Request, output *lexmodelbuildingservice.GetBuiltinIntentsOutput) {
	c.inc("GetBuiltinIntents")
	return c.svc.GetBuiltinIntentsRequest(input)
}

// GetBuiltinIntents is a passthrough to the underlying GetBuiltinIntents method.
// It will increment the count of requests made to GetBuiltinIntents.
func (c *LexModelBuildingService) GetBuiltinIntents(input *lexmodelbuildingservice.GetBuiltinIntentsInput) (*lexmodelbuildingservice.GetBuiltinIntentsOutput, error) {
	c.inc("GetBuiltinIntents")
	return c.svc.GetBuiltinIntents(input)
}

// GetBuiltinIntentsWithContext is a passthrough to the underlying GetBuiltinIntentsWithContext method.
// It will increment the count of requests made to GetBuiltinIntents.
func (c *LexModelBuildingService) GetBuiltinIntentsWithContext(ctx aws.Context, input *lexmodelbuildingservice.GetBuiltinIntentsInput, opts ...request.Option) (*lexmodelbuildingservice.GetBuiltinIntentsOutput, error) {
	c.inc("GetBuiltinIntents")
	return c.svc.GetBuiltinIntentsWithContext(ctx, input, opts...)
}

// GetBuiltinIntentsPages is a passthrough to the underlying GetBuiltinIntentsPages method.
// It will increment the count of requests made to GetBuiltinIntents on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use GetBuiltinIntentsPagesWithContext to avoid this.
func (c *LexModelBuildingService) GetBuiltinIntentsPages(input *lexmodelbuildingservice.GetBuiltinIntentsInput, fn func(*lexmodelbuildingservice.GetBuiltinIntentsOutput, bool) bool) error {
	wrappedFn := func(page *lexmodelbuildingservice.GetBuiltinIntentsOutput, lastPage bool) bool {
		c.inc("GetBuiltinIntents")
		return fn(page, lastPage)
	}
	return c.svc.GetBuiltinIntentsPages(input, wrappedFn)
}

// GetBuiltinIntentsPagesWithContext is a passthrough to the underlying GetBuiltinIntentsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to GetBuiltinIntents when applied to the request.
func (c *LexModelBuildingService) GetBuiltinIntentsPagesWithContext(ctx aws.Context, input *lexmodelbuildingservice.GetBuiltinIntentsInput, fn func(*lexmodelbuildingservice.GetBuiltinIntentsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("GetBuiltinIntents"))
	return c.svc.GetBuiltinIntentsPagesWithContext(ctx, input, fn, opts...)
}

// GetBuiltinSlotTypesRequest is a passthrough to the underlying GetBuiltinSlotTypesRequest.
// It will increment the count of requests made to GetBuiltinSlotTypes.
func (c *LexModelBuildingService) GetBuiltinSlotTypesRequest(input *lexmodelbuildingservice.GetBuiltinSlotTypesInput) (req *request.Request, output *lexmodelbuildingservice.GetBuiltinSlotTypesOutput) {
	c.inc("GetBuiltinSlotTypes")
	return c.svc.GetBuiltinSlotTypesRequest(input)
}

// GetBuiltinSlotTypes is a passthrough to the underlying GetBuiltinSlotTypes method.
// It will increment the count of requests made to GetBuiltinSlotTypes.
func (c *LexModelBuildingService) GetBuiltinSlotTypes(input *lexmodelbuildingservice.GetBuiltinSlotTypesInput) (*lexmodelbuildingservice.GetBuiltinSlotTypesOutput, error) {
	c.inc("GetBuiltinSlotTypes")
	return c.svc.GetBuiltinSlotTypes(input)
}

// GetBuiltinSlotTypesWithContext is a passthrough to the underlying GetBuiltinSlotTypesWithContext method.
// It will increment the count of requests made to GetBuiltinSlotTypes.
func (c *LexModelBuildingService) GetBuiltinSlotTypesWithContext(ctx aws.Context, input *lexmodelbuildingservice.GetBuiltinSlotTypesInput, opts ...request.Option) (*lexmodelbuildingservice.GetBuiltinSlotTypesOutput, error) {
	c.inc("GetBuiltinSlotTypes")
	return c.svc.GetBuiltinSlotTypesWithContext(ctx, input, opts...)
}

// GetBuiltinSlotTypesPages is a passthrough to the underlying GetBuiltinSlotTypesPages method.
// It will increment the count of requests made to GetBuiltinSlotTypes on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use GetBuiltinSlotTypesPagesWithContext to avoid this.
func (c *LexModelBuildingService) GetBuiltinSlotTypesPages(input *lexmodelbuildingservice.GetBuiltinSlotTypesInput, fn func(*lexmodelbuildingservice.GetBuiltinSlotTypesOutput, bool) bool) error {
	wrappedFn := func(page *lexmodelbuildingservice.GetBuiltinSlotTypesOutput, lastPage bool) bool {
		c.inc("GetBuiltinSlotTypes")
		return fn(page, lastPage)
	}
	return c.svc.GetBuiltinSlotTypesPages(input, wrappedFn)
}

// GetBuiltinSlotTypesPagesWithContext is a passthrough to the underlying GetBuiltinSlotTypesPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to GetBuiltinSlotTypes when applied to the request.
func (c *LexModelBuildingService) GetBuiltinSlotTypesPagesWithContext(ctx aws.Context, input *lexmodelbuildingservice.GetBuiltinSlotTypesInput, fn func(*lexmodelbuildingservice.GetBuiltinSlotTypesOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("GetBuiltinSlotTypes"))
	return c.svc.GetBuiltinSlotTypesPagesWithContext(ctx, input, fn, opts...)
}

// GetExportRequest is a passthrough to the underlying GetExportRequest.
// It will increment the count of requests made to GetExport.
func (c *LexModelBuildingService) GetExportRequest(input *lexmodelbuildingservice.GetExportInput) (req *request.Request, output *lexmodelbuildingservice.GetExportOutput) {
	c.inc("GetExport")
	return c.svc.GetExportRequest(input)
}

// GetExport is a passthrough to the underlying GetExport method.
// It will increment the count of requests made to GetExport.
func (c *LexModelBuildingService) GetExport(input *lexmodelbuildingservice.GetExportInput) (*lexmodelbuildingservice.GetExportOutput, error) {
	c.inc("GetExport")
	return c.svc.GetExport(input)
}

// GetExportWithContext is a passthrough to the underlying GetExportWithContext method.
// It will increment the count of requests made to GetExport.
func (c *LexModelBuildingService) GetExportWithContext(ctx aws.Context, input *lexmodelbuildingservice.GetExportInput, opts ...request.Option) (*lexmodelbuildingservice.GetExportOutput, error) {
	c.inc("GetExport")
	return c.svc.GetExportWithContext(ctx, input, opts...)
}

// GetIntentRequest is a passthrough to the underlying GetIntentRequest.
// It will increment the count of requests made to GetIntent.
func (c *LexModelBuildingService) GetIntentRequest(input *lexmodelbuildingservice.GetIntentInput) (req *request.Request, output *lexmodelbuildingservice.GetIntentOutput) {
	c.inc("GetIntent")
	return c.svc.GetIntentRequest(input)
}

// GetIntent is a passthrough to the underlying GetIntent method.
// It will increment the count of requests made to GetIntent.
func (c *LexModelBuildingService) GetIntent(input *lexmodelbuildingservice.GetIntentInput) (*lexmodelbuildingservice.GetIntentOutput, error) {
	c.inc("GetIntent")
	return c.svc.GetIntent(input)
}

// GetIntentWithContext is a passthrough to the underlying GetIntentWithContext method.
// It will increment the count of requests made to GetIntent.
func (c *LexModelBuildingService) GetIntentWithContext(ctx aws.Context, input *lexmodelbuildingservice.GetIntentInput, opts ...request.Option) (*lexmodelbuildingservice.GetIntentOutput, error) {
	c.inc("GetIntent")
	return c.svc.GetIntentWithContext(ctx, input, opts...)
}

// GetIntentVersionsRequest is a passthrough to the underlying GetIntentVersionsRequest.
// It will increment the count of requests made to GetIntentVersions.
func (c *LexModelBuildingService) GetIntentVersionsRequest(input *lexmodelbuildingservice.GetIntentVersionsInput) (req *request.Request, output *lexmodelbuildingservice.GetIntentVersionsOutput) {
	c.inc("GetIntentVersions")
	return c.svc.GetIntentVersionsRequest(input)
}

// GetIntentVersions is a passthrough to the underlying GetIntentVersions method.
// It will increment the count of requests made to GetIntentVersions.
func (c *LexModelBuildingService) GetIntentVersions(input *lexmodelbuildingservice.GetIntentVersionsInput) (*lexmodelbuildingservice.GetIntentVersionsOutput, error) {
	c.inc("GetIntentVersions")
	return c.svc.GetIntentVersions(input)
}

// GetIntentVersionsWithContext is a passthrough to the underlying GetIntentVersionsWithContext method.
// It will increment the count of requests made to GetIntentVersions.
func (c *LexModelBuildingService) GetIntentVersionsWithContext(ctx aws.Context, input *lexmodelbuildingservice.GetIntentVersionsInput, opts ...request.Option) (*lexmodelbuildingservice.GetIntentVersionsOutput, error) {
	c.inc("GetIntentVersions")
	return c.svc.GetIntentVersionsWithContext(ctx, input, opts...)
}

// GetIntentVersionsPages is a passthrough to the underlying GetIntentVersionsPages method.
// It will increment the count of requests made to GetIntentVersions on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use GetIntentVersionsPagesWithContext to avoid this.
func (c *LexModelBuildingService) GetIntentVersionsPages(input *lexmodelbuildingservice.GetIntentVersionsInput, fn func(*lexmodelbuildingservice.GetIntentVersionsOutput, bool) bool) error {
	wrappedFn := func(page *lexmodelbuildingservice.GetIntentVersionsOutput, lastPage bool) bool {
		c.inc("GetIntentVersions")
		return fn(page, lastPage)
	}
	return c.svc.GetIntentVersionsPages(input, wrappedFn)
}

// GetIntentVersionsPagesWithContext is a passthrough to the underlying GetIntentVersionsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to GetIntentVersions when applied to the request.
func (c *LexModelBuildingService) GetIntentVersionsPagesWithContext(ctx aws.Context, input *lexmodelbuildingservice.GetIntentVersionsInput, fn func(*lexmodelbuildingservice.GetIntentVersionsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("GetIntentVersions"))
	return c.svc.GetIntentVersionsPagesWithContext(ctx, input, fn, opts...)
}

// GetIntentsRequest is a passthrough to the underlying GetIntentsRequest.
// It will increment the count of requests made to GetIntents.
func (c *LexModelBuildingService) GetIntentsRequest(input *lexmodelbuildingservice.GetIntentsInput) (req *request.Request, output *lexmodelbuildingservice.GetIntentsOutput) {
	c.inc("GetIntents")
	return c.svc.GetIntentsRequest(input)
}

// GetIntents is a passthrough to the underlying GetIntents method.
// It will increment the count of requests made to GetIntents.
func (c *LexModelBuildingService) GetIntents(input *lexmodelbuildingservice.GetIntentsInput) (*lexmodelbuildingservice.GetIntentsOutput, error) {
	c.inc("GetIntents")
	return c.svc.GetIntents(input)
}

// GetIntentsWithContext is a passthrough to the underlying GetIntentsWithContext method.
// It will increment the count of requests made to GetIntents.
func (c *LexModelBuildingService) GetIntentsWithContext(ctx aws.Context, input *lexmodelbuildingservice.GetIntentsInput, opts ...request.Option) (*lexmodelbuildingservice.GetIntentsOutput, error) {
	c.inc("GetIntents")
	return c.svc.GetIntentsWithContext(ctx, input, opts...)
}

// GetIntentsPages is a passthrough to the underlying GetIntentsPages method.
// It will increment the count of requests made to GetIntents on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use GetIntentsPagesWithContext to avoid this.
func (c *LexModelBuildingService) GetIntentsPages(input *lexmodelbuildingservice.GetIntentsInput, fn func(*lexmodelbuildingservice.GetIntentsOutput, bool) bool) error {
	wrappedFn := func(page *lexmodelbuildingservice.GetIntentsOutput, lastPage bool) bool {
		c.inc("GetIntents")
		return fn(page, lastPage)
	}
	return c.svc.GetIntentsPages(input, wrappedFn)
}

// GetIntentsPagesWithContext is a passthrough to the underlying GetIntentsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to GetIntents when applied to the request.
func (c *LexModelBuildingService) GetIntentsPagesWithContext(ctx aws.Context, input *lexmodelbuildingservice.GetIntentsInput, fn func(*lexmodelbuildingservice.GetIntentsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("GetIntents"))
	return c.svc.GetIntentsPagesWithContext(ctx, input, fn, opts...)
}

// GetSlotTypeRequest is a passthrough to the underlying GetSlotTypeRequest.
// It will increment the count of requests made to GetSlotType.
func (c *LexModelBuildingService) GetSlotTypeRequest(input *lexmodelbuildingservice.GetSlotTypeInput) (req *request.Request, output *lexmodelbuildingservice.GetSlotTypeOutput) {
	c.inc("GetSlotType")
	return c.svc.GetSlotTypeRequest(input)
}

// GetSlotType is a passthrough to the underlying GetSlotType method.
// It will increment the count of requests made to GetSlotType.
func (c *LexModelBuildingService) GetSlotType(input *lexmodelbuildingservice.GetSlotTypeInput) (*lexmodelbuildingservice.GetSlotTypeOutput, error) {
	c.inc("GetSlotType")
	return c.svc.GetSlotType(input)
}

// GetSlotTypeWithContext is a passthrough to the underlying GetSlotTypeWithContext method.
// It will increment the count of requests made to GetSlotType.
func (c *LexModelBuildingService) GetSlotTypeWithContext(ctx aws.Context, input *lexmodelbuildingservice.GetSlotTypeInput, opts ...request.Option) (*lexmodelbuildingservice.GetSlotTypeOutput, error) {
	c.inc("GetSlotType")
	return c.svc.GetSlotTypeWithContext(ctx, input, opts...)
}

// GetSlotTypeVersionsRequest is a passthrough to the underlying GetSlotTypeVersionsRequest.
// It will increment the count of requests made to GetSlotTypeVersions.
func (c *LexModelBuildingService) GetSlotTypeVersionsRequest(input *lexmodelbuildingservice.GetSlotTypeVersionsInput) (req *request.Request, output *lexmodelbuildingservice.GetSlotTypeVersionsOutput) {
	c.inc("GetSlotTypeVersions")
	return c.svc.GetSlotTypeVersionsRequest(input)
}

// GetSlotTypeVersions is a passthrough to the underlying GetSlotTypeVersions method.
// It will increment the count of requests made to GetSlotTypeVersions.
func (c *LexModelBuildingService) GetSlotTypeVersions(input *lexmodelbuildingservice.GetSlotTypeVersionsInput) (*lexmodelbuildingservice.GetSlotTypeVersionsOutput, error) {
	c.inc("GetSlotTypeVersions")
	return c.svc.GetSlotTypeVersions(input)
}

// GetSlotTypeVersionsWithContext is a passthrough to the underlying GetSlotTypeVersionsWithContext method.
// It will increment the count of requests made to GetSlotTypeVersions.
func (c *LexModelBuildingService) GetSlotTypeVersionsWithContext(ctx aws.Context, input *lexmodelbuildingservice.GetSlotTypeVersionsInput, opts ...request.Option) (*lexmodelbuildingservice.GetSlotTypeVersionsOutput, error) {
	c.inc("GetSlotTypeVersions")
	return c.svc.GetSlotTypeVersionsWithContext(ctx, input, opts...)
}

// GetSlotTypeVersionsPages is a passthrough to the underlying GetSlotTypeVersionsPages method.
// It will increment the count of requests made to GetSlotTypeVersions on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use GetSlotTypeVersionsPagesWithContext to avoid this.
func (c *LexModelBuildingService) GetSlotTypeVersionsPages(input *lexmodelbuildingservice.GetSlotTypeVersionsInput, fn func(*lexmodelbuildingservice.GetSlotTypeVersionsOutput, bool) bool) error {
	wrappedFn := func(page *lexmodelbuildingservice.GetSlotTypeVersionsOutput, lastPage bool) bool {
		c.inc("GetSlotTypeVersions")
		return fn(page, lastPage)
	}
	return c.svc.GetSlotTypeVersionsPages(input, wrappedFn)
}

// GetSlotTypeVersionsPagesWithContext is a passthrough to the underlying GetSlotTypeVersionsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to GetSlotTypeVersions when applied to the request.
func (c *LexModelBuildingService) GetSlotTypeVersionsPagesWithContext(ctx aws.Context, input *lexmodelbuildingservice.GetSlotTypeVersionsInput, fn func(*lexmodelbuildingservice.GetSlotTypeVersionsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("GetSlotTypeVersions"))
	return c.svc.GetSlotTypeVersionsPagesWithContext(ctx, input, fn, opts...)
}

// GetSlotTypesRequest is a passthrough to the underlying GetSlotTypesRequest.
// It will increment the count of requests made to GetSlotTypes.
func (c *LexModelBuildingService) GetSlotTypesRequest(input *lexmodelbuildingservice.GetSlotTypesInput) (req *request.Request, output *lexmodelbuildingservice.GetSlotTypesOutput) {
	c.inc("GetSlotTypes")
	return c.svc.GetSlotTypesRequest(input)
}

// GetSlotTypes is a passthrough to the underlying GetSlotTypes method.
// It will increment the count of requests made to GetSlotTypes.
func (c *LexModelBuildingService) GetSlotTypes(input *lexmodelbuildingservice.GetSlotTypesInput) (*lexmodelbuildingservice.GetSlotTypesOutput, error) {
	c.inc("GetSlotTypes")
	return c.svc.GetSlotTypes(input)
}

// GetSlotTypesWithContext is a passthrough to the underlying GetSlotTypesWithContext method.
// It will increment the count of requests made to GetSlotTypes.
func (c *LexModelBuildingService) GetSlotTypesWithContext(ctx aws.Context, input *lexmodelbuildingservice.GetSlotTypesInput, opts ...request.Option) (*lexmodelbuildingservice.GetSlotTypesOutput, error) {
	c.inc("GetSlotTypes")
	return c.svc.GetSlotTypesWithContext(ctx, input, opts...)
}

// GetSlotTypesPages is a passthrough to the underlying GetSlotTypesPages method.
// It will increment the count of requests made to GetSlotTypes on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use GetSlotTypesPagesWithContext to avoid this.
func (c *LexModelBuildingService) GetSlotTypesPages(input *lexmodelbuildingservice.GetSlotTypesInput, fn func(*lexmodelbuildingservice.GetSlotTypesOutput, bool) bool) error {
	wrappedFn := func(page *lexmodelbuildingservice.GetSlotTypesOutput, lastPage bool) bool {
		c.inc("GetSlotTypes")
		return fn(page, lastPage)
	}
	return c.svc.GetSlotTypesPages(input, wrappedFn)
}

// GetSlotTypesPagesWithContext is a passthrough to the underlying GetSlotTypesPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to GetSlotTypes when applied to the request.
func (c *LexModelBuildingService) GetSlotTypesPagesWithContext(ctx aws.Context, input *lexmodelbuildingservice.GetSlotTypesInput, fn func(*lexmodelbuildingservice.GetSlotTypesOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("GetSlotTypes"))
	return c.svc.GetSlotTypesPagesWithContext(ctx, input, fn, opts...)
}

// GetUtterancesViewRequest is a passthrough to the underlying GetUtterancesViewRequest.
// It will increment the count of requests made to GetUtterancesView.
func (c *LexModelBuildingService) GetUtterancesViewRequest(input *lexmodelbuildingservice.GetUtterancesViewInput) (req *request.Request, output *lexmodelbuildingservice.GetUtterancesViewOutput) {
	c.inc("GetUtterancesView")
	return c.svc.GetUtterancesViewRequest(input)
}

// GetUtterancesView is a passthrough to the underlying GetUtterancesView method.
// It will increment the count of requests made to GetUtterancesView.
func (c *LexModelBuildingService) GetUtterancesView(input *lexmodelbuildingservice.GetUtterancesViewInput) (*lexmodelbuildingservice.GetUtterancesViewOutput, error) {
	c.inc("GetUtterancesView")
	return c.svc.GetUtterancesView(input)
}

// GetUtterancesViewWithContext is a passthrough to the underlying GetUtterancesViewWithContext method.
// It will increment the count of requests made to GetUtterancesView.
func (c *LexModelBuildingService) GetUtterancesViewWithContext(ctx aws.Context, input *lexmodelbuildingservice.GetUtterancesViewInput, opts ...request.Option) (*lexmodelbuildingservice.GetUtterancesViewOutput, error) {
	c.inc("GetUtterancesView")
	return c.svc.GetUtterancesViewWithContext(ctx, input, opts...)
}

// PutBotRequest is a passthrough to the underlying PutBotRequest.
// It will increment the count of requests made to PutBot.
func (c *LexModelBuildingService) PutBotRequest(input *lexmodelbuildingservice.PutBotInput) (req *request.Request, output *lexmodelbuildingservice.PutBotOutput) {
	c.inc("PutBot")
	return c.svc.PutBotRequest(input)
}

// PutBot is a passthrough to the underlying PutBot method.
// It will increment the count of requests made to PutBot.
func (c *LexModelBuildingService) PutBot(input *lexmodelbuildingservice.PutBotInput) (*lexmodelbuildingservice.PutBotOutput, error) {
	c.inc("PutBot")
	return c.svc.PutBot(input)
}

// PutBotWithContext is a passthrough to the underlying PutBotWithContext method.
// It will increment the count of requests made to PutBot.
func (c *LexModelBuildingService) PutBotWithContext(ctx aws.Context, input *lexmodelbuildingservice.PutBotInput, opts ...request.Option) (*lexmodelbuildingservice.PutBotOutput, error) {
	c.inc("PutBot")
	return c.svc.PutBotWithContext(ctx, input, opts...)
}

// PutBotAliasRequest is a passthrough to the underlying PutBotAliasRequest.
// It will increment the count of requests made to PutBotAlias.
func (c *LexModelBuildingService) PutBotAliasRequest(input *lexmodelbuildingservice.PutBotAliasInput) (req *request.Request, output *lexmodelbuildingservice.PutBotAliasOutput) {
	c.inc("PutBotAlias")
	return c.svc.PutBotAliasRequest(input)
}

// PutBotAlias is a passthrough to the underlying PutBotAlias method.
// It will increment the count of requests made to PutBotAlias.
func (c *LexModelBuildingService) PutBotAlias(input *lexmodelbuildingservice.PutBotAliasInput) (*lexmodelbuildingservice.PutBotAliasOutput, error) {
	c.inc("PutBotAlias")
	return c.svc.PutBotAlias(input)
}

// PutBotAliasWithContext is a passthrough to the underlying PutBotAliasWithContext method.
// It will increment the count of requests made to PutBotAlias.
func (c *LexModelBuildingService) PutBotAliasWithContext(ctx aws.Context, input *lexmodelbuildingservice.PutBotAliasInput, opts ...request.Option) (*lexmodelbuildingservice.PutBotAliasOutput, error) {
	c.inc("PutBotAlias")
	return c.svc.PutBotAliasWithContext(ctx, input, opts...)
}

// PutIntentRequest is a passthrough to the underlying PutIntentRequest.
// It will increment the count of requests made to PutIntent.
func (c *LexModelBuildingService) PutIntentRequest(input *lexmodelbuildingservice.PutIntentInput) (req *request.Request, output *lexmodelbuildingservice.PutIntentOutput) {
	c.inc("PutIntent")
	return c.svc.PutIntentRequest(input)
}

// PutIntent is a passthrough to the underlying PutIntent method.
// It will increment the count of requests made to PutIntent.
func (c *LexModelBuildingService) PutIntent(input *lexmodelbuildingservice.PutIntentInput) (*lexmodelbuildingservice.PutIntentOutput, error) {
	c.inc("PutIntent")
	return c.svc.PutIntent(input)
}

// PutIntentWithContext is a passthrough to the underlying PutIntentWithContext method.
// It will increment the count of requests made to PutIntent.
func (c *LexModelBuildingService) PutIntentWithContext(ctx aws.Context, input *lexmodelbuildingservice.PutIntentInput, opts ...request.Option) (*lexmodelbuildingservice.PutIntentOutput, error) {
	c.inc("PutIntent")
	return c.svc.PutIntentWithContext(ctx, input, opts...)
}

// PutSlotTypeRequest is a passthrough to the underlying PutSlotTypeRequest.
// It will increment the count of requests made to PutSlotType.
func (c *LexModelBuildingService) PutSlotTypeRequest(input *lexmodelbuildingservice.PutSlotTypeInput) (req *request.Request, output *lexmodelbuildingservice.PutSlotTypeOutput) {
	c.inc("PutSlotType")
	return c.svc.PutSlotTypeRequest(input)
}

// PutSlotType is a passthrough to the underlying PutSlotType method.
// It will increment the count of requests made to PutSlotType.
func (c *LexModelBuildingService) PutSlotType(input *lexmodelbuildingservice.PutSlotTypeInput) (*lexmodelbuildingservice.PutSlotTypeOutput, error) {
	c.inc("PutSlotType")
	return c.svc.PutSlotType(input)
}

// PutSlotTypeWithContext is a passthrough to the underlying PutSlotTypeWithContext method.
// It will increment the count of requests made to PutSlotType.
func (c *LexModelBuildingService) PutSlotTypeWithContext(ctx aws.Context, input *lexmodelbuildingservice.PutSlotTypeInput, opts ...request.Option) (*lexmodelbuildingservice.PutSlotTypeOutput, error) {
	c.inc("PutSlotType")
	return c.svc.PutSlotTypeWithContext(ctx, input, opts...)
}
