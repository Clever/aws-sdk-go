// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package guarddutycounter

import (
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/guardduty"
)

// AcceptInvitationRequest is a passthrough to the underlying AcceptInvitationRequest.
// It will increment the count of requests made to AcceptInvitation.
func (c *GuardDuty) AcceptInvitationRequest(input *guardduty.AcceptInvitationInput) (req *request.Request, output *guardduty.AcceptInvitationOutput) {
	c.inc("AcceptInvitation")
	return c.svc.AcceptInvitationRequest(input)
}

// AcceptInvitation is a passthrough to the underlying AcceptInvitation method.
// It will increment the count of requests made to AcceptInvitation.
func (c *GuardDuty) AcceptInvitation(input *guardduty.AcceptInvitationInput) (*guardduty.AcceptInvitationOutput, error) {
	c.inc("AcceptInvitation")
	return c.svc.AcceptInvitation(input)
}

// AcceptInvitationWithContext is a passthrough to the underlying AcceptInvitationWithContext method.
// It will increment the count of requests made to AcceptInvitation.
func (c *GuardDuty) AcceptInvitationWithContext(ctx aws.Context, input *guardduty.AcceptInvitationInput, opts ...request.Option) (*guardduty.AcceptInvitationOutput, error) {
	c.inc("AcceptInvitation")
	return c.svc.AcceptInvitationWithContext(ctx, input, opts...)
}

// ArchiveFindingsRequest is a passthrough to the underlying ArchiveFindingsRequest.
// It will increment the count of requests made to ArchiveFindings.
func (c *GuardDuty) ArchiveFindingsRequest(input *guardduty.ArchiveFindingsInput) (req *request.Request, output *guardduty.ArchiveFindingsOutput) {
	c.inc("ArchiveFindings")
	return c.svc.ArchiveFindingsRequest(input)
}

// ArchiveFindings is a passthrough to the underlying ArchiveFindings method.
// It will increment the count of requests made to ArchiveFindings.
func (c *GuardDuty) ArchiveFindings(input *guardduty.ArchiveFindingsInput) (*guardduty.ArchiveFindingsOutput, error) {
	c.inc("ArchiveFindings")
	return c.svc.ArchiveFindings(input)
}

// ArchiveFindingsWithContext is a passthrough to the underlying ArchiveFindingsWithContext method.
// It will increment the count of requests made to ArchiveFindings.
func (c *GuardDuty) ArchiveFindingsWithContext(ctx aws.Context, input *guardduty.ArchiveFindingsInput, opts ...request.Option) (*guardduty.ArchiveFindingsOutput, error) {
	c.inc("ArchiveFindings")
	return c.svc.ArchiveFindingsWithContext(ctx, input, opts...)
}

// CreateDetectorRequest is a passthrough to the underlying CreateDetectorRequest.
// It will increment the count of requests made to CreateDetector.
func (c *GuardDuty) CreateDetectorRequest(input *guardduty.CreateDetectorInput) (req *request.Request, output *guardduty.CreateDetectorOutput) {
	c.inc("CreateDetector")
	return c.svc.CreateDetectorRequest(input)
}

// CreateDetector is a passthrough to the underlying CreateDetector method.
// It will increment the count of requests made to CreateDetector.
func (c *GuardDuty) CreateDetector(input *guardduty.CreateDetectorInput) (*guardduty.CreateDetectorOutput, error) {
	c.inc("CreateDetector")
	return c.svc.CreateDetector(input)
}

// CreateDetectorWithContext is a passthrough to the underlying CreateDetectorWithContext method.
// It will increment the count of requests made to CreateDetector.
func (c *GuardDuty) CreateDetectorWithContext(ctx aws.Context, input *guardduty.CreateDetectorInput, opts ...request.Option) (*guardduty.CreateDetectorOutput, error) {
	c.inc("CreateDetector")
	return c.svc.CreateDetectorWithContext(ctx, input, opts...)
}

// CreateIPSetRequest is a passthrough to the underlying CreateIPSetRequest.
// It will increment the count of requests made to CreateIPSet.
func (c *GuardDuty) CreateIPSetRequest(input *guardduty.CreateIPSetInput) (req *request.Request, output *guardduty.CreateIPSetOutput) {
	c.inc("CreateIPSet")
	return c.svc.CreateIPSetRequest(input)
}

// CreateIPSet is a passthrough to the underlying CreateIPSet method.
// It will increment the count of requests made to CreateIPSet.
func (c *GuardDuty) CreateIPSet(input *guardduty.CreateIPSetInput) (*guardduty.CreateIPSetOutput, error) {
	c.inc("CreateIPSet")
	return c.svc.CreateIPSet(input)
}

// CreateIPSetWithContext is a passthrough to the underlying CreateIPSetWithContext method.
// It will increment the count of requests made to CreateIPSet.
func (c *GuardDuty) CreateIPSetWithContext(ctx aws.Context, input *guardduty.CreateIPSetInput, opts ...request.Option) (*guardduty.CreateIPSetOutput, error) {
	c.inc("CreateIPSet")
	return c.svc.CreateIPSetWithContext(ctx, input, opts...)
}

// CreateMembersRequest is a passthrough to the underlying CreateMembersRequest.
// It will increment the count of requests made to CreateMembers.
func (c *GuardDuty) CreateMembersRequest(input *guardduty.CreateMembersInput) (req *request.Request, output *guardduty.CreateMembersOutput) {
	c.inc("CreateMembers")
	return c.svc.CreateMembersRequest(input)
}

// CreateMembers is a passthrough to the underlying CreateMembers method.
// It will increment the count of requests made to CreateMembers.
func (c *GuardDuty) CreateMembers(input *guardduty.CreateMembersInput) (*guardduty.CreateMembersOutput, error) {
	c.inc("CreateMembers")
	return c.svc.CreateMembers(input)
}

// CreateMembersWithContext is a passthrough to the underlying CreateMembersWithContext method.
// It will increment the count of requests made to CreateMembers.
func (c *GuardDuty) CreateMembersWithContext(ctx aws.Context, input *guardduty.CreateMembersInput, opts ...request.Option) (*guardduty.CreateMembersOutput, error) {
	c.inc("CreateMembers")
	return c.svc.CreateMembersWithContext(ctx, input, opts...)
}

// CreateSampleFindingsRequest is a passthrough to the underlying CreateSampleFindingsRequest.
// It will increment the count of requests made to CreateSampleFindings.
func (c *GuardDuty) CreateSampleFindingsRequest(input *guardduty.CreateSampleFindingsInput) (req *request.Request, output *guardduty.CreateSampleFindingsOutput) {
	c.inc("CreateSampleFindings")
	return c.svc.CreateSampleFindingsRequest(input)
}

// CreateSampleFindings is a passthrough to the underlying CreateSampleFindings method.
// It will increment the count of requests made to CreateSampleFindings.
func (c *GuardDuty) CreateSampleFindings(input *guardduty.CreateSampleFindingsInput) (*guardduty.CreateSampleFindingsOutput, error) {
	c.inc("CreateSampleFindings")
	return c.svc.CreateSampleFindings(input)
}

// CreateSampleFindingsWithContext is a passthrough to the underlying CreateSampleFindingsWithContext method.
// It will increment the count of requests made to CreateSampleFindings.
func (c *GuardDuty) CreateSampleFindingsWithContext(ctx aws.Context, input *guardduty.CreateSampleFindingsInput, opts ...request.Option) (*guardduty.CreateSampleFindingsOutput, error) {
	c.inc("CreateSampleFindings")
	return c.svc.CreateSampleFindingsWithContext(ctx, input, opts...)
}

// CreateThreatIntelSetRequest is a passthrough to the underlying CreateThreatIntelSetRequest.
// It will increment the count of requests made to CreateThreatIntelSet.
func (c *GuardDuty) CreateThreatIntelSetRequest(input *guardduty.CreateThreatIntelSetInput) (req *request.Request, output *guardduty.CreateThreatIntelSetOutput) {
	c.inc("CreateThreatIntelSet")
	return c.svc.CreateThreatIntelSetRequest(input)
}

// CreateThreatIntelSet is a passthrough to the underlying CreateThreatIntelSet method.
// It will increment the count of requests made to CreateThreatIntelSet.
func (c *GuardDuty) CreateThreatIntelSet(input *guardduty.CreateThreatIntelSetInput) (*guardduty.CreateThreatIntelSetOutput, error) {
	c.inc("CreateThreatIntelSet")
	return c.svc.CreateThreatIntelSet(input)
}

// CreateThreatIntelSetWithContext is a passthrough to the underlying CreateThreatIntelSetWithContext method.
// It will increment the count of requests made to CreateThreatIntelSet.
func (c *GuardDuty) CreateThreatIntelSetWithContext(ctx aws.Context, input *guardduty.CreateThreatIntelSetInput, opts ...request.Option) (*guardduty.CreateThreatIntelSetOutput, error) {
	c.inc("CreateThreatIntelSet")
	return c.svc.CreateThreatIntelSetWithContext(ctx, input, opts...)
}

// DeclineInvitationsRequest is a passthrough to the underlying DeclineInvitationsRequest.
// It will increment the count of requests made to DeclineInvitations.
func (c *GuardDuty) DeclineInvitationsRequest(input *guardduty.DeclineInvitationsInput) (req *request.Request, output *guardduty.DeclineInvitationsOutput) {
	c.inc("DeclineInvitations")
	return c.svc.DeclineInvitationsRequest(input)
}

// DeclineInvitations is a passthrough to the underlying DeclineInvitations method.
// It will increment the count of requests made to DeclineInvitations.
func (c *GuardDuty) DeclineInvitations(input *guardduty.DeclineInvitationsInput) (*guardduty.DeclineInvitationsOutput, error) {
	c.inc("DeclineInvitations")
	return c.svc.DeclineInvitations(input)
}

// DeclineInvitationsWithContext is a passthrough to the underlying DeclineInvitationsWithContext method.
// It will increment the count of requests made to DeclineInvitations.
func (c *GuardDuty) DeclineInvitationsWithContext(ctx aws.Context, input *guardduty.DeclineInvitationsInput, opts ...request.Option) (*guardduty.DeclineInvitationsOutput, error) {
	c.inc("DeclineInvitations")
	return c.svc.DeclineInvitationsWithContext(ctx, input, opts...)
}

// DeleteDetectorRequest is a passthrough to the underlying DeleteDetectorRequest.
// It will increment the count of requests made to DeleteDetector.
func (c *GuardDuty) DeleteDetectorRequest(input *guardduty.DeleteDetectorInput) (req *request.Request, output *guardduty.DeleteDetectorOutput) {
	c.inc("DeleteDetector")
	return c.svc.DeleteDetectorRequest(input)
}

// DeleteDetector is a passthrough to the underlying DeleteDetector method.
// It will increment the count of requests made to DeleteDetector.
func (c *GuardDuty) DeleteDetector(input *guardduty.DeleteDetectorInput) (*guardduty.DeleteDetectorOutput, error) {
	c.inc("DeleteDetector")
	return c.svc.DeleteDetector(input)
}

// DeleteDetectorWithContext is a passthrough to the underlying DeleteDetectorWithContext method.
// It will increment the count of requests made to DeleteDetector.
func (c *GuardDuty) DeleteDetectorWithContext(ctx aws.Context, input *guardduty.DeleteDetectorInput, opts ...request.Option) (*guardduty.DeleteDetectorOutput, error) {
	c.inc("DeleteDetector")
	return c.svc.DeleteDetectorWithContext(ctx, input, opts...)
}

// DeleteIPSetRequest is a passthrough to the underlying DeleteIPSetRequest.
// It will increment the count of requests made to DeleteIPSet.
func (c *GuardDuty) DeleteIPSetRequest(input *guardduty.DeleteIPSetInput) (req *request.Request, output *guardduty.DeleteIPSetOutput) {
	c.inc("DeleteIPSet")
	return c.svc.DeleteIPSetRequest(input)
}

// DeleteIPSet is a passthrough to the underlying DeleteIPSet method.
// It will increment the count of requests made to DeleteIPSet.
func (c *GuardDuty) DeleteIPSet(input *guardduty.DeleteIPSetInput) (*guardduty.DeleteIPSetOutput, error) {
	c.inc("DeleteIPSet")
	return c.svc.DeleteIPSet(input)
}

// DeleteIPSetWithContext is a passthrough to the underlying DeleteIPSetWithContext method.
// It will increment the count of requests made to DeleteIPSet.
func (c *GuardDuty) DeleteIPSetWithContext(ctx aws.Context, input *guardduty.DeleteIPSetInput, opts ...request.Option) (*guardduty.DeleteIPSetOutput, error) {
	c.inc("DeleteIPSet")
	return c.svc.DeleteIPSetWithContext(ctx, input, opts...)
}

// DeleteInvitationsRequest is a passthrough to the underlying DeleteInvitationsRequest.
// It will increment the count of requests made to DeleteInvitations.
func (c *GuardDuty) DeleteInvitationsRequest(input *guardduty.DeleteInvitationsInput) (req *request.Request, output *guardduty.DeleteInvitationsOutput) {
	c.inc("DeleteInvitations")
	return c.svc.DeleteInvitationsRequest(input)
}

// DeleteInvitations is a passthrough to the underlying DeleteInvitations method.
// It will increment the count of requests made to DeleteInvitations.
func (c *GuardDuty) DeleteInvitations(input *guardduty.DeleteInvitationsInput) (*guardduty.DeleteInvitationsOutput, error) {
	c.inc("DeleteInvitations")
	return c.svc.DeleteInvitations(input)
}

// DeleteInvitationsWithContext is a passthrough to the underlying DeleteInvitationsWithContext method.
// It will increment the count of requests made to DeleteInvitations.
func (c *GuardDuty) DeleteInvitationsWithContext(ctx aws.Context, input *guardduty.DeleteInvitationsInput, opts ...request.Option) (*guardduty.DeleteInvitationsOutput, error) {
	c.inc("DeleteInvitations")
	return c.svc.DeleteInvitationsWithContext(ctx, input, opts...)
}

// DeleteMembersRequest is a passthrough to the underlying DeleteMembersRequest.
// It will increment the count of requests made to DeleteMembers.
func (c *GuardDuty) DeleteMembersRequest(input *guardduty.DeleteMembersInput) (req *request.Request, output *guardduty.DeleteMembersOutput) {
	c.inc("DeleteMembers")
	return c.svc.DeleteMembersRequest(input)
}

// DeleteMembers is a passthrough to the underlying DeleteMembers method.
// It will increment the count of requests made to DeleteMembers.
func (c *GuardDuty) DeleteMembers(input *guardduty.DeleteMembersInput) (*guardduty.DeleteMembersOutput, error) {
	c.inc("DeleteMembers")
	return c.svc.DeleteMembers(input)
}

// DeleteMembersWithContext is a passthrough to the underlying DeleteMembersWithContext method.
// It will increment the count of requests made to DeleteMembers.
func (c *GuardDuty) DeleteMembersWithContext(ctx aws.Context, input *guardduty.DeleteMembersInput, opts ...request.Option) (*guardduty.DeleteMembersOutput, error) {
	c.inc("DeleteMembers")
	return c.svc.DeleteMembersWithContext(ctx, input, opts...)
}

// DeleteThreatIntelSetRequest is a passthrough to the underlying DeleteThreatIntelSetRequest.
// It will increment the count of requests made to DeleteThreatIntelSet.
func (c *GuardDuty) DeleteThreatIntelSetRequest(input *guardduty.DeleteThreatIntelSetInput) (req *request.Request, output *guardduty.DeleteThreatIntelSetOutput) {
	c.inc("DeleteThreatIntelSet")
	return c.svc.DeleteThreatIntelSetRequest(input)
}

// DeleteThreatIntelSet is a passthrough to the underlying DeleteThreatIntelSet method.
// It will increment the count of requests made to DeleteThreatIntelSet.
func (c *GuardDuty) DeleteThreatIntelSet(input *guardduty.DeleteThreatIntelSetInput) (*guardduty.DeleteThreatIntelSetOutput, error) {
	c.inc("DeleteThreatIntelSet")
	return c.svc.DeleteThreatIntelSet(input)
}

// DeleteThreatIntelSetWithContext is a passthrough to the underlying DeleteThreatIntelSetWithContext method.
// It will increment the count of requests made to DeleteThreatIntelSet.
func (c *GuardDuty) DeleteThreatIntelSetWithContext(ctx aws.Context, input *guardduty.DeleteThreatIntelSetInput, opts ...request.Option) (*guardduty.DeleteThreatIntelSetOutput, error) {
	c.inc("DeleteThreatIntelSet")
	return c.svc.DeleteThreatIntelSetWithContext(ctx, input, opts...)
}

// DisassociateFromMasterAccountRequest is a passthrough to the underlying DisassociateFromMasterAccountRequest.
// It will increment the count of requests made to DisassociateFromMasterAccount.
func (c *GuardDuty) DisassociateFromMasterAccountRequest(input *guardduty.DisassociateFromMasterAccountInput) (req *request.Request, output *guardduty.DisassociateFromMasterAccountOutput) {
	c.inc("DisassociateFromMasterAccount")
	return c.svc.DisassociateFromMasterAccountRequest(input)
}

// DisassociateFromMasterAccount is a passthrough to the underlying DisassociateFromMasterAccount method.
// It will increment the count of requests made to DisassociateFromMasterAccount.
func (c *GuardDuty) DisassociateFromMasterAccount(input *guardduty.DisassociateFromMasterAccountInput) (*guardduty.DisassociateFromMasterAccountOutput, error) {
	c.inc("DisassociateFromMasterAccount")
	return c.svc.DisassociateFromMasterAccount(input)
}

// DisassociateFromMasterAccountWithContext is a passthrough to the underlying DisassociateFromMasterAccountWithContext method.
// It will increment the count of requests made to DisassociateFromMasterAccount.
func (c *GuardDuty) DisassociateFromMasterAccountWithContext(ctx aws.Context, input *guardduty.DisassociateFromMasterAccountInput, opts ...request.Option) (*guardduty.DisassociateFromMasterAccountOutput, error) {
	c.inc("DisassociateFromMasterAccount")
	return c.svc.DisassociateFromMasterAccountWithContext(ctx, input, opts...)
}

// DisassociateMembersRequest is a passthrough to the underlying DisassociateMembersRequest.
// It will increment the count of requests made to DisassociateMembers.
func (c *GuardDuty) DisassociateMembersRequest(input *guardduty.DisassociateMembersInput) (req *request.Request, output *guardduty.DisassociateMembersOutput) {
	c.inc("DisassociateMembers")
	return c.svc.DisassociateMembersRequest(input)
}

// DisassociateMembers is a passthrough to the underlying DisassociateMembers method.
// It will increment the count of requests made to DisassociateMembers.
func (c *GuardDuty) DisassociateMembers(input *guardduty.DisassociateMembersInput) (*guardduty.DisassociateMembersOutput, error) {
	c.inc("DisassociateMembers")
	return c.svc.DisassociateMembers(input)
}

// DisassociateMembersWithContext is a passthrough to the underlying DisassociateMembersWithContext method.
// It will increment the count of requests made to DisassociateMembers.
func (c *GuardDuty) DisassociateMembersWithContext(ctx aws.Context, input *guardduty.DisassociateMembersInput, opts ...request.Option) (*guardduty.DisassociateMembersOutput, error) {
	c.inc("DisassociateMembers")
	return c.svc.DisassociateMembersWithContext(ctx, input, opts...)
}

// GetDetectorRequest is a passthrough to the underlying GetDetectorRequest.
// It will increment the count of requests made to GetDetector.
func (c *GuardDuty) GetDetectorRequest(input *guardduty.GetDetectorInput) (req *request.Request, output *guardduty.GetDetectorOutput) {
	c.inc("GetDetector")
	return c.svc.GetDetectorRequest(input)
}

// GetDetector is a passthrough to the underlying GetDetector method.
// It will increment the count of requests made to GetDetector.
func (c *GuardDuty) GetDetector(input *guardduty.GetDetectorInput) (*guardduty.GetDetectorOutput, error) {
	c.inc("GetDetector")
	return c.svc.GetDetector(input)
}

// GetDetectorWithContext is a passthrough to the underlying GetDetectorWithContext method.
// It will increment the count of requests made to GetDetector.
func (c *GuardDuty) GetDetectorWithContext(ctx aws.Context, input *guardduty.GetDetectorInput, opts ...request.Option) (*guardduty.GetDetectorOutput, error) {
	c.inc("GetDetector")
	return c.svc.GetDetectorWithContext(ctx, input, opts...)
}

// GetFindingsRequest is a passthrough to the underlying GetFindingsRequest.
// It will increment the count of requests made to GetFindings.
func (c *GuardDuty) GetFindingsRequest(input *guardduty.GetFindingsInput) (req *request.Request, output *guardduty.GetFindingsOutput) {
	c.inc("GetFindings")
	return c.svc.GetFindingsRequest(input)
}

// GetFindings is a passthrough to the underlying GetFindings method.
// It will increment the count of requests made to GetFindings.
func (c *GuardDuty) GetFindings(input *guardduty.GetFindingsInput) (*guardduty.GetFindingsOutput, error) {
	c.inc("GetFindings")
	return c.svc.GetFindings(input)
}

// GetFindingsWithContext is a passthrough to the underlying GetFindingsWithContext method.
// It will increment the count of requests made to GetFindings.
func (c *GuardDuty) GetFindingsWithContext(ctx aws.Context, input *guardduty.GetFindingsInput, opts ...request.Option) (*guardduty.GetFindingsOutput, error) {
	c.inc("GetFindings")
	return c.svc.GetFindingsWithContext(ctx, input, opts...)
}

// GetFindingsStatisticsRequest is a passthrough to the underlying GetFindingsStatisticsRequest.
// It will increment the count of requests made to GetFindingsStatistics.
func (c *GuardDuty) GetFindingsStatisticsRequest(input *guardduty.GetFindingsStatisticsInput) (req *request.Request, output *guardduty.GetFindingsStatisticsOutput) {
	c.inc("GetFindingsStatistics")
	return c.svc.GetFindingsStatisticsRequest(input)
}

// GetFindingsStatistics is a passthrough to the underlying GetFindingsStatistics method.
// It will increment the count of requests made to GetFindingsStatistics.
func (c *GuardDuty) GetFindingsStatistics(input *guardduty.GetFindingsStatisticsInput) (*guardduty.GetFindingsStatisticsOutput, error) {
	c.inc("GetFindingsStatistics")
	return c.svc.GetFindingsStatistics(input)
}

// GetFindingsStatisticsWithContext is a passthrough to the underlying GetFindingsStatisticsWithContext method.
// It will increment the count of requests made to GetFindingsStatistics.
func (c *GuardDuty) GetFindingsStatisticsWithContext(ctx aws.Context, input *guardduty.GetFindingsStatisticsInput, opts ...request.Option) (*guardduty.GetFindingsStatisticsOutput, error) {
	c.inc("GetFindingsStatistics")
	return c.svc.GetFindingsStatisticsWithContext(ctx, input, opts...)
}

// GetIPSetRequest is a passthrough to the underlying GetIPSetRequest.
// It will increment the count of requests made to GetIPSet.
func (c *GuardDuty) GetIPSetRequest(input *guardduty.GetIPSetInput) (req *request.Request, output *guardduty.GetIPSetOutput) {
	c.inc("GetIPSet")
	return c.svc.GetIPSetRequest(input)
}

// GetIPSet is a passthrough to the underlying GetIPSet method.
// It will increment the count of requests made to GetIPSet.
func (c *GuardDuty) GetIPSet(input *guardduty.GetIPSetInput) (*guardduty.GetIPSetOutput, error) {
	c.inc("GetIPSet")
	return c.svc.GetIPSet(input)
}

// GetIPSetWithContext is a passthrough to the underlying GetIPSetWithContext method.
// It will increment the count of requests made to GetIPSet.
func (c *GuardDuty) GetIPSetWithContext(ctx aws.Context, input *guardduty.GetIPSetInput, opts ...request.Option) (*guardduty.GetIPSetOutput, error) {
	c.inc("GetIPSet")
	return c.svc.GetIPSetWithContext(ctx, input, opts...)
}

// GetInvitationsCountRequest is a passthrough to the underlying GetInvitationsCountRequest.
// It will increment the count of requests made to GetInvitationsCount.
func (c *GuardDuty) GetInvitationsCountRequest(input *guardduty.GetInvitationsCountInput) (req *request.Request, output *guardduty.GetInvitationsCountOutput) {
	c.inc("GetInvitationsCount")
	return c.svc.GetInvitationsCountRequest(input)
}

// GetInvitationsCount is a passthrough to the underlying GetInvitationsCount method.
// It will increment the count of requests made to GetInvitationsCount.
func (c *GuardDuty) GetInvitationsCount(input *guardduty.GetInvitationsCountInput) (*guardduty.GetInvitationsCountOutput, error) {
	c.inc("GetInvitationsCount")
	return c.svc.GetInvitationsCount(input)
}

// GetInvitationsCountWithContext is a passthrough to the underlying GetInvitationsCountWithContext method.
// It will increment the count of requests made to GetInvitationsCount.
func (c *GuardDuty) GetInvitationsCountWithContext(ctx aws.Context, input *guardduty.GetInvitationsCountInput, opts ...request.Option) (*guardduty.GetInvitationsCountOutput, error) {
	c.inc("GetInvitationsCount")
	return c.svc.GetInvitationsCountWithContext(ctx, input, opts...)
}

// GetMasterAccountRequest is a passthrough to the underlying GetMasterAccountRequest.
// It will increment the count of requests made to GetMasterAccount.
func (c *GuardDuty) GetMasterAccountRequest(input *guardduty.GetMasterAccountInput) (req *request.Request, output *guardduty.GetMasterAccountOutput) {
	c.inc("GetMasterAccount")
	return c.svc.GetMasterAccountRequest(input)
}

// GetMasterAccount is a passthrough to the underlying GetMasterAccount method.
// It will increment the count of requests made to GetMasterAccount.
func (c *GuardDuty) GetMasterAccount(input *guardduty.GetMasterAccountInput) (*guardduty.GetMasterAccountOutput, error) {
	c.inc("GetMasterAccount")
	return c.svc.GetMasterAccount(input)
}

// GetMasterAccountWithContext is a passthrough to the underlying GetMasterAccountWithContext method.
// It will increment the count of requests made to GetMasterAccount.
func (c *GuardDuty) GetMasterAccountWithContext(ctx aws.Context, input *guardduty.GetMasterAccountInput, opts ...request.Option) (*guardduty.GetMasterAccountOutput, error) {
	c.inc("GetMasterAccount")
	return c.svc.GetMasterAccountWithContext(ctx, input, opts...)
}

// GetMembersRequest is a passthrough to the underlying GetMembersRequest.
// It will increment the count of requests made to GetMembers.
func (c *GuardDuty) GetMembersRequest(input *guardduty.GetMembersInput) (req *request.Request, output *guardduty.GetMembersOutput) {
	c.inc("GetMembers")
	return c.svc.GetMembersRequest(input)
}

// GetMembers is a passthrough to the underlying GetMembers method.
// It will increment the count of requests made to GetMembers.
func (c *GuardDuty) GetMembers(input *guardduty.GetMembersInput) (*guardduty.GetMembersOutput, error) {
	c.inc("GetMembers")
	return c.svc.GetMembers(input)
}

// GetMembersWithContext is a passthrough to the underlying GetMembersWithContext method.
// It will increment the count of requests made to GetMembers.
func (c *GuardDuty) GetMembersWithContext(ctx aws.Context, input *guardduty.GetMembersInput, opts ...request.Option) (*guardduty.GetMembersOutput, error) {
	c.inc("GetMembers")
	return c.svc.GetMembersWithContext(ctx, input, opts...)
}

// GetThreatIntelSetRequest is a passthrough to the underlying GetThreatIntelSetRequest.
// It will increment the count of requests made to GetThreatIntelSet.
func (c *GuardDuty) GetThreatIntelSetRequest(input *guardduty.GetThreatIntelSetInput) (req *request.Request, output *guardduty.GetThreatIntelSetOutput) {
	c.inc("GetThreatIntelSet")
	return c.svc.GetThreatIntelSetRequest(input)
}

// GetThreatIntelSet is a passthrough to the underlying GetThreatIntelSet method.
// It will increment the count of requests made to GetThreatIntelSet.
func (c *GuardDuty) GetThreatIntelSet(input *guardduty.GetThreatIntelSetInput) (*guardduty.GetThreatIntelSetOutput, error) {
	c.inc("GetThreatIntelSet")
	return c.svc.GetThreatIntelSet(input)
}

// GetThreatIntelSetWithContext is a passthrough to the underlying GetThreatIntelSetWithContext method.
// It will increment the count of requests made to GetThreatIntelSet.
func (c *GuardDuty) GetThreatIntelSetWithContext(ctx aws.Context, input *guardduty.GetThreatIntelSetInput, opts ...request.Option) (*guardduty.GetThreatIntelSetOutput, error) {
	c.inc("GetThreatIntelSet")
	return c.svc.GetThreatIntelSetWithContext(ctx, input, opts...)
}

// InviteMembersRequest is a passthrough to the underlying InviteMembersRequest.
// It will increment the count of requests made to InviteMembers.
func (c *GuardDuty) InviteMembersRequest(input *guardduty.InviteMembersInput) (req *request.Request, output *guardduty.InviteMembersOutput) {
	c.inc("InviteMembers")
	return c.svc.InviteMembersRequest(input)
}

// InviteMembers is a passthrough to the underlying InviteMembers method.
// It will increment the count of requests made to InviteMembers.
func (c *GuardDuty) InviteMembers(input *guardduty.InviteMembersInput) (*guardduty.InviteMembersOutput, error) {
	c.inc("InviteMembers")
	return c.svc.InviteMembers(input)
}

// InviteMembersWithContext is a passthrough to the underlying InviteMembersWithContext method.
// It will increment the count of requests made to InviteMembers.
func (c *GuardDuty) InviteMembersWithContext(ctx aws.Context, input *guardduty.InviteMembersInput, opts ...request.Option) (*guardduty.InviteMembersOutput, error) {
	c.inc("InviteMembers")
	return c.svc.InviteMembersWithContext(ctx, input, opts...)
}

// ListDetectorsRequest is a passthrough to the underlying ListDetectorsRequest.
// It will increment the count of requests made to ListDetectors.
func (c *GuardDuty) ListDetectorsRequest(input *guardduty.ListDetectorsInput) (req *request.Request, output *guardduty.ListDetectorsOutput) {
	c.inc("ListDetectors")
	return c.svc.ListDetectorsRequest(input)
}

// ListDetectors is a passthrough to the underlying ListDetectors method.
// It will increment the count of requests made to ListDetectors.
func (c *GuardDuty) ListDetectors(input *guardduty.ListDetectorsInput) (*guardduty.ListDetectorsOutput, error) {
	c.inc("ListDetectors")
	return c.svc.ListDetectors(input)
}

// ListDetectorsWithContext is a passthrough to the underlying ListDetectorsWithContext method.
// It will increment the count of requests made to ListDetectors.
func (c *GuardDuty) ListDetectorsWithContext(ctx aws.Context, input *guardduty.ListDetectorsInput, opts ...request.Option) (*guardduty.ListDetectorsOutput, error) {
	c.inc("ListDetectors")
	return c.svc.ListDetectorsWithContext(ctx, input, opts...)
}

// ListDetectorsPages is a passthrough to the underlying ListDetectorsPages method.
// It will increment the count of requests made to ListDetectors on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListDetectorsPagesWithContext to avoid this.
func (c *GuardDuty) ListDetectorsPages(input *guardduty.ListDetectorsInput, fn func(*guardduty.ListDetectorsOutput, bool) bool) error {
	wrappedFn := func(page *guardduty.ListDetectorsOutput, lastPage bool) bool {
		c.inc("ListDetectors")
		return fn(page, lastPage)
	}
	return c.svc.ListDetectorsPages(input, wrappedFn)
}

// ListDetectorsPagesWithContext is a passthrough to the underlying ListDetectorsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListDetectors when applied to the request.
func (c *GuardDuty) ListDetectorsPagesWithContext(ctx aws.Context, input *guardduty.ListDetectorsInput, fn func(*guardduty.ListDetectorsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListDetectors"))
	return c.svc.ListDetectorsPagesWithContext(ctx, input, fn, opts...)
}

// ListFindingsRequest is a passthrough to the underlying ListFindingsRequest.
// It will increment the count of requests made to ListFindings.
func (c *GuardDuty) ListFindingsRequest(input *guardduty.ListFindingsInput) (req *request.Request, output *guardduty.ListFindingsOutput) {
	c.inc("ListFindings")
	return c.svc.ListFindingsRequest(input)
}

// ListFindings is a passthrough to the underlying ListFindings method.
// It will increment the count of requests made to ListFindings.
func (c *GuardDuty) ListFindings(input *guardduty.ListFindingsInput) (*guardduty.ListFindingsOutput, error) {
	c.inc("ListFindings")
	return c.svc.ListFindings(input)
}

// ListFindingsWithContext is a passthrough to the underlying ListFindingsWithContext method.
// It will increment the count of requests made to ListFindings.
func (c *GuardDuty) ListFindingsWithContext(ctx aws.Context, input *guardduty.ListFindingsInput, opts ...request.Option) (*guardduty.ListFindingsOutput, error) {
	c.inc("ListFindings")
	return c.svc.ListFindingsWithContext(ctx, input, opts...)
}

// ListFindingsPages is a passthrough to the underlying ListFindingsPages method.
// It will increment the count of requests made to ListFindings on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListFindingsPagesWithContext to avoid this.
func (c *GuardDuty) ListFindingsPages(input *guardduty.ListFindingsInput, fn func(*guardduty.ListFindingsOutput, bool) bool) error {
	wrappedFn := func(page *guardduty.ListFindingsOutput, lastPage bool) bool {
		c.inc("ListFindings")
		return fn(page, lastPage)
	}
	return c.svc.ListFindingsPages(input, wrappedFn)
}

// ListFindingsPagesWithContext is a passthrough to the underlying ListFindingsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListFindings when applied to the request.
func (c *GuardDuty) ListFindingsPagesWithContext(ctx aws.Context, input *guardduty.ListFindingsInput, fn func(*guardduty.ListFindingsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListFindings"))
	return c.svc.ListFindingsPagesWithContext(ctx, input, fn, opts...)
}

// ListIPSetsRequest is a passthrough to the underlying ListIPSetsRequest.
// It will increment the count of requests made to ListIPSets.
func (c *GuardDuty) ListIPSetsRequest(input *guardduty.ListIPSetsInput) (req *request.Request, output *guardduty.ListIPSetsOutput) {
	c.inc("ListIPSets")
	return c.svc.ListIPSetsRequest(input)
}

// ListIPSets is a passthrough to the underlying ListIPSets method.
// It will increment the count of requests made to ListIPSets.
func (c *GuardDuty) ListIPSets(input *guardduty.ListIPSetsInput) (*guardduty.ListIPSetsOutput, error) {
	c.inc("ListIPSets")
	return c.svc.ListIPSets(input)
}

// ListIPSetsWithContext is a passthrough to the underlying ListIPSetsWithContext method.
// It will increment the count of requests made to ListIPSets.
func (c *GuardDuty) ListIPSetsWithContext(ctx aws.Context, input *guardduty.ListIPSetsInput, opts ...request.Option) (*guardduty.ListIPSetsOutput, error) {
	c.inc("ListIPSets")
	return c.svc.ListIPSetsWithContext(ctx, input, opts...)
}

// ListIPSetsPages is a passthrough to the underlying ListIPSetsPages method.
// It will increment the count of requests made to ListIPSets on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListIPSetsPagesWithContext to avoid this.
func (c *GuardDuty) ListIPSetsPages(input *guardduty.ListIPSetsInput, fn func(*guardduty.ListIPSetsOutput, bool) bool) error {
	wrappedFn := func(page *guardduty.ListIPSetsOutput, lastPage bool) bool {
		c.inc("ListIPSets")
		return fn(page, lastPage)
	}
	return c.svc.ListIPSetsPages(input, wrappedFn)
}

// ListIPSetsPagesWithContext is a passthrough to the underlying ListIPSetsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListIPSets when applied to the request.
func (c *GuardDuty) ListIPSetsPagesWithContext(ctx aws.Context, input *guardduty.ListIPSetsInput, fn func(*guardduty.ListIPSetsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListIPSets"))
	return c.svc.ListIPSetsPagesWithContext(ctx, input, fn, opts...)
}

// ListInvitationsRequest is a passthrough to the underlying ListInvitationsRequest.
// It will increment the count of requests made to ListInvitations.
func (c *GuardDuty) ListInvitationsRequest(input *guardduty.ListInvitationsInput) (req *request.Request, output *guardduty.ListInvitationsOutput) {
	c.inc("ListInvitations")
	return c.svc.ListInvitationsRequest(input)
}

// ListInvitations is a passthrough to the underlying ListInvitations method.
// It will increment the count of requests made to ListInvitations.
func (c *GuardDuty) ListInvitations(input *guardduty.ListInvitationsInput) (*guardduty.ListInvitationsOutput, error) {
	c.inc("ListInvitations")
	return c.svc.ListInvitations(input)
}

// ListInvitationsWithContext is a passthrough to the underlying ListInvitationsWithContext method.
// It will increment the count of requests made to ListInvitations.
func (c *GuardDuty) ListInvitationsWithContext(ctx aws.Context, input *guardduty.ListInvitationsInput, opts ...request.Option) (*guardduty.ListInvitationsOutput, error) {
	c.inc("ListInvitations")
	return c.svc.ListInvitationsWithContext(ctx, input, opts...)
}

// ListInvitationsPages is a passthrough to the underlying ListInvitationsPages method.
// It will increment the count of requests made to ListInvitations on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListInvitationsPagesWithContext to avoid this.
func (c *GuardDuty) ListInvitationsPages(input *guardduty.ListInvitationsInput, fn func(*guardduty.ListInvitationsOutput, bool) bool) error {
	wrappedFn := func(page *guardduty.ListInvitationsOutput, lastPage bool) bool {
		c.inc("ListInvitations")
		return fn(page, lastPage)
	}
	return c.svc.ListInvitationsPages(input, wrappedFn)
}

// ListInvitationsPagesWithContext is a passthrough to the underlying ListInvitationsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListInvitations when applied to the request.
func (c *GuardDuty) ListInvitationsPagesWithContext(ctx aws.Context, input *guardduty.ListInvitationsInput, fn func(*guardduty.ListInvitationsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListInvitations"))
	return c.svc.ListInvitationsPagesWithContext(ctx, input, fn, opts...)
}

// ListMembersRequest is a passthrough to the underlying ListMembersRequest.
// It will increment the count of requests made to ListMembers.
func (c *GuardDuty) ListMembersRequest(input *guardduty.ListMembersInput) (req *request.Request, output *guardduty.ListMembersOutput) {
	c.inc("ListMembers")
	return c.svc.ListMembersRequest(input)
}

// ListMembers is a passthrough to the underlying ListMembers method.
// It will increment the count of requests made to ListMembers.
func (c *GuardDuty) ListMembers(input *guardduty.ListMembersInput) (*guardduty.ListMembersOutput, error) {
	c.inc("ListMembers")
	return c.svc.ListMembers(input)
}

// ListMembersWithContext is a passthrough to the underlying ListMembersWithContext method.
// It will increment the count of requests made to ListMembers.
func (c *GuardDuty) ListMembersWithContext(ctx aws.Context, input *guardduty.ListMembersInput, opts ...request.Option) (*guardduty.ListMembersOutput, error) {
	c.inc("ListMembers")
	return c.svc.ListMembersWithContext(ctx, input, opts...)
}

// ListMembersPages is a passthrough to the underlying ListMembersPages method.
// It will increment the count of requests made to ListMembers on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListMembersPagesWithContext to avoid this.
func (c *GuardDuty) ListMembersPages(input *guardduty.ListMembersInput, fn func(*guardduty.ListMembersOutput, bool) bool) error {
	wrappedFn := func(page *guardduty.ListMembersOutput, lastPage bool) bool {
		c.inc("ListMembers")
		return fn(page, lastPage)
	}
	return c.svc.ListMembersPages(input, wrappedFn)
}

// ListMembersPagesWithContext is a passthrough to the underlying ListMembersPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListMembers when applied to the request.
func (c *GuardDuty) ListMembersPagesWithContext(ctx aws.Context, input *guardduty.ListMembersInput, fn func(*guardduty.ListMembersOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListMembers"))
	return c.svc.ListMembersPagesWithContext(ctx, input, fn, opts...)
}

// ListThreatIntelSetsRequest is a passthrough to the underlying ListThreatIntelSetsRequest.
// It will increment the count of requests made to ListThreatIntelSets.
func (c *GuardDuty) ListThreatIntelSetsRequest(input *guardduty.ListThreatIntelSetsInput) (req *request.Request, output *guardduty.ListThreatIntelSetsOutput) {
	c.inc("ListThreatIntelSets")
	return c.svc.ListThreatIntelSetsRequest(input)
}

// ListThreatIntelSets is a passthrough to the underlying ListThreatIntelSets method.
// It will increment the count of requests made to ListThreatIntelSets.
func (c *GuardDuty) ListThreatIntelSets(input *guardduty.ListThreatIntelSetsInput) (*guardduty.ListThreatIntelSetsOutput, error) {
	c.inc("ListThreatIntelSets")
	return c.svc.ListThreatIntelSets(input)
}

// ListThreatIntelSetsWithContext is a passthrough to the underlying ListThreatIntelSetsWithContext method.
// It will increment the count of requests made to ListThreatIntelSets.
func (c *GuardDuty) ListThreatIntelSetsWithContext(ctx aws.Context, input *guardduty.ListThreatIntelSetsInput, opts ...request.Option) (*guardduty.ListThreatIntelSetsOutput, error) {
	c.inc("ListThreatIntelSets")
	return c.svc.ListThreatIntelSetsWithContext(ctx, input, opts...)
}

// ListThreatIntelSetsPages is a passthrough to the underlying ListThreatIntelSetsPages method.
// It will increment the count of requests made to ListThreatIntelSets on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListThreatIntelSetsPagesWithContext to avoid this.
func (c *GuardDuty) ListThreatIntelSetsPages(input *guardduty.ListThreatIntelSetsInput, fn func(*guardduty.ListThreatIntelSetsOutput, bool) bool) error {
	wrappedFn := func(page *guardduty.ListThreatIntelSetsOutput, lastPage bool) bool {
		c.inc("ListThreatIntelSets")
		return fn(page, lastPage)
	}
	return c.svc.ListThreatIntelSetsPages(input, wrappedFn)
}

// ListThreatIntelSetsPagesWithContext is a passthrough to the underlying ListThreatIntelSetsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListThreatIntelSets when applied to the request.
func (c *GuardDuty) ListThreatIntelSetsPagesWithContext(ctx aws.Context, input *guardduty.ListThreatIntelSetsInput, fn func(*guardduty.ListThreatIntelSetsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListThreatIntelSets"))
	return c.svc.ListThreatIntelSetsPagesWithContext(ctx, input, fn, opts...)
}

// StartMonitoringMembersRequest is a passthrough to the underlying StartMonitoringMembersRequest.
// It will increment the count of requests made to StartMonitoringMembers.
func (c *GuardDuty) StartMonitoringMembersRequest(input *guardduty.StartMonitoringMembersInput) (req *request.Request, output *guardduty.StartMonitoringMembersOutput) {
	c.inc("StartMonitoringMembers")
	return c.svc.StartMonitoringMembersRequest(input)
}

// StartMonitoringMembers is a passthrough to the underlying StartMonitoringMembers method.
// It will increment the count of requests made to StartMonitoringMembers.
func (c *GuardDuty) StartMonitoringMembers(input *guardduty.StartMonitoringMembersInput) (*guardduty.StartMonitoringMembersOutput, error) {
	c.inc("StartMonitoringMembers")
	return c.svc.StartMonitoringMembers(input)
}

// StartMonitoringMembersWithContext is a passthrough to the underlying StartMonitoringMembersWithContext method.
// It will increment the count of requests made to StartMonitoringMembers.
func (c *GuardDuty) StartMonitoringMembersWithContext(ctx aws.Context, input *guardduty.StartMonitoringMembersInput, opts ...request.Option) (*guardduty.StartMonitoringMembersOutput, error) {
	c.inc("StartMonitoringMembers")
	return c.svc.StartMonitoringMembersWithContext(ctx, input, opts...)
}

// StopMonitoringMembersRequest is a passthrough to the underlying StopMonitoringMembersRequest.
// It will increment the count of requests made to StopMonitoringMembers.
func (c *GuardDuty) StopMonitoringMembersRequest(input *guardduty.StopMonitoringMembersInput) (req *request.Request, output *guardduty.StopMonitoringMembersOutput) {
	c.inc("StopMonitoringMembers")
	return c.svc.StopMonitoringMembersRequest(input)
}

// StopMonitoringMembers is a passthrough to the underlying StopMonitoringMembers method.
// It will increment the count of requests made to StopMonitoringMembers.
func (c *GuardDuty) StopMonitoringMembers(input *guardduty.StopMonitoringMembersInput) (*guardduty.StopMonitoringMembersOutput, error) {
	c.inc("StopMonitoringMembers")
	return c.svc.StopMonitoringMembers(input)
}

// StopMonitoringMembersWithContext is a passthrough to the underlying StopMonitoringMembersWithContext method.
// It will increment the count of requests made to StopMonitoringMembers.
func (c *GuardDuty) StopMonitoringMembersWithContext(ctx aws.Context, input *guardduty.StopMonitoringMembersInput, opts ...request.Option) (*guardduty.StopMonitoringMembersOutput, error) {
	c.inc("StopMonitoringMembers")
	return c.svc.StopMonitoringMembersWithContext(ctx, input, opts...)
}

// UnarchiveFindingsRequest is a passthrough to the underlying UnarchiveFindingsRequest.
// It will increment the count of requests made to UnarchiveFindings.
func (c *GuardDuty) UnarchiveFindingsRequest(input *guardduty.UnarchiveFindingsInput) (req *request.Request, output *guardduty.UnarchiveFindingsOutput) {
	c.inc("UnarchiveFindings")
	return c.svc.UnarchiveFindingsRequest(input)
}

// UnarchiveFindings is a passthrough to the underlying UnarchiveFindings method.
// It will increment the count of requests made to UnarchiveFindings.
func (c *GuardDuty) UnarchiveFindings(input *guardduty.UnarchiveFindingsInput) (*guardduty.UnarchiveFindingsOutput, error) {
	c.inc("UnarchiveFindings")
	return c.svc.UnarchiveFindings(input)
}

// UnarchiveFindingsWithContext is a passthrough to the underlying UnarchiveFindingsWithContext method.
// It will increment the count of requests made to UnarchiveFindings.
func (c *GuardDuty) UnarchiveFindingsWithContext(ctx aws.Context, input *guardduty.UnarchiveFindingsInput, opts ...request.Option) (*guardduty.UnarchiveFindingsOutput, error) {
	c.inc("UnarchiveFindings")
	return c.svc.UnarchiveFindingsWithContext(ctx, input, opts...)
}

// UpdateDetectorRequest is a passthrough to the underlying UpdateDetectorRequest.
// It will increment the count of requests made to UpdateDetector.
func (c *GuardDuty) UpdateDetectorRequest(input *guardduty.UpdateDetectorInput) (req *request.Request, output *guardduty.UpdateDetectorOutput) {
	c.inc("UpdateDetector")
	return c.svc.UpdateDetectorRequest(input)
}

// UpdateDetector is a passthrough to the underlying UpdateDetector method.
// It will increment the count of requests made to UpdateDetector.
func (c *GuardDuty) UpdateDetector(input *guardduty.UpdateDetectorInput) (*guardduty.UpdateDetectorOutput, error) {
	c.inc("UpdateDetector")
	return c.svc.UpdateDetector(input)
}

// UpdateDetectorWithContext is a passthrough to the underlying UpdateDetectorWithContext method.
// It will increment the count of requests made to UpdateDetector.
func (c *GuardDuty) UpdateDetectorWithContext(ctx aws.Context, input *guardduty.UpdateDetectorInput, opts ...request.Option) (*guardduty.UpdateDetectorOutput, error) {
	c.inc("UpdateDetector")
	return c.svc.UpdateDetectorWithContext(ctx, input, opts...)
}

// UpdateFindingsFeedbackRequest is a passthrough to the underlying UpdateFindingsFeedbackRequest.
// It will increment the count of requests made to UpdateFindingsFeedback.
func (c *GuardDuty) UpdateFindingsFeedbackRequest(input *guardduty.UpdateFindingsFeedbackInput) (req *request.Request, output *guardduty.UpdateFindingsFeedbackOutput) {
	c.inc("UpdateFindingsFeedback")
	return c.svc.UpdateFindingsFeedbackRequest(input)
}

// UpdateFindingsFeedback is a passthrough to the underlying UpdateFindingsFeedback method.
// It will increment the count of requests made to UpdateFindingsFeedback.
func (c *GuardDuty) UpdateFindingsFeedback(input *guardduty.UpdateFindingsFeedbackInput) (*guardduty.UpdateFindingsFeedbackOutput, error) {
	c.inc("UpdateFindingsFeedback")
	return c.svc.UpdateFindingsFeedback(input)
}

// UpdateFindingsFeedbackWithContext is a passthrough to the underlying UpdateFindingsFeedbackWithContext method.
// It will increment the count of requests made to UpdateFindingsFeedback.
func (c *GuardDuty) UpdateFindingsFeedbackWithContext(ctx aws.Context, input *guardduty.UpdateFindingsFeedbackInput, opts ...request.Option) (*guardduty.UpdateFindingsFeedbackOutput, error) {
	c.inc("UpdateFindingsFeedback")
	return c.svc.UpdateFindingsFeedbackWithContext(ctx, input, opts...)
}

// UpdateIPSetRequest is a passthrough to the underlying UpdateIPSetRequest.
// It will increment the count of requests made to UpdateIPSet.
func (c *GuardDuty) UpdateIPSetRequest(input *guardduty.UpdateIPSetInput) (req *request.Request, output *guardduty.UpdateIPSetOutput) {
	c.inc("UpdateIPSet")
	return c.svc.UpdateIPSetRequest(input)
}

// UpdateIPSet is a passthrough to the underlying UpdateIPSet method.
// It will increment the count of requests made to UpdateIPSet.
func (c *GuardDuty) UpdateIPSet(input *guardduty.UpdateIPSetInput) (*guardduty.UpdateIPSetOutput, error) {
	c.inc("UpdateIPSet")
	return c.svc.UpdateIPSet(input)
}

// UpdateIPSetWithContext is a passthrough to the underlying UpdateIPSetWithContext method.
// It will increment the count of requests made to UpdateIPSet.
func (c *GuardDuty) UpdateIPSetWithContext(ctx aws.Context, input *guardduty.UpdateIPSetInput, opts ...request.Option) (*guardduty.UpdateIPSetOutput, error) {
	c.inc("UpdateIPSet")
	return c.svc.UpdateIPSetWithContext(ctx, input, opts...)
}

// UpdateThreatIntelSetRequest is a passthrough to the underlying UpdateThreatIntelSetRequest.
// It will increment the count of requests made to UpdateThreatIntelSet.
func (c *GuardDuty) UpdateThreatIntelSetRequest(input *guardduty.UpdateThreatIntelSetInput) (req *request.Request, output *guardduty.UpdateThreatIntelSetOutput) {
	c.inc("UpdateThreatIntelSet")
	return c.svc.UpdateThreatIntelSetRequest(input)
}

// UpdateThreatIntelSet is a passthrough to the underlying UpdateThreatIntelSet method.
// It will increment the count of requests made to UpdateThreatIntelSet.
func (c *GuardDuty) UpdateThreatIntelSet(input *guardduty.UpdateThreatIntelSetInput) (*guardduty.UpdateThreatIntelSetOutput, error) {
	c.inc("UpdateThreatIntelSet")
	return c.svc.UpdateThreatIntelSet(input)
}

// UpdateThreatIntelSetWithContext is a passthrough to the underlying UpdateThreatIntelSetWithContext method.
// It will increment the count of requests made to UpdateThreatIntelSet.
func (c *GuardDuty) UpdateThreatIntelSetWithContext(ctx aws.Context, input *guardduty.UpdateThreatIntelSetInput, opts ...request.Option) (*guardduty.UpdateThreatIntelSetOutput, error) {
	c.inc("UpdateThreatIntelSet")
	return c.svc.UpdateThreatIntelSetWithContext(ctx, input, opts...)
}
