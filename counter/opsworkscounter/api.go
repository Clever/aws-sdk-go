// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package opsworkscounter

import (
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/opsworks"
)

// AssignInstanceRequest is a passthrough to the underlying AssignInstanceRequest.
// It will increment the count of requests made to AssignInstance.
func (c *OpsWorks) AssignInstanceRequest(input *opsworks.AssignInstanceInput) (req *request.Request, output *opsworks.AssignInstanceOutput) {
	c.inc("AssignInstance")
	return c.svc.AssignInstanceRequest(input)
}

// AssignInstance is a passthrough to the underlying AssignInstance method.
// It will increment the count of requests made to AssignInstance.
func (c *OpsWorks) AssignInstance(input *opsworks.AssignInstanceInput) (*opsworks.AssignInstanceOutput, error) {
	c.inc("AssignInstance")
	return c.svc.AssignInstance(input)
}

// AssignInstanceWithContext is a passthrough to the underlying AssignInstanceWithContext method.
// It will increment the count of requests made to AssignInstance.
func (c *OpsWorks) AssignInstanceWithContext(ctx aws.Context, input *opsworks.AssignInstanceInput, opts ...request.Option) (*opsworks.AssignInstanceOutput, error) {
	c.inc("AssignInstance")
	return c.svc.AssignInstanceWithContext(ctx, input, opts...)
}

// AssignVolumeRequest is a passthrough to the underlying AssignVolumeRequest.
// It will increment the count of requests made to AssignVolume.
func (c *OpsWorks) AssignVolumeRequest(input *opsworks.AssignVolumeInput) (req *request.Request, output *opsworks.AssignVolumeOutput) {
	c.inc("AssignVolume")
	return c.svc.AssignVolumeRequest(input)
}

// AssignVolume is a passthrough to the underlying AssignVolume method.
// It will increment the count of requests made to AssignVolume.
func (c *OpsWorks) AssignVolume(input *opsworks.AssignVolumeInput) (*opsworks.AssignVolumeOutput, error) {
	c.inc("AssignVolume")
	return c.svc.AssignVolume(input)
}

// AssignVolumeWithContext is a passthrough to the underlying AssignVolumeWithContext method.
// It will increment the count of requests made to AssignVolume.
func (c *OpsWorks) AssignVolumeWithContext(ctx aws.Context, input *opsworks.AssignVolumeInput, opts ...request.Option) (*opsworks.AssignVolumeOutput, error) {
	c.inc("AssignVolume")
	return c.svc.AssignVolumeWithContext(ctx, input, opts...)
}

// AssociateElasticIpRequest is a passthrough to the underlying AssociateElasticIpRequest.
// It will increment the count of requests made to AssociateElasticIp.
func (c *OpsWorks) AssociateElasticIpRequest(input *opsworks.AssociateElasticIpInput) (req *request.Request, output *opsworks.AssociateElasticIpOutput) {
	c.inc("AssociateElasticIp")
	return c.svc.AssociateElasticIpRequest(input)
}

// AssociateElasticIp is a passthrough to the underlying AssociateElasticIp method.
// It will increment the count of requests made to AssociateElasticIp.
func (c *OpsWorks) AssociateElasticIp(input *opsworks.AssociateElasticIpInput) (*opsworks.AssociateElasticIpOutput, error) {
	c.inc("AssociateElasticIp")
	return c.svc.AssociateElasticIp(input)
}

// AssociateElasticIpWithContext is a passthrough to the underlying AssociateElasticIpWithContext method.
// It will increment the count of requests made to AssociateElasticIp.
func (c *OpsWorks) AssociateElasticIpWithContext(ctx aws.Context, input *opsworks.AssociateElasticIpInput, opts ...request.Option) (*opsworks.AssociateElasticIpOutput, error) {
	c.inc("AssociateElasticIp")
	return c.svc.AssociateElasticIpWithContext(ctx, input, opts...)
}

// AttachElasticLoadBalancerRequest is a passthrough to the underlying AttachElasticLoadBalancerRequest.
// It will increment the count of requests made to AttachElasticLoadBalancer.
func (c *OpsWorks) AttachElasticLoadBalancerRequest(input *opsworks.AttachElasticLoadBalancerInput) (req *request.Request, output *opsworks.AttachElasticLoadBalancerOutput) {
	c.inc("AttachElasticLoadBalancer")
	return c.svc.AttachElasticLoadBalancerRequest(input)
}

// AttachElasticLoadBalancer is a passthrough to the underlying AttachElasticLoadBalancer method.
// It will increment the count of requests made to AttachElasticLoadBalancer.
func (c *OpsWorks) AttachElasticLoadBalancer(input *opsworks.AttachElasticLoadBalancerInput) (*opsworks.AttachElasticLoadBalancerOutput, error) {
	c.inc("AttachElasticLoadBalancer")
	return c.svc.AttachElasticLoadBalancer(input)
}

// AttachElasticLoadBalancerWithContext is a passthrough to the underlying AttachElasticLoadBalancerWithContext method.
// It will increment the count of requests made to AttachElasticLoadBalancer.
func (c *OpsWorks) AttachElasticLoadBalancerWithContext(ctx aws.Context, input *opsworks.AttachElasticLoadBalancerInput, opts ...request.Option) (*opsworks.AttachElasticLoadBalancerOutput, error) {
	c.inc("AttachElasticLoadBalancer")
	return c.svc.AttachElasticLoadBalancerWithContext(ctx, input, opts...)
}

// CloneStackRequest is a passthrough to the underlying CloneStackRequest.
// It will increment the count of requests made to CloneStack.
func (c *OpsWorks) CloneStackRequest(input *opsworks.CloneStackInput) (req *request.Request, output *opsworks.CloneStackOutput) {
	c.inc("CloneStack")
	return c.svc.CloneStackRequest(input)
}

// CloneStack is a passthrough to the underlying CloneStack method.
// It will increment the count of requests made to CloneStack.
func (c *OpsWorks) CloneStack(input *opsworks.CloneStackInput) (*opsworks.CloneStackOutput, error) {
	c.inc("CloneStack")
	return c.svc.CloneStack(input)
}

// CloneStackWithContext is a passthrough to the underlying CloneStackWithContext method.
// It will increment the count of requests made to CloneStack.
func (c *OpsWorks) CloneStackWithContext(ctx aws.Context, input *opsworks.CloneStackInput, opts ...request.Option) (*opsworks.CloneStackOutput, error) {
	c.inc("CloneStack")
	return c.svc.CloneStackWithContext(ctx, input, opts...)
}

// CreateAppRequest is a passthrough to the underlying CreateAppRequest.
// It will increment the count of requests made to CreateApp.
func (c *OpsWorks) CreateAppRequest(input *opsworks.CreateAppInput) (req *request.Request, output *opsworks.CreateAppOutput) {
	c.inc("CreateApp")
	return c.svc.CreateAppRequest(input)
}

// CreateApp is a passthrough to the underlying CreateApp method.
// It will increment the count of requests made to CreateApp.
func (c *OpsWorks) CreateApp(input *opsworks.CreateAppInput) (*opsworks.CreateAppOutput, error) {
	c.inc("CreateApp")
	return c.svc.CreateApp(input)
}

// CreateAppWithContext is a passthrough to the underlying CreateAppWithContext method.
// It will increment the count of requests made to CreateApp.
func (c *OpsWorks) CreateAppWithContext(ctx aws.Context, input *opsworks.CreateAppInput, opts ...request.Option) (*opsworks.CreateAppOutput, error) {
	c.inc("CreateApp")
	return c.svc.CreateAppWithContext(ctx, input, opts...)
}

// CreateDeploymentRequest is a passthrough to the underlying CreateDeploymentRequest.
// It will increment the count of requests made to CreateDeployment.
func (c *OpsWorks) CreateDeploymentRequest(input *opsworks.CreateDeploymentInput) (req *request.Request, output *opsworks.CreateDeploymentOutput) {
	c.inc("CreateDeployment")
	return c.svc.CreateDeploymentRequest(input)
}

// CreateDeployment is a passthrough to the underlying CreateDeployment method.
// It will increment the count of requests made to CreateDeployment.
func (c *OpsWorks) CreateDeployment(input *opsworks.CreateDeploymentInput) (*opsworks.CreateDeploymentOutput, error) {
	c.inc("CreateDeployment")
	return c.svc.CreateDeployment(input)
}

// CreateDeploymentWithContext is a passthrough to the underlying CreateDeploymentWithContext method.
// It will increment the count of requests made to CreateDeployment.
func (c *OpsWorks) CreateDeploymentWithContext(ctx aws.Context, input *opsworks.CreateDeploymentInput, opts ...request.Option) (*opsworks.CreateDeploymentOutput, error) {
	c.inc("CreateDeployment")
	return c.svc.CreateDeploymentWithContext(ctx, input, opts...)
}

// CreateInstanceRequest is a passthrough to the underlying CreateInstanceRequest.
// It will increment the count of requests made to CreateInstance.
func (c *OpsWorks) CreateInstanceRequest(input *opsworks.CreateInstanceInput) (req *request.Request, output *opsworks.CreateInstanceOutput) {
	c.inc("CreateInstance")
	return c.svc.CreateInstanceRequest(input)
}

// CreateInstance is a passthrough to the underlying CreateInstance method.
// It will increment the count of requests made to CreateInstance.
func (c *OpsWorks) CreateInstance(input *opsworks.CreateInstanceInput) (*opsworks.CreateInstanceOutput, error) {
	c.inc("CreateInstance")
	return c.svc.CreateInstance(input)
}

// CreateInstanceWithContext is a passthrough to the underlying CreateInstanceWithContext method.
// It will increment the count of requests made to CreateInstance.
func (c *OpsWorks) CreateInstanceWithContext(ctx aws.Context, input *opsworks.CreateInstanceInput, opts ...request.Option) (*opsworks.CreateInstanceOutput, error) {
	c.inc("CreateInstance")
	return c.svc.CreateInstanceWithContext(ctx, input, opts...)
}

// CreateLayerRequest is a passthrough to the underlying CreateLayerRequest.
// It will increment the count of requests made to CreateLayer.
func (c *OpsWorks) CreateLayerRequest(input *opsworks.CreateLayerInput) (req *request.Request, output *opsworks.CreateLayerOutput) {
	c.inc("CreateLayer")
	return c.svc.CreateLayerRequest(input)
}

// CreateLayer is a passthrough to the underlying CreateLayer method.
// It will increment the count of requests made to CreateLayer.
func (c *OpsWorks) CreateLayer(input *opsworks.CreateLayerInput) (*opsworks.CreateLayerOutput, error) {
	c.inc("CreateLayer")
	return c.svc.CreateLayer(input)
}

// CreateLayerWithContext is a passthrough to the underlying CreateLayerWithContext method.
// It will increment the count of requests made to CreateLayer.
func (c *OpsWorks) CreateLayerWithContext(ctx aws.Context, input *opsworks.CreateLayerInput, opts ...request.Option) (*opsworks.CreateLayerOutput, error) {
	c.inc("CreateLayer")
	return c.svc.CreateLayerWithContext(ctx, input, opts...)
}

// CreateStackRequest is a passthrough to the underlying CreateStackRequest.
// It will increment the count of requests made to CreateStack.
func (c *OpsWorks) CreateStackRequest(input *opsworks.CreateStackInput) (req *request.Request, output *opsworks.CreateStackOutput) {
	c.inc("CreateStack")
	return c.svc.CreateStackRequest(input)
}

// CreateStack is a passthrough to the underlying CreateStack method.
// It will increment the count of requests made to CreateStack.
func (c *OpsWorks) CreateStack(input *opsworks.CreateStackInput) (*opsworks.CreateStackOutput, error) {
	c.inc("CreateStack")
	return c.svc.CreateStack(input)
}

// CreateStackWithContext is a passthrough to the underlying CreateStackWithContext method.
// It will increment the count of requests made to CreateStack.
func (c *OpsWorks) CreateStackWithContext(ctx aws.Context, input *opsworks.CreateStackInput, opts ...request.Option) (*opsworks.CreateStackOutput, error) {
	c.inc("CreateStack")
	return c.svc.CreateStackWithContext(ctx, input, opts...)
}

// CreateUserProfileRequest is a passthrough to the underlying CreateUserProfileRequest.
// It will increment the count of requests made to CreateUserProfile.
func (c *OpsWorks) CreateUserProfileRequest(input *opsworks.CreateUserProfileInput) (req *request.Request, output *opsworks.CreateUserProfileOutput) {
	c.inc("CreateUserProfile")
	return c.svc.CreateUserProfileRequest(input)
}

// CreateUserProfile is a passthrough to the underlying CreateUserProfile method.
// It will increment the count of requests made to CreateUserProfile.
func (c *OpsWorks) CreateUserProfile(input *opsworks.CreateUserProfileInput) (*opsworks.CreateUserProfileOutput, error) {
	c.inc("CreateUserProfile")
	return c.svc.CreateUserProfile(input)
}

// CreateUserProfileWithContext is a passthrough to the underlying CreateUserProfileWithContext method.
// It will increment the count of requests made to CreateUserProfile.
func (c *OpsWorks) CreateUserProfileWithContext(ctx aws.Context, input *opsworks.CreateUserProfileInput, opts ...request.Option) (*opsworks.CreateUserProfileOutput, error) {
	c.inc("CreateUserProfile")
	return c.svc.CreateUserProfileWithContext(ctx, input, opts...)
}

// DeleteAppRequest is a passthrough to the underlying DeleteAppRequest.
// It will increment the count of requests made to DeleteApp.
func (c *OpsWorks) DeleteAppRequest(input *opsworks.DeleteAppInput) (req *request.Request, output *opsworks.DeleteAppOutput) {
	c.inc("DeleteApp")
	return c.svc.DeleteAppRequest(input)
}

// DeleteApp is a passthrough to the underlying DeleteApp method.
// It will increment the count of requests made to DeleteApp.
func (c *OpsWorks) DeleteApp(input *opsworks.DeleteAppInput) (*opsworks.DeleteAppOutput, error) {
	c.inc("DeleteApp")
	return c.svc.DeleteApp(input)
}

// DeleteAppWithContext is a passthrough to the underlying DeleteAppWithContext method.
// It will increment the count of requests made to DeleteApp.
func (c *OpsWorks) DeleteAppWithContext(ctx aws.Context, input *opsworks.DeleteAppInput, opts ...request.Option) (*opsworks.DeleteAppOutput, error) {
	c.inc("DeleteApp")
	return c.svc.DeleteAppWithContext(ctx, input, opts...)
}

// DeleteInstanceRequest is a passthrough to the underlying DeleteInstanceRequest.
// It will increment the count of requests made to DeleteInstance.
func (c *OpsWorks) DeleteInstanceRequest(input *opsworks.DeleteInstanceInput) (req *request.Request, output *opsworks.DeleteInstanceOutput) {
	c.inc("DeleteInstance")
	return c.svc.DeleteInstanceRequest(input)
}

// DeleteInstance is a passthrough to the underlying DeleteInstance method.
// It will increment the count of requests made to DeleteInstance.
func (c *OpsWorks) DeleteInstance(input *opsworks.DeleteInstanceInput) (*opsworks.DeleteInstanceOutput, error) {
	c.inc("DeleteInstance")
	return c.svc.DeleteInstance(input)
}

// DeleteInstanceWithContext is a passthrough to the underlying DeleteInstanceWithContext method.
// It will increment the count of requests made to DeleteInstance.
func (c *OpsWorks) DeleteInstanceWithContext(ctx aws.Context, input *opsworks.DeleteInstanceInput, opts ...request.Option) (*opsworks.DeleteInstanceOutput, error) {
	c.inc("DeleteInstance")
	return c.svc.DeleteInstanceWithContext(ctx, input, opts...)
}

// DeleteLayerRequest is a passthrough to the underlying DeleteLayerRequest.
// It will increment the count of requests made to DeleteLayer.
func (c *OpsWorks) DeleteLayerRequest(input *opsworks.DeleteLayerInput) (req *request.Request, output *opsworks.DeleteLayerOutput) {
	c.inc("DeleteLayer")
	return c.svc.DeleteLayerRequest(input)
}

// DeleteLayer is a passthrough to the underlying DeleteLayer method.
// It will increment the count of requests made to DeleteLayer.
func (c *OpsWorks) DeleteLayer(input *opsworks.DeleteLayerInput) (*opsworks.DeleteLayerOutput, error) {
	c.inc("DeleteLayer")
	return c.svc.DeleteLayer(input)
}

// DeleteLayerWithContext is a passthrough to the underlying DeleteLayerWithContext method.
// It will increment the count of requests made to DeleteLayer.
func (c *OpsWorks) DeleteLayerWithContext(ctx aws.Context, input *opsworks.DeleteLayerInput, opts ...request.Option) (*opsworks.DeleteLayerOutput, error) {
	c.inc("DeleteLayer")
	return c.svc.DeleteLayerWithContext(ctx, input, opts...)
}

// DeleteStackRequest is a passthrough to the underlying DeleteStackRequest.
// It will increment the count of requests made to DeleteStack.
func (c *OpsWorks) DeleteStackRequest(input *opsworks.DeleteStackInput) (req *request.Request, output *opsworks.DeleteStackOutput) {
	c.inc("DeleteStack")
	return c.svc.DeleteStackRequest(input)
}

// DeleteStack is a passthrough to the underlying DeleteStack method.
// It will increment the count of requests made to DeleteStack.
func (c *OpsWorks) DeleteStack(input *opsworks.DeleteStackInput) (*opsworks.DeleteStackOutput, error) {
	c.inc("DeleteStack")
	return c.svc.DeleteStack(input)
}

// DeleteStackWithContext is a passthrough to the underlying DeleteStackWithContext method.
// It will increment the count of requests made to DeleteStack.
func (c *OpsWorks) DeleteStackWithContext(ctx aws.Context, input *opsworks.DeleteStackInput, opts ...request.Option) (*opsworks.DeleteStackOutput, error) {
	c.inc("DeleteStack")
	return c.svc.DeleteStackWithContext(ctx, input, opts...)
}

// DeleteUserProfileRequest is a passthrough to the underlying DeleteUserProfileRequest.
// It will increment the count of requests made to DeleteUserProfile.
func (c *OpsWorks) DeleteUserProfileRequest(input *opsworks.DeleteUserProfileInput) (req *request.Request, output *opsworks.DeleteUserProfileOutput) {
	c.inc("DeleteUserProfile")
	return c.svc.DeleteUserProfileRequest(input)
}

// DeleteUserProfile is a passthrough to the underlying DeleteUserProfile method.
// It will increment the count of requests made to DeleteUserProfile.
func (c *OpsWorks) DeleteUserProfile(input *opsworks.DeleteUserProfileInput) (*opsworks.DeleteUserProfileOutput, error) {
	c.inc("DeleteUserProfile")
	return c.svc.DeleteUserProfile(input)
}

// DeleteUserProfileWithContext is a passthrough to the underlying DeleteUserProfileWithContext method.
// It will increment the count of requests made to DeleteUserProfile.
func (c *OpsWorks) DeleteUserProfileWithContext(ctx aws.Context, input *opsworks.DeleteUserProfileInput, opts ...request.Option) (*opsworks.DeleteUserProfileOutput, error) {
	c.inc("DeleteUserProfile")
	return c.svc.DeleteUserProfileWithContext(ctx, input, opts...)
}

// DeregisterEcsClusterRequest is a passthrough to the underlying DeregisterEcsClusterRequest.
// It will increment the count of requests made to DeregisterEcsCluster.
func (c *OpsWorks) DeregisterEcsClusterRequest(input *opsworks.DeregisterEcsClusterInput) (req *request.Request, output *opsworks.DeregisterEcsClusterOutput) {
	c.inc("DeregisterEcsCluster")
	return c.svc.DeregisterEcsClusterRequest(input)
}

// DeregisterEcsCluster is a passthrough to the underlying DeregisterEcsCluster method.
// It will increment the count of requests made to DeregisterEcsCluster.
func (c *OpsWorks) DeregisterEcsCluster(input *opsworks.DeregisterEcsClusterInput) (*opsworks.DeregisterEcsClusterOutput, error) {
	c.inc("DeregisterEcsCluster")
	return c.svc.DeregisterEcsCluster(input)
}

// DeregisterEcsClusterWithContext is a passthrough to the underlying DeregisterEcsClusterWithContext method.
// It will increment the count of requests made to DeregisterEcsCluster.
func (c *OpsWorks) DeregisterEcsClusterWithContext(ctx aws.Context, input *opsworks.DeregisterEcsClusterInput, opts ...request.Option) (*opsworks.DeregisterEcsClusterOutput, error) {
	c.inc("DeregisterEcsCluster")
	return c.svc.DeregisterEcsClusterWithContext(ctx, input, opts...)
}

// DeregisterElasticIpRequest is a passthrough to the underlying DeregisterElasticIpRequest.
// It will increment the count of requests made to DeregisterElasticIp.
func (c *OpsWorks) DeregisterElasticIpRequest(input *opsworks.DeregisterElasticIpInput) (req *request.Request, output *opsworks.DeregisterElasticIpOutput) {
	c.inc("DeregisterElasticIp")
	return c.svc.DeregisterElasticIpRequest(input)
}

// DeregisterElasticIp is a passthrough to the underlying DeregisterElasticIp method.
// It will increment the count of requests made to DeregisterElasticIp.
func (c *OpsWorks) DeregisterElasticIp(input *opsworks.DeregisterElasticIpInput) (*opsworks.DeregisterElasticIpOutput, error) {
	c.inc("DeregisterElasticIp")
	return c.svc.DeregisterElasticIp(input)
}

// DeregisterElasticIpWithContext is a passthrough to the underlying DeregisterElasticIpWithContext method.
// It will increment the count of requests made to DeregisterElasticIp.
func (c *OpsWorks) DeregisterElasticIpWithContext(ctx aws.Context, input *opsworks.DeregisterElasticIpInput, opts ...request.Option) (*opsworks.DeregisterElasticIpOutput, error) {
	c.inc("DeregisterElasticIp")
	return c.svc.DeregisterElasticIpWithContext(ctx, input, opts...)
}

// DeregisterInstanceRequest is a passthrough to the underlying DeregisterInstanceRequest.
// It will increment the count of requests made to DeregisterInstance.
func (c *OpsWorks) DeregisterInstanceRequest(input *opsworks.DeregisterInstanceInput) (req *request.Request, output *opsworks.DeregisterInstanceOutput) {
	c.inc("DeregisterInstance")
	return c.svc.DeregisterInstanceRequest(input)
}

// DeregisterInstance is a passthrough to the underlying DeregisterInstance method.
// It will increment the count of requests made to DeregisterInstance.
func (c *OpsWorks) DeregisterInstance(input *opsworks.DeregisterInstanceInput) (*opsworks.DeregisterInstanceOutput, error) {
	c.inc("DeregisterInstance")
	return c.svc.DeregisterInstance(input)
}

// DeregisterInstanceWithContext is a passthrough to the underlying DeregisterInstanceWithContext method.
// It will increment the count of requests made to DeregisterInstance.
func (c *OpsWorks) DeregisterInstanceWithContext(ctx aws.Context, input *opsworks.DeregisterInstanceInput, opts ...request.Option) (*opsworks.DeregisterInstanceOutput, error) {
	c.inc("DeregisterInstance")
	return c.svc.DeregisterInstanceWithContext(ctx, input, opts...)
}

// DeregisterRdsDbInstanceRequest is a passthrough to the underlying DeregisterRdsDbInstanceRequest.
// It will increment the count of requests made to DeregisterRdsDbInstance.
func (c *OpsWorks) DeregisterRdsDbInstanceRequest(input *opsworks.DeregisterRdsDbInstanceInput) (req *request.Request, output *opsworks.DeregisterRdsDbInstanceOutput) {
	c.inc("DeregisterRdsDbInstance")
	return c.svc.DeregisterRdsDbInstanceRequest(input)
}

// DeregisterRdsDbInstance is a passthrough to the underlying DeregisterRdsDbInstance method.
// It will increment the count of requests made to DeregisterRdsDbInstance.
func (c *OpsWorks) DeregisterRdsDbInstance(input *opsworks.DeregisterRdsDbInstanceInput) (*opsworks.DeregisterRdsDbInstanceOutput, error) {
	c.inc("DeregisterRdsDbInstance")
	return c.svc.DeregisterRdsDbInstance(input)
}

// DeregisterRdsDbInstanceWithContext is a passthrough to the underlying DeregisterRdsDbInstanceWithContext method.
// It will increment the count of requests made to DeregisterRdsDbInstance.
func (c *OpsWorks) DeregisterRdsDbInstanceWithContext(ctx aws.Context, input *opsworks.DeregisterRdsDbInstanceInput, opts ...request.Option) (*opsworks.DeregisterRdsDbInstanceOutput, error) {
	c.inc("DeregisterRdsDbInstance")
	return c.svc.DeregisterRdsDbInstanceWithContext(ctx, input, opts...)
}

// DeregisterVolumeRequest is a passthrough to the underlying DeregisterVolumeRequest.
// It will increment the count of requests made to DeregisterVolume.
func (c *OpsWorks) DeregisterVolumeRequest(input *opsworks.DeregisterVolumeInput) (req *request.Request, output *opsworks.DeregisterVolumeOutput) {
	c.inc("DeregisterVolume")
	return c.svc.DeregisterVolumeRequest(input)
}

// DeregisterVolume is a passthrough to the underlying DeregisterVolume method.
// It will increment the count of requests made to DeregisterVolume.
func (c *OpsWorks) DeregisterVolume(input *opsworks.DeregisterVolumeInput) (*opsworks.DeregisterVolumeOutput, error) {
	c.inc("DeregisterVolume")
	return c.svc.DeregisterVolume(input)
}

// DeregisterVolumeWithContext is a passthrough to the underlying DeregisterVolumeWithContext method.
// It will increment the count of requests made to DeregisterVolume.
func (c *OpsWorks) DeregisterVolumeWithContext(ctx aws.Context, input *opsworks.DeregisterVolumeInput, opts ...request.Option) (*opsworks.DeregisterVolumeOutput, error) {
	c.inc("DeregisterVolume")
	return c.svc.DeregisterVolumeWithContext(ctx, input, opts...)
}

// DescribeAgentVersionsRequest is a passthrough to the underlying DescribeAgentVersionsRequest.
// It will increment the count of requests made to DescribeAgentVersions.
func (c *OpsWorks) DescribeAgentVersionsRequest(input *opsworks.DescribeAgentVersionsInput) (req *request.Request, output *opsworks.DescribeAgentVersionsOutput) {
	c.inc("DescribeAgentVersions")
	return c.svc.DescribeAgentVersionsRequest(input)
}

// DescribeAgentVersions is a passthrough to the underlying DescribeAgentVersions method.
// It will increment the count of requests made to DescribeAgentVersions.
func (c *OpsWorks) DescribeAgentVersions(input *opsworks.DescribeAgentVersionsInput) (*opsworks.DescribeAgentVersionsOutput, error) {
	c.inc("DescribeAgentVersions")
	return c.svc.DescribeAgentVersions(input)
}

// DescribeAgentVersionsWithContext is a passthrough to the underlying DescribeAgentVersionsWithContext method.
// It will increment the count of requests made to DescribeAgentVersions.
func (c *OpsWorks) DescribeAgentVersionsWithContext(ctx aws.Context, input *opsworks.DescribeAgentVersionsInput, opts ...request.Option) (*opsworks.DescribeAgentVersionsOutput, error) {
	c.inc("DescribeAgentVersions")
	return c.svc.DescribeAgentVersionsWithContext(ctx, input, opts...)
}

// DescribeAppsRequest is a passthrough to the underlying DescribeAppsRequest.
// It will increment the count of requests made to DescribeApps.
func (c *OpsWorks) DescribeAppsRequest(input *opsworks.DescribeAppsInput) (req *request.Request, output *opsworks.DescribeAppsOutput) {
	c.inc("DescribeApps")
	return c.svc.DescribeAppsRequest(input)
}

// DescribeApps is a passthrough to the underlying DescribeApps method.
// It will increment the count of requests made to DescribeApps.
func (c *OpsWorks) DescribeApps(input *opsworks.DescribeAppsInput) (*opsworks.DescribeAppsOutput, error) {
	c.inc("DescribeApps")
	return c.svc.DescribeApps(input)
}

// DescribeAppsWithContext is a passthrough to the underlying DescribeAppsWithContext method.
// It will increment the count of requests made to DescribeApps.
func (c *OpsWorks) DescribeAppsWithContext(ctx aws.Context, input *opsworks.DescribeAppsInput, opts ...request.Option) (*opsworks.DescribeAppsOutput, error) {
	c.inc("DescribeApps")
	return c.svc.DescribeAppsWithContext(ctx, input, opts...)
}

// DescribeCommandsRequest is a passthrough to the underlying DescribeCommandsRequest.
// It will increment the count of requests made to DescribeCommands.
func (c *OpsWorks) DescribeCommandsRequest(input *opsworks.DescribeCommandsInput) (req *request.Request, output *opsworks.DescribeCommandsOutput) {
	c.inc("DescribeCommands")
	return c.svc.DescribeCommandsRequest(input)
}

// DescribeCommands is a passthrough to the underlying DescribeCommands method.
// It will increment the count of requests made to DescribeCommands.
func (c *OpsWorks) DescribeCommands(input *opsworks.DescribeCommandsInput) (*opsworks.DescribeCommandsOutput, error) {
	c.inc("DescribeCommands")
	return c.svc.DescribeCommands(input)
}

// DescribeCommandsWithContext is a passthrough to the underlying DescribeCommandsWithContext method.
// It will increment the count of requests made to DescribeCommands.
func (c *OpsWorks) DescribeCommandsWithContext(ctx aws.Context, input *opsworks.DescribeCommandsInput, opts ...request.Option) (*opsworks.DescribeCommandsOutput, error) {
	c.inc("DescribeCommands")
	return c.svc.DescribeCommandsWithContext(ctx, input, opts...)
}

// DescribeDeploymentsRequest is a passthrough to the underlying DescribeDeploymentsRequest.
// It will increment the count of requests made to DescribeDeployments.
func (c *OpsWorks) DescribeDeploymentsRequest(input *opsworks.DescribeDeploymentsInput) (req *request.Request, output *opsworks.DescribeDeploymentsOutput) {
	c.inc("DescribeDeployments")
	return c.svc.DescribeDeploymentsRequest(input)
}

// DescribeDeployments is a passthrough to the underlying DescribeDeployments method.
// It will increment the count of requests made to DescribeDeployments.
func (c *OpsWorks) DescribeDeployments(input *opsworks.DescribeDeploymentsInput) (*opsworks.DescribeDeploymentsOutput, error) {
	c.inc("DescribeDeployments")
	return c.svc.DescribeDeployments(input)
}

// DescribeDeploymentsWithContext is a passthrough to the underlying DescribeDeploymentsWithContext method.
// It will increment the count of requests made to DescribeDeployments.
func (c *OpsWorks) DescribeDeploymentsWithContext(ctx aws.Context, input *opsworks.DescribeDeploymentsInput, opts ...request.Option) (*opsworks.DescribeDeploymentsOutput, error) {
	c.inc("DescribeDeployments")
	return c.svc.DescribeDeploymentsWithContext(ctx, input, opts...)
}

// DescribeEcsClustersRequest is a passthrough to the underlying DescribeEcsClustersRequest.
// It will increment the count of requests made to DescribeEcsClusters.
func (c *OpsWorks) DescribeEcsClustersRequest(input *opsworks.DescribeEcsClustersInput) (req *request.Request, output *opsworks.DescribeEcsClustersOutput) {
	c.inc("DescribeEcsClusters")
	return c.svc.DescribeEcsClustersRequest(input)
}

// DescribeEcsClusters is a passthrough to the underlying DescribeEcsClusters method.
// It will increment the count of requests made to DescribeEcsClusters.
func (c *OpsWorks) DescribeEcsClusters(input *opsworks.DescribeEcsClustersInput) (*opsworks.DescribeEcsClustersOutput, error) {
	c.inc("DescribeEcsClusters")
	return c.svc.DescribeEcsClusters(input)
}

// DescribeEcsClustersWithContext is a passthrough to the underlying DescribeEcsClustersWithContext method.
// It will increment the count of requests made to DescribeEcsClusters.
func (c *OpsWorks) DescribeEcsClustersWithContext(ctx aws.Context, input *opsworks.DescribeEcsClustersInput, opts ...request.Option) (*opsworks.DescribeEcsClustersOutput, error) {
	c.inc("DescribeEcsClusters")
	return c.svc.DescribeEcsClustersWithContext(ctx, input, opts...)
}

// DescribeEcsClustersPages is a passthrough to the underlying DescribeEcsClustersPages method.
// It will increment the count of requests made to DescribeEcsClusters on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeEcsClustersPagesWithContext to avoid this.
func (c *OpsWorks) DescribeEcsClustersPages(input *opsworks.DescribeEcsClustersInput, fn func(*opsworks.DescribeEcsClustersOutput, bool) bool) error {
	wrappedFn := func(page *opsworks.DescribeEcsClustersOutput, lastPage bool) bool {
		c.inc("DescribeEcsClusters")
		return fn(page, lastPage)
	}
	return c.svc.DescribeEcsClustersPages(input, wrappedFn)
}

// DescribeEcsClustersPagesWithContext is a passthrough to the underlying DescribeEcsClustersPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeEcsClusters when applied to the request.
func (c *OpsWorks) DescribeEcsClustersPagesWithContext(ctx aws.Context, input *opsworks.DescribeEcsClustersInput, fn func(*opsworks.DescribeEcsClustersOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeEcsClusters"))
	return c.svc.DescribeEcsClustersPagesWithContext(ctx, input, fn, opts...)
}

// DescribeElasticIpsRequest is a passthrough to the underlying DescribeElasticIpsRequest.
// It will increment the count of requests made to DescribeElasticIps.
func (c *OpsWorks) DescribeElasticIpsRequest(input *opsworks.DescribeElasticIpsInput) (req *request.Request, output *opsworks.DescribeElasticIpsOutput) {
	c.inc("DescribeElasticIps")
	return c.svc.DescribeElasticIpsRequest(input)
}

// DescribeElasticIps is a passthrough to the underlying DescribeElasticIps method.
// It will increment the count of requests made to DescribeElasticIps.
func (c *OpsWorks) DescribeElasticIps(input *opsworks.DescribeElasticIpsInput) (*opsworks.DescribeElasticIpsOutput, error) {
	c.inc("DescribeElasticIps")
	return c.svc.DescribeElasticIps(input)
}

// DescribeElasticIpsWithContext is a passthrough to the underlying DescribeElasticIpsWithContext method.
// It will increment the count of requests made to DescribeElasticIps.
func (c *OpsWorks) DescribeElasticIpsWithContext(ctx aws.Context, input *opsworks.DescribeElasticIpsInput, opts ...request.Option) (*opsworks.DescribeElasticIpsOutput, error) {
	c.inc("DescribeElasticIps")
	return c.svc.DescribeElasticIpsWithContext(ctx, input, opts...)
}

// DescribeElasticLoadBalancersRequest is a passthrough to the underlying DescribeElasticLoadBalancersRequest.
// It will increment the count of requests made to DescribeElasticLoadBalancers.
func (c *OpsWorks) DescribeElasticLoadBalancersRequest(input *opsworks.DescribeElasticLoadBalancersInput) (req *request.Request, output *opsworks.DescribeElasticLoadBalancersOutput) {
	c.inc("DescribeElasticLoadBalancers")
	return c.svc.DescribeElasticLoadBalancersRequest(input)
}

// DescribeElasticLoadBalancers is a passthrough to the underlying DescribeElasticLoadBalancers method.
// It will increment the count of requests made to DescribeElasticLoadBalancers.
func (c *OpsWorks) DescribeElasticLoadBalancers(input *opsworks.DescribeElasticLoadBalancersInput) (*opsworks.DescribeElasticLoadBalancersOutput, error) {
	c.inc("DescribeElasticLoadBalancers")
	return c.svc.DescribeElasticLoadBalancers(input)
}

// DescribeElasticLoadBalancersWithContext is a passthrough to the underlying DescribeElasticLoadBalancersWithContext method.
// It will increment the count of requests made to DescribeElasticLoadBalancers.
func (c *OpsWorks) DescribeElasticLoadBalancersWithContext(ctx aws.Context, input *opsworks.DescribeElasticLoadBalancersInput, opts ...request.Option) (*opsworks.DescribeElasticLoadBalancersOutput, error) {
	c.inc("DescribeElasticLoadBalancers")
	return c.svc.DescribeElasticLoadBalancersWithContext(ctx, input, opts...)
}

// DescribeInstancesRequest is a passthrough to the underlying DescribeInstancesRequest.
// It will increment the count of requests made to DescribeInstances.
func (c *OpsWorks) DescribeInstancesRequest(input *opsworks.DescribeInstancesInput) (req *request.Request, output *opsworks.DescribeInstancesOutput) {
	c.inc("DescribeInstances")
	return c.svc.DescribeInstancesRequest(input)
}

// DescribeInstances is a passthrough to the underlying DescribeInstances method.
// It will increment the count of requests made to DescribeInstances.
func (c *OpsWorks) DescribeInstances(input *opsworks.DescribeInstancesInput) (*opsworks.DescribeInstancesOutput, error) {
	c.inc("DescribeInstances")
	return c.svc.DescribeInstances(input)
}

// DescribeInstancesWithContext is a passthrough to the underlying DescribeInstancesWithContext method.
// It will increment the count of requests made to DescribeInstances.
func (c *OpsWorks) DescribeInstancesWithContext(ctx aws.Context, input *opsworks.DescribeInstancesInput, opts ...request.Option) (*opsworks.DescribeInstancesOutput, error) {
	c.inc("DescribeInstances")
	return c.svc.DescribeInstancesWithContext(ctx, input, opts...)
}

// DescribeLayersRequest is a passthrough to the underlying DescribeLayersRequest.
// It will increment the count of requests made to DescribeLayers.
func (c *OpsWorks) DescribeLayersRequest(input *opsworks.DescribeLayersInput) (req *request.Request, output *opsworks.DescribeLayersOutput) {
	c.inc("DescribeLayers")
	return c.svc.DescribeLayersRequest(input)
}

// DescribeLayers is a passthrough to the underlying DescribeLayers method.
// It will increment the count of requests made to DescribeLayers.
func (c *OpsWorks) DescribeLayers(input *opsworks.DescribeLayersInput) (*opsworks.DescribeLayersOutput, error) {
	c.inc("DescribeLayers")
	return c.svc.DescribeLayers(input)
}

// DescribeLayersWithContext is a passthrough to the underlying DescribeLayersWithContext method.
// It will increment the count of requests made to DescribeLayers.
func (c *OpsWorks) DescribeLayersWithContext(ctx aws.Context, input *opsworks.DescribeLayersInput, opts ...request.Option) (*opsworks.DescribeLayersOutput, error) {
	c.inc("DescribeLayers")
	return c.svc.DescribeLayersWithContext(ctx, input, opts...)
}

// DescribeLoadBasedAutoScalingRequest is a passthrough to the underlying DescribeLoadBasedAutoScalingRequest.
// It will increment the count of requests made to DescribeLoadBasedAutoScaling.
func (c *OpsWorks) DescribeLoadBasedAutoScalingRequest(input *opsworks.DescribeLoadBasedAutoScalingInput) (req *request.Request, output *opsworks.DescribeLoadBasedAutoScalingOutput) {
	c.inc("DescribeLoadBasedAutoScaling")
	return c.svc.DescribeLoadBasedAutoScalingRequest(input)
}

// DescribeLoadBasedAutoScaling is a passthrough to the underlying DescribeLoadBasedAutoScaling method.
// It will increment the count of requests made to DescribeLoadBasedAutoScaling.
func (c *OpsWorks) DescribeLoadBasedAutoScaling(input *opsworks.DescribeLoadBasedAutoScalingInput) (*opsworks.DescribeLoadBasedAutoScalingOutput, error) {
	c.inc("DescribeLoadBasedAutoScaling")
	return c.svc.DescribeLoadBasedAutoScaling(input)
}

// DescribeLoadBasedAutoScalingWithContext is a passthrough to the underlying DescribeLoadBasedAutoScalingWithContext method.
// It will increment the count of requests made to DescribeLoadBasedAutoScaling.
func (c *OpsWorks) DescribeLoadBasedAutoScalingWithContext(ctx aws.Context, input *opsworks.DescribeLoadBasedAutoScalingInput, opts ...request.Option) (*opsworks.DescribeLoadBasedAutoScalingOutput, error) {
	c.inc("DescribeLoadBasedAutoScaling")
	return c.svc.DescribeLoadBasedAutoScalingWithContext(ctx, input, opts...)
}

// DescribeMyUserProfileRequest is a passthrough to the underlying DescribeMyUserProfileRequest.
// It will increment the count of requests made to DescribeMyUserProfile.
func (c *OpsWorks) DescribeMyUserProfileRequest(input *opsworks.DescribeMyUserProfileInput) (req *request.Request, output *opsworks.DescribeMyUserProfileOutput) {
	c.inc("DescribeMyUserProfile")
	return c.svc.DescribeMyUserProfileRequest(input)
}

// DescribeMyUserProfile is a passthrough to the underlying DescribeMyUserProfile method.
// It will increment the count of requests made to DescribeMyUserProfile.
func (c *OpsWorks) DescribeMyUserProfile(input *opsworks.DescribeMyUserProfileInput) (*opsworks.DescribeMyUserProfileOutput, error) {
	c.inc("DescribeMyUserProfile")
	return c.svc.DescribeMyUserProfile(input)
}

// DescribeMyUserProfileWithContext is a passthrough to the underlying DescribeMyUserProfileWithContext method.
// It will increment the count of requests made to DescribeMyUserProfile.
func (c *OpsWorks) DescribeMyUserProfileWithContext(ctx aws.Context, input *opsworks.DescribeMyUserProfileInput, opts ...request.Option) (*opsworks.DescribeMyUserProfileOutput, error) {
	c.inc("DescribeMyUserProfile")
	return c.svc.DescribeMyUserProfileWithContext(ctx, input, opts...)
}

// DescribePermissionsRequest is a passthrough to the underlying DescribePermissionsRequest.
// It will increment the count of requests made to DescribePermissions.
func (c *OpsWorks) DescribePermissionsRequest(input *opsworks.DescribePermissionsInput) (req *request.Request, output *opsworks.DescribePermissionsOutput) {
	c.inc("DescribePermissions")
	return c.svc.DescribePermissionsRequest(input)
}

// DescribePermissions is a passthrough to the underlying DescribePermissions method.
// It will increment the count of requests made to DescribePermissions.
func (c *OpsWorks) DescribePermissions(input *opsworks.DescribePermissionsInput) (*opsworks.DescribePermissionsOutput, error) {
	c.inc("DescribePermissions")
	return c.svc.DescribePermissions(input)
}

// DescribePermissionsWithContext is a passthrough to the underlying DescribePermissionsWithContext method.
// It will increment the count of requests made to DescribePermissions.
func (c *OpsWorks) DescribePermissionsWithContext(ctx aws.Context, input *opsworks.DescribePermissionsInput, opts ...request.Option) (*opsworks.DescribePermissionsOutput, error) {
	c.inc("DescribePermissions")
	return c.svc.DescribePermissionsWithContext(ctx, input, opts...)
}

// DescribeRaidArraysRequest is a passthrough to the underlying DescribeRaidArraysRequest.
// It will increment the count of requests made to DescribeRaidArrays.
func (c *OpsWorks) DescribeRaidArraysRequest(input *opsworks.DescribeRaidArraysInput) (req *request.Request, output *opsworks.DescribeRaidArraysOutput) {
	c.inc("DescribeRaidArrays")
	return c.svc.DescribeRaidArraysRequest(input)
}

// DescribeRaidArrays is a passthrough to the underlying DescribeRaidArrays method.
// It will increment the count of requests made to DescribeRaidArrays.
func (c *OpsWorks) DescribeRaidArrays(input *opsworks.DescribeRaidArraysInput) (*opsworks.DescribeRaidArraysOutput, error) {
	c.inc("DescribeRaidArrays")
	return c.svc.DescribeRaidArrays(input)
}

// DescribeRaidArraysWithContext is a passthrough to the underlying DescribeRaidArraysWithContext method.
// It will increment the count of requests made to DescribeRaidArrays.
func (c *OpsWorks) DescribeRaidArraysWithContext(ctx aws.Context, input *opsworks.DescribeRaidArraysInput, opts ...request.Option) (*opsworks.DescribeRaidArraysOutput, error) {
	c.inc("DescribeRaidArrays")
	return c.svc.DescribeRaidArraysWithContext(ctx, input, opts...)
}

// DescribeRdsDbInstancesRequest is a passthrough to the underlying DescribeRdsDbInstancesRequest.
// It will increment the count of requests made to DescribeRdsDbInstances.
func (c *OpsWorks) DescribeRdsDbInstancesRequest(input *opsworks.DescribeRdsDbInstancesInput) (req *request.Request, output *opsworks.DescribeRdsDbInstancesOutput) {
	c.inc("DescribeRdsDbInstances")
	return c.svc.DescribeRdsDbInstancesRequest(input)
}

// DescribeRdsDbInstances is a passthrough to the underlying DescribeRdsDbInstances method.
// It will increment the count of requests made to DescribeRdsDbInstances.
func (c *OpsWorks) DescribeRdsDbInstances(input *opsworks.DescribeRdsDbInstancesInput) (*opsworks.DescribeRdsDbInstancesOutput, error) {
	c.inc("DescribeRdsDbInstances")
	return c.svc.DescribeRdsDbInstances(input)
}

// DescribeRdsDbInstancesWithContext is a passthrough to the underlying DescribeRdsDbInstancesWithContext method.
// It will increment the count of requests made to DescribeRdsDbInstances.
func (c *OpsWorks) DescribeRdsDbInstancesWithContext(ctx aws.Context, input *opsworks.DescribeRdsDbInstancesInput, opts ...request.Option) (*opsworks.DescribeRdsDbInstancesOutput, error) {
	c.inc("DescribeRdsDbInstances")
	return c.svc.DescribeRdsDbInstancesWithContext(ctx, input, opts...)
}

// DescribeServiceErrorsRequest is a passthrough to the underlying DescribeServiceErrorsRequest.
// It will increment the count of requests made to DescribeServiceErrors.
func (c *OpsWorks) DescribeServiceErrorsRequest(input *opsworks.DescribeServiceErrorsInput) (req *request.Request, output *opsworks.DescribeServiceErrorsOutput) {
	c.inc("DescribeServiceErrors")
	return c.svc.DescribeServiceErrorsRequest(input)
}

// DescribeServiceErrors is a passthrough to the underlying DescribeServiceErrors method.
// It will increment the count of requests made to DescribeServiceErrors.
func (c *OpsWorks) DescribeServiceErrors(input *opsworks.DescribeServiceErrorsInput) (*opsworks.DescribeServiceErrorsOutput, error) {
	c.inc("DescribeServiceErrors")
	return c.svc.DescribeServiceErrors(input)
}

// DescribeServiceErrorsWithContext is a passthrough to the underlying DescribeServiceErrorsWithContext method.
// It will increment the count of requests made to DescribeServiceErrors.
func (c *OpsWorks) DescribeServiceErrorsWithContext(ctx aws.Context, input *opsworks.DescribeServiceErrorsInput, opts ...request.Option) (*opsworks.DescribeServiceErrorsOutput, error) {
	c.inc("DescribeServiceErrors")
	return c.svc.DescribeServiceErrorsWithContext(ctx, input, opts...)
}

// DescribeStackProvisioningParametersRequest is a passthrough to the underlying DescribeStackProvisioningParametersRequest.
// It will increment the count of requests made to DescribeStackProvisioningParameters.
func (c *OpsWorks) DescribeStackProvisioningParametersRequest(input *opsworks.DescribeStackProvisioningParametersInput) (req *request.Request, output *opsworks.DescribeStackProvisioningParametersOutput) {
	c.inc("DescribeStackProvisioningParameters")
	return c.svc.DescribeStackProvisioningParametersRequest(input)
}

// DescribeStackProvisioningParameters is a passthrough to the underlying DescribeStackProvisioningParameters method.
// It will increment the count of requests made to DescribeStackProvisioningParameters.
func (c *OpsWorks) DescribeStackProvisioningParameters(input *opsworks.DescribeStackProvisioningParametersInput) (*opsworks.DescribeStackProvisioningParametersOutput, error) {
	c.inc("DescribeStackProvisioningParameters")
	return c.svc.DescribeStackProvisioningParameters(input)
}

// DescribeStackProvisioningParametersWithContext is a passthrough to the underlying DescribeStackProvisioningParametersWithContext method.
// It will increment the count of requests made to DescribeStackProvisioningParameters.
func (c *OpsWorks) DescribeStackProvisioningParametersWithContext(ctx aws.Context, input *opsworks.DescribeStackProvisioningParametersInput, opts ...request.Option) (*opsworks.DescribeStackProvisioningParametersOutput, error) {
	c.inc("DescribeStackProvisioningParameters")
	return c.svc.DescribeStackProvisioningParametersWithContext(ctx, input, opts...)
}

// DescribeStackSummaryRequest is a passthrough to the underlying DescribeStackSummaryRequest.
// It will increment the count of requests made to DescribeStackSummary.
func (c *OpsWorks) DescribeStackSummaryRequest(input *opsworks.DescribeStackSummaryInput) (req *request.Request, output *opsworks.DescribeStackSummaryOutput) {
	c.inc("DescribeStackSummary")
	return c.svc.DescribeStackSummaryRequest(input)
}

// DescribeStackSummary is a passthrough to the underlying DescribeStackSummary method.
// It will increment the count of requests made to DescribeStackSummary.
func (c *OpsWorks) DescribeStackSummary(input *opsworks.DescribeStackSummaryInput) (*opsworks.DescribeStackSummaryOutput, error) {
	c.inc("DescribeStackSummary")
	return c.svc.DescribeStackSummary(input)
}

// DescribeStackSummaryWithContext is a passthrough to the underlying DescribeStackSummaryWithContext method.
// It will increment the count of requests made to DescribeStackSummary.
func (c *OpsWorks) DescribeStackSummaryWithContext(ctx aws.Context, input *opsworks.DescribeStackSummaryInput, opts ...request.Option) (*opsworks.DescribeStackSummaryOutput, error) {
	c.inc("DescribeStackSummary")
	return c.svc.DescribeStackSummaryWithContext(ctx, input, opts...)
}

// DescribeStacksRequest is a passthrough to the underlying DescribeStacksRequest.
// It will increment the count of requests made to DescribeStacks.
func (c *OpsWorks) DescribeStacksRequest(input *opsworks.DescribeStacksInput) (req *request.Request, output *opsworks.DescribeStacksOutput) {
	c.inc("DescribeStacks")
	return c.svc.DescribeStacksRequest(input)
}

// DescribeStacks is a passthrough to the underlying DescribeStacks method.
// It will increment the count of requests made to DescribeStacks.
func (c *OpsWorks) DescribeStacks(input *opsworks.DescribeStacksInput) (*opsworks.DescribeStacksOutput, error) {
	c.inc("DescribeStacks")
	return c.svc.DescribeStacks(input)
}

// DescribeStacksWithContext is a passthrough to the underlying DescribeStacksWithContext method.
// It will increment the count of requests made to DescribeStacks.
func (c *OpsWorks) DescribeStacksWithContext(ctx aws.Context, input *opsworks.DescribeStacksInput, opts ...request.Option) (*opsworks.DescribeStacksOutput, error) {
	c.inc("DescribeStacks")
	return c.svc.DescribeStacksWithContext(ctx, input, opts...)
}

// DescribeTimeBasedAutoScalingRequest is a passthrough to the underlying DescribeTimeBasedAutoScalingRequest.
// It will increment the count of requests made to DescribeTimeBasedAutoScaling.
func (c *OpsWorks) DescribeTimeBasedAutoScalingRequest(input *opsworks.DescribeTimeBasedAutoScalingInput) (req *request.Request, output *opsworks.DescribeTimeBasedAutoScalingOutput) {
	c.inc("DescribeTimeBasedAutoScaling")
	return c.svc.DescribeTimeBasedAutoScalingRequest(input)
}

// DescribeTimeBasedAutoScaling is a passthrough to the underlying DescribeTimeBasedAutoScaling method.
// It will increment the count of requests made to DescribeTimeBasedAutoScaling.
func (c *OpsWorks) DescribeTimeBasedAutoScaling(input *opsworks.DescribeTimeBasedAutoScalingInput) (*opsworks.DescribeTimeBasedAutoScalingOutput, error) {
	c.inc("DescribeTimeBasedAutoScaling")
	return c.svc.DescribeTimeBasedAutoScaling(input)
}

// DescribeTimeBasedAutoScalingWithContext is a passthrough to the underlying DescribeTimeBasedAutoScalingWithContext method.
// It will increment the count of requests made to DescribeTimeBasedAutoScaling.
func (c *OpsWorks) DescribeTimeBasedAutoScalingWithContext(ctx aws.Context, input *opsworks.DescribeTimeBasedAutoScalingInput, opts ...request.Option) (*opsworks.DescribeTimeBasedAutoScalingOutput, error) {
	c.inc("DescribeTimeBasedAutoScaling")
	return c.svc.DescribeTimeBasedAutoScalingWithContext(ctx, input, opts...)
}

// DescribeUserProfilesRequest is a passthrough to the underlying DescribeUserProfilesRequest.
// It will increment the count of requests made to DescribeUserProfiles.
func (c *OpsWorks) DescribeUserProfilesRequest(input *opsworks.DescribeUserProfilesInput) (req *request.Request, output *opsworks.DescribeUserProfilesOutput) {
	c.inc("DescribeUserProfiles")
	return c.svc.DescribeUserProfilesRequest(input)
}

// DescribeUserProfiles is a passthrough to the underlying DescribeUserProfiles method.
// It will increment the count of requests made to DescribeUserProfiles.
func (c *OpsWorks) DescribeUserProfiles(input *opsworks.DescribeUserProfilesInput) (*opsworks.DescribeUserProfilesOutput, error) {
	c.inc("DescribeUserProfiles")
	return c.svc.DescribeUserProfiles(input)
}

// DescribeUserProfilesWithContext is a passthrough to the underlying DescribeUserProfilesWithContext method.
// It will increment the count of requests made to DescribeUserProfiles.
func (c *OpsWorks) DescribeUserProfilesWithContext(ctx aws.Context, input *opsworks.DescribeUserProfilesInput, opts ...request.Option) (*opsworks.DescribeUserProfilesOutput, error) {
	c.inc("DescribeUserProfiles")
	return c.svc.DescribeUserProfilesWithContext(ctx, input, opts...)
}

// DescribeVolumesRequest is a passthrough to the underlying DescribeVolumesRequest.
// It will increment the count of requests made to DescribeVolumes.
func (c *OpsWorks) DescribeVolumesRequest(input *opsworks.DescribeVolumesInput) (req *request.Request, output *opsworks.DescribeVolumesOutput) {
	c.inc("DescribeVolumes")
	return c.svc.DescribeVolumesRequest(input)
}

// DescribeVolumes is a passthrough to the underlying DescribeVolumes method.
// It will increment the count of requests made to DescribeVolumes.
func (c *OpsWorks) DescribeVolumes(input *opsworks.DescribeVolumesInput) (*opsworks.DescribeVolumesOutput, error) {
	c.inc("DescribeVolumes")
	return c.svc.DescribeVolumes(input)
}

// DescribeVolumesWithContext is a passthrough to the underlying DescribeVolumesWithContext method.
// It will increment the count of requests made to DescribeVolumes.
func (c *OpsWorks) DescribeVolumesWithContext(ctx aws.Context, input *opsworks.DescribeVolumesInput, opts ...request.Option) (*opsworks.DescribeVolumesOutput, error) {
	c.inc("DescribeVolumes")
	return c.svc.DescribeVolumesWithContext(ctx, input, opts...)
}

// DetachElasticLoadBalancerRequest is a passthrough to the underlying DetachElasticLoadBalancerRequest.
// It will increment the count of requests made to DetachElasticLoadBalancer.
func (c *OpsWorks) DetachElasticLoadBalancerRequest(input *opsworks.DetachElasticLoadBalancerInput) (req *request.Request, output *opsworks.DetachElasticLoadBalancerOutput) {
	c.inc("DetachElasticLoadBalancer")
	return c.svc.DetachElasticLoadBalancerRequest(input)
}

// DetachElasticLoadBalancer is a passthrough to the underlying DetachElasticLoadBalancer method.
// It will increment the count of requests made to DetachElasticLoadBalancer.
func (c *OpsWorks) DetachElasticLoadBalancer(input *opsworks.DetachElasticLoadBalancerInput) (*opsworks.DetachElasticLoadBalancerOutput, error) {
	c.inc("DetachElasticLoadBalancer")
	return c.svc.DetachElasticLoadBalancer(input)
}

// DetachElasticLoadBalancerWithContext is a passthrough to the underlying DetachElasticLoadBalancerWithContext method.
// It will increment the count of requests made to DetachElasticLoadBalancer.
func (c *OpsWorks) DetachElasticLoadBalancerWithContext(ctx aws.Context, input *opsworks.DetachElasticLoadBalancerInput, opts ...request.Option) (*opsworks.DetachElasticLoadBalancerOutput, error) {
	c.inc("DetachElasticLoadBalancer")
	return c.svc.DetachElasticLoadBalancerWithContext(ctx, input, opts...)
}

// DisassociateElasticIpRequest is a passthrough to the underlying DisassociateElasticIpRequest.
// It will increment the count of requests made to DisassociateElasticIp.
func (c *OpsWorks) DisassociateElasticIpRequest(input *opsworks.DisassociateElasticIpInput) (req *request.Request, output *opsworks.DisassociateElasticIpOutput) {
	c.inc("DisassociateElasticIp")
	return c.svc.DisassociateElasticIpRequest(input)
}

// DisassociateElasticIp is a passthrough to the underlying DisassociateElasticIp method.
// It will increment the count of requests made to DisassociateElasticIp.
func (c *OpsWorks) DisassociateElasticIp(input *opsworks.DisassociateElasticIpInput) (*opsworks.DisassociateElasticIpOutput, error) {
	c.inc("DisassociateElasticIp")
	return c.svc.DisassociateElasticIp(input)
}

// DisassociateElasticIpWithContext is a passthrough to the underlying DisassociateElasticIpWithContext method.
// It will increment the count of requests made to DisassociateElasticIp.
func (c *OpsWorks) DisassociateElasticIpWithContext(ctx aws.Context, input *opsworks.DisassociateElasticIpInput, opts ...request.Option) (*opsworks.DisassociateElasticIpOutput, error) {
	c.inc("DisassociateElasticIp")
	return c.svc.DisassociateElasticIpWithContext(ctx, input, opts...)
}

// GetHostnameSuggestionRequest is a passthrough to the underlying GetHostnameSuggestionRequest.
// It will increment the count of requests made to GetHostnameSuggestion.
func (c *OpsWorks) GetHostnameSuggestionRequest(input *opsworks.GetHostnameSuggestionInput) (req *request.Request, output *opsworks.GetHostnameSuggestionOutput) {
	c.inc("GetHostnameSuggestion")
	return c.svc.GetHostnameSuggestionRequest(input)
}

// GetHostnameSuggestion is a passthrough to the underlying GetHostnameSuggestion method.
// It will increment the count of requests made to GetHostnameSuggestion.
func (c *OpsWorks) GetHostnameSuggestion(input *opsworks.GetHostnameSuggestionInput) (*opsworks.GetHostnameSuggestionOutput, error) {
	c.inc("GetHostnameSuggestion")
	return c.svc.GetHostnameSuggestion(input)
}

// GetHostnameSuggestionWithContext is a passthrough to the underlying GetHostnameSuggestionWithContext method.
// It will increment the count of requests made to GetHostnameSuggestion.
func (c *OpsWorks) GetHostnameSuggestionWithContext(ctx aws.Context, input *opsworks.GetHostnameSuggestionInput, opts ...request.Option) (*opsworks.GetHostnameSuggestionOutput, error) {
	c.inc("GetHostnameSuggestion")
	return c.svc.GetHostnameSuggestionWithContext(ctx, input, opts...)
}

// GrantAccessRequest is a passthrough to the underlying GrantAccessRequest.
// It will increment the count of requests made to GrantAccess.
func (c *OpsWorks) GrantAccessRequest(input *opsworks.GrantAccessInput) (req *request.Request, output *opsworks.GrantAccessOutput) {
	c.inc("GrantAccess")
	return c.svc.GrantAccessRequest(input)
}

// GrantAccess is a passthrough to the underlying GrantAccess method.
// It will increment the count of requests made to GrantAccess.
func (c *OpsWorks) GrantAccess(input *opsworks.GrantAccessInput) (*opsworks.GrantAccessOutput, error) {
	c.inc("GrantAccess")
	return c.svc.GrantAccess(input)
}

// GrantAccessWithContext is a passthrough to the underlying GrantAccessWithContext method.
// It will increment the count of requests made to GrantAccess.
func (c *OpsWorks) GrantAccessWithContext(ctx aws.Context, input *opsworks.GrantAccessInput, opts ...request.Option) (*opsworks.GrantAccessOutput, error) {
	c.inc("GrantAccess")
	return c.svc.GrantAccessWithContext(ctx, input, opts...)
}

// ListTagsRequest is a passthrough to the underlying ListTagsRequest.
// It will increment the count of requests made to ListTags.
func (c *OpsWorks) ListTagsRequest(input *opsworks.ListTagsInput) (req *request.Request, output *opsworks.ListTagsOutput) {
	c.inc("ListTags")
	return c.svc.ListTagsRequest(input)
}

// ListTags is a passthrough to the underlying ListTags method.
// It will increment the count of requests made to ListTags.
func (c *OpsWorks) ListTags(input *opsworks.ListTagsInput) (*opsworks.ListTagsOutput, error) {
	c.inc("ListTags")
	return c.svc.ListTags(input)
}

// ListTagsWithContext is a passthrough to the underlying ListTagsWithContext method.
// It will increment the count of requests made to ListTags.
func (c *OpsWorks) ListTagsWithContext(ctx aws.Context, input *opsworks.ListTagsInput, opts ...request.Option) (*opsworks.ListTagsOutput, error) {
	c.inc("ListTags")
	return c.svc.ListTagsWithContext(ctx, input, opts...)
}

// RebootInstanceRequest is a passthrough to the underlying RebootInstanceRequest.
// It will increment the count of requests made to RebootInstance.
func (c *OpsWorks) RebootInstanceRequest(input *opsworks.RebootInstanceInput) (req *request.Request, output *opsworks.RebootInstanceOutput) {
	c.inc("RebootInstance")
	return c.svc.RebootInstanceRequest(input)
}

// RebootInstance is a passthrough to the underlying RebootInstance method.
// It will increment the count of requests made to RebootInstance.
func (c *OpsWorks) RebootInstance(input *opsworks.RebootInstanceInput) (*opsworks.RebootInstanceOutput, error) {
	c.inc("RebootInstance")
	return c.svc.RebootInstance(input)
}

// RebootInstanceWithContext is a passthrough to the underlying RebootInstanceWithContext method.
// It will increment the count of requests made to RebootInstance.
func (c *OpsWorks) RebootInstanceWithContext(ctx aws.Context, input *opsworks.RebootInstanceInput, opts ...request.Option) (*opsworks.RebootInstanceOutput, error) {
	c.inc("RebootInstance")
	return c.svc.RebootInstanceWithContext(ctx, input, opts...)
}

// RegisterEcsClusterRequest is a passthrough to the underlying RegisterEcsClusterRequest.
// It will increment the count of requests made to RegisterEcsCluster.
func (c *OpsWorks) RegisterEcsClusterRequest(input *opsworks.RegisterEcsClusterInput) (req *request.Request, output *opsworks.RegisterEcsClusterOutput) {
	c.inc("RegisterEcsCluster")
	return c.svc.RegisterEcsClusterRequest(input)
}

// RegisterEcsCluster is a passthrough to the underlying RegisterEcsCluster method.
// It will increment the count of requests made to RegisterEcsCluster.
func (c *OpsWorks) RegisterEcsCluster(input *opsworks.RegisterEcsClusterInput) (*opsworks.RegisterEcsClusterOutput, error) {
	c.inc("RegisterEcsCluster")
	return c.svc.RegisterEcsCluster(input)
}

// RegisterEcsClusterWithContext is a passthrough to the underlying RegisterEcsClusterWithContext method.
// It will increment the count of requests made to RegisterEcsCluster.
func (c *OpsWorks) RegisterEcsClusterWithContext(ctx aws.Context, input *opsworks.RegisterEcsClusterInput, opts ...request.Option) (*opsworks.RegisterEcsClusterOutput, error) {
	c.inc("RegisterEcsCluster")
	return c.svc.RegisterEcsClusterWithContext(ctx, input, opts...)
}

// RegisterElasticIpRequest is a passthrough to the underlying RegisterElasticIpRequest.
// It will increment the count of requests made to RegisterElasticIp.
func (c *OpsWorks) RegisterElasticIpRequest(input *opsworks.RegisterElasticIpInput) (req *request.Request, output *opsworks.RegisterElasticIpOutput) {
	c.inc("RegisterElasticIp")
	return c.svc.RegisterElasticIpRequest(input)
}

// RegisterElasticIp is a passthrough to the underlying RegisterElasticIp method.
// It will increment the count of requests made to RegisterElasticIp.
func (c *OpsWorks) RegisterElasticIp(input *opsworks.RegisterElasticIpInput) (*opsworks.RegisterElasticIpOutput, error) {
	c.inc("RegisterElasticIp")
	return c.svc.RegisterElasticIp(input)
}

// RegisterElasticIpWithContext is a passthrough to the underlying RegisterElasticIpWithContext method.
// It will increment the count of requests made to RegisterElasticIp.
func (c *OpsWorks) RegisterElasticIpWithContext(ctx aws.Context, input *opsworks.RegisterElasticIpInput, opts ...request.Option) (*opsworks.RegisterElasticIpOutput, error) {
	c.inc("RegisterElasticIp")
	return c.svc.RegisterElasticIpWithContext(ctx, input, opts...)
}

// RegisterInstanceRequest is a passthrough to the underlying RegisterInstanceRequest.
// It will increment the count of requests made to RegisterInstance.
func (c *OpsWorks) RegisterInstanceRequest(input *opsworks.RegisterInstanceInput) (req *request.Request, output *opsworks.RegisterInstanceOutput) {
	c.inc("RegisterInstance")
	return c.svc.RegisterInstanceRequest(input)
}

// RegisterInstance is a passthrough to the underlying RegisterInstance method.
// It will increment the count of requests made to RegisterInstance.
func (c *OpsWorks) RegisterInstance(input *opsworks.RegisterInstanceInput) (*opsworks.RegisterInstanceOutput, error) {
	c.inc("RegisterInstance")
	return c.svc.RegisterInstance(input)
}

// RegisterInstanceWithContext is a passthrough to the underlying RegisterInstanceWithContext method.
// It will increment the count of requests made to RegisterInstance.
func (c *OpsWorks) RegisterInstanceWithContext(ctx aws.Context, input *opsworks.RegisterInstanceInput, opts ...request.Option) (*opsworks.RegisterInstanceOutput, error) {
	c.inc("RegisterInstance")
	return c.svc.RegisterInstanceWithContext(ctx, input, opts...)
}

// RegisterRdsDbInstanceRequest is a passthrough to the underlying RegisterRdsDbInstanceRequest.
// It will increment the count of requests made to RegisterRdsDbInstance.
func (c *OpsWorks) RegisterRdsDbInstanceRequest(input *opsworks.RegisterRdsDbInstanceInput) (req *request.Request, output *opsworks.RegisterRdsDbInstanceOutput) {
	c.inc("RegisterRdsDbInstance")
	return c.svc.RegisterRdsDbInstanceRequest(input)
}

// RegisterRdsDbInstance is a passthrough to the underlying RegisterRdsDbInstance method.
// It will increment the count of requests made to RegisterRdsDbInstance.
func (c *OpsWorks) RegisterRdsDbInstance(input *opsworks.RegisterRdsDbInstanceInput) (*opsworks.RegisterRdsDbInstanceOutput, error) {
	c.inc("RegisterRdsDbInstance")
	return c.svc.RegisterRdsDbInstance(input)
}

// RegisterRdsDbInstanceWithContext is a passthrough to the underlying RegisterRdsDbInstanceWithContext method.
// It will increment the count of requests made to RegisterRdsDbInstance.
func (c *OpsWorks) RegisterRdsDbInstanceWithContext(ctx aws.Context, input *opsworks.RegisterRdsDbInstanceInput, opts ...request.Option) (*opsworks.RegisterRdsDbInstanceOutput, error) {
	c.inc("RegisterRdsDbInstance")
	return c.svc.RegisterRdsDbInstanceWithContext(ctx, input, opts...)
}

// RegisterVolumeRequest is a passthrough to the underlying RegisterVolumeRequest.
// It will increment the count of requests made to RegisterVolume.
func (c *OpsWorks) RegisterVolumeRequest(input *opsworks.RegisterVolumeInput) (req *request.Request, output *opsworks.RegisterVolumeOutput) {
	c.inc("RegisterVolume")
	return c.svc.RegisterVolumeRequest(input)
}

// RegisterVolume is a passthrough to the underlying RegisterVolume method.
// It will increment the count of requests made to RegisterVolume.
func (c *OpsWorks) RegisterVolume(input *opsworks.RegisterVolumeInput) (*opsworks.RegisterVolumeOutput, error) {
	c.inc("RegisterVolume")
	return c.svc.RegisterVolume(input)
}

// RegisterVolumeWithContext is a passthrough to the underlying RegisterVolumeWithContext method.
// It will increment the count of requests made to RegisterVolume.
func (c *OpsWorks) RegisterVolumeWithContext(ctx aws.Context, input *opsworks.RegisterVolumeInput, opts ...request.Option) (*opsworks.RegisterVolumeOutput, error) {
	c.inc("RegisterVolume")
	return c.svc.RegisterVolumeWithContext(ctx, input, opts...)
}

// SetLoadBasedAutoScalingRequest is a passthrough to the underlying SetLoadBasedAutoScalingRequest.
// It will increment the count of requests made to SetLoadBasedAutoScaling.
func (c *OpsWorks) SetLoadBasedAutoScalingRequest(input *opsworks.SetLoadBasedAutoScalingInput) (req *request.Request, output *opsworks.SetLoadBasedAutoScalingOutput) {
	c.inc("SetLoadBasedAutoScaling")
	return c.svc.SetLoadBasedAutoScalingRequest(input)
}

// SetLoadBasedAutoScaling is a passthrough to the underlying SetLoadBasedAutoScaling method.
// It will increment the count of requests made to SetLoadBasedAutoScaling.
func (c *OpsWorks) SetLoadBasedAutoScaling(input *opsworks.SetLoadBasedAutoScalingInput) (*opsworks.SetLoadBasedAutoScalingOutput, error) {
	c.inc("SetLoadBasedAutoScaling")
	return c.svc.SetLoadBasedAutoScaling(input)
}

// SetLoadBasedAutoScalingWithContext is a passthrough to the underlying SetLoadBasedAutoScalingWithContext method.
// It will increment the count of requests made to SetLoadBasedAutoScaling.
func (c *OpsWorks) SetLoadBasedAutoScalingWithContext(ctx aws.Context, input *opsworks.SetLoadBasedAutoScalingInput, opts ...request.Option) (*opsworks.SetLoadBasedAutoScalingOutput, error) {
	c.inc("SetLoadBasedAutoScaling")
	return c.svc.SetLoadBasedAutoScalingWithContext(ctx, input, opts...)
}

// SetPermissionRequest is a passthrough to the underlying SetPermissionRequest.
// It will increment the count of requests made to SetPermission.
func (c *OpsWorks) SetPermissionRequest(input *opsworks.SetPermissionInput) (req *request.Request, output *opsworks.SetPermissionOutput) {
	c.inc("SetPermission")
	return c.svc.SetPermissionRequest(input)
}

// SetPermission is a passthrough to the underlying SetPermission method.
// It will increment the count of requests made to SetPermission.
func (c *OpsWorks) SetPermission(input *opsworks.SetPermissionInput) (*opsworks.SetPermissionOutput, error) {
	c.inc("SetPermission")
	return c.svc.SetPermission(input)
}

// SetPermissionWithContext is a passthrough to the underlying SetPermissionWithContext method.
// It will increment the count of requests made to SetPermission.
func (c *OpsWorks) SetPermissionWithContext(ctx aws.Context, input *opsworks.SetPermissionInput, opts ...request.Option) (*opsworks.SetPermissionOutput, error) {
	c.inc("SetPermission")
	return c.svc.SetPermissionWithContext(ctx, input, opts...)
}

// SetTimeBasedAutoScalingRequest is a passthrough to the underlying SetTimeBasedAutoScalingRequest.
// It will increment the count of requests made to SetTimeBasedAutoScaling.
func (c *OpsWorks) SetTimeBasedAutoScalingRequest(input *opsworks.SetTimeBasedAutoScalingInput) (req *request.Request, output *opsworks.SetTimeBasedAutoScalingOutput) {
	c.inc("SetTimeBasedAutoScaling")
	return c.svc.SetTimeBasedAutoScalingRequest(input)
}

// SetTimeBasedAutoScaling is a passthrough to the underlying SetTimeBasedAutoScaling method.
// It will increment the count of requests made to SetTimeBasedAutoScaling.
func (c *OpsWorks) SetTimeBasedAutoScaling(input *opsworks.SetTimeBasedAutoScalingInput) (*opsworks.SetTimeBasedAutoScalingOutput, error) {
	c.inc("SetTimeBasedAutoScaling")
	return c.svc.SetTimeBasedAutoScaling(input)
}

// SetTimeBasedAutoScalingWithContext is a passthrough to the underlying SetTimeBasedAutoScalingWithContext method.
// It will increment the count of requests made to SetTimeBasedAutoScaling.
func (c *OpsWorks) SetTimeBasedAutoScalingWithContext(ctx aws.Context, input *opsworks.SetTimeBasedAutoScalingInput, opts ...request.Option) (*opsworks.SetTimeBasedAutoScalingOutput, error) {
	c.inc("SetTimeBasedAutoScaling")
	return c.svc.SetTimeBasedAutoScalingWithContext(ctx, input, opts...)
}

// StartInstanceRequest is a passthrough to the underlying StartInstanceRequest.
// It will increment the count of requests made to StartInstance.
func (c *OpsWorks) StartInstanceRequest(input *opsworks.StartInstanceInput) (req *request.Request, output *opsworks.StartInstanceOutput) {
	c.inc("StartInstance")
	return c.svc.StartInstanceRequest(input)
}

// StartInstance is a passthrough to the underlying StartInstance method.
// It will increment the count of requests made to StartInstance.
func (c *OpsWorks) StartInstance(input *opsworks.StartInstanceInput) (*opsworks.StartInstanceOutput, error) {
	c.inc("StartInstance")
	return c.svc.StartInstance(input)
}

// StartInstanceWithContext is a passthrough to the underlying StartInstanceWithContext method.
// It will increment the count of requests made to StartInstance.
func (c *OpsWorks) StartInstanceWithContext(ctx aws.Context, input *opsworks.StartInstanceInput, opts ...request.Option) (*opsworks.StartInstanceOutput, error) {
	c.inc("StartInstance")
	return c.svc.StartInstanceWithContext(ctx, input, opts...)
}

// StartStackRequest is a passthrough to the underlying StartStackRequest.
// It will increment the count of requests made to StartStack.
func (c *OpsWorks) StartStackRequest(input *opsworks.StartStackInput) (req *request.Request, output *opsworks.StartStackOutput) {
	c.inc("StartStack")
	return c.svc.StartStackRequest(input)
}

// StartStack is a passthrough to the underlying StartStack method.
// It will increment the count of requests made to StartStack.
func (c *OpsWorks) StartStack(input *opsworks.StartStackInput) (*opsworks.StartStackOutput, error) {
	c.inc("StartStack")
	return c.svc.StartStack(input)
}

// StartStackWithContext is a passthrough to the underlying StartStackWithContext method.
// It will increment the count of requests made to StartStack.
func (c *OpsWorks) StartStackWithContext(ctx aws.Context, input *opsworks.StartStackInput, opts ...request.Option) (*opsworks.StartStackOutput, error) {
	c.inc("StartStack")
	return c.svc.StartStackWithContext(ctx, input, opts...)
}

// StopInstanceRequest is a passthrough to the underlying StopInstanceRequest.
// It will increment the count of requests made to StopInstance.
func (c *OpsWorks) StopInstanceRequest(input *opsworks.StopInstanceInput) (req *request.Request, output *opsworks.StopInstanceOutput) {
	c.inc("StopInstance")
	return c.svc.StopInstanceRequest(input)
}

// StopInstance is a passthrough to the underlying StopInstance method.
// It will increment the count of requests made to StopInstance.
func (c *OpsWorks) StopInstance(input *opsworks.StopInstanceInput) (*opsworks.StopInstanceOutput, error) {
	c.inc("StopInstance")
	return c.svc.StopInstance(input)
}

// StopInstanceWithContext is a passthrough to the underlying StopInstanceWithContext method.
// It will increment the count of requests made to StopInstance.
func (c *OpsWorks) StopInstanceWithContext(ctx aws.Context, input *opsworks.StopInstanceInput, opts ...request.Option) (*opsworks.StopInstanceOutput, error) {
	c.inc("StopInstance")
	return c.svc.StopInstanceWithContext(ctx, input, opts...)
}

// StopStackRequest is a passthrough to the underlying StopStackRequest.
// It will increment the count of requests made to StopStack.
func (c *OpsWorks) StopStackRequest(input *opsworks.StopStackInput) (req *request.Request, output *opsworks.StopStackOutput) {
	c.inc("StopStack")
	return c.svc.StopStackRequest(input)
}

// StopStack is a passthrough to the underlying StopStack method.
// It will increment the count of requests made to StopStack.
func (c *OpsWorks) StopStack(input *opsworks.StopStackInput) (*opsworks.StopStackOutput, error) {
	c.inc("StopStack")
	return c.svc.StopStack(input)
}

// StopStackWithContext is a passthrough to the underlying StopStackWithContext method.
// It will increment the count of requests made to StopStack.
func (c *OpsWorks) StopStackWithContext(ctx aws.Context, input *opsworks.StopStackInput, opts ...request.Option) (*opsworks.StopStackOutput, error) {
	c.inc("StopStack")
	return c.svc.StopStackWithContext(ctx, input, opts...)
}

// TagResourceRequest is a passthrough to the underlying TagResourceRequest.
// It will increment the count of requests made to TagResource.
func (c *OpsWorks) TagResourceRequest(input *opsworks.TagResourceInput) (req *request.Request, output *opsworks.TagResourceOutput) {
	c.inc("TagResource")
	return c.svc.TagResourceRequest(input)
}

// TagResource is a passthrough to the underlying TagResource method.
// It will increment the count of requests made to TagResource.
func (c *OpsWorks) TagResource(input *opsworks.TagResourceInput) (*opsworks.TagResourceOutput, error) {
	c.inc("TagResource")
	return c.svc.TagResource(input)
}

// TagResourceWithContext is a passthrough to the underlying TagResourceWithContext method.
// It will increment the count of requests made to TagResource.
func (c *OpsWorks) TagResourceWithContext(ctx aws.Context, input *opsworks.TagResourceInput, opts ...request.Option) (*opsworks.TagResourceOutput, error) {
	c.inc("TagResource")
	return c.svc.TagResourceWithContext(ctx, input, opts...)
}

// UnassignInstanceRequest is a passthrough to the underlying UnassignInstanceRequest.
// It will increment the count of requests made to UnassignInstance.
func (c *OpsWorks) UnassignInstanceRequest(input *opsworks.UnassignInstanceInput) (req *request.Request, output *opsworks.UnassignInstanceOutput) {
	c.inc("UnassignInstance")
	return c.svc.UnassignInstanceRequest(input)
}

// UnassignInstance is a passthrough to the underlying UnassignInstance method.
// It will increment the count of requests made to UnassignInstance.
func (c *OpsWorks) UnassignInstance(input *opsworks.UnassignInstanceInput) (*opsworks.UnassignInstanceOutput, error) {
	c.inc("UnassignInstance")
	return c.svc.UnassignInstance(input)
}

// UnassignInstanceWithContext is a passthrough to the underlying UnassignInstanceWithContext method.
// It will increment the count of requests made to UnassignInstance.
func (c *OpsWorks) UnassignInstanceWithContext(ctx aws.Context, input *opsworks.UnassignInstanceInput, opts ...request.Option) (*opsworks.UnassignInstanceOutput, error) {
	c.inc("UnassignInstance")
	return c.svc.UnassignInstanceWithContext(ctx, input, opts...)
}

// UnassignVolumeRequest is a passthrough to the underlying UnassignVolumeRequest.
// It will increment the count of requests made to UnassignVolume.
func (c *OpsWorks) UnassignVolumeRequest(input *opsworks.UnassignVolumeInput) (req *request.Request, output *opsworks.UnassignVolumeOutput) {
	c.inc("UnassignVolume")
	return c.svc.UnassignVolumeRequest(input)
}

// UnassignVolume is a passthrough to the underlying UnassignVolume method.
// It will increment the count of requests made to UnassignVolume.
func (c *OpsWorks) UnassignVolume(input *opsworks.UnassignVolumeInput) (*opsworks.UnassignVolumeOutput, error) {
	c.inc("UnassignVolume")
	return c.svc.UnassignVolume(input)
}

// UnassignVolumeWithContext is a passthrough to the underlying UnassignVolumeWithContext method.
// It will increment the count of requests made to UnassignVolume.
func (c *OpsWorks) UnassignVolumeWithContext(ctx aws.Context, input *opsworks.UnassignVolumeInput, opts ...request.Option) (*opsworks.UnassignVolumeOutput, error) {
	c.inc("UnassignVolume")
	return c.svc.UnassignVolumeWithContext(ctx, input, opts...)
}

// UntagResourceRequest is a passthrough to the underlying UntagResourceRequest.
// It will increment the count of requests made to UntagResource.
func (c *OpsWorks) UntagResourceRequest(input *opsworks.UntagResourceInput) (req *request.Request, output *opsworks.UntagResourceOutput) {
	c.inc("UntagResource")
	return c.svc.UntagResourceRequest(input)
}

// UntagResource is a passthrough to the underlying UntagResource method.
// It will increment the count of requests made to UntagResource.
func (c *OpsWorks) UntagResource(input *opsworks.UntagResourceInput) (*opsworks.UntagResourceOutput, error) {
	c.inc("UntagResource")
	return c.svc.UntagResource(input)
}

// UntagResourceWithContext is a passthrough to the underlying UntagResourceWithContext method.
// It will increment the count of requests made to UntagResource.
func (c *OpsWorks) UntagResourceWithContext(ctx aws.Context, input *opsworks.UntagResourceInput, opts ...request.Option) (*opsworks.UntagResourceOutput, error) {
	c.inc("UntagResource")
	return c.svc.UntagResourceWithContext(ctx, input, opts...)
}

// UpdateAppRequest is a passthrough to the underlying UpdateAppRequest.
// It will increment the count of requests made to UpdateApp.
func (c *OpsWorks) UpdateAppRequest(input *opsworks.UpdateAppInput) (req *request.Request, output *opsworks.UpdateAppOutput) {
	c.inc("UpdateApp")
	return c.svc.UpdateAppRequest(input)
}

// UpdateApp is a passthrough to the underlying UpdateApp method.
// It will increment the count of requests made to UpdateApp.
func (c *OpsWorks) UpdateApp(input *opsworks.UpdateAppInput) (*opsworks.UpdateAppOutput, error) {
	c.inc("UpdateApp")
	return c.svc.UpdateApp(input)
}

// UpdateAppWithContext is a passthrough to the underlying UpdateAppWithContext method.
// It will increment the count of requests made to UpdateApp.
func (c *OpsWorks) UpdateAppWithContext(ctx aws.Context, input *opsworks.UpdateAppInput, opts ...request.Option) (*opsworks.UpdateAppOutput, error) {
	c.inc("UpdateApp")
	return c.svc.UpdateAppWithContext(ctx, input, opts...)
}

// UpdateElasticIpRequest is a passthrough to the underlying UpdateElasticIpRequest.
// It will increment the count of requests made to UpdateElasticIp.
func (c *OpsWorks) UpdateElasticIpRequest(input *opsworks.UpdateElasticIpInput) (req *request.Request, output *opsworks.UpdateElasticIpOutput) {
	c.inc("UpdateElasticIp")
	return c.svc.UpdateElasticIpRequest(input)
}

// UpdateElasticIp is a passthrough to the underlying UpdateElasticIp method.
// It will increment the count of requests made to UpdateElasticIp.
func (c *OpsWorks) UpdateElasticIp(input *opsworks.UpdateElasticIpInput) (*opsworks.UpdateElasticIpOutput, error) {
	c.inc("UpdateElasticIp")
	return c.svc.UpdateElasticIp(input)
}

// UpdateElasticIpWithContext is a passthrough to the underlying UpdateElasticIpWithContext method.
// It will increment the count of requests made to UpdateElasticIp.
func (c *OpsWorks) UpdateElasticIpWithContext(ctx aws.Context, input *opsworks.UpdateElasticIpInput, opts ...request.Option) (*opsworks.UpdateElasticIpOutput, error) {
	c.inc("UpdateElasticIp")
	return c.svc.UpdateElasticIpWithContext(ctx, input, opts...)
}

// UpdateInstanceRequest is a passthrough to the underlying UpdateInstanceRequest.
// It will increment the count of requests made to UpdateInstance.
func (c *OpsWorks) UpdateInstanceRequest(input *opsworks.UpdateInstanceInput) (req *request.Request, output *opsworks.UpdateInstanceOutput) {
	c.inc("UpdateInstance")
	return c.svc.UpdateInstanceRequest(input)
}

// UpdateInstance is a passthrough to the underlying UpdateInstance method.
// It will increment the count of requests made to UpdateInstance.
func (c *OpsWorks) UpdateInstance(input *opsworks.UpdateInstanceInput) (*opsworks.UpdateInstanceOutput, error) {
	c.inc("UpdateInstance")
	return c.svc.UpdateInstance(input)
}

// UpdateInstanceWithContext is a passthrough to the underlying UpdateInstanceWithContext method.
// It will increment the count of requests made to UpdateInstance.
func (c *OpsWorks) UpdateInstanceWithContext(ctx aws.Context, input *opsworks.UpdateInstanceInput, opts ...request.Option) (*opsworks.UpdateInstanceOutput, error) {
	c.inc("UpdateInstance")
	return c.svc.UpdateInstanceWithContext(ctx, input, opts...)
}

// UpdateLayerRequest is a passthrough to the underlying UpdateLayerRequest.
// It will increment the count of requests made to UpdateLayer.
func (c *OpsWorks) UpdateLayerRequest(input *opsworks.UpdateLayerInput) (req *request.Request, output *opsworks.UpdateLayerOutput) {
	c.inc("UpdateLayer")
	return c.svc.UpdateLayerRequest(input)
}

// UpdateLayer is a passthrough to the underlying UpdateLayer method.
// It will increment the count of requests made to UpdateLayer.
func (c *OpsWorks) UpdateLayer(input *opsworks.UpdateLayerInput) (*opsworks.UpdateLayerOutput, error) {
	c.inc("UpdateLayer")
	return c.svc.UpdateLayer(input)
}

// UpdateLayerWithContext is a passthrough to the underlying UpdateLayerWithContext method.
// It will increment the count of requests made to UpdateLayer.
func (c *OpsWorks) UpdateLayerWithContext(ctx aws.Context, input *opsworks.UpdateLayerInput, opts ...request.Option) (*opsworks.UpdateLayerOutput, error) {
	c.inc("UpdateLayer")
	return c.svc.UpdateLayerWithContext(ctx, input, opts...)
}

// UpdateMyUserProfileRequest is a passthrough to the underlying UpdateMyUserProfileRequest.
// It will increment the count of requests made to UpdateMyUserProfile.
func (c *OpsWorks) UpdateMyUserProfileRequest(input *opsworks.UpdateMyUserProfileInput) (req *request.Request, output *opsworks.UpdateMyUserProfileOutput) {
	c.inc("UpdateMyUserProfile")
	return c.svc.UpdateMyUserProfileRequest(input)
}

// UpdateMyUserProfile is a passthrough to the underlying UpdateMyUserProfile method.
// It will increment the count of requests made to UpdateMyUserProfile.
func (c *OpsWorks) UpdateMyUserProfile(input *opsworks.UpdateMyUserProfileInput) (*opsworks.UpdateMyUserProfileOutput, error) {
	c.inc("UpdateMyUserProfile")
	return c.svc.UpdateMyUserProfile(input)
}

// UpdateMyUserProfileWithContext is a passthrough to the underlying UpdateMyUserProfileWithContext method.
// It will increment the count of requests made to UpdateMyUserProfile.
func (c *OpsWorks) UpdateMyUserProfileWithContext(ctx aws.Context, input *opsworks.UpdateMyUserProfileInput, opts ...request.Option) (*opsworks.UpdateMyUserProfileOutput, error) {
	c.inc("UpdateMyUserProfile")
	return c.svc.UpdateMyUserProfileWithContext(ctx, input, opts...)
}

// UpdateRdsDbInstanceRequest is a passthrough to the underlying UpdateRdsDbInstanceRequest.
// It will increment the count of requests made to UpdateRdsDbInstance.
func (c *OpsWorks) UpdateRdsDbInstanceRequest(input *opsworks.UpdateRdsDbInstanceInput) (req *request.Request, output *opsworks.UpdateRdsDbInstanceOutput) {
	c.inc("UpdateRdsDbInstance")
	return c.svc.UpdateRdsDbInstanceRequest(input)
}

// UpdateRdsDbInstance is a passthrough to the underlying UpdateRdsDbInstance method.
// It will increment the count of requests made to UpdateRdsDbInstance.
func (c *OpsWorks) UpdateRdsDbInstance(input *opsworks.UpdateRdsDbInstanceInput) (*opsworks.UpdateRdsDbInstanceOutput, error) {
	c.inc("UpdateRdsDbInstance")
	return c.svc.UpdateRdsDbInstance(input)
}

// UpdateRdsDbInstanceWithContext is a passthrough to the underlying UpdateRdsDbInstanceWithContext method.
// It will increment the count of requests made to UpdateRdsDbInstance.
func (c *OpsWorks) UpdateRdsDbInstanceWithContext(ctx aws.Context, input *opsworks.UpdateRdsDbInstanceInput, opts ...request.Option) (*opsworks.UpdateRdsDbInstanceOutput, error) {
	c.inc("UpdateRdsDbInstance")
	return c.svc.UpdateRdsDbInstanceWithContext(ctx, input, opts...)
}

// UpdateStackRequest is a passthrough to the underlying UpdateStackRequest.
// It will increment the count of requests made to UpdateStack.
func (c *OpsWorks) UpdateStackRequest(input *opsworks.UpdateStackInput) (req *request.Request, output *opsworks.UpdateStackOutput) {
	c.inc("UpdateStack")
	return c.svc.UpdateStackRequest(input)
}

// UpdateStack is a passthrough to the underlying UpdateStack method.
// It will increment the count of requests made to UpdateStack.
func (c *OpsWorks) UpdateStack(input *opsworks.UpdateStackInput) (*opsworks.UpdateStackOutput, error) {
	c.inc("UpdateStack")
	return c.svc.UpdateStack(input)
}

// UpdateStackWithContext is a passthrough to the underlying UpdateStackWithContext method.
// It will increment the count of requests made to UpdateStack.
func (c *OpsWorks) UpdateStackWithContext(ctx aws.Context, input *opsworks.UpdateStackInput, opts ...request.Option) (*opsworks.UpdateStackOutput, error) {
	c.inc("UpdateStack")
	return c.svc.UpdateStackWithContext(ctx, input, opts...)
}

// UpdateUserProfileRequest is a passthrough to the underlying UpdateUserProfileRequest.
// It will increment the count of requests made to UpdateUserProfile.
func (c *OpsWorks) UpdateUserProfileRequest(input *opsworks.UpdateUserProfileInput) (req *request.Request, output *opsworks.UpdateUserProfileOutput) {
	c.inc("UpdateUserProfile")
	return c.svc.UpdateUserProfileRequest(input)
}

// UpdateUserProfile is a passthrough to the underlying UpdateUserProfile method.
// It will increment the count of requests made to UpdateUserProfile.
func (c *OpsWorks) UpdateUserProfile(input *opsworks.UpdateUserProfileInput) (*opsworks.UpdateUserProfileOutput, error) {
	c.inc("UpdateUserProfile")
	return c.svc.UpdateUserProfile(input)
}

// UpdateUserProfileWithContext is a passthrough to the underlying UpdateUserProfileWithContext method.
// It will increment the count of requests made to UpdateUserProfile.
func (c *OpsWorks) UpdateUserProfileWithContext(ctx aws.Context, input *opsworks.UpdateUserProfileInput, opts ...request.Option) (*opsworks.UpdateUserProfileOutput, error) {
	c.inc("UpdateUserProfile")
	return c.svc.UpdateUserProfileWithContext(ctx, input, opts...)
}

// UpdateVolumeRequest is a passthrough to the underlying UpdateVolumeRequest.
// It will increment the count of requests made to UpdateVolume.
func (c *OpsWorks) UpdateVolumeRequest(input *opsworks.UpdateVolumeInput) (req *request.Request, output *opsworks.UpdateVolumeOutput) {
	c.inc("UpdateVolume")
	return c.svc.UpdateVolumeRequest(input)
}

// UpdateVolume is a passthrough to the underlying UpdateVolume method.
// It will increment the count of requests made to UpdateVolume.
func (c *OpsWorks) UpdateVolume(input *opsworks.UpdateVolumeInput) (*opsworks.UpdateVolumeOutput, error) {
	c.inc("UpdateVolume")
	return c.svc.UpdateVolume(input)
}

// UpdateVolumeWithContext is a passthrough to the underlying UpdateVolumeWithContext method.
// It will increment the count of requests made to UpdateVolume.
func (c *OpsWorks) UpdateVolumeWithContext(ctx aws.Context, input *opsworks.UpdateVolumeInput, opts ...request.Option) (*opsworks.UpdateVolumeOutput, error) {
	c.inc("UpdateVolume")
	return c.svc.UpdateVolumeWithContext(ctx, input, opts...)
}
