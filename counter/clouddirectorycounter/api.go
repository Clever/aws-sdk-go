// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package clouddirectorycounter

import (
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/clouddirectory"
)

// AddFacetToObjectRequest is a passthrough to the underlying AddFacetToObjectRequest.
// It will increment the count of requests made to AddFacetToObject.
func (c *CloudDirectory) AddFacetToObjectRequest(input *clouddirectory.AddFacetToObjectInput) (req *request.Request, output *clouddirectory.AddFacetToObjectOutput) {
	c.inc("AddFacetToObject")
	return c.svc.AddFacetToObjectRequest(input)
}

// AddFacetToObject is a passthrough to the underlying AddFacetToObject method.
// It will increment the count of requests made to AddFacetToObject.
func (c *CloudDirectory) AddFacetToObject(input *clouddirectory.AddFacetToObjectInput) (*clouddirectory.AddFacetToObjectOutput, error) {
	c.inc("AddFacetToObject")
	return c.svc.AddFacetToObject(input)
}

// AddFacetToObjectWithContext is a passthrough to the underlying AddFacetToObjectWithContext method.
// It will increment the count of requests made to AddFacetToObject.
func (c *CloudDirectory) AddFacetToObjectWithContext(ctx aws.Context, input *clouddirectory.AddFacetToObjectInput, opts ...request.Option) (*clouddirectory.AddFacetToObjectOutput, error) {
	c.inc("AddFacetToObject")
	return c.svc.AddFacetToObjectWithContext(ctx, input, opts...)
}

// ApplySchemaRequest is a passthrough to the underlying ApplySchemaRequest.
// It will increment the count of requests made to ApplySchema.
func (c *CloudDirectory) ApplySchemaRequest(input *clouddirectory.ApplySchemaInput) (req *request.Request, output *clouddirectory.ApplySchemaOutput) {
	c.inc("ApplySchema")
	return c.svc.ApplySchemaRequest(input)
}

// ApplySchema is a passthrough to the underlying ApplySchema method.
// It will increment the count of requests made to ApplySchema.
func (c *CloudDirectory) ApplySchema(input *clouddirectory.ApplySchemaInput) (*clouddirectory.ApplySchemaOutput, error) {
	c.inc("ApplySchema")
	return c.svc.ApplySchema(input)
}

// ApplySchemaWithContext is a passthrough to the underlying ApplySchemaWithContext method.
// It will increment the count of requests made to ApplySchema.
func (c *CloudDirectory) ApplySchemaWithContext(ctx aws.Context, input *clouddirectory.ApplySchemaInput, opts ...request.Option) (*clouddirectory.ApplySchemaOutput, error) {
	c.inc("ApplySchema")
	return c.svc.ApplySchemaWithContext(ctx, input, opts...)
}

// AttachObjectRequest is a passthrough to the underlying AttachObjectRequest.
// It will increment the count of requests made to AttachObject.
func (c *CloudDirectory) AttachObjectRequest(input *clouddirectory.AttachObjectInput) (req *request.Request, output *clouddirectory.AttachObjectOutput) {
	c.inc("AttachObject")
	return c.svc.AttachObjectRequest(input)
}

// AttachObject is a passthrough to the underlying AttachObject method.
// It will increment the count of requests made to AttachObject.
func (c *CloudDirectory) AttachObject(input *clouddirectory.AttachObjectInput) (*clouddirectory.AttachObjectOutput, error) {
	c.inc("AttachObject")
	return c.svc.AttachObject(input)
}

// AttachObjectWithContext is a passthrough to the underlying AttachObjectWithContext method.
// It will increment the count of requests made to AttachObject.
func (c *CloudDirectory) AttachObjectWithContext(ctx aws.Context, input *clouddirectory.AttachObjectInput, opts ...request.Option) (*clouddirectory.AttachObjectOutput, error) {
	c.inc("AttachObject")
	return c.svc.AttachObjectWithContext(ctx, input, opts...)
}

// AttachPolicyRequest is a passthrough to the underlying AttachPolicyRequest.
// It will increment the count of requests made to AttachPolicy.
func (c *CloudDirectory) AttachPolicyRequest(input *clouddirectory.AttachPolicyInput) (req *request.Request, output *clouddirectory.AttachPolicyOutput) {
	c.inc("AttachPolicy")
	return c.svc.AttachPolicyRequest(input)
}

// AttachPolicy is a passthrough to the underlying AttachPolicy method.
// It will increment the count of requests made to AttachPolicy.
func (c *CloudDirectory) AttachPolicy(input *clouddirectory.AttachPolicyInput) (*clouddirectory.AttachPolicyOutput, error) {
	c.inc("AttachPolicy")
	return c.svc.AttachPolicy(input)
}

// AttachPolicyWithContext is a passthrough to the underlying AttachPolicyWithContext method.
// It will increment the count of requests made to AttachPolicy.
func (c *CloudDirectory) AttachPolicyWithContext(ctx aws.Context, input *clouddirectory.AttachPolicyInput, opts ...request.Option) (*clouddirectory.AttachPolicyOutput, error) {
	c.inc("AttachPolicy")
	return c.svc.AttachPolicyWithContext(ctx, input, opts...)
}

// AttachToIndexRequest is a passthrough to the underlying AttachToIndexRequest.
// It will increment the count of requests made to AttachToIndex.
func (c *CloudDirectory) AttachToIndexRequest(input *clouddirectory.AttachToIndexInput) (req *request.Request, output *clouddirectory.AttachToIndexOutput) {
	c.inc("AttachToIndex")
	return c.svc.AttachToIndexRequest(input)
}

// AttachToIndex is a passthrough to the underlying AttachToIndex method.
// It will increment the count of requests made to AttachToIndex.
func (c *CloudDirectory) AttachToIndex(input *clouddirectory.AttachToIndexInput) (*clouddirectory.AttachToIndexOutput, error) {
	c.inc("AttachToIndex")
	return c.svc.AttachToIndex(input)
}

// AttachToIndexWithContext is a passthrough to the underlying AttachToIndexWithContext method.
// It will increment the count of requests made to AttachToIndex.
func (c *CloudDirectory) AttachToIndexWithContext(ctx aws.Context, input *clouddirectory.AttachToIndexInput, opts ...request.Option) (*clouddirectory.AttachToIndexOutput, error) {
	c.inc("AttachToIndex")
	return c.svc.AttachToIndexWithContext(ctx, input, opts...)
}

// AttachTypedLinkRequest is a passthrough to the underlying AttachTypedLinkRequest.
// It will increment the count of requests made to AttachTypedLink.
func (c *CloudDirectory) AttachTypedLinkRequest(input *clouddirectory.AttachTypedLinkInput) (req *request.Request, output *clouddirectory.AttachTypedLinkOutput) {
	c.inc("AttachTypedLink")
	return c.svc.AttachTypedLinkRequest(input)
}

// AttachTypedLink is a passthrough to the underlying AttachTypedLink method.
// It will increment the count of requests made to AttachTypedLink.
func (c *CloudDirectory) AttachTypedLink(input *clouddirectory.AttachTypedLinkInput) (*clouddirectory.AttachTypedLinkOutput, error) {
	c.inc("AttachTypedLink")
	return c.svc.AttachTypedLink(input)
}

// AttachTypedLinkWithContext is a passthrough to the underlying AttachTypedLinkWithContext method.
// It will increment the count of requests made to AttachTypedLink.
func (c *CloudDirectory) AttachTypedLinkWithContext(ctx aws.Context, input *clouddirectory.AttachTypedLinkInput, opts ...request.Option) (*clouddirectory.AttachTypedLinkOutput, error) {
	c.inc("AttachTypedLink")
	return c.svc.AttachTypedLinkWithContext(ctx, input, opts...)
}

// BatchReadRequest is a passthrough to the underlying BatchReadRequest.
// It will increment the count of requests made to BatchRead.
func (c *CloudDirectory) BatchReadRequest(input *clouddirectory.BatchReadInput) (req *request.Request, output *clouddirectory.BatchReadOutput) {
	c.inc("BatchRead")
	return c.svc.BatchReadRequest(input)
}

// BatchRead is a passthrough to the underlying BatchRead method.
// It will increment the count of requests made to BatchRead.
func (c *CloudDirectory) BatchRead(input *clouddirectory.BatchReadInput) (*clouddirectory.BatchReadOutput, error) {
	c.inc("BatchRead")
	return c.svc.BatchRead(input)
}

// BatchReadWithContext is a passthrough to the underlying BatchReadWithContext method.
// It will increment the count of requests made to BatchRead.
func (c *CloudDirectory) BatchReadWithContext(ctx aws.Context, input *clouddirectory.BatchReadInput, opts ...request.Option) (*clouddirectory.BatchReadOutput, error) {
	c.inc("BatchRead")
	return c.svc.BatchReadWithContext(ctx, input, opts...)
}

// BatchWriteRequest is a passthrough to the underlying BatchWriteRequest.
// It will increment the count of requests made to BatchWrite.
func (c *CloudDirectory) BatchWriteRequest(input *clouddirectory.BatchWriteInput) (req *request.Request, output *clouddirectory.BatchWriteOutput) {
	c.inc("BatchWrite")
	return c.svc.BatchWriteRequest(input)
}

// BatchWrite is a passthrough to the underlying BatchWrite method.
// It will increment the count of requests made to BatchWrite.
func (c *CloudDirectory) BatchWrite(input *clouddirectory.BatchWriteInput) (*clouddirectory.BatchWriteOutput, error) {
	c.inc("BatchWrite")
	return c.svc.BatchWrite(input)
}

// BatchWriteWithContext is a passthrough to the underlying BatchWriteWithContext method.
// It will increment the count of requests made to BatchWrite.
func (c *CloudDirectory) BatchWriteWithContext(ctx aws.Context, input *clouddirectory.BatchWriteInput, opts ...request.Option) (*clouddirectory.BatchWriteOutput, error) {
	c.inc("BatchWrite")
	return c.svc.BatchWriteWithContext(ctx, input, opts...)
}

// CreateDirectoryRequest is a passthrough to the underlying CreateDirectoryRequest.
// It will increment the count of requests made to CreateDirectory.
func (c *CloudDirectory) CreateDirectoryRequest(input *clouddirectory.CreateDirectoryInput) (req *request.Request, output *clouddirectory.CreateDirectoryOutput) {
	c.inc("CreateDirectory")
	return c.svc.CreateDirectoryRequest(input)
}

// CreateDirectory is a passthrough to the underlying CreateDirectory method.
// It will increment the count of requests made to CreateDirectory.
func (c *CloudDirectory) CreateDirectory(input *clouddirectory.CreateDirectoryInput) (*clouddirectory.CreateDirectoryOutput, error) {
	c.inc("CreateDirectory")
	return c.svc.CreateDirectory(input)
}

// CreateDirectoryWithContext is a passthrough to the underlying CreateDirectoryWithContext method.
// It will increment the count of requests made to CreateDirectory.
func (c *CloudDirectory) CreateDirectoryWithContext(ctx aws.Context, input *clouddirectory.CreateDirectoryInput, opts ...request.Option) (*clouddirectory.CreateDirectoryOutput, error) {
	c.inc("CreateDirectory")
	return c.svc.CreateDirectoryWithContext(ctx, input, opts...)
}

// CreateFacetRequest is a passthrough to the underlying CreateFacetRequest.
// It will increment the count of requests made to CreateFacet.
func (c *CloudDirectory) CreateFacetRequest(input *clouddirectory.CreateFacetInput) (req *request.Request, output *clouddirectory.CreateFacetOutput) {
	c.inc("CreateFacet")
	return c.svc.CreateFacetRequest(input)
}

// CreateFacet is a passthrough to the underlying CreateFacet method.
// It will increment the count of requests made to CreateFacet.
func (c *CloudDirectory) CreateFacet(input *clouddirectory.CreateFacetInput) (*clouddirectory.CreateFacetOutput, error) {
	c.inc("CreateFacet")
	return c.svc.CreateFacet(input)
}

// CreateFacetWithContext is a passthrough to the underlying CreateFacetWithContext method.
// It will increment the count of requests made to CreateFacet.
func (c *CloudDirectory) CreateFacetWithContext(ctx aws.Context, input *clouddirectory.CreateFacetInput, opts ...request.Option) (*clouddirectory.CreateFacetOutput, error) {
	c.inc("CreateFacet")
	return c.svc.CreateFacetWithContext(ctx, input, opts...)
}

// CreateIndexRequest is a passthrough to the underlying CreateIndexRequest.
// It will increment the count of requests made to CreateIndex.
func (c *CloudDirectory) CreateIndexRequest(input *clouddirectory.CreateIndexInput) (req *request.Request, output *clouddirectory.CreateIndexOutput) {
	c.inc("CreateIndex")
	return c.svc.CreateIndexRequest(input)
}

// CreateIndex is a passthrough to the underlying CreateIndex method.
// It will increment the count of requests made to CreateIndex.
func (c *CloudDirectory) CreateIndex(input *clouddirectory.CreateIndexInput) (*clouddirectory.CreateIndexOutput, error) {
	c.inc("CreateIndex")
	return c.svc.CreateIndex(input)
}

// CreateIndexWithContext is a passthrough to the underlying CreateIndexWithContext method.
// It will increment the count of requests made to CreateIndex.
func (c *CloudDirectory) CreateIndexWithContext(ctx aws.Context, input *clouddirectory.CreateIndexInput, opts ...request.Option) (*clouddirectory.CreateIndexOutput, error) {
	c.inc("CreateIndex")
	return c.svc.CreateIndexWithContext(ctx, input, opts...)
}

// CreateObjectRequest is a passthrough to the underlying CreateObjectRequest.
// It will increment the count of requests made to CreateObject.
func (c *CloudDirectory) CreateObjectRequest(input *clouddirectory.CreateObjectInput) (req *request.Request, output *clouddirectory.CreateObjectOutput) {
	c.inc("CreateObject")
	return c.svc.CreateObjectRequest(input)
}

// CreateObject is a passthrough to the underlying CreateObject method.
// It will increment the count of requests made to CreateObject.
func (c *CloudDirectory) CreateObject(input *clouddirectory.CreateObjectInput) (*clouddirectory.CreateObjectOutput, error) {
	c.inc("CreateObject")
	return c.svc.CreateObject(input)
}

// CreateObjectWithContext is a passthrough to the underlying CreateObjectWithContext method.
// It will increment the count of requests made to CreateObject.
func (c *CloudDirectory) CreateObjectWithContext(ctx aws.Context, input *clouddirectory.CreateObjectInput, opts ...request.Option) (*clouddirectory.CreateObjectOutput, error) {
	c.inc("CreateObject")
	return c.svc.CreateObjectWithContext(ctx, input, opts...)
}

// CreateSchemaRequest is a passthrough to the underlying CreateSchemaRequest.
// It will increment the count of requests made to CreateSchema.
func (c *CloudDirectory) CreateSchemaRequest(input *clouddirectory.CreateSchemaInput) (req *request.Request, output *clouddirectory.CreateSchemaOutput) {
	c.inc("CreateSchema")
	return c.svc.CreateSchemaRequest(input)
}

// CreateSchema is a passthrough to the underlying CreateSchema method.
// It will increment the count of requests made to CreateSchema.
func (c *CloudDirectory) CreateSchema(input *clouddirectory.CreateSchemaInput) (*clouddirectory.CreateSchemaOutput, error) {
	c.inc("CreateSchema")
	return c.svc.CreateSchema(input)
}

// CreateSchemaWithContext is a passthrough to the underlying CreateSchemaWithContext method.
// It will increment the count of requests made to CreateSchema.
func (c *CloudDirectory) CreateSchemaWithContext(ctx aws.Context, input *clouddirectory.CreateSchemaInput, opts ...request.Option) (*clouddirectory.CreateSchemaOutput, error) {
	c.inc("CreateSchema")
	return c.svc.CreateSchemaWithContext(ctx, input, opts...)
}

// CreateTypedLinkFacetRequest is a passthrough to the underlying CreateTypedLinkFacetRequest.
// It will increment the count of requests made to CreateTypedLinkFacet.
func (c *CloudDirectory) CreateTypedLinkFacetRequest(input *clouddirectory.CreateTypedLinkFacetInput) (req *request.Request, output *clouddirectory.CreateTypedLinkFacetOutput) {
	c.inc("CreateTypedLinkFacet")
	return c.svc.CreateTypedLinkFacetRequest(input)
}

// CreateTypedLinkFacet is a passthrough to the underlying CreateTypedLinkFacet method.
// It will increment the count of requests made to CreateTypedLinkFacet.
func (c *CloudDirectory) CreateTypedLinkFacet(input *clouddirectory.CreateTypedLinkFacetInput) (*clouddirectory.CreateTypedLinkFacetOutput, error) {
	c.inc("CreateTypedLinkFacet")
	return c.svc.CreateTypedLinkFacet(input)
}

// CreateTypedLinkFacetWithContext is a passthrough to the underlying CreateTypedLinkFacetWithContext method.
// It will increment the count of requests made to CreateTypedLinkFacet.
func (c *CloudDirectory) CreateTypedLinkFacetWithContext(ctx aws.Context, input *clouddirectory.CreateTypedLinkFacetInput, opts ...request.Option) (*clouddirectory.CreateTypedLinkFacetOutput, error) {
	c.inc("CreateTypedLinkFacet")
	return c.svc.CreateTypedLinkFacetWithContext(ctx, input, opts...)
}

// DeleteDirectoryRequest is a passthrough to the underlying DeleteDirectoryRequest.
// It will increment the count of requests made to DeleteDirectory.
func (c *CloudDirectory) DeleteDirectoryRequest(input *clouddirectory.DeleteDirectoryInput) (req *request.Request, output *clouddirectory.DeleteDirectoryOutput) {
	c.inc("DeleteDirectory")
	return c.svc.DeleteDirectoryRequest(input)
}

// DeleteDirectory is a passthrough to the underlying DeleteDirectory method.
// It will increment the count of requests made to DeleteDirectory.
func (c *CloudDirectory) DeleteDirectory(input *clouddirectory.DeleteDirectoryInput) (*clouddirectory.DeleteDirectoryOutput, error) {
	c.inc("DeleteDirectory")
	return c.svc.DeleteDirectory(input)
}

// DeleteDirectoryWithContext is a passthrough to the underlying DeleteDirectoryWithContext method.
// It will increment the count of requests made to DeleteDirectory.
func (c *CloudDirectory) DeleteDirectoryWithContext(ctx aws.Context, input *clouddirectory.DeleteDirectoryInput, opts ...request.Option) (*clouddirectory.DeleteDirectoryOutput, error) {
	c.inc("DeleteDirectory")
	return c.svc.DeleteDirectoryWithContext(ctx, input, opts...)
}

// DeleteFacetRequest is a passthrough to the underlying DeleteFacetRequest.
// It will increment the count of requests made to DeleteFacet.
func (c *CloudDirectory) DeleteFacetRequest(input *clouddirectory.DeleteFacetInput) (req *request.Request, output *clouddirectory.DeleteFacetOutput) {
	c.inc("DeleteFacet")
	return c.svc.DeleteFacetRequest(input)
}

// DeleteFacet is a passthrough to the underlying DeleteFacet method.
// It will increment the count of requests made to DeleteFacet.
func (c *CloudDirectory) DeleteFacet(input *clouddirectory.DeleteFacetInput) (*clouddirectory.DeleteFacetOutput, error) {
	c.inc("DeleteFacet")
	return c.svc.DeleteFacet(input)
}

// DeleteFacetWithContext is a passthrough to the underlying DeleteFacetWithContext method.
// It will increment the count of requests made to DeleteFacet.
func (c *CloudDirectory) DeleteFacetWithContext(ctx aws.Context, input *clouddirectory.DeleteFacetInput, opts ...request.Option) (*clouddirectory.DeleteFacetOutput, error) {
	c.inc("DeleteFacet")
	return c.svc.DeleteFacetWithContext(ctx, input, opts...)
}

// DeleteObjectRequest is a passthrough to the underlying DeleteObjectRequest.
// It will increment the count of requests made to DeleteObject.
func (c *CloudDirectory) DeleteObjectRequest(input *clouddirectory.DeleteObjectInput) (req *request.Request, output *clouddirectory.DeleteObjectOutput) {
	c.inc("DeleteObject")
	return c.svc.DeleteObjectRequest(input)
}

// DeleteObject is a passthrough to the underlying DeleteObject method.
// It will increment the count of requests made to DeleteObject.
func (c *CloudDirectory) DeleteObject(input *clouddirectory.DeleteObjectInput) (*clouddirectory.DeleteObjectOutput, error) {
	c.inc("DeleteObject")
	return c.svc.DeleteObject(input)
}

// DeleteObjectWithContext is a passthrough to the underlying DeleteObjectWithContext method.
// It will increment the count of requests made to DeleteObject.
func (c *CloudDirectory) DeleteObjectWithContext(ctx aws.Context, input *clouddirectory.DeleteObjectInput, opts ...request.Option) (*clouddirectory.DeleteObjectOutput, error) {
	c.inc("DeleteObject")
	return c.svc.DeleteObjectWithContext(ctx, input, opts...)
}

// DeleteSchemaRequest is a passthrough to the underlying DeleteSchemaRequest.
// It will increment the count of requests made to DeleteSchema.
func (c *CloudDirectory) DeleteSchemaRequest(input *clouddirectory.DeleteSchemaInput) (req *request.Request, output *clouddirectory.DeleteSchemaOutput) {
	c.inc("DeleteSchema")
	return c.svc.DeleteSchemaRequest(input)
}

// DeleteSchema is a passthrough to the underlying DeleteSchema method.
// It will increment the count of requests made to DeleteSchema.
func (c *CloudDirectory) DeleteSchema(input *clouddirectory.DeleteSchemaInput) (*clouddirectory.DeleteSchemaOutput, error) {
	c.inc("DeleteSchema")
	return c.svc.DeleteSchema(input)
}

// DeleteSchemaWithContext is a passthrough to the underlying DeleteSchemaWithContext method.
// It will increment the count of requests made to DeleteSchema.
func (c *CloudDirectory) DeleteSchemaWithContext(ctx aws.Context, input *clouddirectory.DeleteSchemaInput, opts ...request.Option) (*clouddirectory.DeleteSchemaOutput, error) {
	c.inc("DeleteSchema")
	return c.svc.DeleteSchemaWithContext(ctx, input, opts...)
}

// DeleteTypedLinkFacetRequest is a passthrough to the underlying DeleteTypedLinkFacetRequest.
// It will increment the count of requests made to DeleteTypedLinkFacet.
func (c *CloudDirectory) DeleteTypedLinkFacetRequest(input *clouddirectory.DeleteTypedLinkFacetInput) (req *request.Request, output *clouddirectory.DeleteTypedLinkFacetOutput) {
	c.inc("DeleteTypedLinkFacet")
	return c.svc.DeleteTypedLinkFacetRequest(input)
}

// DeleteTypedLinkFacet is a passthrough to the underlying DeleteTypedLinkFacet method.
// It will increment the count of requests made to DeleteTypedLinkFacet.
func (c *CloudDirectory) DeleteTypedLinkFacet(input *clouddirectory.DeleteTypedLinkFacetInput) (*clouddirectory.DeleteTypedLinkFacetOutput, error) {
	c.inc("DeleteTypedLinkFacet")
	return c.svc.DeleteTypedLinkFacet(input)
}

// DeleteTypedLinkFacetWithContext is a passthrough to the underlying DeleteTypedLinkFacetWithContext method.
// It will increment the count of requests made to DeleteTypedLinkFacet.
func (c *CloudDirectory) DeleteTypedLinkFacetWithContext(ctx aws.Context, input *clouddirectory.DeleteTypedLinkFacetInput, opts ...request.Option) (*clouddirectory.DeleteTypedLinkFacetOutput, error) {
	c.inc("DeleteTypedLinkFacet")
	return c.svc.DeleteTypedLinkFacetWithContext(ctx, input, opts...)
}

// DetachFromIndexRequest is a passthrough to the underlying DetachFromIndexRequest.
// It will increment the count of requests made to DetachFromIndex.
func (c *CloudDirectory) DetachFromIndexRequest(input *clouddirectory.DetachFromIndexInput) (req *request.Request, output *clouddirectory.DetachFromIndexOutput) {
	c.inc("DetachFromIndex")
	return c.svc.DetachFromIndexRequest(input)
}

// DetachFromIndex is a passthrough to the underlying DetachFromIndex method.
// It will increment the count of requests made to DetachFromIndex.
func (c *CloudDirectory) DetachFromIndex(input *clouddirectory.DetachFromIndexInput) (*clouddirectory.DetachFromIndexOutput, error) {
	c.inc("DetachFromIndex")
	return c.svc.DetachFromIndex(input)
}

// DetachFromIndexWithContext is a passthrough to the underlying DetachFromIndexWithContext method.
// It will increment the count of requests made to DetachFromIndex.
func (c *CloudDirectory) DetachFromIndexWithContext(ctx aws.Context, input *clouddirectory.DetachFromIndexInput, opts ...request.Option) (*clouddirectory.DetachFromIndexOutput, error) {
	c.inc("DetachFromIndex")
	return c.svc.DetachFromIndexWithContext(ctx, input, opts...)
}

// DetachObjectRequest is a passthrough to the underlying DetachObjectRequest.
// It will increment the count of requests made to DetachObject.
func (c *CloudDirectory) DetachObjectRequest(input *clouddirectory.DetachObjectInput) (req *request.Request, output *clouddirectory.DetachObjectOutput) {
	c.inc("DetachObject")
	return c.svc.DetachObjectRequest(input)
}

// DetachObject is a passthrough to the underlying DetachObject method.
// It will increment the count of requests made to DetachObject.
func (c *CloudDirectory) DetachObject(input *clouddirectory.DetachObjectInput) (*clouddirectory.DetachObjectOutput, error) {
	c.inc("DetachObject")
	return c.svc.DetachObject(input)
}

// DetachObjectWithContext is a passthrough to the underlying DetachObjectWithContext method.
// It will increment the count of requests made to DetachObject.
func (c *CloudDirectory) DetachObjectWithContext(ctx aws.Context, input *clouddirectory.DetachObjectInput, opts ...request.Option) (*clouddirectory.DetachObjectOutput, error) {
	c.inc("DetachObject")
	return c.svc.DetachObjectWithContext(ctx, input, opts...)
}

// DetachPolicyRequest is a passthrough to the underlying DetachPolicyRequest.
// It will increment the count of requests made to DetachPolicy.
func (c *CloudDirectory) DetachPolicyRequest(input *clouddirectory.DetachPolicyInput) (req *request.Request, output *clouddirectory.DetachPolicyOutput) {
	c.inc("DetachPolicy")
	return c.svc.DetachPolicyRequest(input)
}

// DetachPolicy is a passthrough to the underlying DetachPolicy method.
// It will increment the count of requests made to DetachPolicy.
func (c *CloudDirectory) DetachPolicy(input *clouddirectory.DetachPolicyInput) (*clouddirectory.DetachPolicyOutput, error) {
	c.inc("DetachPolicy")
	return c.svc.DetachPolicy(input)
}

// DetachPolicyWithContext is a passthrough to the underlying DetachPolicyWithContext method.
// It will increment the count of requests made to DetachPolicy.
func (c *CloudDirectory) DetachPolicyWithContext(ctx aws.Context, input *clouddirectory.DetachPolicyInput, opts ...request.Option) (*clouddirectory.DetachPolicyOutput, error) {
	c.inc("DetachPolicy")
	return c.svc.DetachPolicyWithContext(ctx, input, opts...)
}

// DetachTypedLinkRequest is a passthrough to the underlying DetachTypedLinkRequest.
// It will increment the count of requests made to DetachTypedLink.
func (c *CloudDirectory) DetachTypedLinkRequest(input *clouddirectory.DetachTypedLinkInput) (req *request.Request, output *clouddirectory.DetachTypedLinkOutput) {
	c.inc("DetachTypedLink")
	return c.svc.DetachTypedLinkRequest(input)
}

// DetachTypedLink is a passthrough to the underlying DetachTypedLink method.
// It will increment the count of requests made to DetachTypedLink.
func (c *CloudDirectory) DetachTypedLink(input *clouddirectory.DetachTypedLinkInput) (*clouddirectory.DetachTypedLinkOutput, error) {
	c.inc("DetachTypedLink")
	return c.svc.DetachTypedLink(input)
}

// DetachTypedLinkWithContext is a passthrough to the underlying DetachTypedLinkWithContext method.
// It will increment the count of requests made to DetachTypedLink.
func (c *CloudDirectory) DetachTypedLinkWithContext(ctx aws.Context, input *clouddirectory.DetachTypedLinkInput, opts ...request.Option) (*clouddirectory.DetachTypedLinkOutput, error) {
	c.inc("DetachTypedLink")
	return c.svc.DetachTypedLinkWithContext(ctx, input, opts...)
}

// DisableDirectoryRequest is a passthrough to the underlying DisableDirectoryRequest.
// It will increment the count of requests made to DisableDirectory.
func (c *CloudDirectory) DisableDirectoryRequest(input *clouddirectory.DisableDirectoryInput) (req *request.Request, output *clouddirectory.DisableDirectoryOutput) {
	c.inc("DisableDirectory")
	return c.svc.DisableDirectoryRequest(input)
}

// DisableDirectory is a passthrough to the underlying DisableDirectory method.
// It will increment the count of requests made to DisableDirectory.
func (c *CloudDirectory) DisableDirectory(input *clouddirectory.DisableDirectoryInput) (*clouddirectory.DisableDirectoryOutput, error) {
	c.inc("DisableDirectory")
	return c.svc.DisableDirectory(input)
}

// DisableDirectoryWithContext is a passthrough to the underlying DisableDirectoryWithContext method.
// It will increment the count of requests made to DisableDirectory.
func (c *CloudDirectory) DisableDirectoryWithContext(ctx aws.Context, input *clouddirectory.DisableDirectoryInput, opts ...request.Option) (*clouddirectory.DisableDirectoryOutput, error) {
	c.inc("DisableDirectory")
	return c.svc.DisableDirectoryWithContext(ctx, input, opts...)
}

// EnableDirectoryRequest is a passthrough to the underlying EnableDirectoryRequest.
// It will increment the count of requests made to EnableDirectory.
func (c *CloudDirectory) EnableDirectoryRequest(input *clouddirectory.EnableDirectoryInput) (req *request.Request, output *clouddirectory.EnableDirectoryOutput) {
	c.inc("EnableDirectory")
	return c.svc.EnableDirectoryRequest(input)
}

// EnableDirectory is a passthrough to the underlying EnableDirectory method.
// It will increment the count of requests made to EnableDirectory.
func (c *CloudDirectory) EnableDirectory(input *clouddirectory.EnableDirectoryInput) (*clouddirectory.EnableDirectoryOutput, error) {
	c.inc("EnableDirectory")
	return c.svc.EnableDirectory(input)
}

// EnableDirectoryWithContext is a passthrough to the underlying EnableDirectoryWithContext method.
// It will increment the count of requests made to EnableDirectory.
func (c *CloudDirectory) EnableDirectoryWithContext(ctx aws.Context, input *clouddirectory.EnableDirectoryInput, opts ...request.Option) (*clouddirectory.EnableDirectoryOutput, error) {
	c.inc("EnableDirectory")
	return c.svc.EnableDirectoryWithContext(ctx, input, opts...)
}

// GetDirectoryRequest is a passthrough to the underlying GetDirectoryRequest.
// It will increment the count of requests made to GetDirectory.
func (c *CloudDirectory) GetDirectoryRequest(input *clouddirectory.GetDirectoryInput) (req *request.Request, output *clouddirectory.GetDirectoryOutput) {
	c.inc("GetDirectory")
	return c.svc.GetDirectoryRequest(input)
}

// GetDirectory is a passthrough to the underlying GetDirectory method.
// It will increment the count of requests made to GetDirectory.
func (c *CloudDirectory) GetDirectory(input *clouddirectory.GetDirectoryInput) (*clouddirectory.GetDirectoryOutput, error) {
	c.inc("GetDirectory")
	return c.svc.GetDirectory(input)
}

// GetDirectoryWithContext is a passthrough to the underlying GetDirectoryWithContext method.
// It will increment the count of requests made to GetDirectory.
func (c *CloudDirectory) GetDirectoryWithContext(ctx aws.Context, input *clouddirectory.GetDirectoryInput, opts ...request.Option) (*clouddirectory.GetDirectoryOutput, error) {
	c.inc("GetDirectory")
	return c.svc.GetDirectoryWithContext(ctx, input, opts...)
}

// GetFacetRequest is a passthrough to the underlying GetFacetRequest.
// It will increment the count of requests made to GetFacet.
func (c *CloudDirectory) GetFacetRequest(input *clouddirectory.GetFacetInput) (req *request.Request, output *clouddirectory.GetFacetOutput) {
	c.inc("GetFacet")
	return c.svc.GetFacetRequest(input)
}

// GetFacet is a passthrough to the underlying GetFacet method.
// It will increment the count of requests made to GetFacet.
func (c *CloudDirectory) GetFacet(input *clouddirectory.GetFacetInput) (*clouddirectory.GetFacetOutput, error) {
	c.inc("GetFacet")
	return c.svc.GetFacet(input)
}

// GetFacetWithContext is a passthrough to the underlying GetFacetWithContext method.
// It will increment the count of requests made to GetFacet.
func (c *CloudDirectory) GetFacetWithContext(ctx aws.Context, input *clouddirectory.GetFacetInput, opts ...request.Option) (*clouddirectory.GetFacetOutput, error) {
	c.inc("GetFacet")
	return c.svc.GetFacetWithContext(ctx, input, opts...)
}

// GetObjectInformationRequest is a passthrough to the underlying GetObjectInformationRequest.
// It will increment the count of requests made to GetObjectInformation.
func (c *CloudDirectory) GetObjectInformationRequest(input *clouddirectory.GetObjectInformationInput) (req *request.Request, output *clouddirectory.GetObjectInformationOutput) {
	c.inc("GetObjectInformation")
	return c.svc.GetObjectInformationRequest(input)
}

// GetObjectInformation is a passthrough to the underlying GetObjectInformation method.
// It will increment the count of requests made to GetObjectInformation.
func (c *CloudDirectory) GetObjectInformation(input *clouddirectory.GetObjectInformationInput) (*clouddirectory.GetObjectInformationOutput, error) {
	c.inc("GetObjectInformation")
	return c.svc.GetObjectInformation(input)
}

// GetObjectInformationWithContext is a passthrough to the underlying GetObjectInformationWithContext method.
// It will increment the count of requests made to GetObjectInformation.
func (c *CloudDirectory) GetObjectInformationWithContext(ctx aws.Context, input *clouddirectory.GetObjectInformationInput, opts ...request.Option) (*clouddirectory.GetObjectInformationOutput, error) {
	c.inc("GetObjectInformation")
	return c.svc.GetObjectInformationWithContext(ctx, input, opts...)
}

// GetSchemaAsJsonRequest is a passthrough to the underlying GetSchemaAsJsonRequest.
// It will increment the count of requests made to GetSchemaAsJson.
func (c *CloudDirectory) GetSchemaAsJsonRequest(input *clouddirectory.GetSchemaAsJsonInput) (req *request.Request, output *clouddirectory.GetSchemaAsJsonOutput) {
	c.inc("GetSchemaAsJson")
	return c.svc.GetSchemaAsJsonRequest(input)
}

// GetSchemaAsJson is a passthrough to the underlying GetSchemaAsJson method.
// It will increment the count of requests made to GetSchemaAsJson.
func (c *CloudDirectory) GetSchemaAsJson(input *clouddirectory.GetSchemaAsJsonInput) (*clouddirectory.GetSchemaAsJsonOutput, error) {
	c.inc("GetSchemaAsJson")
	return c.svc.GetSchemaAsJson(input)
}

// GetSchemaAsJsonWithContext is a passthrough to the underlying GetSchemaAsJsonWithContext method.
// It will increment the count of requests made to GetSchemaAsJson.
func (c *CloudDirectory) GetSchemaAsJsonWithContext(ctx aws.Context, input *clouddirectory.GetSchemaAsJsonInput, opts ...request.Option) (*clouddirectory.GetSchemaAsJsonOutput, error) {
	c.inc("GetSchemaAsJson")
	return c.svc.GetSchemaAsJsonWithContext(ctx, input, opts...)
}

// GetTypedLinkFacetInformationRequest is a passthrough to the underlying GetTypedLinkFacetInformationRequest.
// It will increment the count of requests made to GetTypedLinkFacetInformation.
func (c *CloudDirectory) GetTypedLinkFacetInformationRequest(input *clouddirectory.GetTypedLinkFacetInformationInput) (req *request.Request, output *clouddirectory.GetTypedLinkFacetInformationOutput) {
	c.inc("GetTypedLinkFacetInformation")
	return c.svc.GetTypedLinkFacetInformationRequest(input)
}

// GetTypedLinkFacetInformation is a passthrough to the underlying GetTypedLinkFacetInformation method.
// It will increment the count of requests made to GetTypedLinkFacetInformation.
func (c *CloudDirectory) GetTypedLinkFacetInformation(input *clouddirectory.GetTypedLinkFacetInformationInput) (*clouddirectory.GetTypedLinkFacetInformationOutput, error) {
	c.inc("GetTypedLinkFacetInformation")
	return c.svc.GetTypedLinkFacetInformation(input)
}

// GetTypedLinkFacetInformationWithContext is a passthrough to the underlying GetTypedLinkFacetInformationWithContext method.
// It will increment the count of requests made to GetTypedLinkFacetInformation.
func (c *CloudDirectory) GetTypedLinkFacetInformationWithContext(ctx aws.Context, input *clouddirectory.GetTypedLinkFacetInformationInput, opts ...request.Option) (*clouddirectory.GetTypedLinkFacetInformationOutput, error) {
	c.inc("GetTypedLinkFacetInformation")
	return c.svc.GetTypedLinkFacetInformationWithContext(ctx, input, opts...)
}

// ListAppliedSchemaArnsRequest is a passthrough to the underlying ListAppliedSchemaArnsRequest.
// It will increment the count of requests made to ListAppliedSchemaArns.
func (c *CloudDirectory) ListAppliedSchemaArnsRequest(input *clouddirectory.ListAppliedSchemaArnsInput) (req *request.Request, output *clouddirectory.ListAppliedSchemaArnsOutput) {
	c.inc("ListAppliedSchemaArns")
	return c.svc.ListAppliedSchemaArnsRequest(input)
}

// ListAppliedSchemaArns is a passthrough to the underlying ListAppliedSchemaArns method.
// It will increment the count of requests made to ListAppliedSchemaArns.
func (c *CloudDirectory) ListAppliedSchemaArns(input *clouddirectory.ListAppliedSchemaArnsInput) (*clouddirectory.ListAppliedSchemaArnsOutput, error) {
	c.inc("ListAppliedSchemaArns")
	return c.svc.ListAppliedSchemaArns(input)
}

// ListAppliedSchemaArnsWithContext is a passthrough to the underlying ListAppliedSchemaArnsWithContext method.
// It will increment the count of requests made to ListAppliedSchemaArns.
func (c *CloudDirectory) ListAppliedSchemaArnsWithContext(ctx aws.Context, input *clouddirectory.ListAppliedSchemaArnsInput, opts ...request.Option) (*clouddirectory.ListAppliedSchemaArnsOutput, error) {
	c.inc("ListAppliedSchemaArns")
	return c.svc.ListAppliedSchemaArnsWithContext(ctx, input, opts...)
}

// ListAppliedSchemaArnsPages is a passthrough to the underlying ListAppliedSchemaArnsPages method.
// It will increment the count of requests made to ListAppliedSchemaArns on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListAppliedSchemaArnsPagesWithContext to avoid this.
func (c *CloudDirectory) ListAppliedSchemaArnsPages(input *clouddirectory.ListAppliedSchemaArnsInput, fn func(*clouddirectory.ListAppliedSchemaArnsOutput, bool) bool) error {
	wrappedFn := func(page *clouddirectory.ListAppliedSchemaArnsOutput, lastPage bool) bool {
		c.inc("ListAppliedSchemaArns")
		return fn(page, lastPage)
	}
	return c.ListAppliedSchemaArnsPages(input, wrappedFn)
}

// ListAppliedSchemaArnsPagesWithContext is a passthrough to the underlying ListAppliedSchemaArnsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListAppliedSchemaArns when applied to the request.
func (c *CloudDirectory) ListAppliedSchemaArnsPagesWithContext(ctx aws.Context, input *clouddirectory.ListAppliedSchemaArnsInput, fn func(*clouddirectory.ListAppliedSchemaArnsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListAppliedSchemaArns"))
	return c.ListAppliedSchemaArnsPagesWithContext(ctx, input, fn, opts...)
}

// ListAttachedIndicesRequest is a passthrough to the underlying ListAttachedIndicesRequest.
// It will increment the count of requests made to ListAttachedIndices.
func (c *CloudDirectory) ListAttachedIndicesRequest(input *clouddirectory.ListAttachedIndicesInput) (req *request.Request, output *clouddirectory.ListAttachedIndicesOutput) {
	c.inc("ListAttachedIndices")
	return c.svc.ListAttachedIndicesRequest(input)
}

// ListAttachedIndices is a passthrough to the underlying ListAttachedIndices method.
// It will increment the count of requests made to ListAttachedIndices.
func (c *CloudDirectory) ListAttachedIndices(input *clouddirectory.ListAttachedIndicesInput) (*clouddirectory.ListAttachedIndicesOutput, error) {
	c.inc("ListAttachedIndices")
	return c.svc.ListAttachedIndices(input)
}

// ListAttachedIndicesWithContext is a passthrough to the underlying ListAttachedIndicesWithContext method.
// It will increment the count of requests made to ListAttachedIndices.
func (c *CloudDirectory) ListAttachedIndicesWithContext(ctx aws.Context, input *clouddirectory.ListAttachedIndicesInput, opts ...request.Option) (*clouddirectory.ListAttachedIndicesOutput, error) {
	c.inc("ListAttachedIndices")
	return c.svc.ListAttachedIndicesWithContext(ctx, input, opts...)
}

// ListAttachedIndicesPages is a passthrough to the underlying ListAttachedIndicesPages method.
// It will increment the count of requests made to ListAttachedIndices on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListAttachedIndicesPagesWithContext to avoid this.
func (c *CloudDirectory) ListAttachedIndicesPages(input *clouddirectory.ListAttachedIndicesInput, fn func(*clouddirectory.ListAttachedIndicesOutput, bool) bool) error {
	wrappedFn := func(page *clouddirectory.ListAttachedIndicesOutput, lastPage bool) bool {
		c.inc("ListAttachedIndices")
		return fn(page, lastPage)
	}
	return c.ListAttachedIndicesPages(input, wrappedFn)
}

// ListAttachedIndicesPagesWithContext is a passthrough to the underlying ListAttachedIndicesPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListAttachedIndices when applied to the request.
func (c *CloudDirectory) ListAttachedIndicesPagesWithContext(ctx aws.Context, input *clouddirectory.ListAttachedIndicesInput, fn func(*clouddirectory.ListAttachedIndicesOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListAttachedIndices"))
	return c.ListAttachedIndicesPagesWithContext(ctx, input, fn, opts...)
}

// ListDevelopmentSchemaArnsRequest is a passthrough to the underlying ListDevelopmentSchemaArnsRequest.
// It will increment the count of requests made to ListDevelopmentSchemaArns.
func (c *CloudDirectory) ListDevelopmentSchemaArnsRequest(input *clouddirectory.ListDevelopmentSchemaArnsInput) (req *request.Request, output *clouddirectory.ListDevelopmentSchemaArnsOutput) {
	c.inc("ListDevelopmentSchemaArns")
	return c.svc.ListDevelopmentSchemaArnsRequest(input)
}

// ListDevelopmentSchemaArns is a passthrough to the underlying ListDevelopmentSchemaArns method.
// It will increment the count of requests made to ListDevelopmentSchemaArns.
func (c *CloudDirectory) ListDevelopmentSchemaArns(input *clouddirectory.ListDevelopmentSchemaArnsInput) (*clouddirectory.ListDevelopmentSchemaArnsOutput, error) {
	c.inc("ListDevelopmentSchemaArns")
	return c.svc.ListDevelopmentSchemaArns(input)
}

// ListDevelopmentSchemaArnsWithContext is a passthrough to the underlying ListDevelopmentSchemaArnsWithContext method.
// It will increment the count of requests made to ListDevelopmentSchemaArns.
func (c *CloudDirectory) ListDevelopmentSchemaArnsWithContext(ctx aws.Context, input *clouddirectory.ListDevelopmentSchemaArnsInput, opts ...request.Option) (*clouddirectory.ListDevelopmentSchemaArnsOutput, error) {
	c.inc("ListDevelopmentSchemaArns")
	return c.svc.ListDevelopmentSchemaArnsWithContext(ctx, input, opts...)
}

// ListDevelopmentSchemaArnsPages is a passthrough to the underlying ListDevelopmentSchemaArnsPages method.
// It will increment the count of requests made to ListDevelopmentSchemaArns on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListDevelopmentSchemaArnsPagesWithContext to avoid this.
func (c *CloudDirectory) ListDevelopmentSchemaArnsPages(input *clouddirectory.ListDevelopmentSchemaArnsInput, fn func(*clouddirectory.ListDevelopmentSchemaArnsOutput, bool) bool) error {
	wrappedFn := func(page *clouddirectory.ListDevelopmentSchemaArnsOutput, lastPage bool) bool {
		c.inc("ListDevelopmentSchemaArns")
		return fn(page, lastPage)
	}
	return c.ListDevelopmentSchemaArnsPages(input, wrappedFn)
}

// ListDevelopmentSchemaArnsPagesWithContext is a passthrough to the underlying ListDevelopmentSchemaArnsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListDevelopmentSchemaArns when applied to the request.
func (c *CloudDirectory) ListDevelopmentSchemaArnsPagesWithContext(ctx aws.Context, input *clouddirectory.ListDevelopmentSchemaArnsInput, fn func(*clouddirectory.ListDevelopmentSchemaArnsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListDevelopmentSchemaArns"))
	return c.ListDevelopmentSchemaArnsPagesWithContext(ctx, input, fn, opts...)
}

// ListDirectoriesRequest is a passthrough to the underlying ListDirectoriesRequest.
// It will increment the count of requests made to ListDirectories.
func (c *CloudDirectory) ListDirectoriesRequest(input *clouddirectory.ListDirectoriesInput) (req *request.Request, output *clouddirectory.ListDirectoriesOutput) {
	c.inc("ListDirectories")
	return c.svc.ListDirectoriesRequest(input)
}

// ListDirectories is a passthrough to the underlying ListDirectories method.
// It will increment the count of requests made to ListDirectories.
func (c *CloudDirectory) ListDirectories(input *clouddirectory.ListDirectoriesInput) (*clouddirectory.ListDirectoriesOutput, error) {
	c.inc("ListDirectories")
	return c.svc.ListDirectories(input)
}

// ListDirectoriesWithContext is a passthrough to the underlying ListDirectoriesWithContext method.
// It will increment the count of requests made to ListDirectories.
func (c *CloudDirectory) ListDirectoriesWithContext(ctx aws.Context, input *clouddirectory.ListDirectoriesInput, opts ...request.Option) (*clouddirectory.ListDirectoriesOutput, error) {
	c.inc("ListDirectories")
	return c.svc.ListDirectoriesWithContext(ctx, input, opts...)
}

// ListDirectoriesPages is a passthrough to the underlying ListDirectoriesPages method.
// It will increment the count of requests made to ListDirectories on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListDirectoriesPagesWithContext to avoid this.
func (c *CloudDirectory) ListDirectoriesPages(input *clouddirectory.ListDirectoriesInput, fn func(*clouddirectory.ListDirectoriesOutput, bool) bool) error {
	wrappedFn := func(page *clouddirectory.ListDirectoriesOutput, lastPage bool) bool {
		c.inc("ListDirectories")
		return fn(page, lastPage)
	}
	return c.ListDirectoriesPages(input, wrappedFn)
}

// ListDirectoriesPagesWithContext is a passthrough to the underlying ListDirectoriesPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListDirectories when applied to the request.
func (c *CloudDirectory) ListDirectoriesPagesWithContext(ctx aws.Context, input *clouddirectory.ListDirectoriesInput, fn func(*clouddirectory.ListDirectoriesOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListDirectories"))
	return c.ListDirectoriesPagesWithContext(ctx, input, fn, opts...)
}

// ListFacetAttributesRequest is a passthrough to the underlying ListFacetAttributesRequest.
// It will increment the count of requests made to ListFacetAttributes.
func (c *CloudDirectory) ListFacetAttributesRequest(input *clouddirectory.ListFacetAttributesInput) (req *request.Request, output *clouddirectory.ListFacetAttributesOutput) {
	c.inc("ListFacetAttributes")
	return c.svc.ListFacetAttributesRequest(input)
}

// ListFacetAttributes is a passthrough to the underlying ListFacetAttributes method.
// It will increment the count of requests made to ListFacetAttributes.
func (c *CloudDirectory) ListFacetAttributes(input *clouddirectory.ListFacetAttributesInput) (*clouddirectory.ListFacetAttributesOutput, error) {
	c.inc("ListFacetAttributes")
	return c.svc.ListFacetAttributes(input)
}

// ListFacetAttributesWithContext is a passthrough to the underlying ListFacetAttributesWithContext method.
// It will increment the count of requests made to ListFacetAttributes.
func (c *CloudDirectory) ListFacetAttributesWithContext(ctx aws.Context, input *clouddirectory.ListFacetAttributesInput, opts ...request.Option) (*clouddirectory.ListFacetAttributesOutput, error) {
	c.inc("ListFacetAttributes")
	return c.svc.ListFacetAttributesWithContext(ctx, input, opts...)
}

// ListFacetAttributesPages is a passthrough to the underlying ListFacetAttributesPages method.
// It will increment the count of requests made to ListFacetAttributes on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListFacetAttributesPagesWithContext to avoid this.
func (c *CloudDirectory) ListFacetAttributesPages(input *clouddirectory.ListFacetAttributesInput, fn func(*clouddirectory.ListFacetAttributesOutput, bool) bool) error {
	wrappedFn := func(page *clouddirectory.ListFacetAttributesOutput, lastPage bool) bool {
		c.inc("ListFacetAttributes")
		return fn(page, lastPage)
	}
	return c.ListFacetAttributesPages(input, wrappedFn)
}

// ListFacetAttributesPagesWithContext is a passthrough to the underlying ListFacetAttributesPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListFacetAttributes when applied to the request.
func (c *CloudDirectory) ListFacetAttributesPagesWithContext(ctx aws.Context, input *clouddirectory.ListFacetAttributesInput, fn func(*clouddirectory.ListFacetAttributesOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListFacetAttributes"))
	return c.ListFacetAttributesPagesWithContext(ctx, input, fn, opts...)
}

// ListFacetNamesRequest is a passthrough to the underlying ListFacetNamesRequest.
// It will increment the count of requests made to ListFacetNames.
func (c *CloudDirectory) ListFacetNamesRequest(input *clouddirectory.ListFacetNamesInput) (req *request.Request, output *clouddirectory.ListFacetNamesOutput) {
	c.inc("ListFacetNames")
	return c.svc.ListFacetNamesRequest(input)
}

// ListFacetNames is a passthrough to the underlying ListFacetNames method.
// It will increment the count of requests made to ListFacetNames.
func (c *CloudDirectory) ListFacetNames(input *clouddirectory.ListFacetNamesInput) (*clouddirectory.ListFacetNamesOutput, error) {
	c.inc("ListFacetNames")
	return c.svc.ListFacetNames(input)
}

// ListFacetNamesWithContext is a passthrough to the underlying ListFacetNamesWithContext method.
// It will increment the count of requests made to ListFacetNames.
func (c *CloudDirectory) ListFacetNamesWithContext(ctx aws.Context, input *clouddirectory.ListFacetNamesInput, opts ...request.Option) (*clouddirectory.ListFacetNamesOutput, error) {
	c.inc("ListFacetNames")
	return c.svc.ListFacetNamesWithContext(ctx, input, opts...)
}

// ListFacetNamesPages is a passthrough to the underlying ListFacetNamesPages method.
// It will increment the count of requests made to ListFacetNames on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListFacetNamesPagesWithContext to avoid this.
func (c *CloudDirectory) ListFacetNamesPages(input *clouddirectory.ListFacetNamesInput, fn func(*clouddirectory.ListFacetNamesOutput, bool) bool) error {
	wrappedFn := func(page *clouddirectory.ListFacetNamesOutput, lastPage bool) bool {
		c.inc("ListFacetNames")
		return fn(page, lastPage)
	}
	return c.ListFacetNamesPages(input, wrappedFn)
}

// ListFacetNamesPagesWithContext is a passthrough to the underlying ListFacetNamesPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListFacetNames when applied to the request.
func (c *CloudDirectory) ListFacetNamesPagesWithContext(ctx aws.Context, input *clouddirectory.ListFacetNamesInput, fn func(*clouddirectory.ListFacetNamesOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListFacetNames"))
	return c.ListFacetNamesPagesWithContext(ctx, input, fn, opts...)
}

// ListIncomingTypedLinksRequest is a passthrough to the underlying ListIncomingTypedLinksRequest.
// It will increment the count of requests made to ListIncomingTypedLinks.
func (c *CloudDirectory) ListIncomingTypedLinksRequest(input *clouddirectory.ListIncomingTypedLinksInput) (req *request.Request, output *clouddirectory.ListIncomingTypedLinksOutput) {
	c.inc("ListIncomingTypedLinks")
	return c.svc.ListIncomingTypedLinksRequest(input)
}

// ListIncomingTypedLinks is a passthrough to the underlying ListIncomingTypedLinks method.
// It will increment the count of requests made to ListIncomingTypedLinks.
func (c *CloudDirectory) ListIncomingTypedLinks(input *clouddirectory.ListIncomingTypedLinksInput) (*clouddirectory.ListIncomingTypedLinksOutput, error) {
	c.inc("ListIncomingTypedLinks")
	return c.svc.ListIncomingTypedLinks(input)
}

// ListIncomingTypedLinksWithContext is a passthrough to the underlying ListIncomingTypedLinksWithContext method.
// It will increment the count of requests made to ListIncomingTypedLinks.
func (c *CloudDirectory) ListIncomingTypedLinksWithContext(ctx aws.Context, input *clouddirectory.ListIncomingTypedLinksInput, opts ...request.Option) (*clouddirectory.ListIncomingTypedLinksOutput, error) {
	c.inc("ListIncomingTypedLinks")
	return c.svc.ListIncomingTypedLinksWithContext(ctx, input, opts...)
}

// ListIndexRequest is a passthrough to the underlying ListIndexRequest.
// It will increment the count of requests made to ListIndex.
func (c *CloudDirectory) ListIndexRequest(input *clouddirectory.ListIndexInput) (req *request.Request, output *clouddirectory.ListIndexOutput) {
	c.inc("ListIndex")
	return c.svc.ListIndexRequest(input)
}

// ListIndex is a passthrough to the underlying ListIndex method.
// It will increment the count of requests made to ListIndex.
func (c *CloudDirectory) ListIndex(input *clouddirectory.ListIndexInput) (*clouddirectory.ListIndexOutput, error) {
	c.inc("ListIndex")
	return c.svc.ListIndex(input)
}

// ListIndexWithContext is a passthrough to the underlying ListIndexWithContext method.
// It will increment the count of requests made to ListIndex.
func (c *CloudDirectory) ListIndexWithContext(ctx aws.Context, input *clouddirectory.ListIndexInput, opts ...request.Option) (*clouddirectory.ListIndexOutput, error) {
	c.inc("ListIndex")
	return c.svc.ListIndexWithContext(ctx, input, opts...)
}

// ListIndexPages is a passthrough to the underlying ListIndexPages method.
// It will increment the count of requests made to ListIndex on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListIndexPagesWithContext to avoid this.
func (c *CloudDirectory) ListIndexPages(input *clouddirectory.ListIndexInput, fn func(*clouddirectory.ListIndexOutput, bool) bool) error {
	wrappedFn := func(page *clouddirectory.ListIndexOutput, lastPage bool) bool {
		c.inc("ListIndex")
		return fn(page, lastPage)
	}
	return c.ListIndexPages(input, wrappedFn)
}

// ListIndexPagesWithContext is a passthrough to the underlying ListIndexPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListIndex when applied to the request.
func (c *CloudDirectory) ListIndexPagesWithContext(ctx aws.Context, input *clouddirectory.ListIndexInput, fn func(*clouddirectory.ListIndexOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListIndex"))
	return c.ListIndexPagesWithContext(ctx, input, fn, opts...)
}

// ListObjectAttributesRequest is a passthrough to the underlying ListObjectAttributesRequest.
// It will increment the count of requests made to ListObjectAttributes.
func (c *CloudDirectory) ListObjectAttributesRequest(input *clouddirectory.ListObjectAttributesInput) (req *request.Request, output *clouddirectory.ListObjectAttributesOutput) {
	c.inc("ListObjectAttributes")
	return c.svc.ListObjectAttributesRequest(input)
}

// ListObjectAttributes is a passthrough to the underlying ListObjectAttributes method.
// It will increment the count of requests made to ListObjectAttributes.
func (c *CloudDirectory) ListObjectAttributes(input *clouddirectory.ListObjectAttributesInput) (*clouddirectory.ListObjectAttributesOutput, error) {
	c.inc("ListObjectAttributes")
	return c.svc.ListObjectAttributes(input)
}

// ListObjectAttributesWithContext is a passthrough to the underlying ListObjectAttributesWithContext method.
// It will increment the count of requests made to ListObjectAttributes.
func (c *CloudDirectory) ListObjectAttributesWithContext(ctx aws.Context, input *clouddirectory.ListObjectAttributesInput, opts ...request.Option) (*clouddirectory.ListObjectAttributesOutput, error) {
	c.inc("ListObjectAttributes")
	return c.svc.ListObjectAttributesWithContext(ctx, input, opts...)
}

// ListObjectAttributesPages is a passthrough to the underlying ListObjectAttributesPages method.
// It will increment the count of requests made to ListObjectAttributes on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListObjectAttributesPagesWithContext to avoid this.
func (c *CloudDirectory) ListObjectAttributesPages(input *clouddirectory.ListObjectAttributesInput, fn func(*clouddirectory.ListObjectAttributesOutput, bool) bool) error {
	wrappedFn := func(page *clouddirectory.ListObjectAttributesOutput, lastPage bool) bool {
		c.inc("ListObjectAttributes")
		return fn(page, lastPage)
	}
	return c.ListObjectAttributesPages(input, wrappedFn)
}

// ListObjectAttributesPagesWithContext is a passthrough to the underlying ListObjectAttributesPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListObjectAttributes when applied to the request.
func (c *CloudDirectory) ListObjectAttributesPagesWithContext(ctx aws.Context, input *clouddirectory.ListObjectAttributesInput, fn func(*clouddirectory.ListObjectAttributesOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListObjectAttributes"))
	return c.ListObjectAttributesPagesWithContext(ctx, input, fn, opts...)
}

// ListObjectChildrenRequest is a passthrough to the underlying ListObjectChildrenRequest.
// It will increment the count of requests made to ListObjectChildren.
func (c *CloudDirectory) ListObjectChildrenRequest(input *clouddirectory.ListObjectChildrenInput) (req *request.Request, output *clouddirectory.ListObjectChildrenOutput) {
	c.inc("ListObjectChildren")
	return c.svc.ListObjectChildrenRequest(input)
}

// ListObjectChildren is a passthrough to the underlying ListObjectChildren method.
// It will increment the count of requests made to ListObjectChildren.
func (c *CloudDirectory) ListObjectChildren(input *clouddirectory.ListObjectChildrenInput) (*clouddirectory.ListObjectChildrenOutput, error) {
	c.inc("ListObjectChildren")
	return c.svc.ListObjectChildren(input)
}

// ListObjectChildrenWithContext is a passthrough to the underlying ListObjectChildrenWithContext method.
// It will increment the count of requests made to ListObjectChildren.
func (c *CloudDirectory) ListObjectChildrenWithContext(ctx aws.Context, input *clouddirectory.ListObjectChildrenInput, opts ...request.Option) (*clouddirectory.ListObjectChildrenOutput, error) {
	c.inc("ListObjectChildren")
	return c.svc.ListObjectChildrenWithContext(ctx, input, opts...)
}

// ListObjectChildrenPages is a passthrough to the underlying ListObjectChildrenPages method.
// It will increment the count of requests made to ListObjectChildren on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListObjectChildrenPagesWithContext to avoid this.
func (c *CloudDirectory) ListObjectChildrenPages(input *clouddirectory.ListObjectChildrenInput, fn func(*clouddirectory.ListObjectChildrenOutput, bool) bool) error {
	wrappedFn := func(page *clouddirectory.ListObjectChildrenOutput, lastPage bool) bool {
		c.inc("ListObjectChildren")
		return fn(page, lastPage)
	}
	return c.ListObjectChildrenPages(input, wrappedFn)
}

// ListObjectChildrenPagesWithContext is a passthrough to the underlying ListObjectChildrenPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListObjectChildren when applied to the request.
func (c *CloudDirectory) ListObjectChildrenPagesWithContext(ctx aws.Context, input *clouddirectory.ListObjectChildrenInput, fn func(*clouddirectory.ListObjectChildrenOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListObjectChildren"))
	return c.ListObjectChildrenPagesWithContext(ctx, input, fn, opts...)
}

// ListObjectParentPathsRequest is a passthrough to the underlying ListObjectParentPathsRequest.
// It will increment the count of requests made to ListObjectParentPaths.
func (c *CloudDirectory) ListObjectParentPathsRequest(input *clouddirectory.ListObjectParentPathsInput) (req *request.Request, output *clouddirectory.ListObjectParentPathsOutput) {
	c.inc("ListObjectParentPaths")
	return c.svc.ListObjectParentPathsRequest(input)
}

// ListObjectParentPaths is a passthrough to the underlying ListObjectParentPaths method.
// It will increment the count of requests made to ListObjectParentPaths.
func (c *CloudDirectory) ListObjectParentPaths(input *clouddirectory.ListObjectParentPathsInput) (*clouddirectory.ListObjectParentPathsOutput, error) {
	c.inc("ListObjectParentPaths")
	return c.svc.ListObjectParentPaths(input)
}

// ListObjectParentPathsWithContext is a passthrough to the underlying ListObjectParentPathsWithContext method.
// It will increment the count of requests made to ListObjectParentPaths.
func (c *CloudDirectory) ListObjectParentPathsWithContext(ctx aws.Context, input *clouddirectory.ListObjectParentPathsInput, opts ...request.Option) (*clouddirectory.ListObjectParentPathsOutput, error) {
	c.inc("ListObjectParentPaths")
	return c.svc.ListObjectParentPathsWithContext(ctx, input, opts...)
}

// ListObjectParentPathsPages is a passthrough to the underlying ListObjectParentPathsPages method.
// It will increment the count of requests made to ListObjectParentPaths on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListObjectParentPathsPagesWithContext to avoid this.
func (c *CloudDirectory) ListObjectParentPathsPages(input *clouddirectory.ListObjectParentPathsInput, fn func(*clouddirectory.ListObjectParentPathsOutput, bool) bool) error {
	wrappedFn := func(page *clouddirectory.ListObjectParentPathsOutput, lastPage bool) bool {
		c.inc("ListObjectParentPaths")
		return fn(page, lastPage)
	}
	return c.ListObjectParentPathsPages(input, wrappedFn)
}

// ListObjectParentPathsPagesWithContext is a passthrough to the underlying ListObjectParentPathsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListObjectParentPaths when applied to the request.
func (c *CloudDirectory) ListObjectParentPathsPagesWithContext(ctx aws.Context, input *clouddirectory.ListObjectParentPathsInput, fn func(*clouddirectory.ListObjectParentPathsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListObjectParentPaths"))
	return c.ListObjectParentPathsPagesWithContext(ctx, input, fn, opts...)
}

// ListObjectParentsRequest is a passthrough to the underlying ListObjectParentsRequest.
// It will increment the count of requests made to ListObjectParents.
func (c *CloudDirectory) ListObjectParentsRequest(input *clouddirectory.ListObjectParentsInput) (req *request.Request, output *clouddirectory.ListObjectParentsOutput) {
	c.inc("ListObjectParents")
	return c.svc.ListObjectParentsRequest(input)
}

// ListObjectParents is a passthrough to the underlying ListObjectParents method.
// It will increment the count of requests made to ListObjectParents.
func (c *CloudDirectory) ListObjectParents(input *clouddirectory.ListObjectParentsInput) (*clouddirectory.ListObjectParentsOutput, error) {
	c.inc("ListObjectParents")
	return c.svc.ListObjectParents(input)
}

// ListObjectParentsWithContext is a passthrough to the underlying ListObjectParentsWithContext method.
// It will increment the count of requests made to ListObjectParents.
func (c *CloudDirectory) ListObjectParentsWithContext(ctx aws.Context, input *clouddirectory.ListObjectParentsInput, opts ...request.Option) (*clouddirectory.ListObjectParentsOutput, error) {
	c.inc("ListObjectParents")
	return c.svc.ListObjectParentsWithContext(ctx, input, opts...)
}

// ListObjectParentsPages is a passthrough to the underlying ListObjectParentsPages method.
// It will increment the count of requests made to ListObjectParents on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListObjectParentsPagesWithContext to avoid this.
func (c *CloudDirectory) ListObjectParentsPages(input *clouddirectory.ListObjectParentsInput, fn func(*clouddirectory.ListObjectParentsOutput, bool) bool) error {
	wrappedFn := func(page *clouddirectory.ListObjectParentsOutput, lastPage bool) bool {
		c.inc("ListObjectParents")
		return fn(page, lastPage)
	}
	return c.ListObjectParentsPages(input, wrappedFn)
}

// ListObjectParentsPagesWithContext is a passthrough to the underlying ListObjectParentsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListObjectParents when applied to the request.
func (c *CloudDirectory) ListObjectParentsPagesWithContext(ctx aws.Context, input *clouddirectory.ListObjectParentsInput, fn func(*clouddirectory.ListObjectParentsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListObjectParents"))
	return c.ListObjectParentsPagesWithContext(ctx, input, fn, opts...)
}

// ListObjectPoliciesRequest is a passthrough to the underlying ListObjectPoliciesRequest.
// It will increment the count of requests made to ListObjectPolicies.
func (c *CloudDirectory) ListObjectPoliciesRequest(input *clouddirectory.ListObjectPoliciesInput) (req *request.Request, output *clouddirectory.ListObjectPoliciesOutput) {
	c.inc("ListObjectPolicies")
	return c.svc.ListObjectPoliciesRequest(input)
}

// ListObjectPolicies is a passthrough to the underlying ListObjectPolicies method.
// It will increment the count of requests made to ListObjectPolicies.
func (c *CloudDirectory) ListObjectPolicies(input *clouddirectory.ListObjectPoliciesInput) (*clouddirectory.ListObjectPoliciesOutput, error) {
	c.inc("ListObjectPolicies")
	return c.svc.ListObjectPolicies(input)
}

// ListObjectPoliciesWithContext is a passthrough to the underlying ListObjectPoliciesWithContext method.
// It will increment the count of requests made to ListObjectPolicies.
func (c *CloudDirectory) ListObjectPoliciesWithContext(ctx aws.Context, input *clouddirectory.ListObjectPoliciesInput, opts ...request.Option) (*clouddirectory.ListObjectPoliciesOutput, error) {
	c.inc("ListObjectPolicies")
	return c.svc.ListObjectPoliciesWithContext(ctx, input, opts...)
}

// ListObjectPoliciesPages is a passthrough to the underlying ListObjectPoliciesPages method.
// It will increment the count of requests made to ListObjectPolicies on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListObjectPoliciesPagesWithContext to avoid this.
func (c *CloudDirectory) ListObjectPoliciesPages(input *clouddirectory.ListObjectPoliciesInput, fn func(*clouddirectory.ListObjectPoliciesOutput, bool) bool) error {
	wrappedFn := func(page *clouddirectory.ListObjectPoliciesOutput, lastPage bool) bool {
		c.inc("ListObjectPolicies")
		return fn(page, lastPage)
	}
	return c.ListObjectPoliciesPages(input, wrappedFn)
}

// ListObjectPoliciesPagesWithContext is a passthrough to the underlying ListObjectPoliciesPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListObjectPolicies when applied to the request.
func (c *CloudDirectory) ListObjectPoliciesPagesWithContext(ctx aws.Context, input *clouddirectory.ListObjectPoliciesInput, fn func(*clouddirectory.ListObjectPoliciesOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListObjectPolicies"))
	return c.ListObjectPoliciesPagesWithContext(ctx, input, fn, opts...)
}

// ListOutgoingTypedLinksRequest is a passthrough to the underlying ListOutgoingTypedLinksRequest.
// It will increment the count of requests made to ListOutgoingTypedLinks.
func (c *CloudDirectory) ListOutgoingTypedLinksRequest(input *clouddirectory.ListOutgoingTypedLinksInput) (req *request.Request, output *clouddirectory.ListOutgoingTypedLinksOutput) {
	c.inc("ListOutgoingTypedLinks")
	return c.svc.ListOutgoingTypedLinksRequest(input)
}

// ListOutgoingTypedLinks is a passthrough to the underlying ListOutgoingTypedLinks method.
// It will increment the count of requests made to ListOutgoingTypedLinks.
func (c *CloudDirectory) ListOutgoingTypedLinks(input *clouddirectory.ListOutgoingTypedLinksInput) (*clouddirectory.ListOutgoingTypedLinksOutput, error) {
	c.inc("ListOutgoingTypedLinks")
	return c.svc.ListOutgoingTypedLinks(input)
}

// ListOutgoingTypedLinksWithContext is a passthrough to the underlying ListOutgoingTypedLinksWithContext method.
// It will increment the count of requests made to ListOutgoingTypedLinks.
func (c *CloudDirectory) ListOutgoingTypedLinksWithContext(ctx aws.Context, input *clouddirectory.ListOutgoingTypedLinksInput, opts ...request.Option) (*clouddirectory.ListOutgoingTypedLinksOutput, error) {
	c.inc("ListOutgoingTypedLinks")
	return c.svc.ListOutgoingTypedLinksWithContext(ctx, input, opts...)
}

// ListPolicyAttachmentsRequest is a passthrough to the underlying ListPolicyAttachmentsRequest.
// It will increment the count of requests made to ListPolicyAttachments.
func (c *CloudDirectory) ListPolicyAttachmentsRequest(input *clouddirectory.ListPolicyAttachmentsInput) (req *request.Request, output *clouddirectory.ListPolicyAttachmentsOutput) {
	c.inc("ListPolicyAttachments")
	return c.svc.ListPolicyAttachmentsRequest(input)
}

// ListPolicyAttachments is a passthrough to the underlying ListPolicyAttachments method.
// It will increment the count of requests made to ListPolicyAttachments.
func (c *CloudDirectory) ListPolicyAttachments(input *clouddirectory.ListPolicyAttachmentsInput) (*clouddirectory.ListPolicyAttachmentsOutput, error) {
	c.inc("ListPolicyAttachments")
	return c.svc.ListPolicyAttachments(input)
}

// ListPolicyAttachmentsWithContext is a passthrough to the underlying ListPolicyAttachmentsWithContext method.
// It will increment the count of requests made to ListPolicyAttachments.
func (c *CloudDirectory) ListPolicyAttachmentsWithContext(ctx aws.Context, input *clouddirectory.ListPolicyAttachmentsInput, opts ...request.Option) (*clouddirectory.ListPolicyAttachmentsOutput, error) {
	c.inc("ListPolicyAttachments")
	return c.svc.ListPolicyAttachmentsWithContext(ctx, input, opts...)
}

// ListPolicyAttachmentsPages is a passthrough to the underlying ListPolicyAttachmentsPages method.
// It will increment the count of requests made to ListPolicyAttachments on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListPolicyAttachmentsPagesWithContext to avoid this.
func (c *CloudDirectory) ListPolicyAttachmentsPages(input *clouddirectory.ListPolicyAttachmentsInput, fn func(*clouddirectory.ListPolicyAttachmentsOutput, bool) bool) error {
	wrappedFn := func(page *clouddirectory.ListPolicyAttachmentsOutput, lastPage bool) bool {
		c.inc("ListPolicyAttachments")
		return fn(page, lastPage)
	}
	return c.ListPolicyAttachmentsPages(input, wrappedFn)
}

// ListPolicyAttachmentsPagesWithContext is a passthrough to the underlying ListPolicyAttachmentsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListPolicyAttachments when applied to the request.
func (c *CloudDirectory) ListPolicyAttachmentsPagesWithContext(ctx aws.Context, input *clouddirectory.ListPolicyAttachmentsInput, fn func(*clouddirectory.ListPolicyAttachmentsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListPolicyAttachments"))
	return c.ListPolicyAttachmentsPagesWithContext(ctx, input, fn, opts...)
}

// ListPublishedSchemaArnsRequest is a passthrough to the underlying ListPublishedSchemaArnsRequest.
// It will increment the count of requests made to ListPublishedSchemaArns.
func (c *CloudDirectory) ListPublishedSchemaArnsRequest(input *clouddirectory.ListPublishedSchemaArnsInput) (req *request.Request, output *clouddirectory.ListPublishedSchemaArnsOutput) {
	c.inc("ListPublishedSchemaArns")
	return c.svc.ListPublishedSchemaArnsRequest(input)
}

// ListPublishedSchemaArns is a passthrough to the underlying ListPublishedSchemaArns method.
// It will increment the count of requests made to ListPublishedSchemaArns.
func (c *CloudDirectory) ListPublishedSchemaArns(input *clouddirectory.ListPublishedSchemaArnsInput) (*clouddirectory.ListPublishedSchemaArnsOutput, error) {
	c.inc("ListPublishedSchemaArns")
	return c.svc.ListPublishedSchemaArns(input)
}

// ListPublishedSchemaArnsWithContext is a passthrough to the underlying ListPublishedSchemaArnsWithContext method.
// It will increment the count of requests made to ListPublishedSchemaArns.
func (c *CloudDirectory) ListPublishedSchemaArnsWithContext(ctx aws.Context, input *clouddirectory.ListPublishedSchemaArnsInput, opts ...request.Option) (*clouddirectory.ListPublishedSchemaArnsOutput, error) {
	c.inc("ListPublishedSchemaArns")
	return c.svc.ListPublishedSchemaArnsWithContext(ctx, input, opts...)
}

// ListPublishedSchemaArnsPages is a passthrough to the underlying ListPublishedSchemaArnsPages method.
// It will increment the count of requests made to ListPublishedSchemaArns on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListPublishedSchemaArnsPagesWithContext to avoid this.
func (c *CloudDirectory) ListPublishedSchemaArnsPages(input *clouddirectory.ListPublishedSchemaArnsInput, fn func(*clouddirectory.ListPublishedSchemaArnsOutput, bool) bool) error {
	wrappedFn := func(page *clouddirectory.ListPublishedSchemaArnsOutput, lastPage bool) bool {
		c.inc("ListPublishedSchemaArns")
		return fn(page, lastPage)
	}
	return c.ListPublishedSchemaArnsPages(input, wrappedFn)
}

// ListPublishedSchemaArnsPagesWithContext is a passthrough to the underlying ListPublishedSchemaArnsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListPublishedSchemaArns when applied to the request.
func (c *CloudDirectory) ListPublishedSchemaArnsPagesWithContext(ctx aws.Context, input *clouddirectory.ListPublishedSchemaArnsInput, fn func(*clouddirectory.ListPublishedSchemaArnsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListPublishedSchemaArns"))
	return c.ListPublishedSchemaArnsPagesWithContext(ctx, input, fn, opts...)
}

// ListTagsForResourceRequest is a passthrough to the underlying ListTagsForResourceRequest.
// It will increment the count of requests made to ListTagsForResource.
func (c *CloudDirectory) ListTagsForResourceRequest(input *clouddirectory.ListTagsForResourceInput) (req *request.Request, output *clouddirectory.ListTagsForResourceOutput) {
	c.inc("ListTagsForResource")
	return c.svc.ListTagsForResourceRequest(input)
}

// ListTagsForResource is a passthrough to the underlying ListTagsForResource method.
// It will increment the count of requests made to ListTagsForResource.
func (c *CloudDirectory) ListTagsForResource(input *clouddirectory.ListTagsForResourceInput) (*clouddirectory.ListTagsForResourceOutput, error) {
	c.inc("ListTagsForResource")
	return c.svc.ListTagsForResource(input)
}

// ListTagsForResourceWithContext is a passthrough to the underlying ListTagsForResourceWithContext method.
// It will increment the count of requests made to ListTagsForResource.
func (c *CloudDirectory) ListTagsForResourceWithContext(ctx aws.Context, input *clouddirectory.ListTagsForResourceInput, opts ...request.Option) (*clouddirectory.ListTagsForResourceOutput, error) {
	c.inc("ListTagsForResource")
	return c.svc.ListTagsForResourceWithContext(ctx, input, opts...)
}

// ListTagsForResourcePages is a passthrough to the underlying ListTagsForResourcePages method.
// It will increment the count of requests made to ListTagsForResource on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListTagsForResourcePagesWithContext to avoid this.
func (c *CloudDirectory) ListTagsForResourcePages(input *clouddirectory.ListTagsForResourceInput, fn func(*clouddirectory.ListTagsForResourceOutput, bool) bool) error {
	wrappedFn := func(page *clouddirectory.ListTagsForResourceOutput, lastPage bool) bool {
		c.inc("ListTagsForResource")
		return fn(page, lastPage)
	}
	return c.ListTagsForResourcePages(input, wrappedFn)
}

// ListTagsForResourcePagesWithContext is a passthrough to the underlying ListTagsForResourcePagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListTagsForResource when applied to the request.
func (c *CloudDirectory) ListTagsForResourcePagesWithContext(ctx aws.Context, input *clouddirectory.ListTagsForResourceInput, fn func(*clouddirectory.ListTagsForResourceOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListTagsForResource"))
	return c.ListTagsForResourcePagesWithContext(ctx, input, fn, opts...)
}

// ListTypedLinkFacetAttributesRequest is a passthrough to the underlying ListTypedLinkFacetAttributesRequest.
// It will increment the count of requests made to ListTypedLinkFacetAttributes.
func (c *CloudDirectory) ListTypedLinkFacetAttributesRequest(input *clouddirectory.ListTypedLinkFacetAttributesInput) (req *request.Request, output *clouddirectory.ListTypedLinkFacetAttributesOutput) {
	c.inc("ListTypedLinkFacetAttributes")
	return c.svc.ListTypedLinkFacetAttributesRequest(input)
}

// ListTypedLinkFacetAttributes is a passthrough to the underlying ListTypedLinkFacetAttributes method.
// It will increment the count of requests made to ListTypedLinkFacetAttributes.
func (c *CloudDirectory) ListTypedLinkFacetAttributes(input *clouddirectory.ListTypedLinkFacetAttributesInput) (*clouddirectory.ListTypedLinkFacetAttributesOutput, error) {
	c.inc("ListTypedLinkFacetAttributes")
	return c.svc.ListTypedLinkFacetAttributes(input)
}

// ListTypedLinkFacetAttributesWithContext is a passthrough to the underlying ListTypedLinkFacetAttributesWithContext method.
// It will increment the count of requests made to ListTypedLinkFacetAttributes.
func (c *CloudDirectory) ListTypedLinkFacetAttributesWithContext(ctx aws.Context, input *clouddirectory.ListTypedLinkFacetAttributesInput, opts ...request.Option) (*clouddirectory.ListTypedLinkFacetAttributesOutput, error) {
	c.inc("ListTypedLinkFacetAttributes")
	return c.svc.ListTypedLinkFacetAttributesWithContext(ctx, input, opts...)
}

// ListTypedLinkFacetAttributesPages is a passthrough to the underlying ListTypedLinkFacetAttributesPages method.
// It will increment the count of requests made to ListTypedLinkFacetAttributes on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListTypedLinkFacetAttributesPagesWithContext to avoid this.
func (c *CloudDirectory) ListTypedLinkFacetAttributesPages(input *clouddirectory.ListTypedLinkFacetAttributesInput, fn func(*clouddirectory.ListTypedLinkFacetAttributesOutput, bool) bool) error {
	wrappedFn := func(page *clouddirectory.ListTypedLinkFacetAttributesOutput, lastPage bool) bool {
		c.inc("ListTypedLinkFacetAttributes")
		return fn(page, lastPage)
	}
	return c.ListTypedLinkFacetAttributesPages(input, wrappedFn)
}

// ListTypedLinkFacetAttributesPagesWithContext is a passthrough to the underlying ListTypedLinkFacetAttributesPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListTypedLinkFacetAttributes when applied to the request.
func (c *CloudDirectory) ListTypedLinkFacetAttributesPagesWithContext(ctx aws.Context, input *clouddirectory.ListTypedLinkFacetAttributesInput, fn func(*clouddirectory.ListTypedLinkFacetAttributesOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListTypedLinkFacetAttributes"))
	return c.ListTypedLinkFacetAttributesPagesWithContext(ctx, input, fn, opts...)
}

// ListTypedLinkFacetNamesRequest is a passthrough to the underlying ListTypedLinkFacetNamesRequest.
// It will increment the count of requests made to ListTypedLinkFacetNames.
func (c *CloudDirectory) ListTypedLinkFacetNamesRequest(input *clouddirectory.ListTypedLinkFacetNamesInput) (req *request.Request, output *clouddirectory.ListTypedLinkFacetNamesOutput) {
	c.inc("ListTypedLinkFacetNames")
	return c.svc.ListTypedLinkFacetNamesRequest(input)
}

// ListTypedLinkFacetNames is a passthrough to the underlying ListTypedLinkFacetNames method.
// It will increment the count of requests made to ListTypedLinkFacetNames.
func (c *CloudDirectory) ListTypedLinkFacetNames(input *clouddirectory.ListTypedLinkFacetNamesInput) (*clouddirectory.ListTypedLinkFacetNamesOutput, error) {
	c.inc("ListTypedLinkFacetNames")
	return c.svc.ListTypedLinkFacetNames(input)
}

// ListTypedLinkFacetNamesWithContext is a passthrough to the underlying ListTypedLinkFacetNamesWithContext method.
// It will increment the count of requests made to ListTypedLinkFacetNames.
func (c *CloudDirectory) ListTypedLinkFacetNamesWithContext(ctx aws.Context, input *clouddirectory.ListTypedLinkFacetNamesInput, opts ...request.Option) (*clouddirectory.ListTypedLinkFacetNamesOutput, error) {
	c.inc("ListTypedLinkFacetNames")
	return c.svc.ListTypedLinkFacetNamesWithContext(ctx, input, opts...)
}

// ListTypedLinkFacetNamesPages is a passthrough to the underlying ListTypedLinkFacetNamesPages method.
// It will increment the count of requests made to ListTypedLinkFacetNames on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListTypedLinkFacetNamesPagesWithContext to avoid this.
func (c *CloudDirectory) ListTypedLinkFacetNamesPages(input *clouddirectory.ListTypedLinkFacetNamesInput, fn func(*clouddirectory.ListTypedLinkFacetNamesOutput, bool) bool) error {
	wrappedFn := func(page *clouddirectory.ListTypedLinkFacetNamesOutput, lastPage bool) bool {
		c.inc("ListTypedLinkFacetNames")
		return fn(page, lastPage)
	}
	return c.ListTypedLinkFacetNamesPages(input, wrappedFn)
}

// ListTypedLinkFacetNamesPagesWithContext is a passthrough to the underlying ListTypedLinkFacetNamesPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListTypedLinkFacetNames when applied to the request.
func (c *CloudDirectory) ListTypedLinkFacetNamesPagesWithContext(ctx aws.Context, input *clouddirectory.ListTypedLinkFacetNamesInput, fn func(*clouddirectory.ListTypedLinkFacetNamesOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListTypedLinkFacetNames"))
	return c.ListTypedLinkFacetNamesPagesWithContext(ctx, input, fn, opts...)
}

// LookupPolicyRequest is a passthrough to the underlying LookupPolicyRequest.
// It will increment the count of requests made to LookupPolicy.
func (c *CloudDirectory) LookupPolicyRequest(input *clouddirectory.LookupPolicyInput) (req *request.Request, output *clouddirectory.LookupPolicyOutput) {
	c.inc("LookupPolicy")
	return c.svc.LookupPolicyRequest(input)
}

// LookupPolicy is a passthrough to the underlying LookupPolicy method.
// It will increment the count of requests made to LookupPolicy.
func (c *CloudDirectory) LookupPolicy(input *clouddirectory.LookupPolicyInput) (*clouddirectory.LookupPolicyOutput, error) {
	c.inc("LookupPolicy")
	return c.svc.LookupPolicy(input)
}

// LookupPolicyWithContext is a passthrough to the underlying LookupPolicyWithContext method.
// It will increment the count of requests made to LookupPolicy.
func (c *CloudDirectory) LookupPolicyWithContext(ctx aws.Context, input *clouddirectory.LookupPolicyInput, opts ...request.Option) (*clouddirectory.LookupPolicyOutput, error) {
	c.inc("LookupPolicy")
	return c.svc.LookupPolicyWithContext(ctx, input, opts...)
}

// LookupPolicyPages is a passthrough to the underlying LookupPolicyPages method.
// It will increment the count of requests made to LookupPolicy on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use LookupPolicyPagesWithContext to avoid this.
func (c *CloudDirectory) LookupPolicyPages(input *clouddirectory.LookupPolicyInput, fn func(*clouddirectory.LookupPolicyOutput, bool) bool) error {
	wrappedFn := func(page *clouddirectory.LookupPolicyOutput, lastPage bool) bool {
		c.inc("LookupPolicy")
		return fn(page, lastPage)
	}
	return c.LookupPolicyPages(input, wrappedFn)
}

// LookupPolicyPagesWithContext is a passthrough to the underlying LookupPolicyPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to LookupPolicy when applied to the request.
func (c *CloudDirectory) LookupPolicyPagesWithContext(ctx aws.Context, input *clouddirectory.LookupPolicyInput, fn func(*clouddirectory.LookupPolicyOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("LookupPolicy"))
	return c.LookupPolicyPagesWithContext(ctx, input, fn, opts...)
}

// PublishSchemaRequest is a passthrough to the underlying PublishSchemaRequest.
// It will increment the count of requests made to PublishSchema.
func (c *CloudDirectory) PublishSchemaRequest(input *clouddirectory.PublishSchemaInput) (req *request.Request, output *clouddirectory.PublishSchemaOutput) {
	c.inc("PublishSchema")
	return c.svc.PublishSchemaRequest(input)
}

// PublishSchema is a passthrough to the underlying PublishSchema method.
// It will increment the count of requests made to PublishSchema.
func (c *CloudDirectory) PublishSchema(input *clouddirectory.PublishSchemaInput) (*clouddirectory.PublishSchemaOutput, error) {
	c.inc("PublishSchema")
	return c.svc.PublishSchema(input)
}

// PublishSchemaWithContext is a passthrough to the underlying PublishSchemaWithContext method.
// It will increment the count of requests made to PublishSchema.
func (c *CloudDirectory) PublishSchemaWithContext(ctx aws.Context, input *clouddirectory.PublishSchemaInput, opts ...request.Option) (*clouddirectory.PublishSchemaOutput, error) {
	c.inc("PublishSchema")
	return c.svc.PublishSchemaWithContext(ctx, input, opts...)
}

// PutSchemaFromJsonRequest is a passthrough to the underlying PutSchemaFromJsonRequest.
// It will increment the count of requests made to PutSchemaFromJson.
func (c *CloudDirectory) PutSchemaFromJsonRequest(input *clouddirectory.PutSchemaFromJsonInput) (req *request.Request, output *clouddirectory.PutSchemaFromJsonOutput) {
	c.inc("PutSchemaFromJson")
	return c.svc.PutSchemaFromJsonRequest(input)
}

// PutSchemaFromJson is a passthrough to the underlying PutSchemaFromJson method.
// It will increment the count of requests made to PutSchemaFromJson.
func (c *CloudDirectory) PutSchemaFromJson(input *clouddirectory.PutSchemaFromJsonInput) (*clouddirectory.PutSchemaFromJsonOutput, error) {
	c.inc("PutSchemaFromJson")
	return c.svc.PutSchemaFromJson(input)
}

// PutSchemaFromJsonWithContext is a passthrough to the underlying PutSchemaFromJsonWithContext method.
// It will increment the count of requests made to PutSchemaFromJson.
func (c *CloudDirectory) PutSchemaFromJsonWithContext(ctx aws.Context, input *clouddirectory.PutSchemaFromJsonInput, opts ...request.Option) (*clouddirectory.PutSchemaFromJsonOutput, error) {
	c.inc("PutSchemaFromJson")
	return c.svc.PutSchemaFromJsonWithContext(ctx, input, opts...)
}

// RemoveFacetFromObjectRequest is a passthrough to the underlying RemoveFacetFromObjectRequest.
// It will increment the count of requests made to RemoveFacetFromObject.
func (c *CloudDirectory) RemoveFacetFromObjectRequest(input *clouddirectory.RemoveFacetFromObjectInput) (req *request.Request, output *clouddirectory.RemoveFacetFromObjectOutput) {
	c.inc("RemoveFacetFromObject")
	return c.svc.RemoveFacetFromObjectRequest(input)
}

// RemoveFacetFromObject is a passthrough to the underlying RemoveFacetFromObject method.
// It will increment the count of requests made to RemoveFacetFromObject.
func (c *CloudDirectory) RemoveFacetFromObject(input *clouddirectory.RemoveFacetFromObjectInput) (*clouddirectory.RemoveFacetFromObjectOutput, error) {
	c.inc("RemoveFacetFromObject")
	return c.svc.RemoveFacetFromObject(input)
}

// RemoveFacetFromObjectWithContext is a passthrough to the underlying RemoveFacetFromObjectWithContext method.
// It will increment the count of requests made to RemoveFacetFromObject.
func (c *CloudDirectory) RemoveFacetFromObjectWithContext(ctx aws.Context, input *clouddirectory.RemoveFacetFromObjectInput, opts ...request.Option) (*clouddirectory.RemoveFacetFromObjectOutput, error) {
	c.inc("RemoveFacetFromObject")
	return c.svc.RemoveFacetFromObjectWithContext(ctx, input, opts...)
}

// TagResourceRequest is a passthrough to the underlying TagResourceRequest.
// It will increment the count of requests made to TagResource.
func (c *CloudDirectory) TagResourceRequest(input *clouddirectory.TagResourceInput) (req *request.Request, output *clouddirectory.TagResourceOutput) {
	c.inc("TagResource")
	return c.svc.TagResourceRequest(input)
}

// TagResource is a passthrough to the underlying TagResource method.
// It will increment the count of requests made to TagResource.
func (c *CloudDirectory) TagResource(input *clouddirectory.TagResourceInput) (*clouddirectory.TagResourceOutput, error) {
	c.inc("TagResource")
	return c.svc.TagResource(input)
}

// TagResourceWithContext is a passthrough to the underlying TagResourceWithContext method.
// It will increment the count of requests made to TagResource.
func (c *CloudDirectory) TagResourceWithContext(ctx aws.Context, input *clouddirectory.TagResourceInput, opts ...request.Option) (*clouddirectory.TagResourceOutput, error) {
	c.inc("TagResource")
	return c.svc.TagResourceWithContext(ctx, input, opts...)
}

// UntagResourceRequest is a passthrough to the underlying UntagResourceRequest.
// It will increment the count of requests made to UntagResource.
func (c *CloudDirectory) UntagResourceRequest(input *clouddirectory.UntagResourceInput) (req *request.Request, output *clouddirectory.UntagResourceOutput) {
	c.inc("UntagResource")
	return c.svc.UntagResourceRequest(input)
}

// UntagResource is a passthrough to the underlying UntagResource method.
// It will increment the count of requests made to UntagResource.
func (c *CloudDirectory) UntagResource(input *clouddirectory.UntagResourceInput) (*clouddirectory.UntagResourceOutput, error) {
	c.inc("UntagResource")
	return c.svc.UntagResource(input)
}

// UntagResourceWithContext is a passthrough to the underlying UntagResourceWithContext method.
// It will increment the count of requests made to UntagResource.
func (c *CloudDirectory) UntagResourceWithContext(ctx aws.Context, input *clouddirectory.UntagResourceInput, opts ...request.Option) (*clouddirectory.UntagResourceOutput, error) {
	c.inc("UntagResource")
	return c.svc.UntagResourceWithContext(ctx, input, opts...)
}

// UpdateFacetRequest is a passthrough to the underlying UpdateFacetRequest.
// It will increment the count of requests made to UpdateFacet.
func (c *CloudDirectory) UpdateFacetRequest(input *clouddirectory.UpdateFacetInput) (req *request.Request, output *clouddirectory.UpdateFacetOutput) {
	c.inc("UpdateFacet")
	return c.svc.UpdateFacetRequest(input)
}

// UpdateFacet is a passthrough to the underlying UpdateFacet method.
// It will increment the count of requests made to UpdateFacet.
func (c *CloudDirectory) UpdateFacet(input *clouddirectory.UpdateFacetInput) (*clouddirectory.UpdateFacetOutput, error) {
	c.inc("UpdateFacet")
	return c.svc.UpdateFacet(input)
}

// UpdateFacetWithContext is a passthrough to the underlying UpdateFacetWithContext method.
// It will increment the count of requests made to UpdateFacet.
func (c *CloudDirectory) UpdateFacetWithContext(ctx aws.Context, input *clouddirectory.UpdateFacetInput, opts ...request.Option) (*clouddirectory.UpdateFacetOutput, error) {
	c.inc("UpdateFacet")
	return c.svc.UpdateFacetWithContext(ctx, input, opts...)
}

// UpdateObjectAttributesRequest is a passthrough to the underlying UpdateObjectAttributesRequest.
// It will increment the count of requests made to UpdateObjectAttributes.
func (c *CloudDirectory) UpdateObjectAttributesRequest(input *clouddirectory.UpdateObjectAttributesInput) (req *request.Request, output *clouddirectory.UpdateObjectAttributesOutput) {
	c.inc("UpdateObjectAttributes")
	return c.svc.UpdateObjectAttributesRequest(input)
}

// UpdateObjectAttributes is a passthrough to the underlying UpdateObjectAttributes method.
// It will increment the count of requests made to UpdateObjectAttributes.
func (c *CloudDirectory) UpdateObjectAttributes(input *clouddirectory.UpdateObjectAttributesInput) (*clouddirectory.UpdateObjectAttributesOutput, error) {
	c.inc("UpdateObjectAttributes")
	return c.svc.UpdateObjectAttributes(input)
}

// UpdateObjectAttributesWithContext is a passthrough to the underlying UpdateObjectAttributesWithContext method.
// It will increment the count of requests made to UpdateObjectAttributes.
func (c *CloudDirectory) UpdateObjectAttributesWithContext(ctx aws.Context, input *clouddirectory.UpdateObjectAttributesInput, opts ...request.Option) (*clouddirectory.UpdateObjectAttributesOutput, error) {
	c.inc("UpdateObjectAttributes")
	return c.svc.UpdateObjectAttributesWithContext(ctx, input, opts...)
}

// UpdateSchemaRequest is a passthrough to the underlying UpdateSchemaRequest.
// It will increment the count of requests made to UpdateSchema.
func (c *CloudDirectory) UpdateSchemaRequest(input *clouddirectory.UpdateSchemaInput) (req *request.Request, output *clouddirectory.UpdateSchemaOutput) {
	c.inc("UpdateSchema")
	return c.svc.UpdateSchemaRequest(input)
}

// UpdateSchema is a passthrough to the underlying UpdateSchema method.
// It will increment the count of requests made to UpdateSchema.
func (c *CloudDirectory) UpdateSchema(input *clouddirectory.UpdateSchemaInput) (*clouddirectory.UpdateSchemaOutput, error) {
	c.inc("UpdateSchema")
	return c.svc.UpdateSchema(input)
}

// UpdateSchemaWithContext is a passthrough to the underlying UpdateSchemaWithContext method.
// It will increment the count of requests made to UpdateSchema.
func (c *CloudDirectory) UpdateSchemaWithContext(ctx aws.Context, input *clouddirectory.UpdateSchemaInput, opts ...request.Option) (*clouddirectory.UpdateSchemaOutput, error) {
	c.inc("UpdateSchema")
	return c.svc.UpdateSchemaWithContext(ctx, input, opts...)
}

// UpdateTypedLinkFacetRequest is a passthrough to the underlying UpdateTypedLinkFacetRequest.
// It will increment the count of requests made to UpdateTypedLinkFacet.
func (c *CloudDirectory) UpdateTypedLinkFacetRequest(input *clouddirectory.UpdateTypedLinkFacetInput) (req *request.Request, output *clouddirectory.UpdateTypedLinkFacetOutput) {
	c.inc("UpdateTypedLinkFacet")
	return c.svc.UpdateTypedLinkFacetRequest(input)
}

// UpdateTypedLinkFacet is a passthrough to the underlying UpdateTypedLinkFacet method.
// It will increment the count of requests made to UpdateTypedLinkFacet.
func (c *CloudDirectory) UpdateTypedLinkFacet(input *clouddirectory.UpdateTypedLinkFacetInput) (*clouddirectory.UpdateTypedLinkFacetOutput, error) {
	c.inc("UpdateTypedLinkFacet")
	return c.svc.UpdateTypedLinkFacet(input)
}

// UpdateTypedLinkFacetWithContext is a passthrough to the underlying UpdateTypedLinkFacetWithContext method.
// It will increment the count of requests made to UpdateTypedLinkFacet.
func (c *CloudDirectory) UpdateTypedLinkFacetWithContext(ctx aws.Context, input *clouddirectory.UpdateTypedLinkFacetInput, opts ...request.Option) (*clouddirectory.UpdateTypedLinkFacetOutput, error) {
	c.inc("UpdateTypedLinkFacet")
	return c.svc.UpdateTypedLinkFacetWithContext(ctx, input, opts...)
}
