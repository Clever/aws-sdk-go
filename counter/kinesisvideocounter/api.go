// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package kinesisvideocounter

import (
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/kinesisvideo"
)

// CreateStreamRequest is a passthrough to the underlying CreateStreamRequest.
// It will increment the count of requests made to CreateStream.
func (c *KinesisVideo) CreateStreamRequest(input *kinesisvideo.CreateStreamInput) (req *request.Request, output *kinesisvideo.CreateStreamOutput) {
	c.inc("CreateStream")
	return c.svc.CreateStreamRequest(input)
}

// CreateStream is a passthrough to the underlying CreateStream method.
// It will increment the count of requests made to CreateStream.
func (c *KinesisVideo) CreateStream(input *kinesisvideo.CreateStreamInput) (*kinesisvideo.CreateStreamOutput, error) {
	c.inc("CreateStream")
	return c.svc.CreateStream(input)
}

// CreateStreamWithContext is a passthrough to the underlying CreateStreamWithContext method.
// It will increment the count of requests made to CreateStream.
func (c *KinesisVideo) CreateStreamWithContext(ctx aws.Context, input *kinesisvideo.CreateStreamInput, opts ...request.Option) (*kinesisvideo.CreateStreamOutput, error) {
	c.inc("CreateStream")
	return c.svc.CreateStreamWithContext(ctx, input, opts...)
}

// DeleteStreamRequest is a passthrough to the underlying DeleteStreamRequest.
// It will increment the count of requests made to DeleteStream.
func (c *KinesisVideo) DeleteStreamRequest(input *kinesisvideo.DeleteStreamInput) (req *request.Request, output *kinesisvideo.DeleteStreamOutput) {
	c.inc("DeleteStream")
	return c.svc.DeleteStreamRequest(input)
}

// DeleteStream is a passthrough to the underlying DeleteStream method.
// It will increment the count of requests made to DeleteStream.
func (c *KinesisVideo) DeleteStream(input *kinesisvideo.DeleteStreamInput) (*kinesisvideo.DeleteStreamOutput, error) {
	c.inc("DeleteStream")
	return c.svc.DeleteStream(input)
}

// DeleteStreamWithContext is a passthrough to the underlying DeleteStreamWithContext method.
// It will increment the count of requests made to DeleteStream.
func (c *KinesisVideo) DeleteStreamWithContext(ctx aws.Context, input *kinesisvideo.DeleteStreamInput, opts ...request.Option) (*kinesisvideo.DeleteStreamOutput, error) {
	c.inc("DeleteStream")
	return c.svc.DeleteStreamWithContext(ctx, input, opts...)
}

// DescribeStreamRequest is a passthrough to the underlying DescribeStreamRequest.
// It will increment the count of requests made to DescribeStream.
func (c *KinesisVideo) DescribeStreamRequest(input *kinesisvideo.DescribeStreamInput) (req *request.Request, output *kinesisvideo.DescribeStreamOutput) {
	c.inc("DescribeStream")
	return c.svc.DescribeStreamRequest(input)
}

// DescribeStream is a passthrough to the underlying DescribeStream method.
// It will increment the count of requests made to DescribeStream.
func (c *KinesisVideo) DescribeStream(input *kinesisvideo.DescribeStreamInput) (*kinesisvideo.DescribeStreamOutput, error) {
	c.inc("DescribeStream")
	return c.svc.DescribeStream(input)
}

// DescribeStreamWithContext is a passthrough to the underlying DescribeStreamWithContext method.
// It will increment the count of requests made to DescribeStream.
func (c *KinesisVideo) DescribeStreamWithContext(ctx aws.Context, input *kinesisvideo.DescribeStreamInput, opts ...request.Option) (*kinesisvideo.DescribeStreamOutput, error) {
	c.inc("DescribeStream")
	return c.svc.DescribeStreamWithContext(ctx, input, opts...)
}

// GetDataEndpointRequest is a passthrough to the underlying GetDataEndpointRequest.
// It will increment the count of requests made to GetDataEndpoint.
func (c *KinesisVideo) GetDataEndpointRequest(input *kinesisvideo.GetDataEndpointInput) (req *request.Request, output *kinesisvideo.GetDataEndpointOutput) {
	c.inc("GetDataEndpoint")
	return c.svc.GetDataEndpointRequest(input)
}

// GetDataEndpoint is a passthrough to the underlying GetDataEndpoint method.
// It will increment the count of requests made to GetDataEndpoint.
func (c *KinesisVideo) GetDataEndpoint(input *kinesisvideo.GetDataEndpointInput) (*kinesisvideo.GetDataEndpointOutput, error) {
	c.inc("GetDataEndpoint")
	return c.svc.GetDataEndpoint(input)
}

// GetDataEndpointWithContext is a passthrough to the underlying GetDataEndpointWithContext method.
// It will increment the count of requests made to GetDataEndpoint.
func (c *KinesisVideo) GetDataEndpointWithContext(ctx aws.Context, input *kinesisvideo.GetDataEndpointInput, opts ...request.Option) (*kinesisvideo.GetDataEndpointOutput, error) {
	c.inc("GetDataEndpoint")
	return c.svc.GetDataEndpointWithContext(ctx, input, opts...)
}

// ListStreamsRequest is a passthrough to the underlying ListStreamsRequest.
// It will increment the count of requests made to ListStreams.
func (c *KinesisVideo) ListStreamsRequest(input *kinesisvideo.ListStreamsInput) (req *request.Request, output *kinesisvideo.ListStreamsOutput) {
	c.inc("ListStreams")
	return c.svc.ListStreamsRequest(input)
}

// ListStreams is a passthrough to the underlying ListStreams method.
// It will increment the count of requests made to ListStreams.
func (c *KinesisVideo) ListStreams(input *kinesisvideo.ListStreamsInput) (*kinesisvideo.ListStreamsOutput, error) {
	c.inc("ListStreams")
	return c.svc.ListStreams(input)
}

// ListStreamsWithContext is a passthrough to the underlying ListStreamsWithContext method.
// It will increment the count of requests made to ListStreams.
func (c *KinesisVideo) ListStreamsWithContext(ctx aws.Context, input *kinesisvideo.ListStreamsInput, opts ...request.Option) (*kinesisvideo.ListStreamsOutput, error) {
	c.inc("ListStreams")
	return c.svc.ListStreamsWithContext(ctx, input, opts...)
}

// ListTagsForStreamRequest is a passthrough to the underlying ListTagsForStreamRequest.
// It will increment the count of requests made to ListTagsForStream.
func (c *KinesisVideo) ListTagsForStreamRequest(input *kinesisvideo.ListTagsForStreamInput) (req *request.Request, output *kinesisvideo.ListTagsForStreamOutput) {
	c.inc("ListTagsForStream")
	return c.svc.ListTagsForStreamRequest(input)
}

// ListTagsForStream is a passthrough to the underlying ListTagsForStream method.
// It will increment the count of requests made to ListTagsForStream.
func (c *KinesisVideo) ListTagsForStream(input *kinesisvideo.ListTagsForStreamInput) (*kinesisvideo.ListTagsForStreamOutput, error) {
	c.inc("ListTagsForStream")
	return c.svc.ListTagsForStream(input)
}

// ListTagsForStreamWithContext is a passthrough to the underlying ListTagsForStreamWithContext method.
// It will increment the count of requests made to ListTagsForStream.
func (c *KinesisVideo) ListTagsForStreamWithContext(ctx aws.Context, input *kinesisvideo.ListTagsForStreamInput, opts ...request.Option) (*kinesisvideo.ListTagsForStreamOutput, error) {
	c.inc("ListTagsForStream")
	return c.svc.ListTagsForStreamWithContext(ctx, input, opts...)
}

// TagStreamRequest is a passthrough to the underlying TagStreamRequest.
// It will increment the count of requests made to TagStream.
func (c *KinesisVideo) TagStreamRequest(input *kinesisvideo.TagStreamInput) (req *request.Request, output *kinesisvideo.TagStreamOutput) {
	c.inc("TagStream")
	return c.svc.TagStreamRequest(input)
}

// TagStream is a passthrough to the underlying TagStream method.
// It will increment the count of requests made to TagStream.
func (c *KinesisVideo) TagStream(input *kinesisvideo.TagStreamInput) (*kinesisvideo.TagStreamOutput, error) {
	c.inc("TagStream")
	return c.svc.TagStream(input)
}

// TagStreamWithContext is a passthrough to the underlying TagStreamWithContext method.
// It will increment the count of requests made to TagStream.
func (c *KinesisVideo) TagStreamWithContext(ctx aws.Context, input *kinesisvideo.TagStreamInput, opts ...request.Option) (*kinesisvideo.TagStreamOutput, error) {
	c.inc("TagStream")
	return c.svc.TagStreamWithContext(ctx, input, opts...)
}

// UntagStreamRequest is a passthrough to the underlying UntagStreamRequest.
// It will increment the count of requests made to UntagStream.
func (c *KinesisVideo) UntagStreamRequest(input *kinesisvideo.UntagStreamInput) (req *request.Request, output *kinesisvideo.UntagStreamOutput) {
	c.inc("UntagStream")
	return c.svc.UntagStreamRequest(input)
}

// UntagStream is a passthrough to the underlying UntagStream method.
// It will increment the count of requests made to UntagStream.
func (c *KinesisVideo) UntagStream(input *kinesisvideo.UntagStreamInput) (*kinesisvideo.UntagStreamOutput, error) {
	c.inc("UntagStream")
	return c.svc.UntagStream(input)
}

// UntagStreamWithContext is a passthrough to the underlying UntagStreamWithContext method.
// It will increment the count of requests made to UntagStream.
func (c *KinesisVideo) UntagStreamWithContext(ctx aws.Context, input *kinesisvideo.UntagStreamInput, opts ...request.Option) (*kinesisvideo.UntagStreamOutput, error) {
	c.inc("UntagStream")
	return c.svc.UntagStreamWithContext(ctx, input, opts...)
}

// UpdateDataRetentionRequest is a passthrough to the underlying UpdateDataRetentionRequest.
// It will increment the count of requests made to UpdateDataRetention.
func (c *KinesisVideo) UpdateDataRetentionRequest(input *kinesisvideo.UpdateDataRetentionInput) (req *request.Request, output *kinesisvideo.UpdateDataRetentionOutput) {
	c.inc("UpdateDataRetention")
	return c.svc.UpdateDataRetentionRequest(input)
}

// UpdateDataRetention is a passthrough to the underlying UpdateDataRetention method.
// It will increment the count of requests made to UpdateDataRetention.
func (c *KinesisVideo) UpdateDataRetention(input *kinesisvideo.UpdateDataRetentionInput) (*kinesisvideo.UpdateDataRetentionOutput, error) {
	c.inc("UpdateDataRetention")
	return c.svc.UpdateDataRetention(input)
}

// UpdateDataRetentionWithContext is a passthrough to the underlying UpdateDataRetentionWithContext method.
// It will increment the count of requests made to UpdateDataRetention.
func (c *KinesisVideo) UpdateDataRetentionWithContext(ctx aws.Context, input *kinesisvideo.UpdateDataRetentionInput, opts ...request.Option) (*kinesisvideo.UpdateDataRetentionOutput, error) {
	c.inc("UpdateDataRetention")
	return c.svc.UpdateDataRetentionWithContext(ctx, input, opts...)
}

// UpdateStreamRequest is a passthrough to the underlying UpdateStreamRequest.
// It will increment the count of requests made to UpdateStream.
func (c *KinesisVideo) UpdateStreamRequest(input *kinesisvideo.UpdateStreamInput) (req *request.Request, output *kinesisvideo.UpdateStreamOutput) {
	c.inc("UpdateStream")
	return c.svc.UpdateStreamRequest(input)
}

// UpdateStream is a passthrough to the underlying UpdateStream method.
// It will increment the count of requests made to UpdateStream.
func (c *KinesisVideo) UpdateStream(input *kinesisvideo.UpdateStreamInput) (*kinesisvideo.UpdateStreamOutput, error) {
	c.inc("UpdateStream")
	return c.svc.UpdateStream(input)
}

// UpdateStreamWithContext is a passthrough to the underlying UpdateStreamWithContext method.
// It will increment the count of requests made to UpdateStream.
func (c *KinesisVideo) UpdateStreamWithContext(ctx aws.Context, input *kinesisvideo.UpdateStreamInput, opts ...request.Option) (*kinesisvideo.UpdateStreamOutput, error) {
	c.inc("UpdateStream")
	return c.svc.UpdateStreamWithContext(ctx, input, opts...)
}
