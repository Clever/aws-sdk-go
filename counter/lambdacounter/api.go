// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package lambdacounter

import (
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/lambda"
)

// AddPermissionRequest is a passthrough to the underlying AddPermissionRequest.
// It will increment the count of requests made to AddPermission.
func (c *Lambda) AddPermissionRequest(input *lambda.AddPermissionInput) (req *request.Request, output *lambda.AddPermissionOutput) {
	c.inc("AddPermission")
	return c.svc.AddPermissionRequest(input)
}

// AddPermission is a passthrough to the underlying AddPermission method.
// It will increment the count of requests made to AddPermission.
func (c *Lambda) AddPermission(input *lambda.AddPermissionInput) (*lambda.AddPermissionOutput, error) {
	c.inc("AddPermission")
	return c.svc.AddPermission(input)
}

// AddPermissionWithContext is a passthrough to the underlying AddPermissionWithContext method.
// It will increment the count of requests made to AddPermission.
func (c *Lambda) AddPermissionWithContext(ctx aws.Context, input *lambda.AddPermissionInput, opts ...request.Option) (*lambda.AddPermissionOutput, error) {
	c.inc("AddPermission")
	return c.svc.AddPermissionWithContext(ctx, input, opts...)
}

// CreateAliasRequest is a passthrough to the underlying CreateAliasRequest.
// It will increment the count of requests made to CreateAlias.
func (c *Lambda) CreateAliasRequest(input *lambda.CreateAliasInput) (req *request.Request, output *lambda.AliasConfiguration) {
	c.inc("CreateAlias")
	return c.svc.CreateAliasRequest(input)
}

// CreateAlias is a passthrough to the underlying CreateAlias method.
// It will increment the count of requests made to CreateAlias.
func (c *Lambda) CreateAlias(input *lambda.CreateAliasInput) (*lambda.AliasConfiguration, error) {
	c.inc("CreateAlias")
	return c.svc.CreateAlias(input)
}

// CreateAliasWithContext is a passthrough to the underlying CreateAliasWithContext method.
// It will increment the count of requests made to CreateAlias.
func (c *Lambda) CreateAliasWithContext(ctx aws.Context, input *lambda.CreateAliasInput, opts ...request.Option) (*lambda.AliasConfiguration, error) {
	c.inc("CreateAlias")
	return c.svc.CreateAliasWithContext(ctx, input, opts...)
}

// CreateEventSourceMappingRequest is a passthrough to the underlying CreateEventSourceMappingRequest.
// It will increment the count of requests made to CreateEventSourceMapping.
func (c *Lambda) CreateEventSourceMappingRequest(input *lambda.CreateEventSourceMappingInput) (req *request.Request, output *lambda.EventSourceMappingConfiguration) {
	c.inc("CreateEventSourceMapping")
	return c.svc.CreateEventSourceMappingRequest(input)
}

// CreateEventSourceMapping is a passthrough to the underlying CreateEventSourceMapping method.
// It will increment the count of requests made to CreateEventSourceMapping.
func (c *Lambda) CreateEventSourceMapping(input *lambda.CreateEventSourceMappingInput) (*lambda.EventSourceMappingConfiguration, error) {
	c.inc("CreateEventSourceMapping")
	return c.svc.CreateEventSourceMapping(input)
}

// CreateEventSourceMappingWithContext is a passthrough to the underlying CreateEventSourceMappingWithContext method.
// It will increment the count of requests made to CreateEventSourceMapping.
func (c *Lambda) CreateEventSourceMappingWithContext(ctx aws.Context, input *lambda.CreateEventSourceMappingInput, opts ...request.Option) (*lambda.EventSourceMappingConfiguration, error) {
	c.inc("CreateEventSourceMapping")
	return c.svc.CreateEventSourceMappingWithContext(ctx, input, opts...)
}

// CreateFunctionRequest is a passthrough to the underlying CreateFunctionRequest.
// It will increment the count of requests made to CreateFunction.
func (c *Lambda) CreateFunctionRequest(input *lambda.CreateFunctionInput) (req *request.Request, output *lambda.FunctionConfiguration) {
	c.inc("CreateFunction")
	return c.svc.CreateFunctionRequest(input)
}

// CreateFunction is a passthrough to the underlying CreateFunction method.
// It will increment the count of requests made to CreateFunction.
func (c *Lambda) CreateFunction(input *lambda.CreateFunctionInput) (*lambda.FunctionConfiguration, error) {
	c.inc("CreateFunction")
	return c.svc.CreateFunction(input)
}

// CreateFunctionWithContext is a passthrough to the underlying CreateFunctionWithContext method.
// It will increment the count of requests made to CreateFunction.
func (c *Lambda) CreateFunctionWithContext(ctx aws.Context, input *lambda.CreateFunctionInput, opts ...request.Option) (*lambda.FunctionConfiguration, error) {
	c.inc("CreateFunction")
	return c.svc.CreateFunctionWithContext(ctx, input, opts...)
}

// DeleteAliasRequest is a passthrough to the underlying DeleteAliasRequest.
// It will increment the count of requests made to DeleteAlias.
func (c *Lambda) DeleteAliasRequest(input *lambda.DeleteAliasInput) (req *request.Request, output *lambda.DeleteAliasOutput) {
	c.inc("DeleteAlias")
	return c.svc.DeleteAliasRequest(input)
}

// DeleteAlias is a passthrough to the underlying DeleteAlias method.
// It will increment the count of requests made to DeleteAlias.
func (c *Lambda) DeleteAlias(input *lambda.DeleteAliasInput) (*lambda.DeleteAliasOutput, error) {
	c.inc("DeleteAlias")
	return c.svc.DeleteAlias(input)
}

// DeleteAliasWithContext is a passthrough to the underlying DeleteAliasWithContext method.
// It will increment the count of requests made to DeleteAlias.
func (c *Lambda) DeleteAliasWithContext(ctx aws.Context, input *lambda.DeleteAliasInput, opts ...request.Option) (*lambda.DeleteAliasOutput, error) {
	c.inc("DeleteAlias")
	return c.svc.DeleteAliasWithContext(ctx, input, opts...)
}

// DeleteEventSourceMappingRequest is a passthrough to the underlying DeleteEventSourceMappingRequest.
// It will increment the count of requests made to DeleteEventSourceMapping.
func (c *Lambda) DeleteEventSourceMappingRequest(input *lambda.DeleteEventSourceMappingInput) (req *request.Request, output *lambda.EventSourceMappingConfiguration) {
	c.inc("DeleteEventSourceMapping")
	return c.svc.DeleteEventSourceMappingRequest(input)
}

// DeleteEventSourceMapping is a passthrough to the underlying DeleteEventSourceMapping method.
// It will increment the count of requests made to DeleteEventSourceMapping.
func (c *Lambda) DeleteEventSourceMapping(input *lambda.DeleteEventSourceMappingInput) (*lambda.EventSourceMappingConfiguration, error) {
	c.inc("DeleteEventSourceMapping")
	return c.svc.DeleteEventSourceMapping(input)
}

// DeleteEventSourceMappingWithContext is a passthrough to the underlying DeleteEventSourceMappingWithContext method.
// It will increment the count of requests made to DeleteEventSourceMapping.
func (c *Lambda) DeleteEventSourceMappingWithContext(ctx aws.Context, input *lambda.DeleteEventSourceMappingInput, opts ...request.Option) (*lambda.EventSourceMappingConfiguration, error) {
	c.inc("DeleteEventSourceMapping")
	return c.svc.DeleteEventSourceMappingWithContext(ctx, input, opts...)
}

// DeleteFunctionRequest is a passthrough to the underlying DeleteFunctionRequest.
// It will increment the count of requests made to DeleteFunction.
func (c *Lambda) DeleteFunctionRequest(input *lambda.DeleteFunctionInput) (req *request.Request, output *lambda.DeleteFunctionOutput) {
	c.inc("DeleteFunction")
	return c.svc.DeleteFunctionRequest(input)
}

// DeleteFunction is a passthrough to the underlying DeleteFunction method.
// It will increment the count of requests made to DeleteFunction.
func (c *Lambda) DeleteFunction(input *lambda.DeleteFunctionInput) (*lambda.DeleteFunctionOutput, error) {
	c.inc("DeleteFunction")
	return c.svc.DeleteFunction(input)
}

// DeleteFunctionWithContext is a passthrough to the underlying DeleteFunctionWithContext method.
// It will increment the count of requests made to DeleteFunction.
func (c *Lambda) DeleteFunctionWithContext(ctx aws.Context, input *lambda.DeleteFunctionInput, opts ...request.Option) (*lambda.DeleteFunctionOutput, error) {
	c.inc("DeleteFunction")
	return c.svc.DeleteFunctionWithContext(ctx, input, opts...)
}

// GetAccountSettingsRequest is a passthrough to the underlying GetAccountSettingsRequest.
// It will increment the count of requests made to GetAccountSettings.
func (c *Lambda) GetAccountSettingsRequest(input *lambda.GetAccountSettingsInput) (req *request.Request, output *lambda.GetAccountSettingsOutput) {
	c.inc("GetAccountSettings")
	return c.svc.GetAccountSettingsRequest(input)
}

// GetAccountSettings is a passthrough to the underlying GetAccountSettings method.
// It will increment the count of requests made to GetAccountSettings.
func (c *Lambda) GetAccountSettings(input *lambda.GetAccountSettingsInput) (*lambda.GetAccountSettingsOutput, error) {
	c.inc("GetAccountSettings")
	return c.svc.GetAccountSettings(input)
}

// GetAccountSettingsWithContext is a passthrough to the underlying GetAccountSettingsWithContext method.
// It will increment the count of requests made to GetAccountSettings.
func (c *Lambda) GetAccountSettingsWithContext(ctx aws.Context, input *lambda.GetAccountSettingsInput, opts ...request.Option) (*lambda.GetAccountSettingsOutput, error) {
	c.inc("GetAccountSettings")
	return c.svc.GetAccountSettingsWithContext(ctx, input, opts...)
}

// GetAliasRequest is a passthrough to the underlying GetAliasRequest.
// It will increment the count of requests made to GetAlias.
func (c *Lambda) GetAliasRequest(input *lambda.GetAliasInput) (req *request.Request, output *lambda.AliasConfiguration) {
	c.inc("GetAlias")
	return c.svc.GetAliasRequest(input)
}

// GetAlias is a passthrough to the underlying GetAlias method.
// It will increment the count of requests made to GetAlias.
func (c *Lambda) GetAlias(input *lambda.GetAliasInput) (*lambda.AliasConfiguration, error) {
	c.inc("GetAlias")
	return c.svc.GetAlias(input)
}

// GetAliasWithContext is a passthrough to the underlying GetAliasWithContext method.
// It will increment the count of requests made to GetAlias.
func (c *Lambda) GetAliasWithContext(ctx aws.Context, input *lambda.GetAliasInput, opts ...request.Option) (*lambda.AliasConfiguration, error) {
	c.inc("GetAlias")
	return c.svc.GetAliasWithContext(ctx, input, opts...)
}

// GetEventSourceMappingRequest is a passthrough to the underlying GetEventSourceMappingRequest.
// It will increment the count of requests made to GetEventSourceMapping.
func (c *Lambda) GetEventSourceMappingRequest(input *lambda.GetEventSourceMappingInput) (req *request.Request, output *lambda.EventSourceMappingConfiguration) {
	c.inc("GetEventSourceMapping")
	return c.svc.GetEventSourceMappingRequest(input)
}

// GetEventSourceMapping is a passthrough to the underlying GetEventSourceMapping method.
// It will increment the count of requests made to GetEventSourceMapping.
func (c *Lambda) GetEventSourceMapping(input *lambda.GetEventSourceMappingInput) (*lambda.EventSourceMappingConfiguration, error) {
	c.inc("GetEventSourceMapping")
	return c.svc.GetEventSourceMapping(input)
}

// GetEventSourceMappingWithContext is a passthrough to the underlying GetEventSourceMappingWithContext method.
// It will increment the count of requests made to GetEventSourceMapping.
func (c *Lambda) GetEventSourceMappingWithContext(ctx aws.Context, input *lambda.GetEventSourceMappingInput, opts ...request.Option) (*lambda.EventSourceMappingConfiguration, error) {
	c.inc("GetEventSourceMapping")
	return c.svc.GetEventSourceMappingWithContext(ctx, input, opts...)
}

// GetFunctionRequest is a passthrough to the underlying GetFunctionRequest.
// It will increment the count of requests made to GetFunction.
func (c *Lambda) GetFunctionRequest(input *lambda.GetFunctionInput) (req *request.Request, output *lambda.GetFunctionOutput) {
	c.inc("GetFunction")
	return c.svc.GetFunctionRequest(input)
}

// GetFunction is a passthrough to the underlying GetFunction method.
// It will increment the count of requests made to GetFunction.
func (c *Lambda) GetFunction(input *lambda.GetFunctionInput) (*lambda.GetFunctionOutput, error) {
	c.inc("GetFunction")
	return c.svc.GetFunction(input)
}

// GetFunctionWithContext is a passthrough to the underlying GetFunctionWithContext method.
// It will increment the count of requests made to GetFunction.
func (c *Lambda) GetFunctionWithContext(ctx aws.Context, input *lambda.GetFunctionInput, opts ...request.Option) (*lambda.GetFunctionOutput, error) {
	c.inc("GetFunction")
	return c.svc.GetFunctionWithContext(ctx, input, opts...)
}

// GetFunctionConfigurationRequest is a passthrough to the underlying GetFunctionConfigurationRequest.
// It will increment the count of requests made to GetFunctionConfiguration.
func (c *Lambda) GetFunctionConfigurationRequest(input *lambda.GetFunctionConfigurationInput) (req *request.Request, output *lambda.FunctionConfiguration) {
	c.inc("GetFunctionConfiguration")
	return c.svc.GetFunctionConfigurationRequest(input)
}

// GetFunctionConfiguration is a passthrough to the underlying GetFunctionConfiguration method.
// It will increment the count of requests made to GetFunctionConfiguration.
func (c *Lambda) GetFunctionConfiguration(input *lambda.GetFunctionConfigurationInput) (*lambda.FunctionConfiguration, error) {
	c.inc("GetFunctionConfiguration")
	return c.svc.GetFunctionConfiguration(input)
}

// GetFunctionConfigurationWithContext is a passthrough to the underlying GetFunctionConfigurationWithContext method.
// It will increment the count of requests made to GetFunctionConfiguration.
func (c *Lambda) GetFunctionConfigurationWithContext(ctx aws.Context, input *lambda.GetFunctionConfigurationInput, opts ...request.Option) (*lambda.FunctionConfiguration, error) {
	c.inc("GetFunctionConfiguration")
	return c.svc.GetFunctionConfigurationWithContext(ctx, input, opts...)
}

// GetPolicyRequest is a passthrough to the underlying GetPolicyRequest.
// It will increment the count of requests made to GetPolicy.
func (c *Lambda) GetPolicyRequest(input *lambda.GetPolicyInput) (req *request.Request, output *lambda.GetPolicyOutput) {
	c.inc("GetPolicy")
	return c.svc.GetPolicyRequest(input)
}

// GetPolicy is a passthrough to the underlying GetPolicy method.
// It will increment the count of requests made to GetPolicy.
func (c *Lambda) GetPolicy(input *lambda.GetPolicyInput) (*lambda.GetPolicyOutput, error) {
	c.inc("GetPolicy")
	return c.svc.GetPolicy(input)
}

// GetPolicyWithContext is a passthrough to the underlying GetPolicyWithContext method.
// It will increment the count of requests made to GetPolicy.
func (c *Lambda) GetPolicyWithContext(ctx aws.Context, input *lambda.GetPolicyInput, opts ...request.Option) (*lambda.GetPolicyOutput, error) {
	c.inc("GetPolicy")
	return c.svc.GetPolicyWithContext(ctx, input, opts...)
}

// InvokeRequest is a passthrough to the underlying InvokeRequest.
// It will increment the count of requests made to Invoke.
func (c *Lambda) InvokeRequest(input *lambda.InvokeInput) (req *request.Request, output *lambda.InvokeOutput) {
	c.inc("Invoke")
	return c.svc.InvokeRequest(input)
}

// Invoke is a passthrough to the underlying Invoke method.
// It will increment the count of requests made to Invoke.
func (c *Lambda) Invoke(input *lambda.InvokeInput) (*lambda.InvokeOutput, error) {
	c.inc("Invoke")
	return c.svc.Invoke(input)
}

// InvokeWithContext is a passthrough to the underlying InvokeWithContext method.
// It will increment the count of requests made to Invoke.
func (c *Lambda) InvokeWithContext(ctx aws.Context, input *lambda.InvokeInput, opts ...request.Option) (*lambda.InvokeOutput, error) {
	c.inc("Invoke")
	return c.svc.InvokeWithContext(ctx, input, opts...)
}

// InvokeAsyncRequest is a passthrough to the underlying InvokeAsyncRequest.
// It will increment the count of requests made to InvokeAsync.
func (c *Lambda) InvokeAsyncRequest(input *lambda.InvokeAsyncInput) (req *request.Request, output *lambda.InvokeAsyncOutput) {
	c.inc("InvokeAsync")
	return c.svc.InvokeAsyncRequest(input)
}

// InvokeAsync is a passthrough to the underlying InvokeAsync method.
// It will increment the count of requests made to InvokeAsync.
func (c *Lambda) InvokeAsync(input *lambda.InvokeAsyncInput) (*lambda.InvokeAsyncOutput, error) {
	c.inc("InvokeAsync")
	return c.svc.InvokeAsync(input)
}

// InvokeAsyncWithContext is a passthrough to the underlying InvokeAsyncWithContext method.
// It will increment the count of requests made to InvokeAsync.
func (c *Lambda) InvokeAsyncWithContext(ctx aws.Context, input *lambda.InvokeAsyncInput, opts ...request.Option) (*lambda.InvokeAsyncOutput, error) {
	c.inc("InvokeAsync")
	return c.svc.InvokeAsyncWithContext(ctx, input, opts...)
}

// ListAliasesRequest is a passthrough to the underlying ListAliasesRequest.
// It will increment the count of requests made to ListAliases.
func (c *Lambda) ListAliasesRequest(input *lambda.ListAliasesInput) (req *request.Request, output *lambda.ListAliasesOutput) {
	c.inc("ListAliases")
	return c.svc.ListAliasesRequest(input)
}

// ListAliases is a passthrough to the underlying ListAliases method.
// It will increment the count of requests made to ListAliases.
func (c *Lambda) ListAliases(input *lambda.ListAliasesInput) (*lambda.ListAliasesOutput, error) {
	c.inc("ListAliases")
	return c.svc.ListAliases(input)
}

// ListAliasesWithContext is a passthrough to the underlying ListAliasesWithContext method.
// It will increment the count of requests made to ListAliases.
func (c *Lambda) ListAliasesWithContext(ctx aws.Context, input *lambda.ListAliasesInput, opts ...request.Option) (*lambda.ListAliasesOutput, error) {
	c.inc("ListAliases")
	return c.svc.ListAliasesWithContext(ctx, input, opts...)
}

// ListEventSourceMappingsRequest is a passthrough to the underlying ListEventSourceMappingsRequest.
// It will increment the count of requests made to ListEventSourceMappings.
func (c *Lambda) ListEventSourceMappingsRequest(input *lambda.ListEventSourceMappingsInput) (req *request.Request, output *lambda.ListEventSourceMappingsOutput) {
	c.inc("ListEventSourceMappings")
	return c.svc.ListEventSourceMappingsRequest(input)
}

// ListEventSourceMappings is a passthrough to the underlying ListEventSourceMappings method.
// It will increment the count of requests made to ListEventSourceMappings.
func (c *Lambda) ListEventSourceMappings(input *lambda.ListEventSourceMappingsInput) (*lambda.ListEventSourceMappingsOutput, error) {
	c.inc("ListEventSourceMappings")
	return c.svc.ListEventSourceMappings(input)
}

// ListEventSourceMappingsWithContext is a passthrough to the underlying ListEventSourceMappingsWithContext method.
// It will increment the count of requests made to ListEventSourceMappings.
func (c *Lambda) ListEventSourceMappingsWithContext(ctx aws.Context, input *lambda.ListEventSourceMappingsInput, opts ...request.Option) (*lambda.ListEventSourceMappingsOutput, error) {
	c.inc("ListEventSourceMappings")
	return c.svc.ListEventSourceMappingsWithContext(ctx, input, opts...)
}

// ListEventSourceMappingsPages is a passthrough to the underlying ListEventSourceMappingsPages method.
// It will increment the count of requests made to ListEventSourceMappings on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListEventSourceMappingsPagesWithContext to avoid this.
func (c *Lambda) ListEventSourceMappingsPages(input *lambda.ListEventSourceMappingsInput, fn func(*lambda.ListEventSourceMappingsOutput, bool) bool) error {
	wrappedFn := func(page *lambda.ListEventSourceMappingsOutput, lastPage bool) bool {
		c.inc("ListEventSourceMappings")
		return fn(page, lastPage)
	}
	return c.ListEventSourceMappingsPages(input, wrappedFn)
}

// ListEventSourceMappingsPagesWithContext is a passthrough to the underlying ListEventSourceMappingsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListEventSourceMappings when applied to the request.
func (c *Lambda) ListEventSourceMappingsPagesWithContext(ctx aws.Context, input *lambda.ListEventSourceMappingsInput, fn func(*lambda.ListEventSourceMappingsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListEventSourceMappings"))
	return c.ListEventSourceMappingsPagesWithContext(ctx, input, fn, opts...)
}

// ListFunctionsRequest is a passthrough to the underlying ListFunctionsRequest.
// It will increment the count of requests made to ListFunctions.
func (c *Lambda) ListFunctionsRequest(input *lambda.ListFunctionsInput) (req *request.Request, output *lambda.ListFunctionsOutput) {
	c.inc("ListFunctions")
	return c.svc.ListFunctionsRequest(input)
}

// ListFunctions is a passthrough to the underlying ListFunctions method.
// It will increment the count of requests made to ListFunctions.
func (c *Lambda) ListFunctions(input *lambda.ListFunctionsInput) (*lambda.ListFunctionsOutput, error) {
	c.inc("ListFunctions")
	return c.svc.ListFunctions(input)
}

// ListFunctionsWithContext is a passthrough to the underlying ListFunctionsWithContext method.
// It will increment the count of requests made to ListFunctions.
func (c *Lambda) ListFunctionsWithContext(ctx aws.Context, input *lambda.ListFunctionsInput, opts ...request.Option) (*lambda.ListFunctionsOutput, error) {
	c.inc("ListFunctions")
	return c.svc.ListFunctionsWithContext(ctx, input, opts...)
}

// ListFunctionsPages is a passthrough to the underlying ListFunctionsPages method.
// It will increment the count of requests made to ListFunctions on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListFunctionsPagesWithContext to avoid this.
func (c *Lambda) ListFunctionsPages(input *lambda.ListFunctionsInput, fn func(*lambda.ListFunctionsOutput, bool) bool) error {
	wrappedFn := func(page *lambda.ListFunctionsOutput, lastPage bool) bool {
		c.inc("ListFunctions")
		return fn(page, lastPage)
	}
	return c.ListFunctionsPages(input, wrappedFn)
}

// ListFunctionsPagesWithContext is a passthrough to the underlying ListFunctionsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListFunctions when applied to the request.
func (c *Lambda) ListFunctionsPagesWithContext(ctx aws.Context, input *lambda.ListFunctionsInput, fn func(*lambda.ListFunctionsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListFunctions"))
	return c.ListFunctionsPagesWithContext(ctx, input, fn, opts...)
}

// ListTagsRequest is a passthrough to the underlying ListTagsRequest.
// It will increment the count of requests made to ListTags.
func (c *Lambda) ListTagsRequest(input *lambda.ListTagsInput) (req *request.Request, output *lambda.ListTagsOutput) {
	c.inc("ListTags")
	return c.svc.ListTagsRequest(input)
}

// ListTags is a passthrough to the underlying ListTags method.
// It will increment the count of requests made to ListTags.
func (c *Lambda) ListTags(input *lambda.ListTagsInput) (*lambda.ListTagsOutput, error) {
	c.inc("ListTags")
	return c.svc.ListTags(input)
}

// ListTagsWithContext is a passthrough to the underlying ListTagsWithContext method.
// It will increment the count of requests made to ListTags.
func (c *Lambda) ListTagsWithContext(ctx aws.Context, input *lambda.ListTagsInput, opts ...request.Option) (*lambda.ListTagsOutput, error) {
	c.inc("ListTags")
	return c.svc.ListTagsWithContext(ctx, input, opts...)
}

// ListVersionsByFunctionRequest is a passthrough to the underlying ListVersionsByFunctionRequest.
// It will increment the count of requests made to ListVersionsByFunction.
func (c *Lambda) ListVersionsByFunctionRequest(input *lambda.ListVersionsByFunctionInput) (req *request.Request, output *lambda.ListVersionsByFunctionOutput) {
	c.inc("ListVersionsByFunction")
	return c.svc.ListVersionsByFunctionRequest(input)
}

// ListVersionsByFunction is a passthrough to the underlying ListVersionsByFunction method.
// It will increment the count of requests made to ListVersionsByFunction.
func (c *Lambda) ListVersionsByFunction(input *lambda.ListVersionsByFunctionInput) (*lambda.ListVersionsByFunctionOutput, error) {
	c.inc("ListVersionsByFunction")
	return c.svc.ListVersionsByFunction(input)
}

// ListVersionsByFunctionWithContext is a passthrough to the underlying ListVersionsByFunctionWithContext method.
// It will increment the count of requests made to ListVersionsByFunction.
func (c *Lambda) ListVersionsByFunctionWithContext(ctx aws.Context, input *lambda.ListVersionsByFunctionInput, opts ...request.Option) (*lambda.ListVersionsByFunctionOutput, error) {
	c.inc("ListVersionsByFunction")
	return c.svc.ListVersionsByFunctionWithContext(ctx, input, opts...)
}

// PublishVersionRequest is a passthrough to the underlying PublishVersionRequest.
// It will increment the count of requests made to PublishVersion.
func (c *Lambda) PublishVersionRequest(input *lambda.PublishVersionInput) (req *request.Request, output *lambda.FunctionConfiguration) {
	c.inc("PublishVersion")
	return c.svc.PublishVersionRequest(input)
}

// PublishVersion is a passthrough to the underlying PublishVersion method.
// It will increment the count of requests made to PublishVersion.
func (c *Lambda) PublishVersion(input *lambda.PublishVersionInput) (*lambda.FunctionConfiguration, error) {
	c.inc("PublishVersion")
	return c.svc.PublishVersion(input)
}

// PublishVersionWithContext is a passthrough to the underlying PublishVersionWithContext method.
// It will increment the count of requests made to PublishVersion.
func (c *Lambda) PublishVersionWithContext(ctx aws.Context, input *lambda.PublishVersionInput, opts ...request.Option) (*lambda.FunctionConfiguration, error) {
	c.inc("PublishVersion")
	return c.svc.PublishVersionWithContext(ctx, input, opts...)
}

// RemovePermissionRequest is a passthrough to the underlying RemovePermissionRequest.
// It will increment the count of requests made to RemovePermission.
func (c *Lambda) RemovePermissionRequest(input *lambda.RemovePermissionInput) (req *request.Request, output *lambda.RemovePermissionOutput) {
	c.inc("RemovePermission")
	return c.svc.RemovePermissionRequest(input)
}

// RemovePermission is a passthrough to the underlying RemovePermission method.
// It will increment the count of requests made to RemovePermission.
func (c *Lambda) RemovePermission(input *lambda.RemovePermissionInput) (*lambda.RemovePermissionOutput, error) {
	c.inc("RemovePermission")
	return c.svc.RemovePermission(input)
}

// RemovePermissionWithContext is a passthrough to the underlying RemovePermissionWithContext method.
// It will increment the count of requests made to RemovePermission.
func (c *Lambda) RemovePermissionWithContext(ctx aws.Context, input *lambda.RemovePermissionInput, opts ...request.Option) (*lambda.RemovePermissionOutput, error) {
	c.inc("RemovePermission")
	return c.svc.RemovePermissionWithContext(ctx, input, opts...)
}

// TagResourceRequest is a passthrough to the underlying TagResourceRequest.
// It will increment the count of requests made to TagResource.
func (c *Lambda) TagResourceRequest(input *lambda.TagResourceInput) (req *request.Request, output *lambda.TagResourceOutput) {
	c.inc("TagResource")
	return c.svc.TagResourceRequest(input)
}

// TagResource is a passthrough to the underlying TagResource method.
// It will increment the count of requests made to TagResource.
func (c *Lambda) TagResource(input *lambda.TagResourceInput) (*lambda.TagResourceOutput, error) {
	c.inc("TagResource")
	return c.svc.TagResource(input)
}

// TagResourceWithContext is a passthrough to the underlying TagResourceWithContext method.
// It will increment the count of requests made to TagResource.
func (c *Lambda) TagResourceWithContext(ctx aws.Context, input *lambda.TagResourceInput, opts ...request.Option) (*lambda.TagResourceOutput, error) {
	c.inc("TagResource")
	return c.svc.TagResourceWithContext(ctx, input, opts...)
}

// UntagResourceRequest is a passthrough to the underlying UntagResourceRequest.
// It will increment the count of requests made to UntagResource.
func (c *Lambda) UntagResourceRequest(input *lambda.UntagResourceInput) (req *request.Request, output *lambda.UntagResourceOutput) {
	c.inc("UntagResource")
	return c.svc.UntagResourceRequest(input)
}

// UntagResource is a passthrough to the underlying UntagResource method.
// It will increment the count of requests made to UntagResource.
func (c *Lambda) UntagResource(input *lambda.UntagResourceInput) (*lambda.UntagResourceOutput, error) {
	c.inc("UntagResource")
	return c.svc.UntagResource(input)
}

// UntagResourceWithContext is a passthrough to the underlying UntagResourceWithContext method.
// It will increment the count of requests made to UntagResource.
func (c *Lambda) UntagResourceWithContext(ctx aws.Context, input *lambda.UntagResourceInput, opts ...request.Option) (*lambda.UntagResourceOutput, error) {
	c.inc("UntagResource")
	return c.svc.UntagResourceWithContext(ctx, input, opts...)
}

// UpdateAliasRequest is a passthrough to the underlying UpdateAliasRequest.
// It will increment the count of requests made to UpdateAlias.
func (c *Lambda) UpdateAliasRequest(input *lambda.UpdateAliasInput) (req *request.Request, output *lambda.AliasConfiguration) {
	c.inc("UpdateAlias")
	return c.svc.UpdateAliasRequest(input)
}

// UpdateAlias is a passthrough to the underlying UpdateAlias method.
// It will increment the count of requests made to UpdateAlias.
func (c *Lambda) UpdateAlias(input *lambda.UpdateAliasInput) (*lambda.AliasConfiguration, error) {
	c.inc("UpdateAlias")
	return c.svc.UpdateAlias(input)
}

// UpdateAliasWithContext is a passthrough to the underlying UpdateAliasWithContext method.
// It will increment the count of requests made to UpdateAlias.
func (c *Lambda) UpdateAliasWithContext(ctx aws.Context, input *lambda.UpdateAliasInput, opts ...request.Option) (*lambda.AliasConfiguration, error) {
	c.inc("UpdateAlias")
	return c.svc.UpdateAliasWithContext(ctx, input, opts...)
}

// UpdateEventSourceMappingRequest is a passthrough to the underlying UpdateEventSourceMappingRequest.
// It will increment the count of requests made to UpdateEventSourceMapping.
func (c *Lambda) UpdateEventSourceMappingRequest(input *lambda.UpdateEventSourceMappingInput) (req *request.Request, output *lambda.EventSourceMappingConfiguration) {
	c.inc("UpdateEventSourceMapping")
	return c.svc.UpdateEventSourceMappingRequest(input)
}

// UpdateEventSourceMapping is a passthrough to the underlying UpdateEventSourceMapping method.
// It will increment the count of requests made to UpdateEventSourceMapping.
func (c *Lambda) UpdateEventSourceMapping(input *lambda.UpdateEventSourceMappingInput) (*lambda.EventSourceMappingConfiguration, error) {
	c.inc("UpdateEventSourceMapping")
	return c.svc.UpdateEventSourceMapping(input)
}

// UpdateEventSourceMappingWithContext is a passthrough to the underlying UpdateEventSourceMappingWithContext method.
// It will increment the count of requests made to UpdateEventSourceMapping.
func (c *Lambda) UpdateEventSourceMappingWithContext(ctx aws.Context, input *lambda.UpdateEventSourceMappingInput, opts ...request.Option) (*lambda.EventSourceMappingConfiguration, error) {
	c.inc("UpdateEventSourceMapping")
	return c.svc.UpdateEventSourceMappingWithContext(ctx, input, opts...)
}

// UpdateFunctionCodeRequest is a passthrough to the underlying UpdateFunctionCodeRequest.
// It will increment the count of requests made to UpdateFunctionCode.
func (c *Lambda) UpdateFunctionCodeRequest(input *lambda.UpdateFunctionCodeInput) (req *request.Request, output *lambda.FunctionConfiguration) {
	c.inc("UpdateFunctionCode")
	return c.svc.UpdateFunctionCodeRequest(input)
}

// UpdateFunctionCode is a passthrough to the underlying UpdateFunctionCode method.
// It will increment the count of requests made to UpdateFunctionCode.
func (c *Lambda) UpdateFunctionCode(input *lambda.UpdateFunctionCodeInput) (*lambda.FunctionConfiguration, error) {
	c.inc("UpdateFunctionCode")
	return c.svc.UpdateFunctionCode(input)
}

// UpdateFunctionCodeWithContext is a passthrough to the underlying UpdateFunctionCodeWithContext method.
// It will increment the count of requests made to UpdateFunctionCode.
func (c *Lambda) UpdateFunctionCodeWithContext(ctx aws.Context, input *lambda.UpdateFunctionCodeInput, opts ...request.Option) (*lambda.FunctionConfiguration, error) {
	c.inc("UpdateFunctionCode")
	return c.svc.UpdateFunctionCodeWithContext(ctx, input, opts...)
}

// UpdateFunctionConfigurationRequest is a passthrough to the underlying UpdateFunctionConfigurationRequest.
// It will increment the count of requests made to UpdateFunctionConfiguration.
func (c *Lambda) UpdateFunctionConfigurationRequest(input *lambda.UpdateFunctionConfigurationInput) (req *request.Request, output *lambda.FunctionConfiguration) {
	c.inc("UpdateFunctionConfiguration")
	return c.svc.UpdateFunctionConfigurationRequest(input)
}

// UpdateFunctionConfiguration is a passthrough to the underlying UpdateFunctionConfiguration method.
// It will increment the count of requests made to UpdateFunctionConfiguration.
func (c *Lambda) UpdateFunctionConfiguration(input *lambda.UpdateFunctionConfigurationInput) (*lambda.FunctionConfiguration, error) {
	c.inc("UpdateFunctionConfiguration")
	return c.svc.UpdateFunctionConfiguration(input)
}

// UpdateFunctionConfigurationWithContext is a passthrough to the underlying UpdateFunctionConfigurationWithContext method.
// It will increment the count of requests made to UpdateFunctionConfiguration.
func (c *Lambda) UpdateFunctionConfigurationWithContext(ctx aws.Context, input *lambda.UpdateFunctionConfigurationInput, opts ...request.Option) (*lambda.FunctionConfiguration, error) {
	c.inc("UpdateFunctionConfiguration")
	return c.svc.UpdateFunctionConfigurationWithContext(ctx, input, opts...)
}
