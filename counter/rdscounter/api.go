// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package rdscounter

import (
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/rds"
)

// AddRoleToDBClusterRequest is a passthrough to the underlying AddRoleToDBClusterRequest.
// It will increment the count of requests made to AddRoleToDBCluster.
func (c *RDS) AddRoleToDBClusterRequest(input *rds.AddRoleToDBClusterInput) (req *request.Request, output *rds.AddRoleToDBClusterOutput) {
	c.inc("AddRoleToDBCluster")
	return c.svc.AddRoleToDBClusterRequest(input)
}

// AddRoleToDBCluster is a passthrough to the underlying AddRoleToDBCluster method.
// It will increment the count of requests made to AddRoleToDBCluster.
func (c *RDS) AddRoleToDBCluster(input *rds.AddRoleToDBClusterInput) (*rds.AddRoleToDBClusterOutput, error) {
	c.inc("AddRoleToDBCluster")
	return c.svc.AddRoleToDBCluster(input)
}

// AddRoleToDBClusterWithContext is a passthrough to the underlying AddRoleToDBClusterWithContext method.
// It will increment the count of requests made to AddRoleToDBCluster.
func (c *RDS) AddRoleToDBClusterWithContext(ctx aws.Context, input *rds.AddRoleToDBClusterInput, opts ...request.Option) (*rds.AddRoleToDBClusterOutput, error) {
	c.inc("AddRoleToDBCluster")
	return c.svc.AddRoleToDBClusterWithContext(ctx, input, opts...)
}

// AddSourceIdentifierToSubscriptionRequest is a passthrough to the underlying AddSourceIdentifierToSubscriptionRequest.
// It will increment the count of requests made to AddSourceIdentifierToSubscription.
func (c *RDS) AddSourceIdentifierToSubscriptionRequest(input *rds.AddSourceIdentifierToSubscriptionInput) (req *request.Request, output *rds.AddSourceIdentifierToSubscriptionOutput) {
	c.inc("AddSourceIdentifierToSubscription")
	return c.svc.AddSourceIdentifierToSubscriptionRequest(input)
}

// AddSourceIdentifierToSubscription is a passthrough to the underlying AddSourceIdentifierToSubscription method.
// It will increment the count of requests made to AddSourceIdentifierToSubscription.
func (c *RDS) AddSourceIdentifierToSubscription(input *rds.AddSourceIdentifierToSubscriptionInput) (*rds.AddSourceIdentifierToSubscriptionOutput, error) {
	c.inc("AddSourceIdentifierToSubscription")
	return c.svc.AddSourceIdentifierToSubscription(input)
}

// AddSourceIdentifierToSubscriptionWithContext is a passthrough to the underlying AddSourceIdentifierToSubscriptionWithContext method.
// It will increment the count of requests made to AddSourceIdentifierToSubscription.
func (c *RDS) AddSourceIdentifierToSubscriptionWithContext(ctx aws.Context, input *rds.AddSourceIdentifierToSubscriptionInput, opts ...request.Option) (*rds.AddSourceIdentifierToSubscriptionOutput, error) {
	c.inc("AddSourceIdentifierToSubscription")
	return c.svc.AddSourceIdentifierToSubscriptionWithContext(ctx, input, opts...)
}

// AddTagsToResourceRequest is a passthrough to the underlying AddTagsToResourceRequest.
// It will increment the count of requests made to AddTagsToResource.
func (c *RDS) AddTagsToResourceRequest(input *rds.AddTagsToResourceInput) (req *request.Request, output *rds.AddTagsToResourceOutput) {
	c.inc("AddTagsToResource")
	return c.svc.AddTagsToResourceRequest(input)
}

// AddTagsToResource is a passthrough to the underlying AddTagsToResource method.
// It will increment the count of requests made to AddTagsToResource.
func (c *RDS) AddTagsToResource(input *rds.AddTagsToResourceInput) (*rds.AddTagsToResourceOutput, error) {
	c.inc("AddTagsToResource")
	return c.svc.AddTagsToResource(input)
}

// AddTagsToResourceWithContext is a passthrough to the underlying AddTagsToResourceWithContext method.
// It will increment the count of requests made to AddTagsToResource.
func (c *RDS) AddTagsToResourceWithContext(ctx aws.Context, input *rds.AddTagsToResourceInput, opts ...request.Option) (*rds.AddTagsToResourceOutput, error) {
	c.inc("AddTagsToResource")
	return c.svc.AddTagsToResourceWithContext(ctx, input, opts...)
}

// ApplyPendingMaintenanceActionRequest is a passthrough to the underlying ApplyPendingMaintenanceActionRequest.
// It will increment the count of requests made to ApplyPendingMaintenanceAction.
func (c *RDS) ApplyPendingMaintenanceActionRequest(input *rds.ApplyPendingMaintenanceActionInput) (req *request.Request, output *rds.ApplyPendingMaintenanceActionOutput) {
	c.inc("ApplyPendingMaintenanceAction")
	return c.svc.ApplyPendingMaintenanceActionRequest(input)
}

// ApplyPendingMaintenanceAction is a passthrough to the underlying ApplyPendingMaintenanceAction method.
// It will increment the count of requests made to ApplyPendingMaintenanceAction.
func (c *RDS) ApplyPendingMaintenanceAction(input *rds.ApplyPendingMaintenanceActionInput) (*rds.ApplyPendingMaintenanceActionOutput, error) {
	c.inc("ApplyPendingMaintenanceAction")
	return c.svc.ApplyPendingMaintenanceAction(input)
}

// ApplyPendingMaintenanceActionWithContext is a passthrough to the underlying ApplyPendingMaintenanceActionWithContext method.
// It will increment the count of requests made to ApplyPendingMaintenanceAction.
func (c *RDS) ApplyPendingMaintenanceActionWithContext(ctx aws.Context, input *rds.ApplyPendingMaintenanceActionInput, opts ...request.Option) (*rds.ApplyPendingMaintenanceActionOutput, error) {
	c.inc("ApplyPendingMaintenanceAction")
	return c.svc.ApplyPendingMaintenanceActionWithContext(ctx, input, opts...)
}

// AuthorizeDBSecurityGroupIngressRequest is a passthrough to the underlying AuthorizeDBSecurityGroupIngressRequest.
// It will increment the count of requests made to AuthorizeDBSecurityGroupIngress.
func (c *RDS) AuthorizeDBSecurityGroupIngressRequest(input *rds.AuthorizeDBSecurityGroupIngressInput) (req *request.Request, output *rds.AuthorizeDBSecurityGroupIngressOutput) {
	c.inc("AuthorizeDBSecurityGroupIngress")
	return c.svc.AuthorizeDBSecurityGroupIngressRequest(input)
}

// AuthorizeDBSecurityGroupIngress is a passthrough to the underlying AuthorizeDBSecurityGroupIngress method.
// It will increment the count of requests made to AuthorizeDBSecurityGroupIngress.
func (c *RDS) AuthorizeDBSecurityGroupIngress(input *rds.AuthorizeDBSecurityGroupIngressInput) (*rds.AuthorizeDBSecurityGroupIngressOutput, error) {
	c.inc("AuthorizeDBSecurityGroupIngress")
	return c.svc.AuthorizeDBSecurityGroupIngress(input)
}

// AuthorizeDBSecurityGroupIngressWithContext is a passthrough to the underlying AuthorizeDBSecurityGroupIngressWithContext method.
// It will increment the count of requests made to AuthorizeDBSecurityGroupIngress.
func (c *RDS) AuthorizeDBSecurityGroupIngressWithContext(ctx aws.Context, input *rds.AuthorizeDBSecurityGroupIngressInput, opts ...request.Option) (*rds.AuthorizeDBSecurityGroupIngressOutput, error) {
	c.inc("AuthorizeDBSecurityGroupIngress")
	return c.svc.AuthorizeDBSecurityGroupIngressWithContext(ctx, input, opts...)
}

// CopyDBClusterParameterGroupRequest is a passthrough to the underlying CopyDBClusterParameterGroupRequest.
// It will increment the count of requests made to CopyDBClusterParameterGroup.
func (c *RDS) CopyDBClusterParameterGroupRequest(input *rds.CopyDBClusterParameterGroupInput) (req *request.Request, output *rds.CopyDBClusterParameterGroupOutput) {
	c.inc("CopyDBClusterParameterGroup")
	return c.svc.CopyDBClusterParameterGroupRequest(input)
}

// CopyDBClusterParameterGroup is a passthrough to the underlying CopyDBClusterParameterGroup method.
// It will increment the count of requests made to CopyDBClusterParameterGroup.
func (c *RDS) CopyDBClusterParameterGroup(input *rds.CopyDBClusterParameterGroupInput) (*rds.CopyDBClusterParameterGroupOutput, error) {
	c.inc("CopyDBClusterParameterGroup")
	return c.svc.CopyDBClusterParameterGroup(input)
}

// CopyDBClusterParameterGroupWithContext is a passthrough to the underlying CopyDBClusterParameterGroupWithContext method.
// It will increment the count of requests made to CopyDBClusterParameterGroup.
func (c *RDS) CopyDBClusterParameterGroupWithContext(ctx aws.Context, input *rds.CopyDBClusterParameterGroupInput, opts ...request.Option) (*rds.CopyDBClusterParameterGroupOutput, error) {
	c.inc("CopyDBClusterParameterGroup")
	return c.svc.CopyDBClusterParameterGroupWithContext(ctx, input, opts...)
}

// CopyDBClusterSnapshotRequest is a passthrough to the underlying CopyDBClusterSnapshotRequest.
// It will increment the count of requests made to CopyDBClusterSnapshot.
func (c *RDS) CopyDBClusterSnapshotRequest(input *rds.CopyDBClusterSnapshotInput) (req *request.Request, output *rds.CopyDBClusterSnapshotOutput) {
	c.inc("CopyDBClusterSnapshot")
	return c.svc.CopyDBClusterSnapshotRequest(input)
}

// CopyDBClusterSnapshot is a passthrough to the underlying CopyDBClusterSnapshot method.
// It will increment the count of requests made to CopyDBClusterSnapshot.
func (c *RDS) CopyDBClusterSnapshot(input *rds.CopyDBClusterSnapshotInput) (*rds.CopyDBClusterSnapshotOutput, error) {
	c.inc("CopyDBClusterSnapshot")
	return c.svc.CopyDBClusterSnapshot(input)
}

// CopyDBClusterSnapshotWithContext is a passthrough to the underlying CopyDBClusterSnapshotWithContext method.
// It will increment the count of requests made to CopyDBClusterSnapshot.
func (c *RDS) CopyDBClusterSnapshotWithContext(ctx aws.Context, input *rds.CopyDBClusterSnapshotInput, opts ...request.Option) (*rds.CopyDBClusterSnapshotOutput, error) {
	c.inc("CopyDBClusterSnapshot")
	return c.svc.CopyDBClusterSnapshotWithContext(ctx, input, opts...)
}

// CopyDBParameterGroupRequest is a passthrough to the underlying CopyDBParameterGroupRequest.
// It will increment the count of requests made to CopyDBParameterGroup.
func (c *RDS) CopyDBParameterGroupRequest(input *rds.CopyDBParameterGroupInput) (req *request.Request, output *rds.CopyDBParameterGroupOutput) {
	c.inc("CopyDBParameterGroup")
	return c.svc.CopyDBParameterGroupRequest(input)
}

// CopyDBParameterGroup is a passthrough to the underlying CopyDBParameterGroup method.
// It will increment the count of requests made to CopyDBParameterGroup.
func (c *RDS) CopyDBParameterGroup(input *rds.CopyDBParameterGroupInput) (*rds.CopyDBParameterGroupOutput, error) {
	c.inc("CopyDBParameterGroup")
	return c.svc.CopyDBParameterGroup(input)
}

// CopyDBParameterGroupWithContext is a passthrough to the underlying CopyDBParameterGroupWithContext method.
// It will increment the count of requests made to CopyDBParameterGroup.
func (c *RDS) CopyDBParameterGroupWithContext(ctx aws.Context, input *rds.CopyDBParameterGroupInput, opts ...request.Option) (*rds.CopyDBParameterGroupOutput, error) {
	c.inc("CopyDBParameterGroup")
	return c.svc.CopyDBParameterGroupWithContext(ctx, input, opts...)
}

// CopyDBSnapshotRequest is a passthrough to the underlying CopyDBSnapshotRequest.
// It will increment the count of requests made to CopyDBSnapshot.
func (c *RDS) CopyDBSnapshotRequest(input *rds.CopyDBSnapshotInput) (req *request.Request, output *rds.CopyDBSnapshotOutput) {
	c.inc("CopyDBSnapshot")
	return c.svc.CopyDBSnapshotRequest(input)
}

// CopyDBSnapshot is a passthrough to the underlying CopyDBSnapshot method.
// It will increment the count of requests made to CopyDBSnapshot.
func (c *RDS) CopyDBSnapshot(input *rds.CopyDBSnapshotInput) (*rds.CopyDBSnapshotOutput, error) {
	c.inc("CopyDBSnapshot")
	return c.svc.CopyDBSnapshot(input)
}

// CopyDBSnapshotWithContext is a passthrough to the underlying CopyDBSnapshotWithContext method.
// It will increment the count of requests made to CopyDBSnapshot.
func (c *RDS) CopyDBSnapshotWithContext(ctx aws.Context, input *rds.CopyDBSnapshotInput, opts ...request.Option) (*rds.CopyDBSnapshotOutput, error) {
	c.inc("CopyDBSnapshot")
	return c.svc.CopyDBSnapshotWithContext(ctx, input, opts...)
}

// CopyOptionGroupRequest is a passthrough to the underlying CopyOptionGroupRequest.
// It will increment the count of requests made to CopyOptionGroup.
func (c *RDS) CopyOptionGroupRequest(input *rds.CopyOptionGroupInput) (req *request.Request, output *rds.CopyOptionGroupOutput) {
	c.inc("CopyOptionGroup")
	return c.svc.CopyOptionGroupRequest(input)
}

// CopyOptionGroup is a passthrough to the underlying CopyOptionGroup method.
// It will increment the count of requests made to CopyOptionGroup.
func (c *RDS) CopyOptionGroup(input *rds.CopyOptionGroupInput) (*rds.CopyOptionGroupOutput, error) {
	c.inc("CopyOptionGroup")
	return c.svc.CopyOptionGroup(input)
}

// CopyOptionGroupWithContext is a passthrough to the underlying CopyOptionGroupWithContext method.
// It will increment the count of requests made to CopyOptionGroup.
func (c *RDS) CopyOptionGroupWithContext(ctx aws.Context, input *rds.CopyOptionGroupInput, opts ...request.Option) (*rds.CopyOptionGroupOutput, error) {
	c.inc("CopyOptionGroup")
	return c.svc.CopyOptionGroupWithContext(ctx, input, opts...)
}

// CreateDBClusterRequest is a passthrough to the underlying CreateDBClusterRequest.
// It will increment the count of requests made to CreateDBCluster.
func (c *RDS) CreateDBClusterRequest(input *rds.CreateDBClusterInput) (req *request.Request, output *rds.CreateDBClusterOutput) {
	c.inc("CreateDBCluster")
	return c.svc.CreateDBClusterRequest(input)
}

// CreateDBCluster is a passthrough to the underlying CreateDBCluster method.
// It will increment the count of requests made to CreateDBCluster.
func (c *RDS) CreateDBCluster(input *rds.CreateDBClusterInput) (*rds.CreateDBClusterOutput, error) {
	c.inc("CreateDBCluster")
	return c.svc.CreateDBCluster(input)
}

// CreateDBClusterWithContext is a passthrough to the underlying CreateDBClusterWithContext method.
// It will increment the count of requests made to CreateDBCluster.
func (c *RDS) CreateDBClusterWithContext(ctx aws.Context, input *rds.CreateDBClusterInput, opts ...request.Option) (*rds.CreateDBClusterOutput, error) {
	c.inc("CreateDBCluster")
	return c.svc.CreateDBClusterWithContext(ctx, input, opts...)
}

// CreateDBClusterParameterGroupRequest is a passthrough to the underlying CreateDBClusterParameterGroupRequest.
// It will increment the count of requests made to CreateDBClusterParameterGroup.
func (c *RDS) CreateDBClusterParameterGroupRequest(input *rds.CreateDBClusterParameterGroupInput) (req *request.Request, output *rds.CreateDBClusterParameterGroupOutput) {
	c.inc("CreateDBClusterParameterGroup")
	return c.svc.CreateDBClusterParameterGroupRequest(input)
}

// CreateDBClusterParameterGroup is a passthrough to the underlying CreateDBClusterParameterGroup method.
// It will increment the count of requests made to CreateDBClusterParameterGroup.
func (c *RDS) CreateDBClusterParameterGroup(input *rds.CreateDBClusterParameterGroupInput) (*rds.CreateDBClusterParameterGroupOutput, error) {
	c.inc("CreateDBClusterParameterGroup")
	return c.svc.CreateDBClusterParameterGroup(input)
}

// CreateDBClusterParameterGroupWithContext is a passthrough to the underlying CreateDBClusterParameterGroupWithContext method.
// It will increment the count of requests made to CreateDBClusterParameterGroup.
func (c *RDS) CreateDBClusterParameterGroupWithContext(ctx aws.Context, input *rds.CreateDBClusterParameterGroupInput, opts ...request.Option) (*rds.CreateDBClusterParameterGroupOutput, error) {
	c.inc("CreateDBClusterParameterGroup")
	return c.svc.CreateDBClusterParameterGroupWithContext(ctx, input, opts...)
}

// CreateDBClusterSnapshotRequest is a passthrough to the underlying CreateDBClusterSnapshotRequest.
// It will increment the count of requests made to CreateDBClusterSnapshot.
func (c *RDS) CreateDBClusterSnapshotRequest(input *rds.CreateDBClusterSnapshotInput) (req *request.Request, output *rds.CreateDBClusterSnapshotOutput) {
	c.inc("CreateDBClusterSnapshot")
	return c.svc.CreateDBClusterSnapshotRequest(input)
}

// CreateDBClusterSnapshot is a passthrough to the underlying CreateDBClusterSnapshot method.
// It will increment the count of requests made to CreateDBClusterSnapshot.
func (c *RDS) CreateDBClusterSnapshot(input *rds.CreateDBClusterSnapshotInput) (*rds.CreateDBClusterSnapshotOutput, error) {
	c.inc("CreateDBClusterSnapshot")
	return c.svc.CreateDBClusterSnapshot(input)
}

// CreateDBClusterSnapshotWithContext is a passthrough to the underlying CreateDBClusterSnapshotWithContext method.
// It will increment the count of requests made to CreateDBClusterSnapshot.
func (c *RDS) CreateDBClusterSnapshotWithContext(ctx aws.Context, input *rds.CreateDBClusterSnapshotInput, opts ...request.Option) (*rds.CreateDBClusterSnapshotOutput, error) {
	c.inc("CreateDBClusterSnapshot")
	return c.svc.CreateDBClusterSnapshotWithContext(ctx, input, opts...)
}

// CreateDBInstanceRequest is a passthrough to the underlying CreateDBInstanceRequest.
// It will increment the count of requests made to CreateDBInstance.
func (c *RDS) CreateDBInstanceRequest(input *rds.CreateDBInstanceInput) (req *request.Request, output *rds.CreateDBInstanceOutput) {
	c.inc("CreateDBInstance")
	return c.svc.CreateDBInstanceRequest(input)
}

// CreateDBInstance is a passthrough to the underlying CreateDBInstance method.
// It will increment the count of requests made to CreateDBInstance.
func (c *RDS) CreateDBInstance(input *rds.CreateDBInstanceInput) (*rds.CreateDBInstanceOutput, error) {
	c.inc("CreateDBInstance")
	return c.svc.CreateDBInstance(input)
}

// CreateDBInstanceWithContext is a passthrough to the underlying CreateDBInstanceWithContext method.
// It will increment the count of requests made to CreateDBInstance.
func (c *RDS) CreateDBInstanceWithContext(ctx aws.Context, input *rds.CreateDBInstanceInput, opts ...request.Option) (*rds.CreateDBInstanceOutput, error) {
	c.inc("CreateDBInstance")
	return c.svc.CreateDBInstanceWithContext(ctx, input, opts...)
}

// CreateDBInstanceReadReplicaRequest is a passthrough to the underlying CreateDBInstanceReadReplicaRequest.
// It will increment the count of requests made to CreateDBInstanceReadReplica.
func (c *RDS) CreateDBInstanceReadReplicaRequest(input *rds.CreateDBInstanceReadReplicaInput) (req *request.Request, output *rds.CreateDBInstanceReadReplicaOutput) {
	c.inc("CreateDBInstanceReadReplica")
	return c.svc.CreateDBInstanceReadReplicaRequest(input)
}

// CreateDBInstanceReadReplica is a passthrough to the underlying CreateDBInstanceReadReplica method.
// It will increment the count of requests made to CreateDBInstanceReadReplica.
func (c *RDS) CreateDBInstanceReadReplica(input *rds.CreateDBInstanceReadReplicaInput) (*rds.CreateDBInstanceReadReplicaOutput, error) {
	c.inc("CreateDBInstanceReadReplica")
	return c.svc.CreateDBInstanceReadReplica(input)
}

// CreateDBInstanceReadReplicaWithContext is a passthrough to the underlying CreateDBInstanceReadReplicaWithContext method.
// It will increment the count of requests made to CreateDBInstanceReadReplica.
func (c *RDS) CreateDBInstanceReadReplicaWithContext(ctx aws.Context, input *rds.CreateDBInstanceReadReplicaInput, opts ...request.Option) (*rds.CreateDBInstanceReadReplicaOutput, error) {
	c.inc("CreateDBInstanceReadReplica")
	return c.svc.CreateDBInstanceReadReplicaWithContext(ctx, input, opts...)
}

// CreateDBParameterGroupRequest is a passthrough to the underlying CreateDBParameterGroupRequest.
// It will increment the count of requests made to CreateDBParameterGroup.
func (c *RDS) CreateDBParameterGroupRequest(input *rds.CreateDBParameterGroupInput) (req *request.Request, output *rds.CreateDBParameterGroupOutput) {
	c.inc("CreateDBParameterGroup")
	return c.svc.CreateDBParameterGroupRequest(input)
}

// CreateDBParameterGroup is a passthrough to the underlying CreateDBParameterGroup method.
// It will increment the count of requests made to CreateDBParameterGroup.
func (c *RDS) CreateDBParameterGroup(input *rds.CreateDBParameterGroupInput) (*rds.CreateDBParameterGroupOutput, error) {
	c.inc("CreateDBParameterGroup")
	return c.svc.CreateDBParameterGroup(input)
}

// CreateDBParameterGroupWithContext is a passthrough to the underlying CreateDBParameterGroupWithContext method.
// It will increment the count of requests made to CreateDBParameterGroup.
func (c *RDS) CreateDBParameterGroupWithContext(ctx aws.Context, input *rds.CreateDBParameterGroupInput, opts ...request.Option) (*rds.CreateDBParameterGroupOutput, error) {
	c.inc("CreateDBParameterGroup")
	return c.svc.CreateDBParameterGroupWithContext(ctx, input, opts...)
}

// CreateDBSecurityGroupRequest is a passthrough to the underlying CreateDBSecurityGroupRequest.
// It will increment the count of requests made to CreateDBSecurityGroup.
func (c *RDS) CreateDBSecurityGroupRequest(input *rds.CreateDBSecurityGroupInput) (req *request.Request, output *rds.CreateDBSecurityGroupOutput) {
	c.inc("CreateDBSecurityGroup")
	return c.svc.CreateDBSecurityGroupRequest(input)
}

// CreateDBSecurityGroup is a passthrough to the underlying CreateDBSecurityGroup method.
// It will increment the count of requests made to CreateDBSecurityGroup.
func (c *RDS) CreateDBSecurityGroup(input *rds.CreateDBSecurityGroupInput) (*rds.CreateDBSecurityGroupOutput, error) {
	c.inc("CreateDBSecurityGroup")
	return c.svc.CreateDBSecurityGroup(input)
}

// CreateDBSecurityGroupWithContext is a passthrough to the underlying CreateDBSecurityGroupWithContext method.
// It will increment the count of requests made to CreateDBSecurityGroup.
func (c *RDS) CreateDBSecurityGroupWithContext(ctx aws.Context, input *rds.CreateDBSecurityGroupInput, opts ...request.Option) (*rds.CreateDBSecurityGroupOutput, error) {
	c.inc("CreateDBSecurityGroup")
	return c.svc.CreateDBSecurityGroupWithContext(ctx, input, opts...)
}

// CreateDBSnapshotRequest is a passthrough to the underlying CreateDBSnapshotRequest.
// It will increment the count of requests made to CreateDBSnapshot.
func (c *RDS) CreateDBSnapshotRequest(input *rds.CreateDBSnapshotInput) (req *request.Request, output *rds.CreateDBSnapshotOutput) {
	c.inc("CreateDBSnapshot")
	return c.svc.CreateDBSnapshotRequest(input)
}

// CreateDBSnapshot is a passthrough to the underlying CreateDBSnapshot method.
// It will increment the count of requests made to CreateDBSnapshot.
func (c *RDS) CreateDBSnapshot(input *rds.CreateDBSnapshotInput) (*rds.CreateDBSnapshotOutput, error) {
	c.inc("CreateDBSnapshot")
	return c.svc.CreateDBSnapshot(input)
}

// CreateDBSnapshotWithContext is a passthrough to the underlying CreateDBSnapshotWithContext method.
// It will increment the count of requests made to CreateDBSnapshot.
func (c *RDS) CreateDBSnapshotWithContext(ctx aws.Context, input *rds.CreateDBSnapshotInput, opts ...request.Option) (*rds.CreateDBSnapshotOutput, error) {
	c.inc("CreateDBSnapshot")
	return c.svc.CreateDBSnapshotWithContext(ctx, input, opts...)
}

// CreateDBSubnetGroupRequest is a passthrough to the underlying CreateDBSubnetGroupRequest.
// It will increment the count of requests made to CreateDBSubnetGroup.
func (c *RDS) CreateDBSubnetGroupRequest(input *rds.CreateDBSubnetGroupInput) (req *request.Request, output *rds.CreateDBSubnetGroupOutput) {
	c.inc("CreateDBSubnetGroup")
	return c.svc.CreateDBSubnetGroupRequest(input)
}

// CreateDBSubnetGroup is a passthrough to the underlying CreateDBSubnetGroup method.
// It will increment the count of requests made to CreateDBSubnetGroup.
func (c *RDS) CreateDBSubnetGroup(input *rds.CreateDBSubnetGroupInput) (*rds.CreateDBSubnetGroupOutput, error) {
	c.inc("CreateDBSubnetGroup")
	return c.svc.CreateDBSubnetGroup(input)
}

// CreateDBSubnetGroupWithContext is a passthrough to the underlying CreateDBSubnetGroupWithContext method.
// It will increment the count of requests made to CreateDBSubnetGroup.
func (c *RDS) CreateDBSubnetGroupWithContext(ctx aws.Context, input *rds.CreateDBSubnetGroupInput, opts ...request.Option) (*rds.CreateDBSubnetGroupOutput, error) {
	c.inc("CreateDBSubnetGroup")
	return c.svc.CreateDBSubnetGroupWithContext(ctx, input, opts...)
}

// CreateEventSubscriptionRequest is a passthrough to the underlying CreateEventSubscriptionRequest.
// It will increment the count of requests made to CreateEventSubscription.
func (c *RDS) CreateEventSubscriptionRequest(input *rds.CreateEventSubscriptionInput) (req *request.Request, output *rds.CreateEventSubscriptionOutput) {
	c.inc("CreateEventSubscription")
	return c.svc.CreateEventSubscriptionRequest(input)
}

// CreateEventSubscription is a passthrough to the underlying CreateEventSubscription method.
// It will increment the count of requests made to CreateEventSubscription.
func (c *RDS) CreateEventSubscription(input *rds.CreateEventSubscriptionInput) (*rds.CreateEventSubscriptionOutput, error) {
	c.inc("CreateEventSubscription")
	return c.svc.CreateEventSubscription(input)
}

// CreateEventSubscriptionWithContext is a passthrough to the underlying CreateEventSubscriptionWithContext method.
// It will increment the count of requests made to CreateEventSubscription.
func (c *RDS) CreateEventSubscriptionWithContext(ctx aws.Context, input *rds.CreateEventSubscriptionInput, opts ...request.Option) (*rds.CreateEventSubscriptionOutput, error) {
	c.inc("CreateEventSubscription")
	return c.svc.CreateEventSubscriptionWithContext(ctx, input, opts...)
}

// CreateOptionGroupRequest is a passthrough to the underlying CreateOptionGroupRequest.
// It will increment the count of requests made to CreateOptionGroup.
func (c *RDS) CreateOptionGroupRequest(input *rds.CreateOptionGroupInput) (req *request.Request, output *rds.CreateOptionGroupOutput) {
	c.inc("CreateOptionGroup")
	return c.svc.CreateOptionGroupRequest(input)
}

// CreateOptionGroup is a passthrough to the underlying CreateOptionGroup method.
// It will increment the count of requests made to CreateOptionGroup.
func (c *RDS) CreateOptionGroup(input *rds.CreateOptionGroupInput) (*rds.CreateOptionGroupOutput, error) {
	c.inc("CreateOptionGroup")
	return c.svc.CreateOptionGroup(input)
}

// CreateOptionGroupWithContext is a passthrough to the underlying CreateOptionGroupWithContext method.
// It will increment the count of requests made to CreateOptionGroup.
func (c *RDS) CreateOptionGroupWithContext(ctx aws.Context, input *rds.CreateOptionGroupInput, opts ...request.Option) (*rds.CreateOptionGroupOutput, error) {
	c.inc("CreateOptionGroup")
	return c.svc.CreateOptionGroupWithContext(ctx, input, opts...)
}

// DeleteDBClusterRequest is a passthrough to the underlying DeleteDBClusterRequest.
// It will increment the count of requests made to DeleteDBCluster.
func (c *RDS) DeleteDBClusterRequest(input *rds.DeleteDBClusterInput) (req *request.Request, output *rds.DeleteDBClusterOutput) {
	c.inc("DeleteDBCluster")
	return c.svc.DeleteDBClusterRequest(input)
}

// DeleteDBCluster is a passthrough to the underlying DeleteDBCluster method.
// It will increment the count of requests made to DeleteDBCluster.
func (c *RDS) DeleteDBCluster(input *rds.DeleteDBClusterInput) (*rds.DeleteDBClusterOutput, error) {
	c.inc("DeleteDBCluster")
	return c.svc.DeleteDBCluster(input)
}

// DeleteDBClusterWithContext is a passthrough to the underlying DeleteDBClusterWithContext method.
// It will increment the count of requests made to DeleteDBCluster.
func (c *RDS) DeleteDBClusterWithContext(ctx aws.Context, input *rds.DeleteDBClusterInput, opts ...request.Option) (*rds.DeleteDBClusterOutput, error) {
	c.inc("DeleteDBCluster")
	return c.svc.DeleteDBClusterWithContext(ctx, input, opts...)
}

// DeleteDBClusterParameterGroupRequest is a passthrough to the underlying DeleteDBClusterParameterGroupRequest.
// It will increment the count of requests made to DeleteDBClusterParameterGroup.
func (c *RDS) DeleteDBClusterParameterGroupRequest(input *rds.DeleteDBClusterParameterGroupInput) (req *request.Request, output *rds.DeleteDBClusterParameterGroupOutput) {
	c.inc("DeleteDBClusterParameterGroup")
	return c.svc.DeleteDBClusterParameterGroupRequest(input)
}

// DeleteDBClusterParameterGroup is a passthrough to the underlying DeleteDBClusterParameterGroup method.
// It will increment the count of requests made to DeleteDBClusterParameterGroup.
func (c *RDS) DeleteDBClusterParameterGroup(input *rds.DeleteDBClusterParameterGroupInput) (*rds.DeleteDBClusterParameterGroupOutput, error) {
	c.inc("DeleteDBClusterParameterGroup")
	return c.svc.DeleteDBClusterParameterGroup(input)
}

// DeleteDBClusterParameterGroupWithContext is a passthrough to the underlying DeleteDBClusterParameterGroupWithContext method.
// It will increment the count of requests made to DeleteDBClusterParameterGroup.
func (c *RDS) DeleteDBClusterParameterGroupWithContext(ctx aws.Context, input *rds.DeleteDBClusterParameterGroupInput, opts ...request.Option) (*rds.DeleteDBClusterParameterGroupOutput, error) {
	c.inc("DeleteDBClusterParameterGroup")
	return c.svc.DeleteDBClusterParameterGroupWithContext(ctx, input, opts...)
}

// DeleteDBClusterSnapshotRequest is a passthrough to the underlying DeleteDBClusterSnapshotRequest.
// It will increment the count of requests made to DeleteDBClusterSnapshot.
func (c *RDS) DeleteDBClusterSnapshotRequest(input *rds.DeleteDBClusterSnapshotInput) (req *request.Request, output *rds.DeleteDBClusterSnapshotOutput) {
	c.inc("DeleteDBClusterSnapshot")
	return c.svc.DeleteDBClusterSnapshotRequest(input)
}

// DeleteDBClusterSnapshot is a passthrough to the underlying DeleteDBClusterSnapshot method.
// It will increment the count of requests made to DeleteDBClusterSnapshot.
func (c *RDS) DeleteDBClusterSnapshot(input *rds.DeleteDBClusterSnapshotInput) (*rds.DeleteDBClusterSnapshotOutput, error) {
	c.inc("DeleteDBClusterSnapshot")
	return c.svc.DeleteDBClusterSnapshot(input)
}

// DeleteDBClusterSnapshotWithContext is a passthrough to the underlying DeleteDBClusterSnapshotWithContext method.
// It will increment the count of requests made to DeleteDBClusterSnapshot.
func (c *RDS) DeleteDBClusterSnapshotWithContext(ctx aws.Context, input *rds.DeleteDBClusterSnapshotInput, opts ...request.Option) (*rds.DeleteDBClusterSnapshotOutput, error) {
	c.inc("DeleteDBClusterSnapshot")
	return c.svc.DeleteDBClusterSnapshotWithContext(ctx, input, opts...)
}

// DeleteDBInstanceRequest is a passthrough to the underlying DeleteDBInstanceRequest.
// It will increment the count of requests made to DeleteDBInstance.
func (c *RDS) DeleteDBInstanceRequest(input *rds.DeleteDBInstanceInput) (req *request.Request, output *rds.DeleteDBInstanceOutput) {
	c.inc("DeleteDBInstance")
	return c.svc.DeleteDBInstanceRequest(input)
}

// DeleteDBInstance is a passthrough to the underlying DeleteDBInstance method.
// It will increment the count of requests made to DeleteDBInstance.
func (c *RDS) DeleteDBInstance(input *rds.DeleteDBInstanceInput) (*rds.DeleteDBInstanceOutput, error) {
	c.inc("DeleteDBInstance")
	return c.svc.DeleteDBInstance(input)
}

// DeleteDBInstanceWithContext is a passthrough to the underlying DeleteDBInstanceWithContext method.
// It will increment the count of requests made to DeleteDBInstance.
func (c *RDS) DeleteDBInstanceWithContext(ctx aws.Context, input *rds.DeleteDBInstanceInput, opts ...request.Option) (*rds.DeleteDBInstanceOutput, error) {
	c.inc("DeleteDBInstance")
	return c.svc.DeleteDBInstanceWithContext(ctx, input, opts...)
}

// DeleteDBParameterGroupRequest is a passthrough to the underlying DeleteDBParameterGroupRequest.
// It will increment the count of requests made to DeleteDBParameterGroup.
func (c *RDS) DeleteDBParameterGroupRequest(input *rds.DeleteDBParameterGroupInput) (req *request.Request, output *rds.DeleteDBParameterGroupOutput) {
	c.inc("DeleteDBParameterGroup")
	return c.svc.DeleteDBParameterGroupRequest(input)
}

// DeleteDBParameterGroup is a passthrough to the underlying DeleteDBParameterGroup method.
// It will increment the count of requests made to DeleteDBParameterGroup.
func (c *RDS) DeleteDBParameterGroup(input *rds.DeleteDBParameterGroupInput) (*rds.DeleteDBParameterGroupOutput, error) {
	c.inc("DeleteDBParameterGroup")
	return c.svc.DeleteDBParameterGroup(input)
}

// DeleteDBParameterGroupWithContext is a passthrough to the underlying DeleteDBParameterGroupWithContext method.
// It will increment the count of requests made to DeleteDBParameterGroup.
func (c *RDS) DeleteDBParameterGroupWithContext(ctx aws.Context, input *rds.DeleteDBParameterGroupInput, opts ...request.Option) (*rds.DeleteDBParameterGroupOutput, error) {
	c.inc("DeleteDBParameterGroup")
	return c.svc.DeleteDBParameterGroupWithContext(ctx, input, opts...)
}

// DeleteDBSecurityGroupRequest is a passthrough to the underlying DeleteDBSecurityGroupRequest.
// It will increment the count of requests made to DeleteDBSecurityGroup.
func (c *RDS) DeleteDBSecurityGroupRequest(input *rds.DeleteDBSecurityGroupInput) (req *request.Request, output *rds.DeleteDBSecurityGroupOutput) {
	c.inc("DeleteDBSecurityGroup")
	return c.svc.DeleteDBSecurityGroupRequest(input)
}

// DeleteDBSecurityGroup is a passthrough to the underlying DeleteDBSecurityGroup method.
// It will increment the count of requests made to DeleteDBSecurityGroup.
func (c *RDS) DeleteDBSecurityGroup(input *rds.DeleteDBSecurityGroupInput) (*rds.DeleteDBSecurityGroupOutput, error) {
	c.inc("DeleteDBSecurityGroup")
	return c.svc.DeleteDBSecurityGroup(input)
}

// DeleteDBSecurityGroupWithContext is a passthrough to the underlying DeleteDBSecurityGroupWithContext method.
// It will increment the count of requests made to DeleteDBSecurityGroup.
func (c *RDS) DeleteDBSecurityGroupWithContext(ctx aws.Context, input *rds.DeleteDBSecurityGroupInput, opts ...request.Option) (*rds.DeleteDBSecurityGroupOutput, error) {
	c.inc("DeleteDBSecurityGroup")
	return c.svc.DeleteDBSecurityGroupWithContext(ctx, input, opts...)
}

// DeleteDBSnapshotRequest is a passthrough to the underlying DeleteDBSnapshotRequest.
// It will increment the count of requests made to DeleteDBSnapshot.
func (c *RDS) DeleteDBSnapshotRequest(input *rds.DeleteDBSnapshotInput) (req *request.Request, output *rds.DeleteDBSnapshotOutput) {
	c.inc("DeleteDBSnapshot")
	return c.svc.DeleteDBSnapshotRequest(input)
}

// DeleteDBSnapshot is a passthrough to the underlying DeleteDBSnapshot method.
// It will increment the count of requests made to DeleteDBSnapshot.
func (c *RDS) DeleteDBSnapshot(input *rds.DeleteDBSnapshotInput) (*rds.DeleteDBSnapshotOutput, error) {
	c.inc("DeleteDBSnapshot")
	return c.svc.DeleteDBSnapshot(input)
}

// DeleteDBSnapshotWithContext is a passthrough to the underlying DeleteDBSnapshotWithContext method.
// It will increment the count of requests made to DeleteDBSnapshot.
func (c *RDS) DeleteDBSnapshotWithContext(ctx aws.Context, input *rds.DeleteDBSnapshotInput, opts ...request.Option) (*rds.DeleteDBSnapshotOutput, error) {
	c.inc("DeleteDBSnapshot")
	return c.svc.DeleteDBSnapshotWithContext(ctx, input, opts...)
}

// DeleteDBSubnetGroupRequest is a passthrough to the underlying DeleteDBSubnetGroupRequest.
// It will increment the count of requests made to DeleteDBSubnetGroup.
func (c *RDS) DeleteDBSubnetGroupRequest(input *rds.DeleteDBSubnetGroupInput) (req *request.Request, output *rds.DeleteDBSubnetGroupOutput) {
	c.inc("DeleteDBSubnetGroup")
	return c.svc.DeleteDBSubnetGroupRequest(input)
}

// DeleteDBSubnetGroup is a passthrough to the underlying DeleteDBSubnetGroup method.
// It will increment the count of requests made to DeleteDBSubnetGroup.
func (c *RDS) DeleteDBSubnetGroup(input *rds.DeleteDBSubnetGroupInput) (*rds.DeleteDBSubnetGroupOutput, error) {
	c.inc("DeleteDBSubnetGroup")
	return c.svc.DeleteDBSubnetGroup(input)
}

// DeleteDBSubnetGroupWithContext is a passthrough to the underlying DeleteDBSubnetGroupWithContext method.
// It will increment the count of requests made to DeleteDBSubnetGroup.
func (c *RDS) DeleteDBSubnetGroupWithContext(ctx aws.Context, input *rds.DeleteDBSubnetGroupInput, opts ...request.Option) (*rds.DeleteDBSubnetGroupOutput, error) {
	c.inc("DeleteDBSubnetGroup")
	return c.svc.DeleteDBSubnetGroupWithContext(ctx, input, opts...)
}

// DeleteEventSubscriptionRequest is a passthrough to the underlying DeleteEventSubscriptionRequest.
// It will increment the count of requests made to DeleteEventSubscription.
func (c *RDS) DeleteEventSubscriptionRequest(input *rds.DeleteEventSubscriptionInput) (req *request.Request, output *rds.DeleteEventSubscriptionOutput) {
	c.inc("DeleteEventSubscription")
	return c.svc.DeleteEventSubscriptionRequest(input)
}

// DeleteEventSubscription is a passthrough to the underlying DeleteEventSubscription method.
// It will increment the count of requests made to DeleteEventSubscription.
func (c *RDS) DeleteEventSubscription(input *rds.DeleteEventSubscriptionInput) (*rds.DeleteEventSubscriptionOutput, error) {
	c.inc("DeleteEventSubscription")
	return c.svc.DeleteEventSubscription(input)
}

// DeleteEventSubscriptionWithContext is a passthrough to the underlying DeleteEventSubscriptionWithContext method.
// It will increment the count of requests made to DeleteEventSubscription.
func (c *RDS) DeleteEventSubscriptionWithContext(ctx aws.Context, input *rds.DeleteEventSubscriptionInput, opts ...request.Option) (*rds.DeleteEventSubscriptionOutput, error) {
	c.inc("DeleteEventSubscription")
	return c.svc.DeleteEventSubscriptionWithContext(ctx, input, opts...)
}

// DeleteOptionGroupRequest is a passthrough to the underlying DeleteOptionGroupRequest.
// It will increment the count of requests made to DeleteOptionGroup.
func (c *RDS) DeleteOptionGroupRequest(input *rds.DeleteOptionGroupInput) (req *request.Request, output *rds.DeleteOptionGroupOutput) {
	c.inc("DeleteOptionGroup")
	return c.svc.DeleteOptionGroupRequest(input)
}

// DeleteOptionGroup is a passthrough to the underlying DeleteOptionGroup method.
// It will increment the count of requests made to DeleteOptionGroup.
func (c *RDS) DeleteOptionGroup(input *rds.DeleteOptionGroupInput) (*rds.DeleteOptionGroupOutput, error) {
	c.inc("DeleteOptionGroup")
	return c.svc.DeleteOptionGroup(input)
}

// DeleteOptionGroupWithContext is a passthrough to the underlying DeleteOptionGroupWithContext method.
// It will increment the count of requests made to DeleteOptionGroup.
func (c *RDS) DeleteOptionGroupWithContext(ctx aws.Context, input *rds.DeleteOptionGroupInput, opts ...request.Option) (*rds.DeleteOptionGroupOutput, error) {
	c.inc("DeleteOptionGroup")
	return c.svc.DeleteOptionGroupWithContext(ctx, input, opts...)
}

// DescribeAccountAttributesRequest is a passthrough to the underlying DescribeAccountAttributesRequest.
// It will increment the count of requests made to DescribeAccountAttributes.
func (c *RDS) DescribeAccountAttributesRequest(input *rds.DescribeAccountAttributesInput) (req *request.Request, output *rds.DescribeAccountAttributesOutput) {
	c.inc("DescribeAccountAttributes")
	return c.svc.DescribeAccountAttributesRequest(input)
}

// DescribeAccountAttributes is a passthrough to the underlying DescribeAccountAttributes method.
// It will increment the count of requests made to DescribeAccountAttributes.
func (c *RDS) DescribeAccountAttributes(input *rds.DescribeAccountAttributesInput) (*rds.DescribeAccountAttributesOutput, error) {
	c.inc("DescribeAccountAttributes")
	return c.svc.DescribeAccountAttributes(input)
}

// DescribeAccountAttributesWithContext is a passthrough to the underlying DescribeAccountAttributesWithContext method.
// It will increment the count of requests made to DescribeAccountAttributes.
func (c *RDS) DescribeAccountAttributesWithContext(ctx aws.Context, input *rds.DescribeAccountAttributesInput, opts ...request.Option) (*rds.DescribeAccountAttributesOutput, error) {
	c.inc("DescribeAccountAttributes")
	return c.svc.DescribeAccountAttributesWithContext(ctx, input, opts...)
}

// DescribeCertificatesRequest is a passthrough to the underlying DescribeCertificatesRequest.
// It will increment the count of requests made to DescribeCertificates.
func (c *RDS) DescribeCertificatesRequest(input *rds.DescribeCertificatesInput) (req *request.Request, output *rds.DescribeCertificatesOutput) {
	c.inc("DescribeCertificates")
	return c.svc.DescribeCertificatesRequest(input)
}

// DescribeCertificates is a passthrough to the underlying DescribeCertificates method.
// It will increment the count of requests made to DescribeCertificates.
func (c *RDS) DescribeCertificates(input *rds.DescribeCertificatesInput) (*rds.DescribeCertificatesOutput, error) {
	c.inc("DescribeCertificates")
	return c.svc.DescribeCertificates(input)
}

// DescribeCertificatesWithContext is a passthrough to the underlying DescribeCertificatesWithContext method.
// It will increment the count of requests made to DescribeCertificates.
func (c *RDS) DescribeCertificatesWithContext(ctx aws.Context, input *rds.DescribeCertificatesInput, opts ...request.Option) (*rds.DescribeCertificatesOutput, error) {
	c.inc("DescribeCertificates")
	return c.svc.DescribeCertificatesWithContext(ctx, input, opts...)
}

// DescribeDBClusterParameterGroupsRequest is a passthrough to the underlying DescribeDBClusterParameterGroupsRequest.
// It will increment the count of requests made to DescribeDBClusterParameterGroups.
func (c *RDS) DescribeDBClusterParameterGroupsRequest(input *rds.DescribeDBClusterParameterGroupsInput) (req *request.Request, output *rds.DescribeDBClusterParameterGroupsOutput) {
	c.inc("DescribeDBClusterParameterGroups")
	return c.svc.DescribeDBClusterParameterGroupsRequest(input)
}

// DescribeDBClusterParameterGroups is a passthrough to the underlying DescribeDBClusterParameterGroups method.
// It will increment the count of requests made to DescribeDBClusterParameterGroups.
func (c *RDS) DescribeDBClusterParameterGroups(input *rds.DescribeDBClusterParameterGroupsInput) (*rds.DescribeDBClusterParameterGroupsOutput, error) {
	c.inc("DescribeDBClusterParameterGroups")
	return c.svc.DescribeDBClusterParameterGroups(input)
}

// DescribeDBClusterParameterGroupsWithContext is a passthrough to the underlying DescribeDBClusterParameterGroupsWithContext method.
// It will increment the count of requests made to DescribeDBClusterParameterGroups.
func (c *RDS) DescribeDBClusterParameterGroupsWithContext(ctx aws.Context, input *rds.DescribeDBClusterParameterGroupsInput, opts ...request.Option) (*rds.DescribeDBClusterParameterGroupsOutput, error) {
	c.inc("DescribeDBClusterParameterGroups")
	return c.svc.DescribeDBClusterParameterGroupsWithContext(ctx, input, opts...)
}

// DescribeDBClusterParametersRequest is a passthrough to the underlying DescribeDBClusterParametersRequest.
// It will increment the count of requests made to DescribeDBClusterParameters.
func (c *RDS) DescribeDBClusterParametersRequest(input *rds.DescribeDBClusterParametersInput) (req *request.Request, output *rds.DescribeDBClusterParametersOutput) {
	c.inc("DescribeDBClusterParameters")
	return c.svc.DescribeDBClusterParametersRequest(input)
}

// DescribeDBClusterParameters is a passthrough to the underlying DescribeDBClusterParameters method.
// It will increment the count of requests made to DescribeDBClusterParameters.
func (c *RDS) DescribeDBClusterParameters(input *rds.DescribeDBClusterParametersInput) (*rds.DescribeDBClusterParametersOutput, error) {
	c.inc("DescribeDBClusterParameters")
	return c.svc.DescribeDBClusterParameters(input)
}

// DescribeDBClusterParametersWithContext is a passthrough to the underlying DescribeDBClusterParametersWithContext method.
// It will increment the count of requests made to DescribeDBClusterParameters.
func (c *RDS) DescribeDBClusterParametersWithContext(ctx aws.Context, input *rds.DescribeDBClusterParametersInput, opts ...request.Option) (*rds.DescribeDBClusterParametersOutput, error) {
	c.inc("DescribeDBClusterParameters")
	return c.svc.DescribeDBClusterParametersWithContext(ctx, input, opts...)
}

// DescribeDBClusterSnapshotAttributesRequest is a passthrough to the underlying DescribeDBClusterSnapshotAttributesRequest.
// It will increment the count of requests made to DescribeDBClusterSnapshotAttributes.
func (c *RDS) DescribeDBClusterSnapshotAttributesRequest(input *rds.DescribeDBClusterSnapshotAttributesInput) (req *request.Request, output *rds.DescribeDBClusterSnapshotAttributesOutput) {
	c.inc("DescribeDBClusterSnapshotAttributes")
	return c.svc.DescribeDBClusterSnapshotAttributesRequest(input)
}

// DescribeDBClusterSnapshotAttributes is a passthrough to the underlying DescribeDBClusterSnapshotAttributes method.
// It will increment the count of requests made to DescribeDBClusterSnapshotAttributes.
func (c *RDS) DescribeDBClusterSnapshotAttributes(input *rds.DescribeDBClusterSnapshotAttributesInput) (*rds.DescribeDBClusterSnapshotAttributesOutput, error) {
	c.inc("DescribeDBClusterSnapshotAttributes")
	return c.svc.DescribeDBClusterSnapshotAttributes(input)
}

// DescribeDBClusterSnapshotAttributesWithContext is a passthrough to the underlying DescribeDBClusterSnapshotAttributesWithContext method.
// It will increment the count of requests made to DescribeDBClusterSnapshotAttributes.
func (c *RDS) DescribeDBClusterSnapshotAttributesWithContext(ctx aws.Context, input *rds.DescribeDBClusterSnapshotAttributesInput, opts ...request.Option) (*rds.DescribeDBClusterSnapshotAttributesOutput, error) {
	c.inc("DescribeDBClusterSnapshotAttributes")
	return c.svc.DescribeDBClusterSnapshotAttributesWithContext(ctx, input, opts...)
}

// DescribeDBClusterSnapshotsRequest is a passthrough to the underlying DescribeDBClusterSnapshotsRequest.
// It will increment the count of requests made to DescribeDBClusterSnapshots.
func (c *RDS) DescribeDBClusterSnapshotsRequest(input *rds.DescribeDBClusterSnapshotsInput) (req *request.Request, output *rds.DescribeDBClusterSnapshotsOutput) {
	c.inc("DescribeDBClusterSnapshots")
	return c.svc.DescribeDBClusterSnapshotsRequest(input)
}

// DescribeDBClusterSnapshots is a passthrough to the underlying DescribeDBClusterSnapshots method.
// It will increment the count of requests made to DescribeDBClusterSnapshots.
func (c *RDS) DescribeDBClusterSnapshots(input *rds.DescribeDBClusterSnapshotsInput) (*rds.DescribeDBClusterSnapshotsOutput, error) {
	c.inc("DescribeDBClusterSnapshots")
	return c.svc.DescribeDBClusterSnapshots(input)
}

// DescribeDBClusterSnapshotsWithContext is a passthrough to the underlying DescribeDBClusterSnapshotsWithContext method.
// It will increment the count of requests made to DescribeDBClusterSnapshots.
func (c *RDS) DescribeDBClusterSnapshotsWithContext(ctx aws.Context, input *rds.DescribeDBClusterSnapshotsInput, opts ...request.Option) (*rds.DescribeDBClusterSnapshotsOutput, error) {
	c.inc("DescribeDBClusterSnapshots")
	return c.svc.DescribeDBClusterSnapshotsWithContext(ctx, input, opts...)
}

// DescribeDBClustersRequest is a passthrough to the underlying DescribeDBClustersRequest.
// It will increment the count of requests made to DescribeDBClusters.
func (c *RDS) DescribeDBClustersRequest(input *rds.DescribeDBClustersInput) (req *request.Request, output *rds.DescribeDBClustersOutput) {
	c.inc("DescribeDBClusters")
	return c.svc.DescribeDBClustersRequest(input)
}

// DescribeDBClusters is a passthrough to the underlying DescribeDBClusters method.
// It will increment the count of requests made to DescribeDBClusters.
func (c *RDS) DescribeDBClusters(input *rds.DescribeDBClustersInput) (*rds.DescribeDBClustersOutput, error) {
	c.inc("DescribeDBClusters")
	return c.svc.DescribeDBClusters(input)
}

// DescribeDBClustersWithContext is a passthrough to the underlying DescribeDBClustersWithContext method.
// It will increment the count of requests made to DescribeDBClusters.
func (c *RDS) DescribeDBClustersWithContext(ctx aws.Context, input *rds.DescribeDBClustersInput, opts ...request.Option) (*rds.DescribeDBClustersOutput, error) {
	c.inc("DescribeDBClusters")
	return c.svc.DescribeDBClustersWithContext(ctx, input, opts...)
}

// DescribeDBEngineVersionsRequest is a passthrough to the underlying DescribeDBEngineVersionsRequest.
// It will increment the count of requests made to DescribeDBEngineVersions.
func (c *RDS) DescribeDBEngineVersionsRequest(input *rds.DescribeDBEngineVersionsInput) (req *request.Request, output *rds.DescribeDBEngineVersionsOutput) {
	c.inc("DescribeDBEngineVersions")
	return c.svc.DescribeDBEngineVersionsRequest(input)
}

// DescribeDBEngineVersions is a passthrough to the underlying DescribeDBEngineVersions method.
// It will increment the count of requests made to DescribeDBEngineVersions.
func (c *RDS) DescribeDBEngineVersions(input *rds.DescribeDBEngineVersionsInput) (*rds.DescribeDBEngineVersionsOutput, error) {
	c.inc("DescribeDBEngineVersions")
	return c.svc.DescribeDBEngineVersions(input)
}

// DescribeDBEngineVersionsWithContext is a passthrough to the underlying DescribeDBEngineVersionsWithContext method.
// It will increment the count of requests made to DescribeDBEngineVersions.
func (c *RDS) DescribeDBEngineVersionsWithContext(ctx aws.Context, input *rds.DescribeDBEngineVersionsInput, opts ...request.Option) (*rds.DescribeDBEngineVersionsOutput, error) {
	c.inc("DescribeDBEngineVersions")
	return c.svc.DescribeDBEngineVersionsWithContext(ctx, input, opts...)
}

// DescribeDBEngineVersionsPages is a passthrough to the underlying DescribeDBEngineVersionsPages method.
// It will increment the count of requests made to DescribeDBEngineVersions on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeDBEngineVersionsPagesWithContext to avoid this.
func (c *RDS) DescribeDBEngineVersionsPages(input *rds.DescribeDBEngineVersionsInput, fn func(*rds.DescribeDBEngineVersionsOutput, bool) bool) error {
	wrappedFn := func(page *rds.DescribeDBEngineVersionsOutput, lastPage bool) bool {
		c.inc("DescribeDBEngineVersions")
		return fn(page, lastPage)
	}
	return c.svc.DescribeDBEngineVersionsPages(input, wrappedFn)
}

// DescribeDBEngineVersionsPagesWithContext is a passthrough to the underlying DescribeDBEngineVersionsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeDBEngineVersions when applied to the request.
func (c *RDS) DescribeDBEngineVersionsPagesWithContext(ctx aws.Context, input *rds.DescribeDBEngineVersionsInput, fn func(*rds.DescribeDBEngineVersionsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeDBEngineVersions"))
	return c.svc.DescribeDBEngineVersionsPagesWithContext(ctx, input, fn, opts...)
}

// DescribeDBInstancesRequest is a passthrough to the underlying DescribeDBInstancesRequest.
// It will increment the count of requests made to DescribeDBInstances.
func (c *RDS) DescribeDBInstancesRequest(input *rds.DescribeDBInstancesInput) (req *request.Request, output *rds.DescribeDBInstancesOutput) {
	c.inc("DescribeDBInstances")
	return c.svc.DescribeDBInstancesRequest(input)
}

// DescribeDBInstances is a passthrough to the underlying DescribeDBInstances method.
// It will increment the count of requests made to DescribeDBInstances.
func (c *RDS) DescribeDBInstances(input *rds.DescribeDBInstancesInput) (*rds.DescribeDBInstancesOutput, error) {
	c.inc("DescribeDBInstances")
	return c.svc.DescribeDBInstances(input)
}

// DescribeDBInstancesWithContext is a passthrough to the underlying DescribeDBInstancesWithContext method.
// It will increment the count of requests made to DescribeDBInstances.
func (c *RDS) DescribeDBInstancesWithContext(ctx aws.Context, input *rds.DescribeDBInstancesInput, opts ...request.Option) (*rds.DescribeDBInstancesOutput, error) {
	c.inc("DescribeDBInstances")
	return c.svc.DescribeDBInstancesWithContext(ctx, input, opts...)
}

// DescribeDBInstancesPages is a passthrough to the underlying DescribeDBInstancesPages method.
// It will increment the count of requests made to DescribeDBInstances on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeDBInstancesPagesWithContext to avoid this.
func (c *RDS) DescribeDBInstancesPages(input *rds.DescribeDBInstancesInput, fn func(*rds.DescribeDBInstancesOutput, bool) bool) error {
	wrappedFn := func(page *rds.DescribeDBInstancesOutput, lastPage bool) bool {
		c.inc("DescribeDBInstances")
		return fn(page, lastPage)
	}
	return c.svc.DescribeDBInstancesPages(input, wrappedFn)
}

// DescribeDBInstancesPagesWithContext is a passthrough to the underlying DescribeDBInstancesPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeDBInstances when applied to the request.
func (c *RDS) DescribeDBInstancesPagesWithContext(ctx aws.Context, input *rds.DescribeDBInstancesInput, fn func(*rds.DescribeDBInstancesOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeDBInstances"))
	return c.svc.DescribeDBInstancesPagesWithContext(ctx, input, fn, opts...)
}

// DescribeDBLogFilesRequest is a passthrough to the underlying DescribeDBLogFilesRequest.
// It will increment the count of requests made to DescribeDBLogFiles.
func (c *RDS) DescribeDBLogFilesRequest(input *rds.DescribeDBLogFilesInput) (req *request.Request, output *rds.DescribeDBLogFilesOutput) {
	c.inc("DescribeDBLogFiles")
	return c.svc.DescribeDBLogFilesRequest(input)
}

// DescribeDBLogFiles is a passthrough to the underlying DescribeDBLogFiles method.
// It will increment the count of requests made to DescribeDBLogFiles.
func (c *RDS) DescribeDBLogFiles(input *rds.DescribeDBLogFilesInput) (*rds.DescribeDBLogFilesOutput, error) {
	c.inc("DescribeDBLogFiles")
	return c.svc.DescribeDBLogFiles(input)
}

// DescribeDBLogFilesWithContext is a passthrough to the underlying DescribeDBLogFilesWithContext method.
// It will increment the count of requests made to DescribeDBLogFiles.
func (c *RDS) DescribeDBLogFilesWithContext(ctx aws.Context, input *rds.DescribeDBLogFilesInput, opts ...request.Option) (*rds.DescribeDBLogFilesOutput, error) {
	c.inc("DescribeDBLogFiles")
	return c.svc.DescribeDBLogFilesWithContext(ctx, input, opts...)
}

// DescribeDBLogFilesPages is a passthrough to the underlying DescribeDBLogFilesPages method.
// It will increment the count of requests made to DescribeDBLogFiles on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeDBLogFilesPagesWithContext to avoid this.
func (c *RDS) DescribeDBLogFilesPages(input *rds.DescribeDBLogFilesInput, fn func(*rds.DescribeDBLogFilesOutput, bool) bool) error {
	wrappedFn := func(page *rds.DescribeDBLogFilesOutput, lastPage bool) bool {
		c.inc("DescribeDBLogFiles")
		return fn(page, lastPage)
	}
	return c.svc.DescribeDBLogFilesPages(input, wrappedFn)
}

// DescribeDBLogFilesPagesWithContext is a passthrough to the underlying DescribeDBLogFilesPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeDBLogFiles when applied to the request.
func (c *RDS) DescribeDBLogFilesPagesWithContext(ctx aws.Context, input *rds.DescribeDBLogFilesInput, fn func(*rds.DescribeDBLogFilesOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeDBLogFiles"))
	return c.svc.DescribeDBLogFilesPagesWithContext(ctx, input, fn, opts...)
}

// DescribeDBParameterGroupsRequest is a passthrough to the underlying DescribeDBParameterGroupsRequest.
// It will increment the count of requests made to DescribeDBParameterGroups.
func (c *RDS) DescribeDBParameterGroupsRequest(input *rds.DescribeDBParameterGroupsInput) (req *request.Request, output *rds.DescribeDBParameterGroupsOutput) {
	c.inc("DescribeDBParameterGroups")
	return c.svc.DescribeDBParameterGroupsRequest(input)
}

// DescribeDBParameterGroups is a passthrough to the underlying DescribeDBParameterGroups method.
// It will increment the count of requests made to DescribeDBParameterGroups.
func (c *RDS) DescribeDBParameterGroups(input *rds.DescribeDBParameterGroupsInput) (*rds.DescribeDBParameterGroupsOutput, error) {
	c.inc("DescribeDBParameterGroups")
	return c.svc.DescribeDBParameterGroups(input)
}

// DescribeDBParameterGroupsWithContext is a passthrough to the underlying DescribeDBParameterGroupsWithContext method.
// It will increment the count of requests made to DescribeDBParameterGroups.
func (c *RDS) DescribeDBParameterGroupsWithContext(ctx aws.Context, input *rds.DescribeDBParameterGroupsInput, opts ...request.Option) (*rds.DescribeDBParameterGroupsOutput, error) {
	c.inc("DescribeDBParameterGroups")
	return c.svc.DescribeDBParameterGroupsWithContext(ctx, input, opts...)
}

// DescribeDBParameterGroupsPages is a passthrough to the underlying DescribeDBParameterGroupsPages method.
// It will increment the count of requests made to DescribeDBParameterGroups on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeDBParameterGroupsPagesWithContext to avoid this.
func (c *RDS) DescribeDBParameterGroupsPages(input *rds.DescribeDBParameterGroupsInput, fn func(*rds.DescribeDBParameterGroupsOutput, bool) bool) error {
	wrappedFn := func(page *rds.DescribeDBParameterGroupsOutput, lastPage bool) bool {
		c.inc("DescribeDBParameterGroups")
		return fn(page, lastPage)
	}
	return c.svc.DescribeDBParameterGroupsPages(input, wrappedFn)
}

// DescribeDBParameterGroupsPagesWithContext is a passthrough to the underlying DescribeDBParameterGroupsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeDBParameterGroups when applied to the request.
func (c *RDS) DescribeDBParameterGroupsPagesWithContext(ctx aws.Context, input *rds.DescribeDBParameterGroupsInput, fn func(*rds.DescribeDBParameterGroupsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeDBParameterGroups"))
	return c.svc.DescribeDBParameterGroupsPagesWithContext(ctx, input, fn, opts...)
}

// DescribeDBParametersRequest is a passthrough to the underlying DescribeDBParametersRequest.
// It will increment the count of requests made to DescribeDBParameters.
func (c *RDS) DescribeDBParametersRequest(input *rds.DescribeDBParametersInput) (req *request.Request, output *rds.DescribeDBParametersOutput) {
	c.inc("DescribeDBParameters")
	return c.svc.DescribeDBParametersRequest(input)
}

// DescribeDBParameters is a passthrough to the underlying DescribeDBParameters method.
// It will increment the count of requests made to DescribeDBParameters.
func (c *RDS) DescribeDBParameters(input *rds.DescribeDBParametersInput) (*rds.DescribeDBParametersOutput, error) {
	c.inc("DescribeDBParameters")
	return c.svc.DescribeDBParameters(input)
}

// DescribeDBParametersWithContext is a passthrough to the underlying DescribeDBParametersWithContext method.
// It will increment the count of requests made to DescribeDBParameters.
func (c *RDS) DescribeDBParametersWithContext(ctx aws.Context, input *rds.DescribeDBParametersInput, opts ...request.Option) (*rds.DescribeDBParametersOutput, error) {
	c.inc("DescribeDBParameters")
	return c.svc.DescribeDBParametersWithContext(ctx, input, opts...)
}

// DescribeDBParametersPages is a passthrough to the underlying DescribeDBParametersPages method.
// It will increment the count of requests made to DescribeDBParameters on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeDBParametersPagesWithContext to avoid this.
func (c *RDS) DescribeDBParametersPages(input *rds.DescribeDBParametersInput, fn func(*rds.DescribeDBParametersOutput, bool) bool) error {
	wrappedFn := func(page *rds.DescribeDBParametersOutput, lastPage bool) bool {
		c.inc("DescribeDBParameters")
		return fn(page, lastPage)
	}
	return c.svc.DescribeDBParametersPages(input, wrappedFn)
}

// DescribeDBParametersPagesWithContext is a passthrough to the underlying DescribeDBParametersPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeDBParameters when applied to the request.
func (c *RDS) DescribeDBParametersPagesWithContext(ctx aws.Context, input *rds.DescribeDBParametersInput, fn func(*rds.DescribeDBParametersOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeDBParameters"))
	return c.svc.DescribeDBParametersPagesWithContext(ctx, input, fn, opts...)
}

// DescribeDBSecurityGroupsRequest is a passthrough to the underlying DescribeDBSecurityGroupsRequest.
// It will increment the count of requests made to DescribeDBSecurityGroups.
func (c *RDS) DescribeDBSecurityGroupsRequest(input *rds.DescribeDBSecurityGroupsInput) (req *request.Request, output *rds.DescribeDBSecurityGroupsOutput) {
	c.inc("DescribeDBSecurityGroups")
	return c.svc.DescribeDBSecurityGroupsRequest(input)
}

// DescribeDBSecurityGroups is a passthrough to the underlying DescribeDBSecurityGroups method.
// It will increment the count of requests made to DescribeDBSecurityGroups.
func (c *RDS) DescribeDBSecurityGroups(input *rds.DescribeDBSecurityGroupsInput) (*rds.DescribeDBSecurityGroupsOutput, error) {
	c.inc("DescribeDBSecurityGroups")
	return c.svc.DescribeDBSecurityGroups(input)
}

// DescribeDBSecurityGroupsWithContext is a passthrough to the underlying DescribeDBSecurityGroupsWithContext method.
// It will increment the count of requests made to DescribeDBSecurityGroups.
func (c *RDS) DescribeDBSecurityGroupsWithContext(ctx aws.Context, input *rds.DescribeDBSecurityGroupsInput, opts ...request.Option) (*rds.DescribeDBSecurityGroupsOutput, error) {
	c.inc("DescribeDBSecurityGroups")
	return c.svc.DescribeDBSecurityGroupsWithContext(ctx, input, opts...)
}

// DescribeDBSecurityGroupsPages is a passthrough to the underlying DescribeDBSecurityGroupsPages method.
// It will increment the count of requests made to DescribeDBSecurityGroups on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeDBSecurityGroupsPagesWithContext to avoid this.
func (c *RDS) DescribeDBSecurityGroupsPages(input *rds.DescribeDBSecurityGroupsInput, fn func(*rds.DescribeDBSecurityGroupsOutput, bool) bool) error {
	wrappedFn := func(page *rds.DescribeDBSecurityGroupsOutput, lastPage bool) bool {
		c.inc("DescribeDBSecurityGroups")
		return fn(page, lastPage)
	}
	return c.svc.DescribeDBSecurityGroupsPages(input, wrappedFn)
}

// DescribeDBSecurityGroupsPagesWithContext is a passthrough to the underlying DescribeDBSecurityGroupsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeDBSecurityGroups when applied to the request.
func (c *RDS) DescribeDBSecurityGroupsPagesWithContext(ctx aws.Context, input *rds.DescribeDBSecurityGroupsInput, fn func(*rds.DescribeDBSecurityGroupsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeDBSecurityGroups"))
	return c.svc.DescribeDBSecurityGroupsPagesWithContext(ctx, input, fn, opts...)
}

// DescribeDBSnapshotAttributesRequest is a passthrough to the underlying DescribeDBSnapshotAttributesRequest.
// It will increment the count of requests made to DescribeDBSnapshotAttributes.
func (c *RDS) DescribeDBSnapshotAttributesRequest(input *rds.DescribeDBSnapshotAttributesInput) (req *request.Request, output *rds.DescribeDBSnapshotAttributesOutput) {
	c.inc("DescribeDBSnapshotAttributes")
	return c.svc.DescribeDBSnapshotAttributesRequest(input)
}

// DescribeDBSnapshotAttributes is a passthrough to the underlying DescribeDBSnapshotAttributes method.
// It will increment the count of requests made to DescribeDBSnapshotAttributes.
func (c *RDS) DescribeDBSnapshotAttributes(input *rds.DescribeDBSnapshotAttributesInput) (*rds.DescribeDBSnapshotAttributesOutput, error) {
	c.inc("DescribeDBSnapshotAttributes")
	return c.svc.DescribeDBSnapshotAttributes(input)
}

// DescribeDBSnapshotAttributesWithContext is a passthrough to the underlying DescribeDBSnapshotAttributesWithContext method.
// It will increment the count of requests made to DescribeDBSnapshotAttributes.
func (c *RDS) DescribeDBSnapshotAttributesWithContext(ctx aws.Context, input *rds.DescribeDBSnapshotAttributesInput, opts ...request.Option) (*rds.DescribeDBSnapshotAttributesOutput, error) {
	c.inc("DescribeDBSnapshotAttributes")
	return c.svc.DescribeDBSnapshotAttributesWithContext(ctx, input, opts...)
}

// DescribeDBSnapshotsRequest is a passthrough to the underlying DescribeDBSnapshotsRequest.
// It will increment the count of requests made to DescribeDBSnapshots.
func (c *RDS) DescribeDBSnapshotsRequest(input *rds.DescribeDBSnapshotsInput) (req *request.Request, output *rds.DescribeDBSnapshotsOutput) {
	c.inc("DescribeDBSnapshots")
	return c.svc.DescribeDBSnapshotsRequest(input)
}

// DescribeDBSnapshots is a passthrough to the underlying DescribeDBSnapshots method.
// It will increment the count of requests made to DescribeDBSnapshots.
func (c *RDS) DescribeDBSnapshots(input *rds.DescribeDBSnapshotsInput) (*rds.DescribeDBSnapshotsOutput, error) {
	c.inc("DescribeDBSnapshots")
	return c.svc.DescribeDBSnapshots(input)
}

// DescribeDBSnapshotsWithContext is a passthrough to the underlying DescribeDBSnapshotsWithContext method.
// It will increment the count of requests made to DescribeDBSnapshots.
func (c *RDS) DescribeDBSnapshotsWithContext(ctx aws.Context, input *rds.DescribeDBSnapshotsInput, opts ...request.Option) (*rds.DescribeDBSnapshotsOutput, error) {
	c.inc("DescribeDBSnapshots")
	return c.svc.DescribeDBSnapshotsWithContext(ctx, input, opts...)
}

// DescribeDBSnapshotsPages is a passthrough to the underlying DescribeDBSnapshotsPages method.
// It will increment the count of requests made to DescribeDBSnapshots on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeDBSnapshotsPagesWithContext to avoid this.
func (c *RDS) DescribeDBSnapshotsPages(input *rds.DescribeDBSnapshotsInput, fn func(*rds.DescribeDBSnapshotsOutput, bool) bool) error {
	wrappedFn := func(page *rds.DescribeDBSnapshotsOutput, lastPage bool) bool {
		c.inc("DescribeDBSnapshots")
		return fn(page, lastPage)
	}
	return c.svc.DescribeDBSnapshotsPages(input, wrappedFn)
}

// DescribeDBSnapshotsPagesWithContext is a passthrough to the underlying DescribeDBSnapshotsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeDBSnapshots when applied to the request.
func (c *RDS) DescribeDBSnapshotsPagesWithContext(ctx aws.Context, input *rds.DescribeDBSnapshotsInput, fn func(*rds.DescribeDBSnapshotsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeDBSnapshots"))
	return c.svc.DescribeDBSnapshotsPagesWithContext(ctx, input, fn, opts...)
}

// DescribeDBSubnetGroupsRequest is a passthrough to the underlying DescribeDBSubnetGroupsRequest.
// It will increment the count of requests made to DescribeDBSubnetGroups.
func (c *RDS) DescribeDBSubnetGroupsRequest(input *rds.DescribeDBSubnetGroupsInput) (req *request.Request, output *rds.DescribeDBSubnetGroupsOutput) {
	c.inc("DescribeDBSubnetGroups")
	return c.svc.DescribeDBSubnetGroupsRequest(input)
}

// DescribeDBSubnetGroups is a passthrough to the underlying DescribeDBSubnetGroups method.
// It will increment the count of requests made to DescribeDBSubnetGroups.
func (c *RDS) DescribeDBSubnetGroups(input *rds.DescribeDBSubnetGroupsInput) (*rds.DescribeDBSubnetGroupsOutput, error) {
	c.inc("DescribeDBSubnetGroups")
	return c.svc.DescribeDBSubnetGroups(input)
}

// DescribeDBSubnetGroupsWithContext is a passthrough to the underlying DescribeDBSubnetGroupsWithContext method.
// It will increment the count of requests made to DescribeDBSubnetGroups.
func (c *RDS) DescribeDBSubnetGroupsWithContext(ctx aws.Context, input *rds.DescribeDBSubnetGroupsInput, opts ...request.Option) (*rds.DescribeDBSubnetGroupsOutput, error) {
	c.inc("DescribeDBSubnetGroups")
	return c.svc.DescribeDBSubnetGroupsWithContext(ctx, input, opts...)
}

// DescribeDBSubnetGroupsPages is a passthrough to the underlying DescribeDBSubnetGroupsPages method.
// It will increment the count of requests made to DescribeDBSubnetGroups on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeDBSubnetGroupsPagesWithContext to avoid this.
func (c *RDS) DescribeDBSubnetGroupsPages(input *rds.DescribeDBSubnetGroupsInput, fn func(*rds.DescribeDBSubnetGroupsOutput, bool) bool) error {
	wrappedFn := func(page *rds.DescribeDBSubnetGroupsOutput, lastPage bool) bool {
		c.inc("DescribeDBSubnetGroups")
		return fn(page, lastPage)
	}
	return c.svc.DescribeDBSubnetGroupsPages(input, wrappedFn)
}

// DescribeDBSubnetGroupsPagesWithContext is a passthrough to the underlying DescribeDBSubnetGroupsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeDBSubnetGroups when applied to the request.
func (c *RDS) DescribeDBSubnetGroupsPagesWithContext(ctx aws.Context, input *rds.DescribeDBSubnetGroupsInput, fn func(*rds.DescribeDBSubnetGroupsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeDBSubnetGroups"))
	return c.svc.DescribeDBSubnetGroupsPagesWithContext(ctx, input, fn, opts...)
}

// DescribeEngineDefaultClusterParametersRequest is a passthrough to the underlying DescribeEngineDefaultClusterParametersRequest.
// It will increment the count of requests made to DescribeEngineDefaultClusterParameters.
func (c *RDS) DescribeEngineDefaultClusterParametersRequest(input *rds.DescribeEngineDefaultClusterParametersInput) (req *request.Request, output *rds.DescribeEngineDefaultClusterParametersOutput) {
	c.inc("DescribeEngineDefaultClusterParameters")
	return c.svc.DescribeEngineDefaultClusterParametersRequest(input)
}

// DescribeEngineDefaultClusterParameters is a passthrough to the underlying DescribeEngineDefaultClusterParameters method.
// It will increment the count of requests made to DescribeEngineDefaultClusterParameters.
func (c *RDS) DescribeEngineDefaultClusterParameters(input *rds.DescribeEngineDefaultClusterParametersInput) (*rds.DescribeEngineDefaultClusterParametersOutput, error) {
	c.inc("DescribeEngineDefaultClusterParameters")
	return c.svc.DescribeEngineDefaultClusterParameters(input)
}

// DescribeEngineDefaultClusterParametersWithContext is a passthrough to the underlying DescribeEngineDefaultClusterParametersWithContext method.
// It will increment the count of requests made to DescribeEngineDefaultClusterParameters.
func (c *RDS) DescribeEngineDefaultClusterParametersWithContext(ctx aws.Context, input *rds.DescribeEngineDefaultClusterParametersInput, opts ...request.Option) (*rds.DescribeEngineDefaultClusterParametersOutput, error) {
	c.inc("DescribeEngineDefaultClusterParameters")
	return c.svc.DescribeEngineDefaultClusterParametersWithContext(ctx, input, opts...)
}

// DescribeEngineDefaultParametersRequest is a passthrough to the underlying DescribeEngineDefaultParametersRequest.
// It will increment the count of requests made to DescribeEngineDefaultParameters.
func (c *RDS) DescribeEngineDefaultParametersRequest(input *rds.DescribeEngineDefaultParametersInput) (req *request.Request, output *rds.DescribeEngineDefaultParametersOutput) {
	c.inc("DescribeEngineDefaultParameters")
	return c.svc.DescribeEngineDefaultParametersRequest(input)
}

// DescribeEngineDefaultParameters is a passthrough to the underlying DescribeEngineDefaultParameters method.
// It will increment the count of requests made to DescribeEngineDefaultParameters.
func (c *RDS) DescribeEngineDefaultParameters(input *rds.DescribeEngineDefaultParametersInput) (*rds.DescribeEngineDefaultParametersOutput, error) {
	c.inc("DescribeEngineDefaultParameters")
	return c.svc.DescribeEngineDefaultParameters(input)
}

// DescribeEngineDefaultParametersWithContext is a passthrough to the underlying DescribeEngineDefaultParametersWithContext method.
// It will increment the count of requests made to DescribeEngineDefaultParameters.
func (c *RDS) DescribeEngineDefaultParametersWithContext(ctx aws.Context, input *rds.DescribeEngineDefaultParametersInput, opts ...request.Option) (*rds.DescribeEngineDefaultParametersOutput, error) {
	c.inc("DescribeEngineDefaultParameters")
	return c.svc.DescribeEngineDefaultParametersWithContext(ctx, input, opts...)
}

// DescribeEngineDefaultParametersPages is a passthrough to the underlying DescribeEngineDefaultParametersPages method.
// It will increment the count of requests made to DescribeEngineDefaultParameters on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeEngineDefaultParametersPagesWithContext to avoid this.
func (c *RDS) DescribeEngineDefaultParametersPages(input *rds.DescribeEngineDefaultParametersInput, fn func(*rds.DescribeEngineDefaultParametersOutput, bool) bool) error {
	wrappedFn := func(page *rds.DescribeEngineDefaultParametersOutput, lastPage bool) bool {
		c.inc("DescribeEngineDefaultParameters")
		return fn(page, lastPage)
	}
	return c.svc.DescribeEngineDefaultParametersPages(input, wrappedFn)
}

// DescribeEngineDefaultParametersPagesWithContext is a passthrough to the underlying DescribeEngineDefaultParametersPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeEngineDefaultParameters when applied to the request.
func (c *RDS) DescribeEngineDefaultParametersPagesWithContext(ctx aws.Context, input *rds.DescribeEngineDefaultParametersInput, fn func(*rds.DescribeEngineDefaultParametersOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeEngineDefaultParameters"))
	return c.svc.DescribeEngineDefaultParametersPagesWithContext(ctx, input, fn, opts...)
}

// DescribeEventCategoriesRequest is a passthrough to the underlying DescribeEventCategoriesRequest.
// It will increment the count of requests made to DescribeEventCategories.
func (c *RDS) DescribeEventCategoriesRequest(input *rds.DescribeEventCategoriesInput) (req *request.Request, output *rds.DescribeEventCategoriesOutput) {
	c.inc("DescribeEventCategories")
	return c.svc.DescribeEventCategoriesRequest(input)
}

// DescribeEventCategories is a passthrough to the underlying DescribeEventCategories method.
// It will increment the count of requests made to DescribeEventCategories.
func (c *RDS) DescribeEventCategories(input *rds.DescribeEventCategoriesInput) (*rds.DescribeEventCategoriesOutput, error) {
	c.inc("DescribeEventCategories")
	return c.svc.DescribeEventCategories(input)
}

// DescribeEventCategoriesWithContext is a passthrough to the underlying DescribeEventCategoriesWithContext method.
// It will increment the count of requests made to DescribeEventCategories.
func (c *RDS) DescribeEventCategoriesWithContext(ctx aws.Context, input *rds.DescribeEventCategoriesInput, opts ...request.Option) (*rds.DescribeEventCategoriesOutput, error) {
	c.inc("DescribeEventCategories")
	return c.svc.DescribeEventCategoriesWithContext(ctx, input, opts...)
}

// DescribeEventSubscriptionsRequest is a passthrough to the underlying DescribeEventSubscriptionsRequest.
// It will increment the count of requests made to DescribeEventSubscriptions.
func (c *RDS) DescribeEventSubscriptionsRequest(input *rds.DescribeEventSubscriptionsInput) (req *request.Request, output *rds.DescribeEventSubscriptionsOutput) {
	c.inc("DescribeEventSubscriptions")
	return c.svc.DescribeEventSubscriptionsRequest(input)
}

// DescribeEventSubscriptions is a passthrough to the underlying DescribeEventSubscriptions method.
// It will increment the count of requests made to DescribeEventSubscriptions.
func (c *RDS) DescribeEventSubscriptions(input *rds.DescribeEventSubscriptionsInput) (*rds.DescribeEventSubscriptionsOutput, error) {
	c.inc("DescribeEventSubscriptions")
	return c.svc.DescribeEventSubscriptions(input)
}

// DescribeEventSubscriptionsWithContext is a passthrough to the underlying DescribeEventSubscriptionsWithContext method.
// It will increment the count of requests made to DescribeEventSubscriptions.
func (c *RDS) DescribeEventSubscriptionsWithContext(ctx aws.Context, input *rds.DescribeEventSubscriptionsInput, opts ...request.Option) (*rds.DescribeEventSubscriptionsOutput, error) {
	c.inc("DescribeEventSubscriptions")
	return c.svc.DescribeEventSubscriptionsWithContext(ctx, input, opts...)
}

// DescribeEventSubscriptionsPages is a passthrough to the underlying DescribeEventSubscriptionsPages method.
// It will increment the count of requests made to DescribeEventSubscriptions on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeEventSubscriptionsPagesWithContext to avoid this.
func (c *RDS) DescribeEventSubscriptionsPages(input *rds.DescribeEventSubscriptionsInput, fn func(*rds.DescribeEventSubscriptionsOutput, bool) bool) error {
	wrappedFn := func(page *rds.DescribeEventSubscriptionsOutput, lastPage bool) bool {
		c.inc("DescribeEventSubscriptions")
		return fn(page, lastPage)
	}
	return c.svc.DescribeEventSubscriptionsPages(input, wrappedFn)
}

// DescribeEventSubscriptionsPagesWithContext is a passthrough to the underlying DescribeEventSubscriptionsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeEventSubscriptions when applied to the request.
func (c *RDS) DescribeEventSubscriptionsPagesWithContext(ctx aws.Context, input *rds.DescribeEventSubscriptionsInput, fn func(*rds.DescribeEventSubscriptionsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeEventSubscriptions"))
	return c.svc.DescribeEventSubscriptionsPagesWithContext(ctx, input, fn, opts...)
}

// DescribeEventsRequest is a passthrough to the underlying DescribeEventsRequest.
// It will increment the count of requests made to DescribeEvents.
func (c *RDS) DescribeEventsRequest(input *rds.DescribeEventsInput) (req *request.Request, output *rds.DescribeEventsOutput) {
	c.inc("DescribeEvents")
	return c.svc.DescribeEventsRequest(input)
}

// DescribeEvents is a passthrough to the underlying DescribeEvents method.
// It will increment the count of requests made to DescribeEvents.
func (c *RDS) DescribeEvents(input *rds.DescribeEventsInput) (*rds.DescribeEventsOutput, error) {
	c.inc("DescribeEvents")
	return c.svc.DescribeEvents(input)
}

// DescribeEventsWithContext is a passthrough to the underlying DescribeEventsWithContext method.
// It will increment the count of requests made to DescribeEvents.
func (c *RDS) DescribeEventsWithContext(ctx aws.Context, input *rds.DescribeEventsInput, opts ...request.Option) (*rds.DescribeEventsOutput, error) {
	c.inc("DescribeEvents")
	return c.svc.DescribeEventsWithContext(ctx, input, opts...)
}

// DescribeEventsPages is a passthrough to the underlying DescribeEventsPages method.
// It will increment the count of requests made to DescribeEvents on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeEventsPagesWithContext to avoid this.
func (c *RDS) DescribeEventsPages(input *rds.DescribeEventsInput, fn func(*rds.DescribeEventsOutput, bool) bool) error {
	wrappedFn := func(page *rds.DescribeEventsOutput, lastPage bool) bool {
		c.inc("DescribeEvents")
		return fn(page, lastPage)
	}
	return c.svc.DescribeEventsPages(input, wrappedFn)
}

// DescribeEventsPagesWithContext is a passthrough to the underlying DescribeEventsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeEvents when applied to the request.
func (c *RDS) DescribeEventsPagesWithContext(ctx aws.Context, input *rds.DescribeEventsInput, fn func(*rds.DescribeEventsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeEvents"))
	return c.svc.DescribeEventsPagesWithContext(ctx, input, fn, opts...)
}

// DescribeOptionGroupOptionsRequest is a passthrough to the underlying DescribeOptionGroupOptionsRequest.
// It will increment the count of requests made to DescribeOptionGroupOptions.
func (c *RDS) DescribeOptionGroupOptionsRequest(input *rds.DescribeOptionGroupOptionsInput) (req *request.Request, output *rds.DescribeOptionGroupOptionsOutput) {
	c.inc("DescribeOptionGroupOptions")
	return c.svc.DescribeOptionGroupOptionsRequest(input)
}

// DescribeOptionGroupOptions is a passthrough to the underlying DescribeOptionGroupOptions method.
// It will increment the count of requests made to DescribeOptionGroupOptions.
func (c *RDS) DescribeOptionGroupOptions(input *rds.DescribeOptionGroupOptionsInput) (*rds.DescribeOptionGroupOptionsOutput, error) {
	c.inc("DescribeOptionGroupOptions")
	return c.svc.DescribeOptionGroupOptions(input)
}

// DescribeOptionGroupOptionsWithContext is a passthrough to the underlying DescribeOptionGroupOptionsWithContext method.
// It will increment the count of requests made to DescribeOptionGroupOptions.
func (c *RDS) DescribeOptionGroupOptionsWithContext(ctx aws.Context, input *rds.DescribeOptionGroupOptionsInput, opts ...request.Option) (*rds.DescribeOptionGroupOptionsOutput, error) {
	c.inc("DescribeOptionGroupOptions")
	return c.svc.DescribeOptionGroupOptionsWithContext(ctx, input, opts...)
}

// DescribeOptionGroupOptionsPages is a passthrough to the underlying DescribeOptionGroupOptionsPages method.
// It will increment the count of requests made to DescribeOptionGroupOptions on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeOptionGroupOptionsPagesWithContext to avoid this.
func (c *RDS) DescribeOptionGroupOptionsPages(input *rds.DescribeOptionGroupOptionsInput, fn func(*rds.DescribeOptionGroupOptionsOutput, bool) bool) error {
	wrappedFn := func(page *rds.DescribeOptionGroupOptionsOutput, lastPage bool) bool {
		c.inc("DescribeOptionGroupOptions")
		return fn(page, lastPage)
	}
	return c.svc.DescribeOptionGroupOptionsPages(input, wrappedFn)
}

// DescribeOptionGroupOptionsPagesWithContext is a passthrough to the underlying DescribeOptionGroupOptionsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeOptionGroupOptions when applied to the request.
func (c *RDS) DescribeOptionGroupOptionsPagesWithContext(ctx aws.Context, input *rds.DescribeOptionGroupOptionsInput, fn func(*rds.DescribeOptionGroupOptionsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeOptionGroupOptions"))
	return c.svc.DescribeOptionGroupOptionsPagesWithContext(ctx, input, fn, opts...)
}

// DescribeOptionGroupsRequest is a passthrough to the underlying DescribeOptionGroupsRequest.
// It will increment the count of requests made to DescribeOptionGroups.
func (c *RDS) DescribeOptionGroupsRequest(input *rds.DescribeOptionGroupsInput) (req *request.Request, output *rds.DescribeOptionGroupsOutput) {
	c.inc("DescribeOptionGroups")
	return c.svc.DescribeOptionGroupsRequest(input)
}

// DescribeOptionGroups is a passthrough to the underlying DescribeOptionGroups method.
// It will increment the count of requests made to DescribeOptionGroups.
func (c *RDS) DescribeOptionGroups(input *rds.DescribeOptionGroupsInput) (*rds.DescribeOptionGroupsOutput, error) {
	c.inc("DescribeOptionGroups")
	return c.svc.DescribeOptionGroups(input)
}

// DescribeOptionGroupsWithContext is a passthrough to the underlying DescribeOptionGroupsWithContext method.
// It will increment the count of requests made to DescribeOptionGroups.
func (c *RDS) DescribeOptionGroupsWithContext(ctx aws.Context, input *rds.DescribeOptionGroupsInput, opts ...request.Option) (*rds.DescribeOptionGroupsOutput, error) {
	c.inc("DescribeOptionGroups")
	return c.svc.DescribeOptionGroupsWithContext(ctx, input, opts...)
}

// DescribeOptionGroupsPages is a passthrough to the underlying DescribeOptionGroupsPages method.
// It will increment the count of requests made to DescribeOptionGroups on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeOptionGroupsPagesWithContext to avoid this.
func (c *RDS) DescribeOptionGroupsPages(input *rds.DescribeOptionGroupsInput, fn func(*rds.DescribeOptionGroupsOutput, bool) bool) error {
	wrappedFn := func(page *rds.DescribeOptionGroupsOutput, lastPage bool) bool {
		c.inc("DescribeOptionGroups")
		return fn(page, lastPage)
	}
	return c.svc.DescribeOptionGroupsPages(input, wrappedFn)
}

// DescribeOptionGroupsPagesWithContext is a passthrough to the underlying DescribeOptionGroupsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeOptionGroups when applied to the request.
func (c *RDS) DescribeOptionGroupsPagesWithContext(ctx aws.Context, input *rds.DescribeOptionGroupsInput, fn func(*rds.DescribeOptionGroupsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeOptionGroups"))
	return c.svc.DescribeOptionGroupsPagesWithContext(ctx, input, fn, opts...)
}

// DescribeOrderableDBInstanceOptionsRequest is a passthrough to the underlying DescribeOrderableDBInstanceOptionsRequest.
// It will increment the count of requests made to DescribeOrderableDBInstanceOptions.
func (c *RDS) DescribeOrderableDBInstanceOptionsRequest(input *rds.DescribeOrderableDBInstanceOptionsInput) (req *request.Request, output *rds.DescribeOrderableDBInstanceOptionsOutput) {
	c.inc("DescribeOrderableDBInstanceOptions")
	return c.svc.DescribeOrderableDBInstanceOptionsRequest(input)
}

// DescribeOrderableDBInstanceOptions is a passthrough to the underlying DescribeOrderableDBInstanceOptions method.
// It will increment the count of requests made to DescribeOrderableDBInstanceOptions.
func (c *RDS) DescribeOrderableDBInstanceOptions(input *rds.DescribeOrderableDBInstanceOptionsInput) (*rds.DescribeOrderableDBInstanceOptionsOutput, error) {
	c.inc("DescribeOrderableDBInstanceOptions")
	return c.svc.DescribeOrderableDBInstanceOptions(input)
}

// DescribeOrderableDBInstanceOptionsWithContext is a passthrough to the underlying DescribeOrderableDBInstanceOptionsWithContext method.
// It will increment the count of requests made to DescribeOrderableDBInstanceOptions.
func (c *RDS) DescribeOrderableDBInstanceOptionsWithContext(ctx aws.Context, input *rds.DescribeOrderableDBInstanceOptionsInput, opts ...request.Option) (*rds.DescribeOrderableDBInstanceOptionsOutput, error) {
	c.inc("DescribeOrderableDBInstanceOptions")
	return c.svc.DescribeOrderableDBInstanceOptionsWithContext(ctx, input, opts...)
}

// DescribeOrderableDBInstanceOptionsPages is a passthrough to the underlying DescribeOrderableDBInstanceOptionsPages method.
// It will increment the count of requests made to DescribeOrderableDBInstanceOptions on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeOrderableDBInstanceOptionsPagesWithContext to avoid this.
func (c *RDS) DescribeOrderableDBInstanceOptionsPages(input *rds.DescribeOrderableDBInstanceOptionsInput, fn func(*rds.DescribeOrderableDBInstanceOptionsOutput, bool) bool) error {
	wrappedFn := func(page *rds.DescribeOrderableDBInstanceOptionsOutput, lastPage bool) bool {
		c.inc("DescribeOrderableDBInstanceOptions")
		return fn(page, lastPage)
	}
	return c.svc.DescribeOrderableDBInstanceOptionsPages(input, wrappedFn)
}

// DescribeOrderableDBInstanceOptionsPagesWithContext is a passthrough to the underlying DescribeOrderableDBInstanceOptionsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeOrderableDBInstanceOptions when applied to the request.
func (c *RDS) DescribeOrderableDBInstanceOptionsPagesWithContext(ctx aws.Context, input *rds.DescribeOrderableDBInstanceOptionsInput, fn func(*rds.DescribeOrderableDBInstanceOptionsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeOrderableDBInstanceOptions"))
	return c.svc.DescribeOrderableDBInstanceOptionsPagesWithContext(ctx, input, fn, opts...)
}

// DescribePendingMaintenanceActionsRequest is a passthrough to the underlying DescribePendingMaintenanceActionsRequest.
// It will increment the count of requests made to DescribePendingMaintenanceActions.
func (c *RDS) DescribePendingMaintenanceActionsRequest(input *rds.DescribePendingMaintenanceActionsInput) (req *request.Request, output *rds.DescribePendingMaintenanceActionsOutput) {
	c.inc("DescribePendingMaintenanceActions")
	return c.svc.DescribePendingMaintenanceActionsRequest(input)
}

// DescribePendingMaintenanceActions is a passthrough to the underlying DescribePendingMaintenanceActions method.
// It will increment the count of requests made to DescribePendingMaintenanceActions.
func (c *RDS) DescribePendingMaintenanceActions(input *rds.DescribePendingMaintenanceActionsInput) (*rds.DescribePendingMaintenanceActionsOutput, error) {
	c.inc("DescribePendingMaintenanceActions")
	return c.svc.DescribePendingMaintenanceActions(input)
}

// DescribePendingMaintenanceActionsWithContext is a passthrough to the underlying DescribePendingMaintenanceActionsWithContext method.
// It will increment the count of requests made to DescribePendingMaintenanceActions.
func (c *RDS) DescribePendingMaintenanceActionsWithContext(ctx aws.Context, input *rds.DescribePendingMaintenanceActionsInput, opts ...request.Option) (*rds.DescribePendingMaintenanceActionsOutput, error) {
	c.inc("DescribePendingMaintenanceActions")
	return c.svc.DescribePendingMaintenanceActionsWithContext(ctx, input, opts...)
}

// DescribeReservedDBInstancesRequest is a passthrough to the underlying DescribeReservedDBInstancesRequest.
// It will increment the count of requests made to DescribeReservedDBInstances.
func (c *RDS) DescribeReservedDBInstancesRequest(input *rds.DescribeReservedDBInstancesInput) (req *request.Request, output *rds.DescribeReservedDBInstancesOutput) {
	c.inc("DescribeReservedDBInstances")
	return c.svc.DescribeReservedDBInstancesRequest(input)
}

// DescribeReservedDBInstances is a passthrough to the underlying DescribeReservedDBInstances method.
// It will increment the count of requests made to DescribeReservedDBInstances.
func (c *RDS) DescribeReservedDBInstances(input *rds.DescribeReservedDBInstancesInput) (*rds.DescribeReservedDBInstancesOutput, error) {
	c.inc("DescribeReservedDBInstances")
	return c.svc.DescribeReservedDBInstances(input)
}

// DescribeReservedDBInstancesWithContext is a passthrough to the underlying DescribeReservedDBInstancesWithContext method.
// It will increment the count of requests made to DescribeReservedDBInstances.
func (c *RDS) DescribeReservedDBInstancesWithContext(ctx aws.Context, input *rds.DescribeReservedDBInstancesInput, opts ...request.Option) (*rds.DescribeReservedDBInstancesOutput, error) {
	c.inc("DescribeReservedDBInstances")
	return c.svc.DescribeReservedDBInstancesWithContext(ctx, input, opts...)
}

// DescribeReservedDBInstancesPages is a passthrough to the underlying DescribeReservedDBInstancesPages method.
// It will increment the count of requests made to DescribeReservedDBInstances on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeReservedDBInstancesPagesWithContext to avoid this.
func (c *RDS) DescribeReservedDBInstancesPages(input *rds.DescribeReservedDBInstancesInput, fn func(*rds.DescribeReservedDBInstancesOutput, bool) bool) error {
	wrappedFn := func(page *rds.DescribeReservedDBInstancesOutput, lastPage bool) bool {
		c.inc("DescribeReservedDBInstances")
		return fn(page, lastPage)
	}
	return c.svc.DescribeReservedDBInstancesPages(input, wrappedFn)
}

// DescribeReservedDBInstancesPagesWithContext is a passthrough to the underlying DescribeReservedDBInstancesPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeReservedDBInstances when applied to the request.
func (c *RDS) DescribeReservedDBInstancesPagesWithContext(ctx aws.Context, input *rds.DescribeReservedDBInstancesInput, fn func(*rds.DescribeReservedDBInstancesOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeReservedDBInstances"))
	return c.svc.DescribeReservedDBInstancesPagesWithContext(ctx, input, fn, opts...)
}

// DescribeReservedDBInstancesOfferingsRequest is a passthrough to the underlying DescribeReservedDBInstancesOfferingsRequest.
// It will increment the count of requests made to DescribeReservedDBInstancesOfferings.
func (c *RDS) DescribeReservedDBInstancesOfferingsRequest(input *rds.DescribeReservedDBInstancesOfferingsInput) (req *request.Request, output *rds.DescribeReservedDBInstancesOfferingsOutput) {
	c.inc("DescribeReservedDBInstancesOfferings")
	return c.svc.DescribeReservedDBInstancesOfferingsRequest(input)
}

// DescribeReservedDBInstancesOfferings is a passthrough to the underlying DescribeReservedDBInstancesOfferings method.
// It will increment the count of requests made to DescribeReservedDBInstancesOfferings.
func (c *RDS) DescribeReservedDBInstancesOfferings(input *rds.DescribeReservedDBInstancesOfferingsInput) (*rds.DescribeReservedDBInstancesOfferingsOutput, error) {
	c.inc("DescribeReservedDBInstancesOfferings")
	return c.svc.DescribeReservedDBInstancesOfferings(input)
}

// DescribeReservedDBInstancesOfferingsWithContext is a passthrough to the underlying DescribeReservedDBInstancesOfferingsWithContext method.
// It will increment the count of requests made to DescribeReservedDBInstancesOfferings.
func (c *RDS) DescribeReservedDBInstancesOfferingsWithContext(ctx aws.Context, input *rds.DescribeReservedDBInstancesOfferingsInput, opts ...request.Option) (*rds.DescribeReservedDBInstancesOfferingsOutput, error) {
	c.inc("DescribeReservedDBInstancesOfferings")
	return c.svc.DescribeReservedDBInstancesOfferingsWithContext(ctx, input, opts...)
}

// DescribeReservedDBInstancesOfferingsPages is a passthrough to the underlying DescribeReservedDBInstancesOfferingsPages method.
// It will increment the count of requests made to DescribeReservedDBInstancesOfferings on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeReservedDBInstancesOfferingsPagesWithContext to avoid this.
func (c *RDS) DescribeReservedDBInstancesOfferingsPages(input *rds.DescribeReservedDBInstancesOfferingsInput, fn func(*rds.DescribeReservedDBInstancesOfferingsOutput, bool) bool) error {
	wrappedFn := func(page *rds.DescribeReservedDBInstancesOfferingsOutput, lastPage bool) bool {
		c.inc("DescribeReservedDBInstancesOfferings")
		return fn(page, lastPage)
	}
	return c.svc.DescribeReservedDBInstancesOfferingsPages(input, wrappedFn)
}

// DescribeReservedDBInstancesOfferingsPagesWithContext is a passthrough to the underlying DescribeReservedDBInstancesOfferingsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeReservedDBInstancesOfferings when applied to the request.
func (c *RDS) DescribeReservedDBInstancesOfferingsPagesWithContext(ctx aws.Context, input *rds.DescribeReservedDBInstancesOfferingsInput, fn func(*rds.DescribeReservedDBInstancesOfferingsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeReservedDBInstancesOfferings"))
	return c.svc.DescribeReservedDBInstancesOfferingsPagesWithContext(ctx, input, fn, opts...)
}

// DescribeSourceRegionsRequest is a passthrough to the underlying DescribeSourceRegionsRequest.
// It will increment the count of requests made to DescribeSourceRegions.
func (c *RDS) DescribeSourceRegionsRequest(input *rds.DescribeSourceRegionsInput) (req *request.Request, output *rds.DescribeSourceRegionsOutput) {
	c.inc("DescribeSourceRegions")
	return c.svc.DescribeSourceRegionsRequest(input)
}

// DescribeSourceRegions is a passthrough to the underlying DescribeSourceRegions method.
// It will increment the count of requests made to DescribeSourceRegions.
func (c *RDS) DescribeSourceRegions(input *rds.DescribeSourceRegionsInput) (*rds.DescribeSourceRegionsOutput, error) {
	c.inc("DescribeSourceRegions")
	return c.svc.DescribeSourceRegions(input)
}

// DescribeSourceRegionsWithContext is a passthrough to the underlying DescribeSourceRegionsWithContext method.
// It will increment the count of requests made to DescribeSourceRegions.
func (c *RDS) DescribeSourceRegionsWithContext(ctx aws.Context, input *rds.DescribeSourceRegionsInput, opts ...request.Option) (*rds.DescribeSourceRegionsOutput, error) {
	c.inc("DescribeSourceRegions")
	return c.svc.DescribeSourceRegionsWithContext(ctx, input, opts...)
}

// DescribeValidDBInstanceModificationsRequest is a passthrough to the underlying DescribeValidDBInstanceModificationsRequest.
// It will increment the count of requests made to DescribeValidDBInstanceModifications.
func (c *RDS) DescribeValidDBInstanceModificationsRequest(input *rds.DescribeValidDBInstanceModificationsInput) (req *request.Request, output *rds.DescribeValidDBInstanceModificationsOutput) {
	c.inc("DescribeValidDBInstanceModifications")
	return c.svc.DescribeValidDBInstanceModificationsRequest(input)
}

// DescribeValidDBInstanceModifications is a passthrough to the underlying DescribeValidDBInstanceModifications method.
// It will increment the count of requests made to DescribeValidDBInstanceModifications.
func (c *RDS) DescribeValidDBInstanceModifications(input *rds.DescribeValidDBInstanceModificationsInput) (*rds.DescribeValidDBInstanceModificationsOutput, error) {
	c.inc("DescribeValidDBInstanceModifications")
	return c.svc.DescribeValidDBInstanceModifications(input)
}

// DescribeValidDBInstanceModificationsWithContext is a passthrough to the underlying DescribeValidDBInstanceModificationsWithContext method.
// It will increment the count of requests made to DescribeValidDBInstanceModifications.
func (c *RDS) DescribeValidDBInstanceModificationsWithContext(ctx aws.Context, input *rds.DescribeValidDBInstanceModificationsInput, opts ...request.Option) (*rds.DescribeValidDBInstanceModificationsOutput, error) {
	c.inc("DescribeValidDBInstanceModifications")
	return c.svc.DescribeValidDBInstanceModificationsWithContext(ctx, input, opts...)
}

// DownloadDBLogFilePortionRequest is a passthrough to the underlying DownloadDBLogFilePortionRequest.
// It will increment the count of requests made to DownloadDBLogFilePortion.
func (c *RDS) DownloadDBLogFilePortionRequest(input *rds.DownloadDBLogFilePortionInput) (req *request.Request, output *rds.DownloadDBLogFilePortionOutput) {
	c.inc("DownloadDBLogFilePortion")
	return c.svc.DownloadDBLogFilePortionRequest(input)
}

// DownloadDBLogFilePortion is a passthrough to the underlying DownloadDBLogFilePortion method.
// It will increment the count of requests made to DownloadDBLogFilePortion.
func (c *RDS) DownloadDBLogFilePortion(input *rds.DownloadDBLogFilePortionInput) (*rds.DownloadDBLogFilePortionOutput, error) {
	c.inc("DownloadDBLogFilePortion")
	return c.svc.DownloadDBLogFilePortion(input)
}

// DownloadDBLogFilePortionWithContext is a passthrough to the underlying DownloadDBLogFilePortionWithContext method.
// It will increment the count of requests made to DownloadDBLogFilePortion.
func (c *RDS) DownloadDBLogFilePortionWithContext(ctx aws.Context, input *rds.DownloadDBLogFilePortionInput, opts ...request.Option) (*rds.DownloadDBLogFilePortionOutput, error) {
	c.inc("DownloadDBLogFilePortion")
	return c.svc.DownloadDBLogFilePortionWithContext(ctx, input, opts...)
}

// DownloadDBLogFilePortionPages is a passthrough to the underlying DownloadDBLogFilePortionPages method.
// It will increment the count of requests made to DownloadDBLogFilePortion on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DownloadDBLogFilePortionPagesWithContext to avoid this.
func (c *RDS) DownloadDBLogFilePortionPages(input *rds.DownloadDBLogFilePortionInput, fn func(*rds.DownloadDBLogFilePortionOutput, bool) bool) error {
	wrappedFn := func(page *rds.DownloadDBLogFilePortionOutput, lastPage bool) bool {
		c.inc("DownloadDBLogFilePortion")
		return fn(page, lastPage)
	}
	return c.svc.DownloadDBLogFilePortionPages(input, wrappedFn)
}

// DownloadDBLogFilePortionPagesWithContext is a passthrough to the underlying DownloadDBLogFilePortionPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DownloadDBLogFilePortion when applied to the request.
func (c *RDS) DownloadDBLogFilePortionPagesWithContext(ctx aws.Context, input *rds.DownloadDBLogFilePortionInput, fn func(*rds.DownloadDBLogFilePortionOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DownloadDBLogFilePortion"))
	return c.svc.DownloadDBLogFilePortionPagesWithContext(ctx, input, fn, opts...)
}

// FailoverDBClusterRequest is a passthrough to the underlying FailoverDBClusterRequest.
// It will increment the count of requests made to FailoverDBCluster.
func (c *RDS) FailoverDBClusterRequest(input *rds.FailoverDBClusterInput) (req *request.Request, output *rds.FailoverDBClusterOutput) {
	c.inc("FailoverDBCluster")
	return c.svc.FailoverDBClusterRequest(input)
}

// FailoverDBCluster is a passthrough to the underlying FailoverDBCluster method.
// It will increment the count of requests made to FailoverDBCluster.
func (c *RDS) FailoverDBCluster(input *rds.FailoverDBClusterInput) (*rds.FailoverDBClusterOutput, error) {
	c.inc("FailoverDBCluster")
	return c.svc.FailoverDBCluster(input)
}

// FailoverDBClusterWithContext is a passthrough to the underlying FailoverDBClusterWithContext method.
// It will increment the count of requests made to FailoverDBCluster.
func (c *RDS) FailoverDBClusterWithContext(ctx aws.Context, input *rds.FailoverDBClusterInput, opts ...request.Option) (*rds.FailoverDBClusterOutput, error) {
	c.inc("FailoverDBCluster")
	return c.svc.FailoverDBClusterWithContext(ctx, input, opts...)
}

// ListTagsForResourceRequest is a passthrough to the underlying ListTagsForResourceRequest.
// It will increment the count of requests made to ListTagsForResource.
func (c *RDS) ListTagsForResourceRequest(input *rds.ListTagsForResourceInput) (req *request.Request, output *rds.ListTagsForResourceOutput) {
	c.inc("ListTagsForResource")
	return c.svc.ListTagsForResourceRequest(input)
}

// ListTagsForResource is a passthrough to the underlying ListTagsForResource method.
// It will increment the count of requests made to ListTagsForResource.
func (c *RDS) ListTagsForResource(input *rds.ListTagsForResourceInput) (*rds.ListTagsForResourceOutput, error) {
	c.inc("ListTagsForResource")
	return c.svc.ListTagsForResource(input)
}

// ListTagsForResourceWithContext is a passthrough to the underlying ListTagsForResourceWithContext method.
// It will increment the count of requests made to ListTagsForResource.
func (c *RDS) ListTagsForResourceWithContext(ctx aws.Context, input *rds.ListTagsForResourceInput, opts ...request.Option) (*rds.ListTagsForResourceOutput, error) {
	c.inc("ListTagsForResource")
	return c.svc.ListTagsForResourceWithContext(ctx, input, opts...)
}

// ModifyDBClusterRequest is a passthrough to the underlying ModifyDBClusterRequest.
// It will increment the count of requests made to ModifyDBCluster.
func (c *RDS) ModifyDBClusterRequest(input *rds.ModifyDBClusterInput) (req *request.Request, output *rds.ModifyDBClusterOutput) {
	c.inc("ModifyDBCluster")
	return c.svc.ModifyDBClusterRequest(input)
}

// ModifyDBCluster is a passthrough to the underlying ModifyDBCluster method.
// It will increment the count of requests made to ModifyDBCluster.
func (c *RDS) ModifyDBCluster(input *rds.ModifyDBClusterInput) (*rds.ModifyDBClusterOutput, error) {
	c.inc("ModifyDBCluster")
	return c.svc.ModifyDBCluster(input)
}

// ModifyDBClusterWithContext is a passthrough to the underlying ModifyDBClusterWithContext method.
// It will increment the count of requests made to ModifyDBCluster.
func (c *RDS) ModifyDBClusterWithContext(ctx aws.Context, input *rds.ModifyDBClusterInput, opts ...request.Option) (*rds.ModifyDBClusterOutput, error) {
	c.inc("ModifyDBCluster")
	return c.svc.ModifyDBClusterWithContext(ctx, input, opts...)
}

// ModifyDBClusterParameterGroupRequest is a passthrough to the underlying ModifyDBClusterParameterGroupRequest.
// It will increment the count of requests made to ModifyDBClusterParameterGroup.
func (c *RDS) ModifyDBClusterParameterGroupRequest(input *rds.ModifyDBClusterParameterGroupInput) (req *request.Request, output *rds.DBClusterParameterGroupNameMessage) {
	c.inc("ModifyDBClusterParameterGroup")
	return c.svc.ModifyDBClusterParameterGroupRequest(input)
}

// ModifyDBClusterParameterGroup is a passthrough to the underlying ModifyDBClusterParameterGroup method.
// It will increment the count of requests made to ModifyDBClusterParameterGroup.
func (c *RDS) ModifyDBClusterParameterGroup(input *rds.ModifyDBClusterParameterGroupInput) (*rds.DBClusterParameterGroupNameMessage, error) {
	c.inc("ModifyDBClusterParameterGroup")
	return c.svc.ModifyDBClusterParameterGroup(input)
}

// ModifyDBClusterParameterGroupWithContext is a passthrough to the underlying ModifyDBClusterParameterGroupWithContext method.
// It will increment the count of requests made to ModifyDBClusterParameterGroup.
func (c *RDS) ModifyDBClusterParameterGroupWithContext(ctx aws.Context, input *rds.ModifyDBClusterParameterGroupInput, opts ...request.Option) (*rds.DBClusterParameterGroupNameMessage, error) {
	c.inc("ModifyDBClusterParameterGroup")
	return c.svc.ModifyDBClusterParameterGroupWithContext(ctx, input, opts...)
}

// ModifyDBClusterSnapshotAttributeRequest is a passthrough to the underlying ModifyDBClusterSnapshotAttributeRequest.
// It will increment the count of requests made to ModifyDBClusterSnapshotAttribute.
func (c *RDS) ModifyDBClusterSnapshotAttributeRequest(input *rds.ModifyDBClusterSnapshotAttributeInput) (req *request.Request, output *rds.ModifyDBClusterSnapshotAttributeOutput) {
	c.inc("ModifyDBClusterSnapshotAttribute")
	return c.svc.ModifyDBClusterSnapshotAttributeRequest(input)
}

// ModifyDBClusterSnapshotAttribute is a passthrough to the underlying ModifyDBClusterSnapshotAttribute method.
// It will increment the count of requests made to ModifyDBClusterSnapshotAttribute.
func (c *RDS) ModifyDBClusterSnapshotAttribute(input *rds.ModifyDBClusterSnapshotAttributeInput) (*rds.ModifyDBClusterSnapshotAttributeOutput, error) {
	c.inc("ModifyDBClusterSnapshotAttribute")
	return c.svc.ModifyDBClusterSnapshotAttribute(input)
}

// ModifyDBClusterSnapshotAttributeWithContext is a passthrough to the underlying ModifyDBClusterSnapshotAttributeWithContext method.
// It will increment the count of requests made to ModifyDBClusterSnapshotAttribute.
func (c *RDS) ModifyDBClusterSnapshotAttributeWithContext(ctx aws.Context, input *rds.ModifyDBClusterSnapshotAttributeInput, opts ...request.Option) (*rds.ModifyDBClusterSnapshotAttributeOutput, error) {
	c.inc("ModifyDBClusterSnapshotAttribute")
	return c.svc.ModifyDBClusterSnapshotAttributeWithContext(ctx, input, opts...)
}

// ModifyDBInstanceRequest is a passthrough to the underlying ModifyDBInstanceRequest.
// It will increment the count of requests made to ModifyDBInstance.
func (c *RDS) ModifyDBInstanceRequest(input *rds.ModifyDBInstanceInput) (req *request.Request, output *rds.ModifyDBInstanceOutput) {
	c.inc("ModifyDBInstance")
	return c.svc.ModifyDBInstanceRequest(input)
}

// ModifyDBInstance is a passthrough to the underlying ModifyDBInstance method.
// It will increment the count of requests made to ModifyDBInstance.
func (c *RDS) ModifyDBInstance(input *rds.ModifyDBInstanceInput) (*rds.ModifyDBInstanceOutput, error) {
	c.inc("ModifyDBInstance")
	return c.svc.ModifyDBInstance(input)
}

// ModifyDBInstanceWithContext is a passthrough to the underlying ModifyDBInstanceWithContext method.
// It will increment the count of requests made to ModifyDBInstance.
func (c *RDS) ModifyDBInstanceWithContext(ctx aws.Context, input *rds.ModifyDBInstanceInput, opts ...request.Option) (*rds.ModifyDBInstanceOutput, error) {
	c.inc("ModifyDBInstance")
	return c.svc.ModifyDBInstanceWithContext(ctx, input, opts...)
}

// ModifyDBParameterGroupRequest is a passthrough to the underlying ModifyDBParameterGroupRequest.
// It will increment the count of requests made to ModifyDBParameterGroup.
func (c *RDS) ModifyDBParameterGroupRequest(input *rds.ModifyDBParameterGroupInput) (req *request.Request, output *rds.DBParameterGroupNameMessage) {
	c.inc("ModifyDBParameterGroup")
	return c.svc.ModifyDBParameterGroupRequest(input)
}

// ModifyDBParameterGroup is a passthrough to the underlying ModifyDBParameterGroup method.
// It will increment the count of requests made to ModifyDBParameterGroup.
func (c *RDS) ModifyDBParameterGroup(input *rds.ModifyDBParameterGroupInput) (*rds.DBParameterGroupNameMessage, error) {
	c.inc("ModifyDBParameterGroup")
	return c.svc.ModifyDBParameterGroup(input)
}

// ModifyDBParameterGroupWithContext is a passthrough to the underlying ModifyDBParameterGroupWithContext method.
// It will increment the count of requests made to ModifyDBParameterGroup.
func (c *RDS) ModifyDBParameterGroupWithContext(ctx aws.Context, input *rds.ModifyDBParameterGroupInput, opts ...request.Option) (*rds.DBParameterGroupNameMessage, error) {
	c.inc("ModifyDBParameterGroup")
	return c.svc.ModifyDBParameterGroupWithContext(ctx, input, opts...)
}

// ModifyDBSnapshotRequest is a passthrough to the underlying ModifyDBSnapshotRequest.
// It will increment the count of requests made to ModifyDBSnapshot.
func (c *RDS) ModifyDBSnapshotRequest(input *rds.ModifyDBSnapshotInput) (req *request.Request, output *rds.ModifyDBSnapshotOutput) {
	c.inc("ModifyDBSnapshot")
	return c.svc.ModifyDBSnapshotRequest(input)
}

// ModifyDBSnapshot is a passthrough to the underlying ModifyDBSnapshot method.
// It will increment the count of requests made to ModifyDBSnapshot.
func (c *RDS) ModifyDBSnapshot(input *rds.ModifyDBSnapshotInput) (*rds.ModifyDBSnapshotOutput, error) {
	c.inc("ModifyDBSnapshot")
	return c.svc.ModifyDBSnapshot(input)
}

// ModifyDBSnapshotWithContext is a passthrough to the underlying ModifyDBSnapshotWithContext method.
// It will increment the count of requests made to ModifyDBSnapshot.
func (c *RDS) ModifyDBSnapshotWithContext(ctx aws.Context, input *rds.ModifyDBSnapshotInput, opts ...request.Option) (*rds.ModifyDBSnapshotOutput, error) {
	c.inc("ModifyDBSnapshot")
	return c.svc.ModifyDBSnapshotWithContext(ctx, input, opts...)
}

// ModifyDBSnapshotAttributeRequest is a passthrough to the underlying ModifyDBSnapshotAttributeRequest.
// It will increment the count of requests made to ModifyDBSnapshotAttribute.
func (c *RDS) ModifyDBSnapshotAttributeRequest(input *rds.ModifyDBSnapshotAttributeInput) (req *request.Request, output *rds.ModifyDBSnapshotAttributeOutput) {
	c.inc("ModifyDBSnapshotAttribute")
	return c.svc.ModifyDBSnapshotAttributeRequest(input)
}

// ModifyDBSnapshotAttribute is a passthrough to the underlying ModifyDBSnapshotAttribute method.
// It will increment the count of requests made to ModifyDBSnapshotAttribute.
func (c *RDS) ModifyDBSnapshotAttribute(input *rds.ModifyDBSnapshotAttributeInput) (*rds.ModifyDBSnapshotAttributeOutput, error) {
	c.inc("ModifyDBSnapshotAttribute")
	return c.svc.ModifyDBSnapshotAttribute(input)
}

// ModifyDBSnapshotAttributeWithContext is a passthrough to the underlying ModifyDBSnapshotAttributeWithContext method.
// It will increment the count of requests made to ModifyDBSnapshotAttribute.
func (c *RDS) ModifyDBSnapshotAttributeWithContext(ctx aws.Context, input *rds.ModifyDBSnapshotAttributeInput, opts ...request.Option) (*rds.ModifyDBSnapshotAttributeOutput, error) {
	c.inc("ModifyDBSnapshotAttribute")
	return c.svc.ModifyDBSnapshotAttributeWithContext(ctx, input, opts...)
}

// ModifyDBSubnetGroupRequest is a passthrough to the underlying ModifyDBSubnetGroupRequest.
// It will increment the count of requests made to ModifyDBSubnetGroup.
func (c *RDS) ModifyDBSubnetGroupRequest(input *rds.ModifyDBSubnetGroupInput) (req *request.Request, output *rds.ModifyDBSubnetGroupOutput) {
	c.inc("ModifyDBSubnetGroup")
	return c.svc.ModifyDBSubnetGroupRequest(input)
}

// ModifyDBSubnetGroup is a passthrough to the underlying ModifyDBSubnetGroup method.
// It will increment the count of requests made to ModifyDBSubnetGroup.
func (c *RDS) ModifyDBSubnetGroup(input *rds.ModifyDBSubnetGroupInput) (*rds.ModifyDBSubnetGroupOutput, error) {
	c.inc("ModifyDBSubnetGroup")
	return c.svc.ModifyDBSubnetGroup(input)
}

// ModifyDBSubnetGroupWithContext is a passthrough to the underlying ModifyDBSubnetGroupWithContext method.
// It will increment the count of requests made to ModifyDBSubnetGroup.
func (c *RDS) ModifyDBSubnetGroupWithContext(ctx aws.Context, input *rds.ModifyDBSubnetGroupInput, opts ...request.Option) (*rds.ModifyDBSubnetGroupOutput, error) {
	c.inc("ModifyDBSubnetGroup")
	return c.svc.ModifyDBSubnetGroupWithContext(ctx, input, opts...)
}

// ModifyEventSubscriptionRequest is a passthrough to the underlying ModifyEventSubscriptionRequest.
// It will increment the count of requests made to ModifyEventSubscription.
func (c *RDS) ModifyEventSubscriptionRequest(input *rds.ModifyEventSubscriptionInput) (req *request.Request, output *rds.ModifyEventSubscriptionOutput) {
	c.inc("ModifyEventSubscription")
	return c.svc.ModifyEventSubscriptionRequest(input)
}

// ModifyEventSubscription is a passthrough to the underlying ModifyEventSubscription method.
// It will increment the count of requests made to ModifyEventSubscription.
func (c *RDS) ModifyEventSubscription(input *rds.ModifyEventSubscriptionInput) (*rds.ModifyEventSubscriptionOutput, error) {
	c.inc("ModifyEventSubscription")
	return c.svc.ModifyEventSubscription(input)
}

// ModifyEventSubscriptionWithContext is a passthrough to the underlying ModifyEventSubscriptionWithContext method.
// It will increment the count of requests made to ModifyEventSubscription.
func (c *RDS) ModifyEventSubscriptionWithContext(ctx aws.Context, input *rds.ModifyEventSubscriptionInput, opts ...request.Option) (*rds.ModifyEventSubscriptionOutput, error) {
	c.inc("ModifyEventSubscription")
	return c.svc.ModifyEventSubscriptionWithContext(ctx, input, opts...)
}

// ModifyOptionGroupRequest is a passthrough to the underlying ModifyOptionGroupRequest.
// It will increment the count of requests made to ModifyOptionGroup.
func (c *RDS) ModifyOptionGroupRequest(input *rds.ModifyOptionGroupInput) (req *request.Request, output *rds.ModifyOptionGroupOutput) {
	c.inc("ModifyOptionGroup")
	return c.svc.ModifyOptionGroupRequest(input)
}

// ModifyOptionGroup is a passthrough to the underlying ModifyOptionGroup method.
// It will increment the count of requests made to ModifyOptionGroup.
func (c *RDS) ModifyOptionGroup(input *rds.ModifyOptionGroupInput) (*rds.ModifyOptionGroupOutput, error) {
	c.inc("ModifyOptionGroup")
	return c.svc.ModifyOptionGroup(input)
}

// ModifyOptionGroupWithContext is a passthrough to the underlying ModifyOptionGroupWithContext method.
// It will increment the count of requests made to ModifyOptionGroup.
func (c *RDS) ModifyOptionGroupWithContext(ctx aws.Context, input *rds.ModifyOptionGroupInput, opts ...request.Option) (*rds.ModifyOptionGroupOutput, error) {
	c.inc("ModifyOptionGroup")
	return c.svc.ModifyOptionGroupWithContext(ctx, input, opts...)
}

// PromoteReadReplicaRequest is a passthrough to the underlying PromoteReadReplicaRequest.
// It will increment the count of requests made to PromoteReadReplica.
func (c *RDS) PromoteReadReplicaRequest(input *rds.PromoteReadReplicaInput) (req *request.Request, output *rds.PromoteReadReplicaOutput) {
	c.inc("PromoteReadReplica")
	return c.svc.PromoteReadReplicaRequest(input)
}

// PromoteReadReplica is a passthrough to the underlying PromoteReadReplica method.
// It will increment the count of requests made to PromoteReadReplica.
func (c *RDS) PromoteReadReplica(input *rds.PromoteReadReplicaInput) (*rds.PromoteReadReplicaOutput, error) {
	c.inc("PromoteReadReplica")
	return c.svc.PromoteReadReplica(input)
}

// PromoteReadReplicaWithContext is a passthrough to the underlying PromoteReadReplicaWithContext method.
// It will increment the count of requests made to PromoteReadReplica.
func (c *RDS) PromoteReadReplicaWithContext(ctx aws.Context, input *rds.PromoteReadReplicaInput, opts ...request.Option) (*rds.PromoteReadReplicaOutput, error) {
	c.inc("PromoteReadReplica")
	return c.svc.PromoteReadReplicaWithContext(ctx, input, opts...)
}

// PromoteReadReplicaDBClusterRequest is a passthrough to the underlying PromoteReadReplicaDBClusterRequest.
// It will increment the count of requests made to PromoteReadReplicaDBCluster.
func (c *RDS) PromoteReadReplicaDBClusterRequest(input *rds.PromoteReadReplicaDBClusterInput) (req *request.Request, output *rds.PromoteReadReplicaDBClusterOutput) {
	c.inc("PromoteReadReplicaDBCluster")
	return c.svc.PromoteReadReplicaDBClusterRequest(input)
}

// PromoteReadReplicaDBCluster is a passthrough to the underlying PromoteReadReplicaDBCluster method.
// It will increment the count of requests made to PromoteReadReplicaDBCluster.
func (c *RDS) PromoteReadReplicaDBCluster(input *rds.PromoteReadReplicaDBClusterInput) (*rds.PromoteReadReplicaDBClusterOutput, error) {
	c.inc("PromoteReadReplicaDBCluster")
	return c.svc.PromoteReadReplicaDBCluster(input)
}

// PromoteReadReplicaDBClusterWithContext is a passthrough to the underlying PromoteReadReplicaDBClusterWithContext method.
// It will increment the count of requests made to PromoteReadReplicaDBCluster.
func (c *RDS) PromoteReadReplicaDBClusterWithContext(ctx aws.Context, input *rds.PromoteReadReplicaDBClusterInput, opts ...request.Option) (*rds.PromoteReadReplicaDBClusterOutput, error) {
	c.inc("PromoteReadReplicaDBCluster")
	return c.svc.PromoteReadReplicaDBClusterWithContext(ctx, input, opts...)
}

// PurchaseReservedDBInstancesOfferingRequest is a passthrough to the underlying PurchaseReservedDBInstancesOfferingRequest.
// It will increment the count of requests made to PurchaseReservedDBInstancesOffering.
func (c *RDS) PurchaseReservedDBInstancesOfferingRequest(input *rds.PurchaseReservedDBInstancesOfferingInput) (req *request.Request, output *rds.PurchaseReservedDBInstancesOfferingOutput) {
	c.inc("PurchaseReservedDBInstancesOffering")
	return c.svc.PurchaseReservedDBInstancesOfferingRequest(input)
}

// PurchaseReservedDBInstancesOffering is a passthrough to the underlying PurchaseReservedDBInstancesOffering method.
// It will increment the count of requests made to PurchaseReservedDBInstancesOffering.
func (c *RDS) PurchaseReservedDBInstancesOffering(input *rds.PurchaseReservedDBInstancesOfferingInput) (*rds.PurchaseReservedDBInstancesOfferingOutput, error) {
	c.inc("PurchaseReservedDBInstancesOffering")
	return c.svc.PurchaseReservedDBInstancesOffering(input)
}

// PurchaseReservedDBInstancesOfferingWithContext is a passthrough to the underlying PurchaseReservedDBInstancesOfferingWithContext method.
// It will increment the count of requests made to PurchaseReservedDBInstancesOffering.
func (c *RDS) PurchaseReservedDBInstancesOfferingWithContext(ctx aws.Context, input *rds.PurchaseReservedDBInstancesOfferingInput, opts ...request.Option) (*rds.PurchaseReservedDBInstancesOfferingOutput, error) {
	c.inc("PurchaseReservedDBInstancesOffering")
	return c.svc.PurchaseReservedDBInstancesOfferingWithContext(ctx, input, opts...)
}

// RebootDBInstanceRequest is a passthrough to the underlying RebootDBInstanceRequest.
// It will increment the count of requests made to RebootDBInstance.
func (c *RDS) RebootDBInstanceRequest(input *rds.RebootDBInstanceInput) (req *request.Request, output *rds.RebootDBInstanceOutput) {
	c.inc("RebootDBInstance")
	return c.svc.RebootDBInstanceRequest(input)
}

// RebootDBInstance is a passthrough to the underlying RebootDBInstance method.
// It will increment the count of requests made to RebootDBInstance.
func (c *RDS) RebootDBInstance(input *rds.RebootDBInstanceInput) (*rds.RebootDBInstanceOutput, error) {
	c.inc("RebootDBInstance")
	return c.svc.RebootDBInstance(input)
}

// RebootDBInstanceWithContext is a passthrough to the underlying RebootDBInstanceWithContext method.
// It will increment the count of requests made to RebootDBInstance.
func (c *RDS) RebootDBInstanceWithContext(ctx aws.Context, input *rds.RebootDBInstanceInput, opts ...request.Option) (*rds.RebootDBInstanceOutput, error) {
	c.inc("RebootDBInstance")
	return c.svc.RebootDBInstanceWithContext(ctx, input, opts...)
}

// RemoveRoleFromDBClusterRequest is a passthrough to the underlying RemoveRoleFromDBClusterRequest.
// It will increment the count of requests made to RemoveRoleFromDBCluster.
func (c *RDS) RemoveRoleFromDBClusterRequest(input *rds.RemoveRoleFromDBClusterInput) (req *request.Request, output *rds.RemoveRoleFromDBClusterOutput) {
	c.inc("RemoveRoleFromDBCluster")
	return c.svc.RemoveRoleFromDBClusterRequest(input)
}

// RemoveRoleFromDBCluster is a passthrough to the underlying RemoveRoleFromDBCluster method.
// It will increment the count of requests made to RemoveRoleFromDBCluster.
func (c *RDS) RemoveRoleFromDBCluster(input *rds.RemoveRoleFromDBClusterInput) (*rds.RemoveRoleFromDBClusterOutput, error) {
	c.inc("RemoveRoleFromDBCluster")
	return c.svc.RemoveRoleFromDBCluster(input)
}

// RemoveRoleFromDBClusterWithContext is a passthrough to the underlying RemoveRoleFromDBClusterWithContext method.
// It will increment the count of requests made to RemoveRoleFromDBCluster.
func (c *RDS) RemoveRoleFromDBClusterWithContext(ctx aws.Context, input *rds.RemoveRoleFromDBClusterInput, opts ...request.Option) (*rds.RemoveRoleFromDBClusterOutput, error) {
	c.inc("RemoveRoleFromDBCluster")
	return c.svc.RemoveRoleFromDBClusterWithContext(ctx, input, opts...)
}

// RemoveSourceIdentifierFromSubscriptionRequest is a passthrough to the underlying RemoveSourceIdentifierFromSubscriptionRequest.
// It will increment the count of requests made to RemoveSourceIdentifierFromSubscription.
func (c *RDS) RemoveSourceIdentifierFromSubscriptionRequest(input *rds.RemoveSourceIdentifierFromSubscriptionInput) (req *request.Request, output *rds.RemoveSourceIdentifierFromSubscriptionOutput) {
	c.inc("RemoveSourceIdentifierFromSubscription")
	return c.svc.RemoveSourceIdentifierFromSubscriptionRequest(input)
}

// RemoveSourceIdentifierFromSubscription is a passthrough to the underlying RemoveSourceIdentifierFromSubscription method.
// It will increment the count of requests made to RemoveSourceIdentifierFromSubscription.
func (c *RDS) RemoveSourceIdentifierFromSubscription(input *rds.RemoveSourceIdentifierFromSubscriptionInput) (*rds.RemoveSourceIdentifierFromSubscriptionOutput, error) {
	c.inc("RemoveSourceIdentifierFromSubscription")
	return c.svc.RemoveSourceIdentifierFromSubscription(input)
}

// RemoveSourceIdentifierFromSubscriptionWithContext is a passthrough to the underlying RemoveSourceIdentifierFromSubscriptionWithContext method.
// It will increment the count of requests made to RemoveSourceIdentifierFromSubscription.
func (c *RDS) RemoveSourceIdentifierFromSubscriptionWithContext(ctx aws.Context, input *rds.RemoveSourceIdentifierFromSubscriptionInput, opts ...request.Option) (*rds.RemoveSourceIdentifierFromSubscriptionOutput, error) {
	c.inc("RemoveSourceIdentifierFromSubscription")
	return c.svc.RemoveSourceIdentifierFromSubscriptionWithContext(ctx, input, opts...)
}

// RemoveTagsFromResourceRequest is a passthrough to the underlying RemoveTagsFromResourceRequest.
// It will increment the count of requests made to RemoveTagsFromResource.
func (c *RDS) RemoveTagsFromResourceRequest(input *rds.RemoveTagsFromResourceInput) (req *request.Request, output *rds.RemoveTagsFromResourceOutput) {
	c.inc("RemoveTagsFromResource")
	return c.svc.RemoveTagsFromResourceRequest(input)
}

// RemoveTagsFromResource is a passthrough to the underlying RemoveTagsFromResource method.
// It will increment the count of requests made to RemoveTagsFromResource.
func (c *RDS) RemoveTagsFromResource(input *rds.RemoveTagsFromResourceInput) (*rds.RemoveTagsFromResourceOutput, error) {
	c.inc("RemoveTagsFromResource")
	return c.svc.RemoveTagsFromResource(input)
}

// RemoveTagsFromResourceWithContext is a passthrough to the underlying RemoveTagsFromResourceWithContext method.
// It will increment the count of requests made to RemoveTagsFromResource.
func (c *RDS) RemoveTagsFromResourceWithContext(ctx aws.Context, input *rds.RemoveTagsFromResourceInput, opts ...request.Option) (*rds.RemoveTagsFromResourceOutput, error) {
	c.inc("RemoveTagsFromResource")
	return c.svc.RemoveTagsFromResourceWithContext(ctx, input, opts...)
}

// ResetDBClusterParameterGroupRequest is a passthrough to the underlying ResetDBClusterParameterGroupRequest.
// It will increment the count of requests made to ResetDBClusterParameterGroup.
func (c *RDS) ResetDBClusterParameterGroupRequest(input *rds.ResetDBClusterParameterGroupInput) (req *request.Request, output *rds.DBClusterParameterGroupNameMessage) {
	c.inc("ResetDBClusterParameterGroup")
	return c.svc.ResetDBClusterParameterGroupRequest(input)
}

// ResetDBClusterParameterGroup is a passthrough to the underlying ResetDBClusterParameterGroup method.
// It will increment the count of requests made to ResetDBClusterParameterGroup.
func (c *RDS) ResetDBClusterParameterGroup(input *rds.ResetDBClusterParameterGroupInput) (*rds.DBClusterParameterGroupNameMessage, error) {
	c.inc("ResetDBClusterParameterGroup")
	return c.svc.ResetDBClusterParameterGroup(input)
}

// ResetDBClusterParameterGroupWithContext is a passthrough to the underlying ResetDBClusterParameterGroupWithContext method.
// It will increment the count of requests made to ResetDBClusterParameterGroup.
func (c *RDS) ResetDBClusterParameterGroupWithContext(ctx aws.Context, input *rds.ResetDBClusterParameterGroupInput, opts ...request.Option) (*rds.DBClusterParameterGroupNameMessage, error) {
	c.inc("ResetDBClusterParameterGroup")
	return c.svc.ResetDBClusterParameterGroupWithContext(ctx, input, opts...)
}

// ResetDBParameterGroupRequest is a passthrough to the underlying ResetDBParameterGroupRequest.
// It will increment the count of requests made to ResetDBParameterGroup.
func (c *RDS) ResetDBParameterGroupRequest(input *rds.ResetDBParameterGroupInput) (req *request.Request, output *rds.DBParameterGroupNameMessage) {
	c.inc("ResetDBParameterGroup")
	return c.svc.ResetDBParameterGroupRequest(input)
}

// ResetDBParameterGroup is a passthrough to the underlying ResetDBParameterGroup method.
// It will increment the count of requests made to ResetDBParameterGroup.
func (c *RDS) ResetDBParameterGroup(input *rds.ResetDBParameterGroupInput) (*rds.DBParameterGroupNameMessage, error) {
	c.inc("ResetDBParameterGroup")
	return c.svc.ResetDBParameterGroup(input)
}

// ResetDBParameterGroupWithContext is a passthrough to the underlying ResetDBParameterGroupWithContext method.
// It will increment the count of requests made to ResetDBParameterGroup.
func (c *RDS) ResetDBParameterGroupWithContext(ctx aws.Context, input *rds.ResetDBParameterGroupInput, opts ...request.Option) (*rds.DBParameterGroupNameMessage, error) {
	c.inc("ResetDBParameterGroup")
	return c.svc.ResetDBParameterGroupWithContext(ctx, input, opts...)
}

// RestoreDBClusterFromS3Request is a passthrough to the underlying RestoreDBClusterFromS3Request.
// It will increment the count of requests made to RestoreDBClusterFromS3.
func (c *RDS) RestoreDBClusterFromS3Request(input *rds.RestoreDBClusterFromS3Input) (req *request.Request, output *rds.RestoreDBClusterFromS3Output) {
	c.inc("RestoreDBClusterFromS3")
	return c.svc.RestoreDBClusterFromS3Request(input)
}

// RestoreDBClusterFromS3 is a passthrough to the underlying RestoreDBClusterFromS3 method.
// It will increment the count of requests made to RestoreDBClusterFromS3.
func (c *RDS) RestoreDBClusterFromS3(input *rds.RestoreDBClusterFromS3Input) (*rds.RestoreDBClusterFromS3Output, error) {
	c.inc("RestoreDBClusterFromS3")
	return c.svc.RestoreDBClusterFromS3(input)
}

// RestoreDBClusterFromS3WithContext is a passthrough to the underlying RestoreDBClusterFromS3WithContext method.
// It will increment the count of requests made to RestoreDBClusterFromS3.
func (c *RDS) RestoreDBClusterFromS3WithContext(ctx aws.Context, input *rds.RestoreDBClusterFromS3Input, opts ...request.Option) (*rds.RestoreDBClusterFromS3Output, error) {
	c.inc("RestoreDBClusterFromS3")
	return c.svc.RestoreDBClusterFromS3WithContext(ctx, input, opts...)
}

// RestoreDBClusterFromSnapshotRequest is a passthrough to the underlying RestoreDBClusterFromSnapshotRequest.
// It will increment the count of requests made to RestoreDBClusterFromSnapshot.
func (c *RDS) RestoreDBClusterFromSnapshotRequest(input *rds.RestoreDBClusterFromSnapshotInput) (req *request.Request, output *rds.RestoreDBClusterFromSnapshotOutput) {
	c.inc("RestoreDBClusterFromSnapshot")
	return c.svc.RestoreDBClusterFromSnapshotRequest(input)
}

// RestoreDBClusterFromSnapshot is a passthrough to the underlying RestoreDBClusterFromSnapshot method.
// It will increment the count of requests made to RestoreDBClusterFromSnapshot.
func (c *RDS) RestoreDBClusterFromSnapshot(input *rds.RestoreDBClusterFromSnapshotInput) (*rds.RestoreDBClusterFromSnapshotOutput, error) {
	c.inc("RestoreDBClusterFromSnapshot")
	return c.svc.RestoreDBClusterFromSnapshot(input)
}

// RestoreDBClusterFromSnapshotWithContext is a passthrough to the underlying RestoreDBClusterFromSnapshotWithContext method.
// It will increment the count of requests made to RestoreDBClusterFromSnapshot.
func (c *RDS) RestoreDBClusterFromSnapshotWithContext(ctx aws.Context, input *rds.RestoreDBClusterFromSnapshotInput, opts ...request.Option) (*rds.RestoreDBClusterFromSnapshotOutput, error) {
	c.inc("RestoreDBClusterFromSnapshot")
	return c.svc.RestoreDBClusterFromSnapshotWithContext(ctx, input, opts...)
}

// RestoreDBClusterToPointInTimeRequest is a passthrough to the underlying RestoreDBClusterToPointInTimeRequest.
// It will increment the count of requests made to RestoreDBClusterToPointInTime.
func (c *RDS) RestoreDBClusterToPointInTimeRequest(input *rds.RestoreDBClusterToPointInTimeInput) (req *request.Request, output *rds.RestoreDBClusterToPointInTimeOutput) {
	c.inc("RestoreDBClusterToPointInTime")
	return c.svc.RestoreDBClusterToPointInTimeRequest(input)
}

// RestoreDBClusterToPointInTime is a passthrough to the underlying RestoreDBClusterToPointInTime method.
// It will increment the count of requests made to RestoreDBClusterToPointInTime.
func (c *RDS) RestoreDBClusterToPointInTime(input *rds.RestoreDBClusterToPointInTimeInput) (*rds.RestoreDBClusterToPointInTimeOutput, error) {
	c.inc("RestoreDBClusterToPointInTime")
	return c.svc.RestoreDBClusterToPointInTime(input)
}

// RestoreDBClusterToPointInTimeWithContext is a passthrough to the underlying RestoreDBClusterToPointInTimeWithContext method.
// It will increment the count of requests made to RestoreDBClusterToPointInTime.
func (c *RDS) RestoreDBClusterToPointInTimeWithContext(ctx aws.Context, input *rds.RestoreDBClusterToPointInTimeInput, opts ...request.Option) (*rds.RestoreDBClusterToPointInTimeOutput, error) {
	c.inc("RestoreDBClusterToPointInTime")
	return c.svc.RestoreDBClusterToPointInTimeWithContext(ctx, input, opts...)
}

// RestoreDBInstanceFromDBSnapshotRequest is a passthrough to the underlying RestoreDBInstanceFromDBSnapshotRequest.
// It will increment the count of requests made to RestoreDBInstanceFromDBSnapshot.
func (c *RDS) RestoreDBInstanceFromDBSnapshotRequest(input *rds.RestoreDBInstanceFromDBSnapshotInput) (req *request.Request, output *rds.RestoreDBInstanceFromDBSnapshotOutput) {
	c.inc("RestoreDBInstanceFromDBSnapshot")
	return c.svc.RestoreDBInstanceFromDBSnapshotRequest(input)
}

// RestoreDBInstanceFromDBSnapshot is a passthrough to the underlying RestoreDBInstanceFromDBSnapshot method.
// It will increment the count of requests made to RestoreDBInstanceFromDBSnapshot.
func (c *RDS) RestoreDBInstanceFromDBSnapshot(input *rds.RestoreDBInstanceFromDBSnapshotInput) (*rds.RestoreDBInstanceFromDBSnapshotOutput, error) {
	c.inc("RestoreDBInstanceFromDBSnapshot")
	return c.svc.RestoreDBInstanceFromDBSnapshot(input)
}

// RestoreDBInstanceFromDBSnapshotWithContext is a passthrough to the underlying RestoreDBInstanceFromDBSnapshotWithContext method.
// It will increment the count of requests made to RestoreDBInstanceFromDBSnapshot.
func (c *RDS) RestoreDBInstanceFromDBSnapshotWithContext(ctx aws.Context, input *rds.RestoreDBInstanceFromDBSnapshotInput, opts ...request.Option) (*rds.RestoreDBInstanceFromDBSnapshotOutput, error) {
	c.inc("RestoreDBInstanceFromDBSnapshot")
	return c.svc.RestoreDBInstanceFromDBSnapshotWithContext(ctx, input, opts...)
}

// RestoreDBInstanceToPointInTimeRequest is a passthrough to the underlying RestoreDBInstanceToPointInTimeRequest.
// It will increment the count of requests made to RestoreDBInstanceToPointInTime.
func (c *RDS) RestoreDBInstanceToPointInTimeRequest(input *rds.RestoreDBInstanceToPointInTimeInput) (req *request.Request, output *rds.RestoreDBInstanceToPointInTimeOutput) {
	c.inc("RestoreDBInstanceToPointInTime")
	return c.svc.RestoreDBInstanceToPointInTimeRequest(input)
}

// RestoreDBInstanceToPointInTime is a passthrough to the underlying RestoreDBInstanceToPointInTime method.
// It will increment the count of requests made to RestoreDBInstanceToPointInTime.
func (c *RDS) RestoreDBInstanceToPointInTime(input *rds.RestoreDBInstanceToPointInTimeInput) (*rds.RestoreDBInstanceToPointInTimeOutput, error) {
	c.inc("RestoreDBInstanceToPointInTime")
	return c.svc.RestoreDBInstanceToPointInTime(input)
}

// RestoreDBInstanceToPointInTimeWithContext is a passthrough to the underlying RestoreDBInstanceToPointInTimeWithContext method.
// It will increment the count of requests made to RestoreDBInstanceToPointInTime.
func (c *RDS) RestoreDBInstanceToPointInTimeWithContext(ctx aws.Context, input *rds.RestoreDBInstanceToPointInTimeInput, opts ...request.Option) (*rds.RestoreDBInstanceToPointInTimeOutput, error) {
	c.inc("RestoreDBInstanceToPointInTime")
	return c.svc.RestoreDBInstanceToPointInTimeWithContext(ctx, input, opts...)
}

// RevokeDBSecurityGroupIngressRequest is a passthrough to the underlying RevokeDBSecurityGroupIngressRequest.
// It will increment the count of requests made to RevokeDBSecurityGroupIngress.
func (c *RDS) RevokeDBSecurityGroupIngressRequest(input *rds.RevokeDBSecurityGroupIngressInput) (req *request.Request, output *rds.RevokeDBSecurityGroupIngressOutput) {
	c.inc("RevokeDBSecurityGroupIngress")
	return c.svc.RevokeDBSecurityGroupIngressRequest(input)
}

// RevokeDBSecurityGroupIngress is a passthrough to the underlying RevokeDBSecurityGroupIngress method.
// It will increment the count of requests made to RevokeDBSecurityGroupIngress.
func (c *RDS) RevokeDBSecurityGroupIngress(input *rds.RevokeDBSecurityGroupIngressInput) (*rds.RevokeDBSecurityGroupIngressOutput, error) {
	c.inc("RevokeDBSecurityGroupIngress")
	return c.svc.RevokeDBSecurityGroupIngress(input)
}

// RevokeDBSecurityGroupIngressWithContext is a passthrough to the underlying RevokeDBSecurityGroupIngressWithContext method.
// It will increment the count of requests made to RevokeDBSecurityGroupIngress.
func (c *RDS) RevokeDBSecurityGroupIngressWithContext(ctx aws.Context, input *rds.RevokeDBSecurityGroupIngressInput, opts ...request.Option) (*rds.RevokeDBSecurityGroupIngressOutput, error) {
	c.inc("RevokeDBSecurityGroupIngress")
	return c.svc.RevokeDBSecurityGroupIngressWithContext(ctx, input, opts...)
}

// StartDBInstanceRequest is a passthrough to the underlying StartDBInstanceRequest.
// It will increment the count of requests made to StartDBInstance.
func (c *RDS) StartDBInstanceRequest(input *rds.StartDBInstanceInput) (req *request.Request, output *rds.StartDBInstanceOutput) {
	c.inc("StartDBInstance")
	return c.svc.StartDBInstanceRequest(input)
}

// StartDBInstance is a passthrough to the underlying StartDBInstance method.
// It will increment the count of requests made to StartDBInstance.
func (c *RDS) StartDBInstance(input *rds.StartDBInstanceInput) (*rds.StartDBInstanceOutput, error) {
	c.inc("StartDBInstance")
	return c.svc.StartDBInstance(input)
}

// StartDBInstanceWithContext is a passthrough to the underlying StartDBInstanceWithContext method.
// It will increment the count of requests made to StartDBInstance.
func (c *RDS) StartDBInstanceWithContext(ctx aws.Context, input *rds.StartDBInstanceInput, opts ...request.Option) (*rds.StartDBInstanceOutput, error) {
	c.inc("StartDBInstance")
	return c.svc.StartDBInstanceWithContext(ctx, input, opts...)
}

// StopDBInstanceRequest is a passthrough to the underlying StopDBInstanceRequest.
// It will increment the count of requests made to StopDBInstance.
func (c *RDS) StopDBInstanceRequest(input *rds.StopDBInstanceInput) (req *request.Request, output *rds.StopDBInstanceOutput) {
	c.inc("StopDBInstance")
	return c.svc.StopDBInstanceRequest(input)
}

// StopDBInstance is a passthrough to the underlying StopDBInstance method.
// It will increment the count of requests made to StopDBInstance.
func (c *RDS) StopDBInstance(input *rds.StopDBInstanceInput) (*rds.StopDBInstanceOutput, error) {
	c.inc("StopDBInstance")
	return c.svc.StopDBInstance(input)
}

// StopDBInstanceWithContext is a passthrough to the underlying StopDBInstanceWithContext method.
// It will increment the count of requests made to StopDBInstance.
func (c *RDS) StopDBInstanceWithContext(ctx aws.Context, input *rds.StopDBInstanceInput, opts ...request.Option) (*rds.StopDBInstanceOutput, error) {
	c.inc("StopDBInstance")
	return c.svc.StopDBInstanceWithContext(ctx, input, opts...)
}
