// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package codestarcounter

import (
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/codestar"
)

// AssociateTeamMemberRequest is a passthrough to the underlying AssociateTeamMemberRequest.
// It will increment the count of requests made to AssociateTeamMember.
func (c *CodeStar) AssociateTeamMemberRequest(input *codestar.AssociateTeamMemberInput) (req *request.Request, output *codestar.AssociateTeamMemberOutput) {
	c.inc("AssociateTeamMember")
	return c.svc.AssociateTeamMemberRequest(input)
}

// AssociateTeamMember is a passthrough to the underlying AssociateTeamMember method.
// It will increment the count of requests made to AssociateTeamMember.
func (c *CodeStar) AssociateTeamMember(input *codestar.AssociateTeamMemberInput) (*codestar.AssociateTeamMemberOutput, error) {
	c.inc("AssociateTeamMember")
	return c.svc.AssociateTeamMember(input)
}

// AssociateTeamMemberWithContext is a passthrough to the underlying AssociateTeamMemberWithContext method.
// It will increment the count of requests made to AssociateTeamMember.
func (c *CodeStar) AssociateTeamMemberWithContext(ctx aws.Context, input *codestar.AssociateTeamMemberInput, opts ...request.Option) (*codestar.AssociateTeamMemberOutput, error) {
	c.inc("AssociateTeamMember")
	return c.svc.AssociateTeamMemberWithContext(ctx, input, opts...)
}

// CreateProjectRequest is a passthrough to the underlying CreateProjectRequest.
// It will increment the count of requests made to CreateProject.
func (c *CodeStar) CreateProjectRequest(input *codestar.CreateProjectInput) (req *request.Request, output *codestar.CreateProjectOutput) {
	c.inc("CreateProject")
	return c.svc.CreateProjectRequest(input)
}

// CreateProject is a passthrough to the underlying CreateProject method.
// It will increment the count of requests made to CreateProject.
func (c *CodeStar) CreateProject(input *codestar.CreateProjectInput) (*codestar.CreateProjectOutput, error) {
	c.inc("CreateProject")
	return c.svc.CreateProject(input)
}

// CreateProjectWithContext is a passthrough to the underlying CreateProjectWithContext method.
// It will increment the count of requests made to CreateProject.
func (c *CodeStar) CreateProjectWithContext(ctx aws.Context, input *codestar.CreateProjectInput, opts ...request.Option) (*codestar.CreateProjectOutput, error) {
	c.inc("CreateProject")
	return c.svc.CreateProjectWithContext(ctx, input, opts...)
}

// CreateUserProfileRequest is a passthrough to the underlying CreateUserProfileRequest.
// It will increment the count of requests made to CreateUserProfile.
func (c *CodeStar) CreateUserProfileRequest(input *codestar.CreateUserProfileInput) (req *request.Request, output *codestar.CreateUserProfileOutput) {
	c.inc("CreateUserProfile")
	return c.svc.CreateUserProfileRequest(input)
}

// CreateUserProfile is a passthrough to the underlying CreateUserProfile method.
// It will increment the count of requests made to CreateUserProfile.
func (c *CodeStar) CreateUserProfile(input *codestar.CreateUserProfileInput) (*codestar.CreateUserProfileOutput, error) {
	c.inc("CreateUserProfile")
	return c.svc.CreateUserProfile(input)
}

// CreateUserProfileWithContext is a passthrough to the underlying CreateUserProfileWithContext method.
// It will increment the count of requests made to CreateUserProfile.
func (c *CodeStar) CreateUserProfileWithContext(ctx aws.Context, input *codestar.CreateUserProfileInput, opts ...request.Option) (*codestar.CreateUserProfileOutput, error) {
	c.inc("CreateUserProfile")
	return c.svc.CreateUserProfileWithContext(ctx, input, opts...)
}

// DeleteProjectRequest is a passthrough to the underlying DeleteProjectRequest.
// It will increment the count of requests made to DeleteProject.
func (c *CodeStar) DeleteProjectRequest(input *codestar.DeleteProjectInput) (req *request.Request, output *codestar.DeleteProjectOutput) {
	c.inc("DeleteProject")
	return c.svc.DeleteProjectRequest(input)
}

// DeleteProject is a passthrough to the underlying DeleteProject method.
// It will increment the count of requests made to DeleteProject.
func (c *CodeStar) DeleteProject(input *codestar.DeleteProjectInput) (*codestar.DeleteProjectOutput, error) {
	c.inc("DeleteProject")
	return c.svc.DeleteProject(input)
}

// DeleteProjectWithContext is a passthrough to the underlying DeleteProjectWithContext method.
// It will increment the count of requests made to DeleteProject.
func (c *CodeStar) DeleteProjectWithContext(ctx aws.Context, input *codestar.DeleteProjectInput, opts ...request.Option) (*codestar.DeleteProjectOutput, error) {
	c.inc("DeleteProject")
	return c.svc.DeleteProjectWithContext(ctx, input, opts...)
}

// DeleteUserProfileRequest is a passthrough to the underlying DeleteUserProfileRequest.
// It will increment the count of requests made to DeleteUserProfile.
func (c *CodeStar) DeleteUserProfileRequest(input *codestar.DeleteUserProfileInput) (req *request.Request, output *codestar.DeleteUserProfileOutput) {
	c.inc("DeleteUserProfile")
	return c.svc.DeleteUserProfileRequest(input)
}

// DeleteUserProfile is a passthrough to the underlying DeleteUserProfile method.
// It will increment the count of requests made to DeleteUserProfile.
func (c *CodeStar) DeleteUserProfile(input *codestar.DeleteUserProfileInput) (*codestar.DeleteUserProfileOutput, error) {
	c.inc("DeleteUserProfile")
	return c.svc.DeleteUserProfile(input)
}

// DeleteUserProfileWithContext is a passthrough to the underlying DeleteUserProfileWithContext method.
// It will increment the count of requests made to DeleteUserProfile.
func (c *CodeStar) DeleteUserProfileWithContext(ctx aws.Context, input *codestar.DeleteUserProfileInput, opts ...request.Option) (*codestar.DeleteUserProfileOutput, error) {
	c.inc("DeleteUserProfile")
	return c.svc.DeleteUserProfileWithContext(ctx, input, opts...)
}

// DescribeProjectRequest is a passthrough to the underlying DescribeProjectRequest.
// It will increment the count of requests made to DescribeProject.
func (c *CodeStar) DescribeProjectRequest(input *codestar.DescribeProjectInput) (req *request.Request, output *codestar.DescribeProjectOutput) {
	c.inc("DescribeProject")
	return c.svc.DescribeProjectRequest(input)
}

// DescribeProject is a passthrough to the underlying DescribeProject method.
// It will increment the count of requests made to DescribeProject.
func (c *CodeStar) DescribeProject(input *codestar.DescribeProjectInput) (*codestar.DescribeProjectOutput, error) {
	c.inc("DescribeProject")
	return c.svc.DescribeProject(input)
}

// DescribeProjectWithContext is a passthrough to the underlying DescribeProjectWithContext method.
// It will increment the count of requests made to DescribeProject.
func (c *CodeStar) DescribeProjectWithContext(ctx aws.Context, input *codestar.DescribeProjectInput, opts ...request.Option) (*codestar.DescribeProjectOutput, error) {
	c.inc("DescribeProject")
	return c.svc.DescribeProjectWithContext(ctx, input, opts...)
}

// DescribeUserProfileRequest is a passthrough to the underlying DescribeUserProfileRequest.
// It will increment the count of requests made to DescribeUserProfile.
func (c *CodeStar) DescribeUserProfileRequest(input *codestar.DescribeUserProfileInput) (req *request.Request, output *codestar.DescribeUserProfileOutput) {
	c.inc("DescribeUserProfile")
	return c.svc.DescribeUserProfileRequest(input)
}

// DescribeUserProfile is a passthrough to the underlying DescribeUserProfile method.
// It will increment the count of requests made to DescribeUserProfile.
func (c *CodeStar) DescribeUserProfile(input *codestar.DescribeUserProfileInput) (*codestar.DescribeUserProfileOutput, error) {
	c.inc("DescribeUserProfile")
	return c.svc.DescribeUserProfile(input)
}

// DescribeUserProfileWithContext is a passthrough to the underlying DescribeUserProfileWithContext method.
// It will increment the count of requests made to DescribeUserProfile.
func (c *CodeStar) DescribeUserProfileWithContext(ctx aws.Context, input *codestar.DescribeUserProfileInput, opts ...request.Option) (*codestar.DescribeUserProfileOutput, error) {
	c.inc("DescribeUserProfile")
	return c.svc.DescribeUserProfileWithContext(ctx, input, opts...)
}

// DisassociateTeamMemberRequest is a passthrough to the underlying DisassociateTeamMemberRequest.
// It will increment the count of requests made to DisassociateTeamMember.
func (c *CodeStar) DisassociateTeamMemberRequest(input *codestar.DisassociateTeamMemberInput) (req *request.Request, output *codestar.DisassociateTeamMemberOutput) {
	c.inc("DisassociateTeamMember")
	return c.svc.DisassociateTeamMemberRequest(input)
}

// DisassociateTeamMember is a passthrough to the underlying DisassociateTeamMember method.
// It will increment the count of requests made to DisassociateTeamMember.
func (c *CodeStar) DisassociateTeamMember(input *codestar.DisassociateTeamMemberInput) (*codestar.DisassociateTeamMemberOutput, error) {
	c.inc("DisassociateTeamMember")
	return c.svc.DisassociateTeamMember(input)
}

// DisassociateTeamMemberWithContext is a passthrough to the underlying DisassociateTeamMemberWithContext method.
// It will increment the count of requests made to DisassociateTeamMember.
func (c *CodeStar) DisassociateTeamMemberWithContext(ctx aws.Context, input *codestar.DisassociateTeamMemberInput, opts ...request.Option) (*codestar.DisassociateTeamMemberOutput, error) {
	c.inc("DisassociateTeamMember")
	return c.svc.DisassociateTeamMemberWithContext(ctx, input, opts...)
}

// ListProjectsRequest is a passthrough to the underlying ListProjectsRequest.
// It will increment the count of requests made to ListProjects.
func (c *CodeStar) ListProjectsRequest(input *codestar.ListProjectsInput) (req *request.Request, output *codestar.ListProjectsOutput) {
	c.inc("ListProjects")
	return c.svc.ListProjectsRequest(input)
}

// ListProjects is a passthrough to the underlying ListProjects method.
// It will increment the count of requests made to ListProjects.
func (c *CodeStar) ListProjects(input *codestar.ListProjectsInput) (*codestar.ListProjectsOutput, error) {
	c.inc("ListProjects")
	return c.svc.ListProjects(input)
}

// ListProjectsWithContext is a passthrough to the underlying ListProjectsWithContext method.
// It will increment the count of requests made to ListProjects.
func (c *CodeStar) ListProjectsWithContext(ctx aws.Context, input *codestar.ListProjectsInput, opts ...request.Option) (*codestar.ListProjectsOutput, error) {
	c.inc("ListProjects")
	return c.svc.ListProjectsWithContext(ctx, input, opts...)
}

// ListResourcesRequest is a passthrough to the underlying ListResourcesRequest.
// It will increment the count of requests made to ListResources.
func (c *CodeStar) ListResourcesRequest(input *codestar.ListResourcesInput) (req *request.Request, output *codestar.ListResourcesOutput) {
	c.inc("ListResources")
	return c.svc.ListResourcesRequest(input)
}

// ListResources is a passthrough to the underlying ListResources method.
// It will increment the count of requests made to ListResources.
func (c *CodeStar) ListResources(input *codestar.ListResourcesInput) (*codestar.ListResourcesOutput, error) {
	c.inc("ListResources")
	return c.svc.ListResources(input)
}

// ListResourcesWithContext is a passthrough to the underlying ListResourcesWithContext method.
// It will increment the count of requests made to ListResources.
func (c *CodeStar) ListResourcesWithContext(ctx aws.Context, input *codestar.ListResourcesInput, opts ...request.Option) (*codestar.ListResourcesOutput, error) {
	c.inc("ListResources")
	return c.svc.ListResourcesWithContext(ctx, input, opts...)
}

// ListTagsForProjectRequest is a passthrough to the underlying ListTagsForProjectRequest.
// It will increment the count of requests made to ListTagsForProject.
func (c *CodeStar) ListTagsForProjectRequest(input *codestar.ListTagsForProjectInput) (req *request.Request, output *codestar.ListTagsForProjectOutput) {
	c.inc("ListTagsForProject")
	return c.svc.ListTagsForProjectRequest(input)
}

// ListTagsForProject is a passthrough to the underlying ListTagsForProject method.
// It will increment the count of requests made to ListTagsForProject.
func (c *CodeStar) ListTagsForProject(input *codestar.ListTagsForProjectInput) (*codestar.ListTagsForProjectOutput, error) {
	c.inc("ListTagsForProject")
	return c.svc.ListTagsForProject(input)
}

// ListTagsForProjectWithContext is a passthrough to the underlying ListTagsForProjectWithContext method.
// It will increment the count of requests made to ListTagsForProject.
func (c *CodeStar) ListTagsForProjectWithContext(ctx aws.Context, input *codestar.ListTagsForProjectInput, opts ...request.Option) (*codestar.ListTagsForProjectOutput, error) {
	c.inc("ListTagsForProject")
	return c.svc.ListTagsForProjectWithContext(ctx, input, opts...)
}

// ListTeamMembersRequest is a passthrough to the underlying ListTeamMembersRequest.
// It will increment the count of requests made to ListTeamMembers.
func (c *CodeStar) ListTeamMembersRequest(input *codestar.ListTeamMembersInput) (req *request.Request, output *codestar.ListTeamMembersOutput) {
	c.inc("ListTeamMembers")
	return c.svc.ListTeamMembersRequest(input)
}

// ListTeamMembers is a passthrough to the underlying ListTeamMembers method.
// It will increment the count of requests made to ListTeamMembers.
func (c *CodeStar) ListTeamMembers(input *codestar.ListTeamMembersInput) (*codestar.ListTeamMembersOutput, error) {
	c.inc("ListTeamMembers")
	return c.svc.ListTeamMembers(input)
}

// ListTeamMembersWithContext is a passthrough to the underlying ListTeamMembersWithContext method.
// It will increment the count of requests made to ListTeamMembers.
func (c *CodeStar) ListTeamMembersWithContext(ctx aws.Context, input *codestar.ListTeamMembersInput, opts ...request.Option) (*codestar.ListTeamMembersOutput, error) {
	c.inc("ListTeamMembers")
	return c.svc.ListTeamMembersWithContext(ctx, input, opts...)
}

// ListUserProfilesRequest is a passthrough to the underlying ListUserProfilesRequest.
// It will increment the count of requests made to ListUserProfiles.
func (c *CodeStar) ListUserProfilesRequest(input *codestar.ListUserProfilesInput) (req *request.Request, output *codestar.ListUserProfilesOutput) {
	c.inc("ListUserProfiles")
	return c.svc.ListUserProfilesRequest(input)
}

// ListUserProfiles is a passthrough to the underlying ListUserProfiles method.
// It will increment the count of requests made to ListUserProfiles.
func (c *CodeStar) ListUserProfiles(input *codestar.ListUserProfilesInput) (*codestar.ListUserProfilesOutput, error) {
	c.inc("ListUserProfiles")
	return c.svc.ListUserProfiles(input)
}

// ListUserProfilesWithContext is a passthrough to the underlying ListUserProfilesWithContext method.
// It will increment the count of requests made to ListUserProfiles.
func (c *CodeStar) ListUserProfilesWithContext(ctx aws.Context, input *codestar.ListUserProfilesInput, opts ...request.Option) (*codestar.ListUserProfilesOutput, error) {
	c.inc("ListUserProfiles")
	return c.svc.ListUserProfilesWithContext(ctx, input, opts...)
}

// TagProjectRequest is a passthrough to the underlying TagProjectRequest.
// It will increment the count of requests made to TagProject.
func (c *CodeStar) TagProjectRequest(input *codestar.TagProjectInput) (req *request.Request, output *codestar.TagProjectOutput) {
	c.inc("TagProject")
	return c.svc.TagProjectRequest(input)
}

// TagProject is a passthrough to the underlying TagProject method.
// It will increment the count of requests made to TagProject.
func (c *CodeStar) TagProject(input *codestar.TagProjectInput) (*codestar.TagProjectOutput, error) {
	c.inc("TagProject")
	return c.svc.TagProject(input)
}

// TagProjectWithContext is a passthrough to the underlying TagProjectWithContext method.
// It will increment the count of requests made to TagProject.
func (c *CodeStar) TagProjectWithContext(ctx aws.Context, input *codestar.TagProjectInput, opts ...request.Option) (*codestar.TagProjectOutput, error) {
	c.inc("TagProject")
	return c.svc.TagProjectWithContext(ctx, input, opts...)
}

// UntagProjectRequest is a passthrough to the underlying UntagProjectRequest.
// It will increment the count of requests made to UntagProject.
func (c *CodeStar) UntagProjectRequest(input *codestar.UntagProjectInput) (req *request.Request, output *codestar.UntagProjectOutput) {
	c.inc("UntagProject")
	return c.svc.UntagProjectRequest(input)
}

// UntagProject is a passthrough to the underlying UntagProject method.
// It will increment the count of requests made to UntagProject.
func (c *CodeStar) UntagProject(input *codestar.UntagProjectInput) (*codestar.UntagProjectOutput, error) {
	c.inc("UntagProject")
	return c.svc.UntagProject(input)
}

// UntagProjectWithContext is a passthrough to the underlying UntagProjectWithContext method.
// It will increment the count of requests made to UntagProject.
func (c *CodeStar) UntagProjectWithContext(ctx aws.Context, input *codestar.UntagProjectInput, opts ...request.Option) (*codestar.UntagProjectOutput, error) {
	c.inc("UntagProject")
	return c.svc.UntagProjectWithContext(ctx, input, opts...)
}

// UpdateProjectRequest is a passthrough to the underlying UpdateProjectRequest.
// It will increment the count of requests made to UpdateProject.
func (c *CodeStar) UpdateProjectRequest(input *codestar.UpdateProjectInput) (req *request.Request, output *codestar.UpdateProjectOutput) {
	c.inc("UpdateProject")
	return c.svc.UpdateProjectRequest(input)
}

// UpdateProject is a passthrough to the underlying UpdateProject method.
// It will increment the count of requests made to UpdateProject.
func (c *CodeStar) UpdateProject(input *codestar.UpdateProjectInput) (*codestar.UpdateProjectOutput, error) {
	c.inc("UpdateProject")
	return c.svc.UpdateProject(input)
}

// UpdateProjectWithContext is a passthrough to the underlying UpdateProjectWithContext method.
// It will increment the count of requests made to UpdateProject.
func (c *CodeStar) UpdateProjectWithContext(ctx aws.Context, input *codestar.UpdateProjectInput, opts ...request.Option) (*codestar.UpdateProjectOutput, error) {
	c.inc("UpdateProject")
	return c.svc.UpdateProjectWithContext(ctx, input, opts...)
}

// UpdateTeamMemberRequest is a passthrough to the underlying UpdateTeamMemberRequest.
// It will increment the count of requests made to UpdateTeamMember.
func (c *CodeStar) UpdateTeamMemberRequest(input *codestar.UpdateTeamMemberInput) (req *request.Request, output *codestar.UpdateTeamMemberOutput) {
	c.inc("UpdateTeamMember")
	return c.svc.UpdateTeamMemberRequest(input)
}

// UpdateTeamMember is a passthrough to the underlying UpdateTeamMember method.
// It will increment the count of requests made to UpdateTeamMember.
func (c *CodeStar) UpdateTeamMember(input *codestar.UpdateTeamMemberInput) (*codestar.UpdateTeamMemberOutput, error) {
	c.inc("UpdateTeamMember")
	return c.svc.UpdateTeamMember(input)
}

// UpdateTeamMemberWithContext is a passthrough to the underlying UpdateTeamMemberWithContext method.
// It will increment the count of requests made to UpdateTeamMember.
func (c *CodeStar) UpdateTeamMemberWithContext(ctx aws.Context, input *codestar.UpdateTeamMemberInput, opts ...request.Option) (*codestar.UpdateTeamMemberOutput, error) {
	c.inc("UpdateTeamMember")
	return c.svc.UpdateTeamMemberWithContext(ctx, input, opts...)
}

// UpdateUserProfileRequest is a passthrough to the underlying UpdateUserProfileRequest.
// It will increment the count of requests made to UpdateUserProfile.
func (c *CodeStar) UpdateUserProfileRequest(input *codestar.UpdateUserProfileInput) (req *request.Request, output *codestar.UpdateUserProfileOutput) {
	c.inc("UpdateUserProfile")
	return c.svc.UpdateUserProfileRequest(input)
}

// UpdateUserProfile is a passthrough to the underlying UpdateUserProfile method.
// It will increment the count of requests made to UpdateUserProfile.
func (c *CodeStar) UpdateUserProfile(input *codestar.UpdateUserProfileInput) (*codestar.UpdateUserProfileOutput, error) {
	c.inc("UpdateUserProfile")
	return c.svc.UpdateUserProfile(input)
}

// UpdateUserProfileWithContext is a passthrough to the underlying UpdateUserProfileWithContext method.
// It will increment the count of requests made to UpdateUserProfile.
func (c *CodeStar) UpdateUserProfileWithContext(ctx aws.Context, input *codestar.UpdateUserProfileInput, opts ...request.Option) (*codestar.UpdateUserProfileOutput, error) {
	c.inc("UpdateUserProfile")
	return c.svc.UpdateUserProfileWithContext(ctx, input, opts...)
}
