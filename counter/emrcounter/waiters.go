// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package emrcounter

import (
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/emr"
)

// WaitUntilClusterRunning calls WaitUntilClusterRunningWithContext with aws.BackgroundContext().
func (c *EMR) WaitUntilClusterRunning(input *emr.DescribeClusterInput) error {
	return c.WaitUntilClusterRunningWithContext(aws.BackgroundContext(), input)
}

// WaitUntilClusterRunningWithContext calls the underlying client method with a request option that
// will count DescribeCluster requests.
func (c *EMR) WaitUntilClusterRunningWithContext(ctx aws.Context, input *emr.DescribeClusterInput, opts ...request.WaiterOption) error {
	opts = append(opts, request.WithWaiterRequestOptions(c.incViaRequestOption("DescribeCluster")))
	return c.svc.WaitUntilClusterRunningWithContext(ctx, input, opts...)
}

// WaitUntilClusterTerminated calls WaitUntilClusterTerminatedWithContext with aws.BackgroundContext().
func (c *EMR) WaitUntilClusterTerminated(input *emr.DescribeClusterInput) error {
	return c.WaitUntilClusterTerminatedWithContext(aws.BackgroundContext(), input)
}

// WaitUntilClusterTerminatedWithContext calls the underlying client method with a request option that
// will count DescribeCluster requests.
func (c *EMR) WaitUntilClusterTerminatedWithContext(ctx aws.Context, input *emr.DescribeClusterInput, opts ...request.WaiterOption) error {
	opts = append(opts, request.WithWaiterRequestOptions(c.incViaRequestOption("DescribeCluster")))
	return c.svc.WaitUntilClusterTerminatedWithContext(ctx, input, opts...)
}

// WaitUntilStepComplete calls WaitUntilStepCompleteWithContext with aws.BackgroundContext().
func (c *EMR) WaitUntilStepComplete(input *emr.DescribeStepInput) error {
	return c.WaitUntilStepCompleteWithContext(aws.BackgroundContext(), input)
}

// WaitUntilStepCompleteWithContext calls the underlying client method with a request option that
// will count DescribeStep requests.
func (c *EMR) WaitUntilStepCompleteWithContext(ctx aws.Context, input *emr.DescribeStepInput, opts ...request.WaiterOption) error {
	opts = append(opts, request.WithWaiterRequestOptions(c.incViaRequestOption("DescribeStep")))
	return c.svc.WaitUntilStepCompleteWithContext(ctx, input, opts...)
}
