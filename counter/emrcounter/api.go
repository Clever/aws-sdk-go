// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package emrcounter

import (
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/emr"
)

// AddInstanceFleetRequest is a passthrough to the underlying AddInstanceFleetRequest.
// It will increment the count of requests made to AddInstanceFleet.
func (c *EMR) AddInstanceFleetRequest(input *emr.AddInstanceFleetInput) (req *request.Request, output *emr.AddInstanceFleetOutput) {
	c.inc("AddInstanceFleet")
	return c.svc.AddInstanceFleetRequest(input)
}

// AddInstanceFleet is a passthrough to the underlying AddInstanceFleet method.
// It will increment the count of requests made to AddInstanceFleet.
func (c *EMR) AddInstanceFleet(input *emr.AddInstanceFleetInput) (*emr.AddInstanceFleetOutput, error) {
	c.inc("AddInstanceFleet")
	return c.svc.AddInstanceFleet(input)
}

// AddInstanceFleetWithContext is a passthrough to the underlying AddInstanceFleetWithContext method.
// It will increment the count of requests made to AddInstanceFleet.
func (c *EMR) AddInstanceFleetWithContext(ctx aws.Context, input *emr.AddInstanceFleetInput, opts ...request.Option) (*emr.AddInstanceFleetOutput, error) {
	c.inc("AddInstanceFleet")
	return c.svc.AddInstanceFleetWithContext(ctx, input, opts...)
}

// AddInstanceGroupsRequest is a passthrough to the underlying AddInstanceGroupsRequest.
// It will increment the count of requests made to AddInstanceGroups.
func (c *EMR) AddInstanceGroupsRequest(input *emr.AddInstanceGroupsInput) (req *request.Request, output *emr.AddInstanceGroupsOutput) {
	c.inc("AddInstanceGroups")
	return c.svc.AddInstanceGroupsRequest(input)
}

// AddInstanceGroups is a passthrough to the underlying AddInstanceGroups method.
// It will increment the count of requests made to AddInstanceGroups.
func (c *EMR) AddInstanceGroups(input *emr.AddInstanceGroupsInput) (*emr.AddInstanceGroupsOutput, error) {
	c.inc("AddInstanceGroups")
	return c.svc.AddInstanceGroups(input)
}

// AddInstanceGroupsWithContext is a passthrough to the underlying AddInstanceGroupsWithContext method.
// It will increment the count of requests made to AddInstanceGroups.
func (c *EMR) AddInstanceGroupsWithContext(ctx aws.Context, input *emr.AddInstanceGroupsInput, opts ...request.Option) (*emr.AddInstanceGroupsOutput, error) {
	c.inc("AddInstanceGroups")
	return c.svc.AddInstanceGroupsWithContext(ctx, input, opts...)
}

// AddJobFlowStepsRequest is a passthrough to the underlying AddJobFlowStepsRequest.
// It will increment the count of requests made to AddJobFlowSteps.
func (c *EMR) AddJobFlowStepsRequest(input *emr.AddJobFlowStepsInput) (req *request.Request, output *emr.AddJobFlowStepsOutput) {
	c.inc("AddJobFlowSteps")
	return c.svc.AddJobFlowStepsRequest(input)
}

// AddJobFlowSteps is a passthrough to the underlying AddJobFlowSteps method.
// It will increment the count of requests made to AddJobFlowSteps.
func (c *EMR) AddJobFlowSteps(input *emr.AddJobFlowStepsInput) (*emr.AddJobFlowStepsOutput, error) {
	c.inc("AddJobFlowSteps")
	return c.svc.AddJobFlowSteps(input)
}

// AddJobFlowStepsWithContext is a passthrough to the underlying AddJobFlowStepsWithContext method.
// It will increment the count of requests made to AddJobFlowSteps.
func (c *EMR) AddJobFlowStepsWithContext(ctx aws.Context, input *emr.AddJobFlowStepsInput, opts ...request.Option) (*emr.AddJobFlowStepsOutput, error) {
	c.inc("AddJobFlowSteps")
	return c.svc.AddJobFlowStepsWithContext(ctx, input, opts...)
}

// AddTagsRequest is a passthrough to the underlying AddTagsRequest.
// It will increment the count of requests made to AddTags.
func (c *EMR) AddTagsRequest(input *emr.AddTagsInput) (req *request.Request, output *emr.AddTagsOutput) {
	c.inc("AddTags")
	return c.svc.AddTagsRequest(input)
}

// AddTags is a passthrough to the underlying AddTags method.
// It will increment the count of requests made to AddTags.
func (c *EMR) AddTags(input *emr.AddTagsInput) (*emr.AddTagsOutput, error) {
	c.inc("AddTags")
	return c.svc.AddTags(input)
}

// AddTagsWithContext is a passthrough to the underlying AddTagsWithContext method.
// It will increment the count of requests made to AddTags.
func (c *EMR) AddTagsWithContext(ctx aws.Context, input *emr.AddTagsInput, opts ...request.Option) (*emr.AddTagsOutput, error) {
	c.inc("AddTags")
	return c.svc.AddTagsWithContext(ctx, input, opts...)
}

// CancelStepsRequest is a passthrough to the underlying CancelStepsRequest.
// It will increment the count of requests made to CancelSteps.
func (c *EMR) CancelStepsRequest(input *emr.CancelStepsInput) (req *request.Request, output *emr.CancelStepsOutput) {
	c.inc("CancelSteps")
	return c.svc.CancelStepsRequest(input)
}

// CancelSteps is a passthrough to the underlying CancelSteps method.
// It will increment the count of requests made to CancelSteps.
func (c *EMR) CancelSteps(input *emr.CancelStepsInput) (*emr.CancelStepsOutput, error) {
	c.inc("CancelSteps")
	return c.svc.CancelSteps(input)
}

// CancelStepsWithContext is a passthrough to the underlying CancelStepsWithContext method.
// It will increment the count of requests made to CancelSteps.
func (c *EMR) CancelStepsWithContext(ctx aws.Context, input *emr.CancelStepsInput, opts ...request.Option) (*emr.CancelStepsOutput, error) {
	c.inc("CancelSteps")
	return c.svc.CancelStepsWithContext(ctx, input, opts...)
}

// CreateSecurityConfigurationRequest is a passthrough to the underlying CreateSecurityConfigurationRequest.
// It will increment the count of requests made to CreateSecurityConfiguration.
func (c *EMR) CreateSecurityConfigurationRequest(input *emr.CreateSecurityConfigurationInput) (req *request.Request, output *emr.CreateSecurityConfigurationOutput) {
	c.inc("CreateSecurityConfiguration")
	return c.svc.CreateSecurityConfigurationRequest(input)
}

// CreateSecurityConfiguration is a passthrough to the underlying CreateSecurityConfiguration method.
// It will increment the count of requests made to CreateSecurityConfiguration.
func (c *EMR) CreateSecurityConfiguration(input *emr.CreateSecurityConfigurationInput) (*emr.CreateSecurityConfigurationOutput, error) {
	c.inc("CreateSecurityConfiguration")
	return c.svc.CreateSecurityConfiguration(input)
}

// CreateSecurityConfigurationWithContext is a passthrough to the underlying CreateSecurityConfigurationWithContext method.
// It will increment the count of requests made to CreateSecurityConfiguration.
func (c *EMR) CreateSecurityConfigurationWithContext(ctx aws.Context, input *emr.CreateSecurityConfigurationInput, opts ...request.Option) (*emr.CreateSecurityConfigurationOutput, error) {
	c.inc("CreateSecurityConfiguration")
	return c.svc.CreateSecurityConfigurationWithContext(ctx, input, opts...)
}

// DeleteSecurityConfigurationRequest is a passthrough to the underlying DeleteSecurityConfigurationRequest.
// It will increment the count of requests made to DeleteSecurityConfiguration.
func (c *EMR) DeleteSecurityConfigurationRequest(input *emr.DeleteSecurityConfigurationInput) (req *request.Request, output *emr.DeleteSecurityConfigurationOutput) {
	c.inc("DeleteSecurityConfiguration")
	return c.svc.DeleteSecurityConfigurationRequest(input)
}

// DeleteSecurityConfiguration is a passthrough to the underlying DeleteSecurityConfiguration method.
// It will increment the count of requests made to DeleteSecurityConfiguration.
func (c *EMR) DeleteSecurityConfiguration(input *emr.DeleteSecurityConfigurationInput) (*emr.DeleteSecurityConfigurationOutput, error) {
	c.inc("DeleteSecurityConfiguration")
	return c.svc.DeleteSecurityConfiguration(input)
}

// DeleteSecurityConfigurationWithContext is a passthrough to the underlying DeleteSecurityConfigurationWithContext method.
// It will increment the count of requests made to DeleteSecurityConfiguration.
func (c *EMR) DeleteSecurityConfigurationWithContext(ctx aws.Context, input *emr.DeleteSecurityConfigurationInput, opts ...request.Option) (*emr.DeleteSecurityConfigurationOutput, error) {
	c.inc("DeleteSecurityConfiguration")
	return c.svc.DeleteSecurityConfigurationWithContext(ctx, input, opts...)
}

// DescribeClusterRequest is a passthrough to the underlying DescribeClusterRequest.
// It will increment the count of requests made to DescribeCluster.
func (c *EMR) DescribeClusterRequest(input *emr.DescribeClusterInput) (req *request.Request, output *emr.DescribeClusterOutput) {
	c.inc("DescribeCluster")
	return c.svc.DescribeClusterRequest(input)
}

// DescribeCluster is a passthrough to the underlying DescribeCluster method.
// It will increment the count of requests made to DescribeCluster.
func (c *EMR) DescribeCluster(input *emr.DescribeClusterInput) (*emr.DescribeClusterOutput, error) {
	c.inc("DescribeCluster")
	return c.svc.DescribeCluster(input)
}

// DescribeClusterWithContext is a passthrough to the underlying DescribeClusterWithContext method.
// It will increment the count of requests made to DescribeCluster.
func (c *EMR) DescribeClusterWithContext(ctx aws.Context, input *emr.DescribeClusterInput, opts ...request.Option) (*emr.DescribeClusterOutput, error) {
	c.inc("DescribeCluster")
	return c.svc.DescribeClusterWithContext(ctx, input, opts...)
}

// DescribeJobFlowsRequest is a passthrough to the underlying DescribeJobFlowsRequest.
// It will increment the count of requests made to DescribeJobFlows.
func (c *EMR) DescribeJobFlowsRequest(input *emr.DescribeJobFlowsInput) (req *request.Request, output *emr.DescribeJobFlowsOutput) {
	c.inc("DescribeJobFlows")
	return c.svc.DescribeJobFlowsRequest(input)
}

// DescribeJobFlows is a passthrough to the underlying DescribeJobFlows method.
// It will increment the count of requests made to DescribeJobFlows.
func (c *EMR) DescribeJobFlows(input *emr.DescribeJobFlowsInput) (*emr.DescribeJobFlowsOutput, error) {
	c.inc("DescribeJobFlows")
	return c.svc.DescribeJobFlows(input)
}

// DescribeJobFlowsWithContext is a passthrough to the underlying DescribeJobFlowsWithContext method.
// It will increment the count of requests made to DescribeJobFlows.
func (c *EMR) DescribeJobFlowsWithContext(ctx aws.Context, input *emr.DescribeJobFlowsInput, opts ...request.Option) (*emr.DescribeJobFlowsOutput, error) {
	c.inc("DescribeJobFlows")
	return c.svc.DescribeJobFlowsWithContext(ctx, input, opts...)
}

// DescribeSecurityConfigurationRequest is a passthrough to the underlying DescribeSecurityConfigurationRequest.
// It will increment the count of requests made to DescribeSecurityConfiguration.
func (c *EMR) DescribeSecurityConfigurationRequest(input *emr.DescribeSecurityConfigurationInput) (req *request.Request, output *emr.DescribeSecurityConfigurationOutput) {
	c.inc("DescribeSecurityConfiguration")
	return c.svc.DescribeSecurityConfigurationRequest(input)
}

// DescribeSecurityConfiguration is a passthrough to the underlying DescribeSecurityConfiguration method.
// It will increment the count of requests made to DescribeSecurityConfiguration.
func (c *EMR) DescribeSecurityConfiguration(input *emr.DescribeSecurityConfigurationInput) (*emr.DescribeSecurityConfigurationOutput, error) {
	c.inc("DescribeSecurityConfiguration")
	return c.svc.DescribeSecurityConfiguration(input)
}

// DescribeSecurityConfigurationWithContext is a passthrough to the underlying DescribeSecurityConfigurationWithContext method.
// It will increment the count of requests made to DescribeSecurityConfiguration.
func (c *EMR) DescribeSecurityConfigurationWithContext(ctx aws.Context, input *emr.DescribeSecurityConfigurationInput, opts ...request.Option) (*emr.DescribeSecurityConfigurationOutput, error) {
	c.inc("DescribeSecurityConfiguration")
	return c.svc.DescribeSecurityConfigurationWithContext(ctx, input, opts...)
}

// DescribeStepRequest is a passthrough to the underlying DescribeStepRequest.
// It will increment the count of requests made to DescribeStep.
func (c *EMR) DescribeStepRequest(input *emr.DescribeStepInput) (req *request.Request, output *emr.DescribeStepOutput) {
	c.inc("DescribeStep")
	return c.svc.DescribeStepRequest(input)
}

// DescribeStep is a passthrough to the underlying DescribeStep method.
// It will increment the count of requests made to DescribeStep.
func (c *EMR) DescribeStep(input *emr.DescribeStepInput) (*emr.DescribeStepOutput, error) {
	c.inc("DescribeStep")
	return c.svc.DescribeStep(input)
}

// DescribeStepWithContext is a passthrough to the underlying DescribeStepWithContext method.
// It will increment the count of requests made to DescribeStep.
func (c *EMR) DescribeStepWithContext(ctx aws.Context, input *emr.DescribeStepInput, opts ...request.Option) (*emr.DescribeStepOutput, error) {
	c.inc("DescribeStep")
	return c.svc.DescribeStepWithContext(ctx, input, opts...)
}

// ListBootstrapActionsRequest is a passthrough to the underlying ListBootstrapActionsRequest.
// It will increment the count of requests made to ListBootstrapActions.
func (c *EMR) ListBootstrapActionsRequest(input *emr.ListBootstrapActionsInput) (req *request.Request, output *emr.ListBootstrapActionsOutput) {
	c.inc("ListBootstrapActions")
	return c.svc.ListBootstrapActionsRequest(input)
}

// ListBootstrapActions is a passthrough to the underlying ListBootstrapActions method.
// It will increment the count of requests made to ListBootstrapActions.
func (c *EMR) ListBootstrapActions(input *emr.ListBootstrapActionsInput) (*emr.ListBootstrapActionsOutput, error) {
	c.inc("ListBootstrapActions")
	return c.svc.ListBootstrapActions(input)
}

// ListBootstrapActionsWithContext is a passthrough to the underlying ListBootstrapActionsWithContext method.
// It will increment the count of requests made to ListBootstrapActions.
func (c *EMR) ListBootstrapActionsWithContext(ctx aws.Context, input *emr.ListBootstrapActionsInput, opts ...request.Option) (*emr.ListBootstrapActionsOutput, error) {
	c.inc("ListBootstrapActions")
	return c.svc.ListBootstrapActionsWithContext(ctx, input, opts...)
}

// ListBootstrapActionsPages is a passthrough to the underlying ListBootstrapActionsPages method.
// It will increment the count of requests made to ListBootstrapActions on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListBootstrapActionsPagesWithContext to avoid this.
func (c *EMR) ListBootstrapActionsPages(input *emr.ListBootstrapActionsInput, fn func(*emr.ListBootstrapActionsOutput, bool) bool) error {
	wrappedFn := func(page *emr.ListBootstrapActionsOutput, lastPage bool) bool {
		c.inc("ListBootstrapActions")
		return fn(page, lastPage)
	}
	return c.svc.ListBootstrapActionsPages(input, wrappedFn)
}

// ListBootstrapActionsPagesWithContext is a passthrough to the underlying ListBootstrapActionsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListBootstrapActions when applied to the request.
func (c *EMR) ListBootstrapActionsPagesWithContext(ctx aws.Context, input *emr.ListBootstrapActionsInput, fn func(*emr.ListBootstrapActionsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListBootstrapActions"))
	return c.svc.ListBootstrapActionsPagesWithContext(ctx, input, fn, opts...)
}

// ListClustersRequest is a passthrough to the underlying ListClustersRequest.
// It will increment the count of requests made to ListClusters.
func (c *EMR) ListClustersRequest(input *emr.ListClustersInput) (req *request.Request, output *emr.ListClustersOutput) {
	c.inc("ListClusters")
	return c.svc.ListClustersRequest(input)
}

// ListClusters is a passthrough to the underlying ListClusters method.
// It will increment the count of requests made to ListClusters.
func (c *EMR) ListClusters(input *emr.ListClustersInput) (*emr.ListClustersOutput, error) {
	c.inc("ListClusters")
	return c.svc.ListClusters(input)
}

// ListClustersWithContext is a passthrough to the underlying ListClustersWithContext method.
// It will increment the count of requests made to ListClusters.
func (c *EMR) ListClustersWithContext(ctx aws.Context, input *emr.ListClustersInput, opts ...request.Option) (*emr.ListClustersOutput, error) {
	c.inc("ListClusters")
	return c.svc.ListClustersWithContext(ctx, input, opts...)
}

// ListClustersPages is a passthrough to the underlying ListClustersPages method.
// It will increment the count of requests made to ListClusters on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListClustersPagesWithContext to avoid this.
func (c *EMR) ListClustersPages(input *emr.ListClustersInput, fn func(*emr.ListClustersOutput, bool) bool) error {
	wrappedFn := func(page *emr.ListClustersOutput, lastPage bool) bool {
		c.inc("ListClusters")
		return fn(page, lastPage)
	}
	return c.svc.ListClustersPages(input, wrappedFn)
}

// ListClustersPagesWithContext is a passthrough to the underlying ListClustersPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListClusters when applied to the request.
func (c *EMR) ListClustersPagesWithContext(ctx aws.Context, input *emr.ListClustersInput, fn func(*emr.ListClustersOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListClusters"))
	return c.svc.ListClustersPagesWithContext(ctx, input, fn, opts...)
}

// ListInstanceFleetsRequest is a passthrough to the underlying ListInstanceFleetsRequest.
// It will increment the count of requests made to ListInstanceFleets.
func (c *EMR) ListInstanceFleetsRequest(input *emr.ListInstanceFleetsInput) (req *request.Request, output *emr.ListInstanceFleetsOutput) {
	c.inc("ListInstanceFleets")
	return c.svc.ListInstanceFleetsRequest(input)
}

// ListInstanceFleets is a passthrough to the underlying ListInstanceFleets method.
// It will increment the count of requests made to ListInstanceFleets.
func (c *EMR) ListInstanceFleets(input *emr.ListInstanceFleetsInput) (*emr.ListInstanceFleetsOutput, error) {
	c.inc("ListInstanceFleets")
	return c.svc.ListInstanceFleets(input)
}

// ListInstanceFleetsWithContext is a passthrough to the underlying ListInstanceFleetsWithContext method.
// It will increment the count of requests made to ListInstanceFleets.
func (c *EMR) ListInstanceFleetsWithContext(ctx aws.Context, input *emr.ListInstanceFleetsInput, opts ...request.Option) (*emr.ListInstanceFleetsOutput, error) {
	c.inc("ListInstanceFleets")
	return c.svc.ListInstanceFleetsWithContext(ctx, input, opts...)
}

// ListInstanceFleetsPages is a passthrough to the underlying ListInstanceFleetsPages method.
// It will increment the count of requests made to ListInstanceFleets on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListInstanceFleetsPagesWithContext to avoid this.
func (c *EMR) ListInstanceFleetsPages(input *emr.ListInstanceFleetsInput, fn func(*emr.ListInstanceFleetsOutput, bool) bool) error {
	wrappedFn := func(page *emr.ListInstanceFleetsOutput, lastPage bool) bool {
		c.inc("ListInstanceFleets")
		return fn(page, lastPage)
	}
	return c.svc.ListInstanceFleetsPages(input, wrappedFn)
}

// ListInstanceFleetsPagesWithContext is a passthrough to the underlying ListInstanceFleetsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListInstanceFleets when applied to the request.
func (c *EMR) ListInstanceFleetsPagesWithContext(ctx aws.Context, input *emr.ListInstanceFleetsInput, fn func(*emr.ListInstanceFleetsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListInstanceFleets"))
	return c.svc.ListInstanceFleetsPagesWithContext(ctx, input, fn, opts...)
}

// ListInstanceGroupsRequest is a passthrough to the underlying ListInstanceGroupsRequest.
// It will increment the count of requests made to ListInstanceGroups.
func (c *EMR) ListInstanceGroupsRequest(input *emr.ListInstanceGroupsInput) (req *request.Request, output *emr.ListInstanceGroupsOutput) {
	c.inc("ListInstanceGroups")
	return c.svc.ListInstanceGroupsRequest(input)
}

// ListInstanceGroups is a passthrough to the underlying ListInstanceGroups method.
// It will increment the count of requests made to ListInstanceGroups.
func (c *EMR) ListInstanceGroups(input *emr.ListInstanceGroupsInput) (*emr.ListInstanceGroupsOutput, error) {
	c.inc("ListInstanceGroups")
	return c.svc.ListInstanceGroups(input)
}

// ListInstanceGroupsWithContext is a passthrough to the underlying ListInstanceGroupsWithContext method.
// It will increment the count of requests made to ListInstanceGroups.
func (c *EMR) ListInstanceGroupsWithContext(ctx aws.Context, input *emr.ListInstanceGroupsInput, opts ...request.Option) (*emr.ListInstanceGroupsOutput, error) {
	c.inc("ListInstanceGroups")
	return c.svc.ListInstanceGroupsWithContext(ctx, input, opts...)
}

// ListInstanceGroupsPages is a passthrough to the underlying ListInstanceGroupsPages method.
// It will increment the count of requests made to ListInstanceGroups on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListInstanceGroupsPagesWithContext to avoid this.
func (c *EMR) ListInstanceGroupsPages(input *emr.ListInstanceGroupsInput, fn func(*emr.ListInstanceGroupsOutput, bool) bool) error {
	wrappedFn := func(page *emr.ListInstanceGroupsOutput, lastPage bool) bool {
		c.inc("ListInstanceGroups")
		return fn(page, lastPage)
	}
	return c.svc.ListInstanceGroupsPages(input, wrappedFn)
}

// ListInstanceGroupsPagesWithContext is a passthrough to the underlying ListInstanceGroupsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListInstanceGroups when applied to the request.
func (c *EMR) ListInstanceGroupsPagesWithContext(ctx aws.Context, input *emr.ListInstanceGroupsInput, fn func(*emr.ListInstanceGroupsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListInstanceGroups"))
	return c.svc.ListInstanceGroupsPagesWithContext(ctx, input, fn, opts...)
}

// ListInstancesRequest is a passthrough to the underlying ListInstancesRequest.
// It will increment the count of requests made to ListInstances.
func (c *EMR) ListInstancesRequest(input *emr.ListInstancesInput) (req *request.Request, output *emr.ListInstancesOutput) {
	c.inc("ListInstances")
	return c.svc.ListInstancesRequest(input)
}

// ListInstances is a passthrough to the underlying ListInstances method.
// It will increment the count of requests made to ListInstances.
func (c *EMR) ListInstances(input *emr.ListInstancesInput) (*emr.ListInstancesOutput, error) {
	c.inc("ListInstances")
	return c.svc.ListInstances(input)
}

// ListInstancesWithContext is a passthrough to the underlying ListInstancesWithContext method.
// It will increment the count of requests made to ListInstances.
func (c *EMR) ListInstancesWithContext(ctx aws.Context, input *emr.ListInstancesInput, opts ...request.Option) (*emr.ListInstancesOutput, error) {
	c.inc("ListInstances")
	return c.svc.ListInstancesWithContext(ctx, input, opts...)
}

// ListInstancesPages is a passthrough to the underlying ListInstancesPages method.
// It will increment the count of requests made to ListInstances on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListInstancesPagesWithContext to avoid this.
func (c *EMR) ListInstancesPages(input *emr.ListInstancesInput, fn func(*emr.ListInstancesOutput, bool) bool) error {
	wrappedFn := func(page *emr.ListInstancesOutput, lastPage bool) bool {
		c.inc("ListInstances")
		return fn(page, lastPage)
	}
	return c.svc.ListInstancesPages(input, wrappedFn)
}

// ListInstancesPagesWithContext is a passthrough to the underlying ListInstancesPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListInstances when applied to the request.
func (c *EMR) ListInstancesPagesWithContext(ctx aws.Context, input *emr.ListInstancesInput, fn func(*emr.ListInstancesOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListInstances"))
	return c.svc.ListInstancesPagesWithContext(ctx, input, fn, opts...)
}

// ListSecurityConfigurationsRequest is a passthrough to the underlying ListSecurityConfigurationsRequest.
// It will increment the count of requests made to ListSecurityConfigurations.
func (c *EMR) ListSecurityConfigurationsRequest(input *emr.ListSecurityConfigurationsInput) (req *request.Request, output *emr.ListSecurityConfigurationsOutput) {
	c.inc("ListSecurityConfigurations")
	return c.svc.ListSecurityConfigurationsRequest(input)
}

// ListSecurityConfigurations is a passthrough to the underlying ListSecurityConfigurations method.
// It will increment the count of requests made to ListSecurityConfigurations.
func (c *EMR) ListSecurityConfigurations(input *emr.ListSecurityConfigurationsInput) (*emr.ListSecurityConfigurationsOutput, error) {
	c.inc("ListSecurityConfigurations")
	return c.svc.ListSecurityConfigurations(input)
}

// ListSecurityConfigurationsWithContext is a passthrough to the underlying ListSecurityConfigurationsWithContext method.
// It will increment the count of requests made to ListSecurityConfigurations.
func (c *EMR) ListSecurityConfigurationsWithContext(ctx aws.Context, input *emr.ListSecurityConfigurationsInput, opts ...request.Option) (*emr.ListSecurityConfigurationsOutput, error) {
	c.inc("ListSecurityConfigurations")
	return c.svc.ListSecurityConfigurationsWithContext(ctx, input, opts...)
}

// ListStepsRequest is a passthrough to the underlying ListStepsRequest.
// It will increment the count of requests made to ListSteps.
func (c *EMR) ListStepsRequest(input *emr.ListStepsInput) (req *request.Request, output *emr.ListStepsOutput) {
	c.inc("ListSteps")
	return c.svc.ListStepsRequest(input)
}

// ListSteps is a passthrough to the underlying ListSteps method.
// It will increment the count of requests made to ListSteps.
func (c *EMR) ListSteps(input *emr.ListStepsInput) (*emr.ListStepsOutput, error) {
	c.inc("ListSteps")
	return c.svc.ListSteps(input)
}

// ListStepsWithContext is a passthrough to the underlying ListStepsWithContext method.
// It will increment the count of requests made to ListSteps.
func (c *EMR) ListStepsWithContext(ctx aws.Context, input *emr.ListStepsInput, opts ...request.Option) (*emr.ListStepsOutput, error) {
	c.inc("ListSteps")
	return c.svc.ListStepsWithContext(ctx, input, opts...)
}

// ListStepsPages is a passthrough to the underlying ListStepsPages method.
// It will increment the count of requests made to ListSteps on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListStepsPagesWithContext to avoid this.
func (c *EMR) ListStepsPages(input *emr.ListStepsInput, fn func(*emr.ListStepsOutput, bool) bool) error {
	wrappedFn := func(page *emr.ListStepsOutput, lastPage bool) bool {
		c.inc("ListSteps")
		return fn(page, lastPage)
	}
	return c.svc.ListStepsPages(input, wrappedFn)
}

// ListStepsPagesWithContext is a passthrough to the underlying ListStepsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListSteps when applied to the request.
func (c *EMR) ListStepsPagesWithContext(ctx aws.Context, input *emr.ListStepsInput, fn func(*emr.ListStepsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListSteps"))
	return c.svc.ListStepsPagesWithContext(ctx, input, fn, opts...)
}

// ModifyInstanceFleetRequest is a passthrough to the underlying ModifyInstanceFleetRequest.
// It will increment the count of requests made to ModifyInstanceFleet.
func (c *EMR) ModifyInstanceFleetRequest(input *emr.ModifyInstanceFleetInput) (req *request.Request, output *emr.ModifyInstanceFleetOutput) {
	c.inc("ModifyInstanceFleet")
	return c.svc.ModifyInstanceFleetRequest(input)
}

// ModifyInstanceFleet is a passthrough to the underlying ModifyInstanceFleet method.
// It will increment the count of requests made to ModifyInstanceFleet.
func (c *EMR) ModifyInstanceFleet(input *emr.ModifyInstanceFleetInput) (*emr.ModifyInstanceFleetOutput, error) {
	c.inc("ModifyInstanceFleet")
	return c.svc.ModifyInstanceFleet(input)
}

// ModifyInstanceFleetWithContext is a passthrough to the underlying ModifyInstanceFleetWithContext method.
// It will increment the count of requests made to ModifyInstanceFleet.
func (c *EMR) ModifyInstanceFleetWithContext(ctx aws.Context, input *emr.ModifyInstanceFleetInput, opts ...request.Option) (*emr.ModifyInstanceFleetOutput, error) {
	c.inc("ModifyInstanceFleet")
	return c.svc.ModifyInstanceFleetWithContext(ctx, input, opts...)
}

// ModifyInstanceGroupsRequest is a passthrough to the underlying ModifyInstanceGroupsRequest.
// It will increment the count of requests made to ModifyInstanceGroups.
func (c *EMR) ModifyInstanceGroupsRequest(input *emr.ModifyInstanceGroupsInput) (req *request.Request, output *emr.ModifyInstanceGroupsOutput) {
	c.inc("ModifyInstanceGroups")
	return c.svc.ModifyInstanceGroupsRequest(input)
}

// ModifyInstanceGroups is a passthrough to the underlying ModifyInstanceGroups method.
// It will increment the count of requests made to ModifyInstanceGroups.
func (c *EMR) ModifyInstanceGroups(input *emr.ModifyInstanceGroupsInput) (*emr.ModifyInstanceGroupsOutput, error) {
	c.inc("ModifyInstanceGroups")
	return c.svc.ModifyInstanceGroups(input)
}

// ModifyInstanceGroupsWithContext is a passthrough to the underlying ModifyInstanceGroupsWithContext method.
// It will increment the count of requests made to ModifyInstanceGroups.
func (c *EMR) ModifyInstanceGroupsWithContext(ctx aws.Context, input *emr.ModifyInstanceGroupsInput, opts ...request.Option) (*emr.ModifyInstanceGroupsOutput, error) {
	c.inc("ModifyInstanceGroups")
	return c.svc.ModifyInstanceGroupsWithContext(ctx, input, opts...)
}

// PutAutoScalingPolicyRequest is a passthrough to the underlying PutAutoScalingPolicyRequest.
// It will increment the count of requests made to PutAutoScalingPolicy.
func (c *EMR) PutAutoScalingPolicyRequest(input *emr.PutAutoScalingPolicyInput) (req *request.Request, output *emr.PutAutoScalingPolicyOutput) {
	c.inc("PutAutoScalingPolicy")
	return c.svc.PutAutoScalingPolicyRequest(input)
}

// PutAutoScalingPolicy is a passthrough to the underlying PutAutoScalingPolicy method.
// It will increment the count of requests made to PutAutoScalingPolicy.
func (c *EMR) PutAutoScalingPolicy(input *emr.PutAutoScalingPolicyInput) (*emr.PutAutoScalingPolicyOutput, error) {
	c.inc("PutAutoScalingPolicy")
	return c.svc.PutAutoScalingPolicy(input)
}

// PutAutoScalingPolicyWithContext is a passthrough to the underlying PutAutoScalingPolicyWithContext method.
// It will increment the count of requests made to PutAutoScalingPolicy.
func (c *EMR) PutAutoScalingPolicyWithContext(ctx aws.Context, input *emr.PutAutoScalingPolicyInput, opts ...request.Option) (*emr.PutAutoScalingPolicyOutput, error) {
	c.inc("PutAutoScalingPolicy")
	return c.svc.PutAutoScalingPolicyWithContext(ctx, input, opts...)
}

// RemoveAutoScalingPolicyRequest is a passthrough to the underlying RemoveAutoScalingPolicyRequest.
// It will increment the count of requests made to RemoveAutoScalingPolicy.
func (c *EMR) RemoveAutoScalingPolicyRequest(input *emr.RemoveAutoScalingPolicyInput) (req *request.Request, output *emr.RemoveAutoScalingPolicyOutput) {
	c.inc("RemoveAutoScalingPolicy")
	return c.svc.RemoveAutoScalingPolicyRequest(input)
}

// RemoveAutoScalingPolicy is a passthrough to the underlying RemoveAutoScalingPolicy method.
// It will increment the count of requests made to RemoveAutoScalingPolicy.
func (c *EMR) RemoveAutoScalingPolicy(input *emr.RemoveAutoScalingPolicyInput) (*emr.RemoveAutoScalingPolicyOutput, error) {
	c.inc("RemoveAutoScalingPolicy")
	return c.svc.RemoveAutoScalingPolicy(input)
}

// RemoveAutoScalingPolicyWithContext is a passthrough to the underlying RemoveAutoScalingPolicyWithContext method.
// It will increment the count of requests made to RemoveAutoScalingPolicy.
func (c *EMR) RemoveAutoScalingPolicyWithContext(ctx aws.Context, input *emr.RemoveAutoScalingPolicyInput, opts ...request.Option) (*emr.RemoveAutoScalingPolicyOutput, error) {
	c.inc("RemoveAutoScalingPolicy")
	return c.svc.RemoveAutoScalingPolicyWithContext(ctx, input, opts...)
}

// RemoveTagsRequest is a passthrough to the underlying RemoveTagsRequest.
// It will increment the count of requests made to RemoveTags.
func (c *EMR) RemoveTagsRequest(input *emr.RemoveTagsInput) (req *request.Request, output *emr.RemoveTagsOutput) {
	c.inc("RemoveTags")
	return c.svc.RemoveTagsRequest(input)
}

// RemoveTags is a passthrough to the underlying RemoveTags method.
// It will increment the count of requests made to RemoveTags.
func (c *EMR) RemoveTags(input *emr.RemoveTagsInput) (*emr.RemoveTagsOutput, error) {
	c.inc("RemoveTags")
	return c.svc.RemoveTags(input)
}

// RemoveTagsWithContext is a passthrough to the underlying RemoveTagsWithContext method.
// It will increment the count of requests made to RemoveTags.
func (c *EMR) RemoveTagsWithContext(ctx aws.Context, input *emr.RemoveTagsInput, opts ...request.Option) (*emr.RemoveTagsOutput, error) {
	c.inc("RemoveTags")
	return c.svc.RemoveTagsWithContext(ctx, input, opts...)
}

// RunJobFlowRequest is a passthrough to the underlying RunJobFlowRequest.
// It will increment the count of requests made to RunJobFlow.
func (c *EMR) RunJobFlowRequest(input *emr.RunJobFlowInput) (req *request.Request, output *emr.RunJobFlowOutput) {
	c.inc("RunJobFlow")
	return c.svc.RunJobFlowRequest(input)
}

// RunJobFlow is a passthrough to the underlying RunJobFlow method.
// It will increment the count of requests made to RunJobFlow.
func (c *EMR) RunJobFlow(input *emr.RunJobFlowInput) (*emr.RunJobFlowOutput, error) {
	c.inc("RunJobFlow")
	return c.svc.RunJobFlow(input)
}

// RunJobFlowWithContext is a passthrough to the underlying RunJobFlowWithContext method.
// It will increment the count of requests made to RunJobFlow.
func (c *EMR) RunJobFlowWithContext(ctx aws.Context, input *emr.RunJobFlowInput, opts ...request.Option) (*emr.RunJobFlowOutput, error) {
	c.inc("RunJobFlow")
	return c.svc.RunJobFlowWithContext(ctx, input, opts...)
}

// SetTerminationProtectionRequest is a passthrough to the underlying SetTerminationProtectionRequest.
// It will increment the count of requests made to SetTerminationProtection.
func (c *EMR) SetTerminationProtectionRequest(input *emr.SetTerminationProtectionInput) (req *request.Request, output *emr.SetTerminationProtectionOutput) {
	c.inc("SetTerminationProtection")
	return c.svc.SetTerminationProtectionRequest(input)
}

// SetTerminationProtection is a passthrough to the underlying SetTerminationProtection method.
// It will increment the count of requests made to SetTerminationProtection.
func (c *EMR) SetTerminationProtection(input *emr.SetTerminationProtectionInput) (*emr.SetTerminationProtectionOutput, error) {
	c.inc("SetTerminationProtection")
	return c.svc.SetTerminationProtection(input)
}

// SetTerminationProtectionWithContext is a passthrough to the underlying SetTerminationProtectionWithContext method.
// It will increment the count of requests made to SetTerminationProtection.
func (c *EMR) SetTerminationProtectionWithContext(ctx aws.Context, input *emr.SetTerminationProtectionInput, opts ...request.Option) (*emr.SetTerminationProtectionOutput, error) {
	c.inc("SetTerminationProtection")
	return c.svc.SetTerminationProtectionWithContext(ctx, input, opts...)
}

// SetVisibleToAllUsersRequest is a passthrough to the underlying SetVisibleToAllUsersRequest.
// It will increment the count of requests made to SetVisibleToAllUsers.
func (c *EMR) SetVisibleToAllUsersRequest(input *emr.SetVisibleToAllUsersInput) (req *request.Request, output *emr.SetVisibleToAllUsersOutput) {
	c.inc("SetVisibleToAllUsers")
	return c.svc.SetVisibleToAllUsersRequest(input)
}

// SetVisibleToAllUsers is a passthrough to the underlying SetVisibleToAllUsers method.
// It will increment the count of requests made to SetVisibleToAllUsers.
func (c *EMR) SetVisibleToAllUsers(input *emr.SetVisibleToAllUsersInput) (*emr.SetVisibleToAllUsersOutput, error) {
	c.inc("SetVisibleToAllUsers")
	return c.svc.SetVisibleToAllUsers(input)
}

// SetVisibleToAllUsersWithContext is a passthrough to the underlying SetVisibleToAllUsersWithContext method.
// It will increment the count of requests made to SetVisibleToAllUsers.
func (c *EMR) SetVisibleToAllUsersWithContext(ctx aws.Context, input *emr.SetVisibleToAllUsersInput, opts ...request.Option) (*emr.SetVisibleToAllUsersOutput, error) {
	c.inc("SetVisibleToAllUsers")
	return c.svc.SetVisibleToAllUsersWithContext(ctx, input, opts...)
}

// TerminateJobFlowsRequest is a passthrough to the underlying TerminateJobFlowsRequest.
// It will increment the count of requests made to TerminateJobFlows.
func (c *EMR) TerminateJobFlowsRequest(input *emr.TerminateJobFlowsInput) (req *request.Request, output *emr.TerminateJobFlowsOutput) {
	c.inc("TerminateJobFlows")
	return c.svc.TerminateJobFlowsRequest(input)
}

// TerminateJobFlows is a passthrough to the underlying TerminateJobFlows method.
// It will increment the count of requests made to TerminateJobFlows.
func (c *EMR) TerminateJobFlows(input *emr.TerminateJobFlowsInput) (*emr.TerminateJobFlowsOutput, error) {
	c.inc("TerminateJobFlows")
	return c.svc.TerminateJobFlows(input)
}

// TerminateJobFlowsWithContext is a passthrough to the underlying TerminateJobFlowsWithContext method.
// It will increment the count of requests made to TerminateJobFlows.
func (c *EMR) TerminateJobFlowsWithContext(ctx aws.Context, input *emr.TerminateJobFlowsInput, opts ...request.Option) (*emr.TerminateJobFlowsOutput, error) {
	c.inc("TerminateJobFlows")
	return c.svc.TerminateJobFlowsWithContext(ctx, input, opts...)
}
