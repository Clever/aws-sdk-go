// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package workspacescounter

import (
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/workspaces"
)

// CreateTagsRequest is a passthrough to the underlying CreateTagsRequest.
// It will increment the count of requests made to CreateTags.
func (c *WorkSpaces) CreateTagsRequest(input *workspaces.CreateTagsInput) (req *request.Request, output *workspaces.CreateTagsOutput) {
	c.inc("CreateTags")
	return c.svc.CreateTagsRequest(input)
}

// CreateTags is a passthrough to the underlying CreateTags method.
// It will increment the count of requests made to CreateTags.
func (c *WorkSpaces) CreateTags(input *workspaces.CreateTagsInput) (*workspaces.CreateTagsOutput, error) {
	c.inc("CreateTags")
	return c.svc.CreateTags(input)
}

// CreateTagsWithContext is a passthrough to the underlying CreateTagsWithContext method.
// It will increment the count of requests made to CreateTags.
func (c *WorkSpaces) CreateTagsWithContext(ctx aws.Context, input *workspaces.CreateTagsInput, opts ...request.Option) (*workspaces.CreateTagsOutput, error) {
	c.inc("CreateTags")
	return c.svc.CreateTagsWithContext(ctx, input, opts...)
}

// CreateWorkspacesRequest is a passthrough to the underlying CreateWorkspacesRequest.
// It will increment the count of requests made to CreateWorkspaces.
func (c *WorkSpaces) CreateWorkspacesRequest(input *workspaces.CreateWorkspacesInput) (req *request.Request, output *workspaces.CreateWorkspacesOutput) {
	c.inc("CreateWorkspaces")
	return c.svc.CreateWorkspacesRequest(input)
}

// CreateWorkspaces is a passthrough to the underlying CreateWorkspaces method.
// It will increment the count of requests made to CreateWorkspaces.
func (c *WorkSpaces) CreateWorkspaces(input *workspaces.CreateWorkspacesInput) (*workspaces.CreateWorkspacesOutput, error) {
	c.inc("CreateWorkspaces")
	return c.svc.CreateWorkspaces(input)
}

// CreateWorkspacesWithContext is a passthrough to the underlying CreateWorkspacesWithContext method.
// It will increment the count of requests made to CreateWorkspaces.
func (c *WorkSpaces) CreateWorkspacesWithContext(ctx aws.Context, input *workspaces.CreateWorkspacesInput, opts ...request.Option) (*workspaces.CreateWorkspacesOutput, error) {
	c.inc("CreateWorkspaces")
	return c.svc.CreateWorkspacesWithContext(ctx, input, opts...)
}

// DeleteTagsRequest is a passthrough to the underlying DeleteTagsRequest.
// It will increment the count of requests made to DeleteTags.
func (c *WorkSpaces) DeleteTagsRequest(input *workspaces.DeleteTagsInput) (req *request.Request, output *workspaces.DeleteTagsOutput) {
	c.inc("DeleteTags")
	return c.svc.DeleteTagsRequest(input)
}

// DeleteTags is a passthrough to the underlying DeleteTags method.
// It will increment the count of requests made to DeleteTags.
func (c *WorkSpaces) DeleteTags(input *workspaces.DeleteTagsInput) (*workspaces.DeleteTagsOutput, error) {
	c.inc("DeleteTags")
	return c.svc.DeleteTags(input)
}

// DeleteTagsWithContext is a passthrough to the underlying DeleteTagsWithContext method.
// It will increment the count of requests made to DeleteTags.
func (c *WorkSpaces) DeleteTagsWithContext(ctx aws.Context, input *workspaces.DeleteTagsInput, opts ...request.Option) (*workspaces.DeleteTagsOutput, error) {
	c.inc("DeleteTags")
	return c.svc.DeleteTagsWithContext(ctx, input, opts...)
}

// DescribeTagsRequest is a passthrough to the underlying DescribeTagsRequest.
// It will increment the count of requests made to DescribeTags.
func (c *WorkSpaces) DescribeTagsRequest(input *workspaces.DescribeTagsInput) (req *request.Request, output *workspaces.DescribeTagsOutput) {
	c.inc("DescribeTags")
	return c.svc.DescribeTagsRequest(input)
}

// DescribeTags is a passthrough to the underlying DescribeTags method.
// It will increment the count of requests made to DescribeTags.
func (c *WorkSpaces) DescribeTags(input *workspaces.DescribeTagsInput) (*workspaces.DescribeTagsOutput, error) {
	c.inc("DescribeTags")
	return c.svc.DescribeTags(input)
}

// DescribeTagsWithContext is a passthrough to the underlying DescribeTagsWithContext method.
// It will increment the count of requests made to DescribeTags.
func (c *WorkSpaces) DescribeTagsWithContext(ctx aws.Context, input *workspaces.DescribeTagsInput, opts ...request.Option) (*workspaces.DescribeTagsOutput, error) {
	c.inc("DescribeTags")
	return c.svc.DescribeTagsWithContext(ctx, input, opts...)
}

// DescribeWorkspaceBundlesRequest is a passthrough to the underlying DescribeWorkspaceBundlesRequest.
// It will increment the count of requests made to DescribeWorkspaceBundles.
func (c *WorkSpaces) DescribeWorkspaceBundlesRequest(input *workspaces.DescribeWorkspaceBundlesInput) (req *request.Request, output *workspaces.DescribeWorkspaceBundlesOutput) {
	c.inc("DescribeWorkspaceBundles")
	return c.svc.DescribeWorkspaceBundlesRequest(input)
}

// DescribeWorkspaceBundles is a passthrough to the underlying DescribeWorkspaceBundles method.
// It will increment the count of requests made to DescribeWorkspaceBundles.
func (c *WorkSpaces) DescribeWorkspaceBundles(input *workspaces.DescribeWorkspaceBundlesInput) (*workspaces.DescribeWorkspaceBundlesOutput, error) {
	c.inc("DescribeWorkspaceBundles")
	return c.svc.DescribeWorkspaceBundles(input)
}

// DescribeWorkspaceBundlesWithContext is a passthrough to the underlying DescribeWorkspaceBundlesWithContext method.
// It will increment the count of requests made to DescribeWorkspaceBundles.
func (c *WorkSpaces) DescribeWorkspaceBundlesWithContext(ctx aws.Context, input *workspaces.DescribeWorkspaceBundlesInput, opts ...request.Option) (*workspaces.DescribeWorkspaceBundlesOutput, error) {
	c.inc("DescribeWorkspaceBundles")
	return c.svc.DescribeWorkspaceBundlesWithContext(ctx, input, opts...)
}

// DescribeWorkspaceBundlesPages is a passthrough to the underlying DescribeWorkspaceBundlesPages method.
// It will increment the count of requests made to DescribeWorkspaceBundles on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeWorkspaceBundlesPagesWithContext to avoid this.
func (c *WorkSpaces) DescribeWorkspaceBundlesPages(input *workspaces.DescribeWorkspaceBundlesInput, fn func(*workspaces.DescribeWorkspaceBundlesOutput, bool) bool) error {
	wrappedFn := func(page *workspaces.DescribeWorkspaceBundlesOutput, lastPage bool) bool {
		c.inc("DescribeWorkspaceBundles")
		return fn(page, lastPage)
	}
	return c.svc.DescribeWorkspaceBundlesPages(input, wrappedFn)
}

// DescribeWorkspaceBundlesPagesWithContext is a passthrough to the underlying DescribeWorkspaceBundlesPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeWorkspaceBundles when applied to the request.
func (c *WorkSpaces) DescribeWorkspaceBundlesPagesWithContext(ctx aws.Context, input *workspaces.DescribeWorkspaceBundlesInput, fn func(*workspaces.DescribeWorkspaceBundlesOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeWorkspaceBundles"))
	return c.svc.DescribeWorkspaceBundlesPagesWithContext(ctx, input, fn, opts...)
}

// DescribeWorkspaceDirectoriesRequest is a passthrough to the underlying DescribeWorkspaceDirectoriesRequest.
// It will increment the count of requests made to DescribeWorkspaceDirectories.
func (c *WorkSpaces) DescribeWorkspaceDirectoriesRequest(input *workspaces.DescribeWorkspaceDirectoriesInput) (req *request.Request, output *workspaces.DescribeWorkspaceDirectoriesOutput) {
	c.inc("DescribeWorkspaceDirectories")
	return c.svc.DescribeWorkspaceDirectoriesRequest(input)
}

// DescribeWorkspaceDirectories is a passthrough to the underlying DescribeWorkspaceDirectories method.
// It will increment the count of requests made to DescribeWorkspaceDirectories.
func (c *WorkSpaces) DescribeWorkspaceDirectories(input *workspaces.DescribeWorkspaceDirectoriesInput) (*workspaces.DescribeWorkspaceDirectoriesOutput, error) {
	c.inc("DescribeWorkspaceDirectories")
	return c.svc.DescribeWorkspaceDirectories(input)
}

// DescribeWorkspaceDirectoriesWithContext is a passthrough to the underlying DescribeWorkspaceDirectoriesWithContext method.
// It will increment the count of requests made to DescribeWorkspaceDirectories.
func (c *WorkSpaces) DescribeWorkspaceDirectoriesWithContext(ctx aws.Context, input *workspaces.DescribeWorkspaceDirectoriesInput, opts ...request.Option) (*workspaces.DescribeWorkspaceDirectoriesOutput, error) {
	c.inc("DescribeWorkspaceDirectories")
	return c.svc.DescribeWorkspaceDirectoriesWithContext(ctx, input, opts...)
}

// DescribeWorkspaceDirectoriesPages is a passthrough to the underlying DescribeWorkspaceDirectoriesPages method.
// It will increment the count of requests made to DescribeWorkspaceDirectories on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeWorkspaceDirectoriesPagesWithContext to avoid this.
func (c *WorkSpaces) DescribeWorkspaceDirectoriesPages(input *workspaces.DescribeWorkspaceDirectoriesInput, fn func(*workspaces.DescribeWorkspaceDirectoriesOutput, bool) bool) error {
	wrappedFn := func(page *workspaces.DescribeWorkspaceDirectoriesOutput, lastPage bool) bool {
		c.inc("DescribeWorkspaceDirectories")
		return fn(page, lastPage)
	}
	return c.svc.DescribeWorkspaceDirectoriesPages(input, wrappedFn)
}

// DescribeWorkspaceDirectoriesPagesWithContext is a passthrough to the underlying DescribeWorkspaceDirectoriesPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeWorkspaceDirectories when applied to the request.
func (c *WorkSpaces) DescribeWorkspaceDirectoriesPagesWithContext(ctx aws.Context, input *workspaces.DescribeWorkspaceDirectoriesInput, fn func(*workspaces.DescribeWorkspaceDirectoriesOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeWorkspaceDirectories"))
	return c.svc.DescribeWorkspaceDirectoriesPagesWithContext(ctx, input, fn, opts...)
}

// DescribeWorkspacesRequest is a passthrough to the underlying DescribeWorkspacesRequest.
// It will increment the count of requests made to DescribeWorkspaces.
func (c *WorkSpaces) DescribeWorkspacesRequest(input *workspaces.DescribeWorkspacesInput) (req *request.Request, output *workspaces.DescribeWorkspacesOutput) {
	c.inc("DescribeWorkspaces")
	return c.svc.DescribeWorkspacesRequest(input)
}

// DescribeWorkspaces is a passthrough to the underlying DescribeWorkspaces method.
// It will increment the count of requests made to DescribeWorkspaces.
func (c *WorkSpaces) DescribeWorkspaces(input *workspaces.DescribeWorkspacesInput) (*workspaces.DescribeWorkspacesOutput, error) {
	c.inc("DescribeWorkspaces")
	return c.svc.DescribeWorkspaces(input)
}

// DescribeWorkspacesWithContext is a passthrough to the underlying DescribeWorkspacesWithContext method.
// It will increment the count of requests made to DescribeWorkspaces.
func (c *WorkSpaces) DescribeWorkspacesWithContext(ctx aws.Context, input *workspaces.DescribeWorkspacesInput, opts ...request.Option) (*workspaces.DescribeWorkspacesOutput, error) {
	c.inc("DescribeWorkspaces")
	return c.svc.DescribeWorkspacesWithContext(ctx, input, opts...)
}

// DescribeWorkspacesPages is a passthrough to the underlying DescribeWorkspacesPages method.
// It will increment the count of requests made to DescribeWorkspaces on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeWorkspacesPagesWithContext to avoid this.
func (c *WorkSpaces) DescribeWorkspacesPages(input *workspaces.DescribeWorkspacesInput, fn func(*workspaces.DescribeWorkspacesOutput, bool) bool) error {
	wrappedFn := func(page *workspaces.DescribeWorkspacesOutput, lastPage bool) bool {
		c.inc("DescribeWorkspaces")
		return fn(page, lastPage)
	}
	return c.svc.DescribeWorkspacesPages(input, wrappedFn)
}

// DescribeWorkspacesPagesWithContext is a passthrough to the underlying DescribeWorkspacesPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeWorkspaces when applied to the request.
func (c *WorkSpaces) DescribeWorkspacesPagesWithContext(ctx aws.Context, input *workspaces.DescribeWorkspacesInput, fn func(*workspaces.DescribeWorkspacesOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeWorkspaces"))
	return c.svc.DescribeWorkspacesPagesWithContext(ctx, input, fn, opts...)
}

// DescribeWorkspacesConnectionStatusRequest is a passthrough to the underlying DescribeWorkspacesConnectionStatusRequest.
// It will increment the count of requests made to DescribeWorkspacesConnectionStatus.
func (c *WorkSpaces) DescribeWorkspacesConnectionStatusRequest(input *workspaces.DescribeWorkspacesConnectionStatusInput) (req *request.Request, output *workspaces.DescribeWorkspacesConnectionStatusOutput) {
	c.inc("DescribeWorkspacesConnectionStatus")
	return c.svc.DescribeWorkspacesConnectionStatusRequest(input)
}

// DescribeWorkspacesConnectionStatus is a passthrough to the underlying DescribeWorkspacesConnectionStatus method.
// It will increment the count of requests made to DescribeWorkspacesConnectionStatus.
func (c *WorkSpaces) DescribeWorkspacesConnectionStatus(input *workspaces.DescribeWorkspacesConnectionStatusInput) (*workspaces.DescribeWorkspacesConnectionStatusOutput, error) {
	c.inc("DescribeWorkspacesConnectionStatus")
	return c.svc.DescribeWorkspacesConnectionStatus(input)
}

// DescribeWorkspacesConnectionStatusWithContext is a passthrough to the underlying DescribeWorkspacesConnectionStatusWithContext method.
// It will increment the count of requests made to DescribeWorkspacesConnectionStatus.
func (c *WorkSpaces) DescribeWorkspacesConnectionStatusWithContext(ctx aws.Context, input *workspaces.DescribeWorkspacesConnectionStatusInput, opts ...request.Option) (*workspaces.DescribeWorkspacesConnectionStatusOutput, error) {
	c.inc("DescribeWorkspacesConnectionStatus")
	return c.svc.DescribeWorkspacesConnectionStatusWithContext(ctx, input, opts...)
}

// ModifyWorkspacePropertiesRequest is a passthrough to the underlying ModifyWorkspacePropertiesRequest.
// It will increment the count of requests made to ModifyWorkspaceProperties.
func (c *WorkSpaces) ModifyWorkspacePropertiesRequest(input *workspaces.ModifyWorkspacePropertiesInput) (req *request.Request, output *workspaces.ModifyWorkspacePropertiesOutput) {
	c.inc("ModifyWorkspaceProperties")
	return c.svc.ModifyWorkspacePropertiesRequest(input)
}

// ModifyWorkspaceProperties is a passthrough to the underlying ModifyWorkspaceProperties method.
// It will increment the count of requests made to ModifyWorkspaceProperties.
func (c *WorkSpaces) ModifyWorkspaceProperties(input *workspaces.ModifyWorkspacePropertiesInput) (*workspaces.ModifyWorkspacePropertiesOutput, error) {
	c.inc("ModifyWorkspaceProperties")
	return c.svc.ModifyWorkspaceProperties(input)
}

// ModifyWorkspacePropertiesWithContext is a passthrough to the underlying ModifyWorkspacePropertiesWithContext method.
// It will increment the count of requests made to ModifyWorkspaceProperties.
func (c *WorkSpaces) ModifyWorkspacePropertiesWithContext(ctx aws.Context, input *workspaces.ModifyWorkspacePropertiesInput, opts ...request.Option) (*workspaces.ModifyWorkspacePropertiesOutput, error) {
	c.inc("ModifyWorkspaceProperties")
	return c.svc.ModifyWorkspacePropertiesWithContext(ctx, input, opts...)
}

// RebootWorkspacesRequest is a passthrough to the underlying RebootWorkspacesRequest.
// It will increment the count of requests made to RebootWorkspaces.
func (c *WorkSpaces) RebootWorkspacesRequest(input *workspaces.RebootWorkspacesInput) (req *request.Request, output *workspaces.RebootWorkspacesOutput) {
	c.inc("RebootWorkspaces")
	return c.svc.RebootWorkspacesRequest(input)
}

// RebootWorkspaces is a passthrough to the underlying RebootWorkspaces method.
// It will increment the count of requests made to RebootWorkspaces.
func (c *WorkSpaces) RebootWorkspaces(input *workspaces.RebootWorkspacesInput) (*workspaces.RebootWorkspacesOutput, error) {
	c.inc("RebootWorkspaces")
	return c.svc.RebootWorkspaces(input)
}

// RebootWorkspacesWithContext is a passthrough to the underlying RebootWorkspacesWithContext method.
// It will increment the count of requests made to RebootWorkspaces.
func (c *WorkSpaces) RebootWorkspacesWithContext(ctx aws.Context, input *workspaces.RebootWorkspacesInput, opts ...request.Option) (*workspaces.RebootWorkspacesOutput, error) {
	c.inc("RebootWorkspaces")
	return c.svc.RebootWorkspacesWithContext(ctx, input, opts...)
}

// RebuildWorkspacesRequest is a passthrough to the underlying RebuildWorkspacesRequest.
// It will increment the count of requests made to RebuildWorkspaces.
func (c *WorkSpaces) RebuildWorkspacesRequest(input *workspaces.RebuildWorkspacesInput) (req *request.Request, output *workspaces.RebuildWorkspacesOutput) {
	c.inc("RebuildWorkspaces")
	return c.svc.RebuildWorkspacesRequest(input)
}

// RebuildWorkspaces is a passthrough to the underlying RebuildWorkspaces method.
// It will increment the count of requests made to RebuildWorkspaces.
func (c *WorkSpaces) RebuildWorkspaces(input *workspaces.RebuildWorkspacesInput) (*workspaces.RebuildWorkspacesOutput, error) {
	c.inc("RebuildWorkspaces")
	return c.svc.RebuildWorkspaces(input)
}

// RebuildWorkspacesWithContext is a passthrough to the underlying RebuildWorkspacesWithContext method.
// It will increment the count of requests made to RebuildWorkspaces.
func (c *WorkSpaces) RebuildWorkspacesWithContext(ctx aws.Context, input *workspaces.RebuildWorkspacesInput, opts ...request.Option) (*workspaces.RebuildWorkspacesOutput, error) {
	c.inc("RebuildWorkspaces")
	return c.svc.RebuildWorkspacesWithContext(ctx, input, opts...)
}

// StartWorkspacesRequest is a passthrough to the underlying StartWorkspacesRequest.
// It will increment the count of requests made to StartWorkspaces.
func (c *WorkSpaces) StartWorkspacesRequest(input *workspaces.StartWorkspacesInput) (req *request.Request, output *workspaces.StartWorkspacesOutput) {
	c.inc("StartWorkspaces")
	return c.svc.StartWorkspacesRequest(input)
}

// StartWorkspaces is a passthrough to the underlying StartWorkspaces method.
// It will increment the count of requests made to StartWorkspaces.
func (c *WorkSpaces) StartWorkspaces(input *workspaces.StartWorkspacesInput) (*workspaces.StartWorkspacesOutput, error) {
	c.inc("StartWorkspaces")
	return c.svc.StartWorkspaces(input)
}

// StartWorkspacesWithContext is a passthrough to the underlying StartWorkspacesWithContext method.
// It will increment the count of requests made to StartWorkspaces.
func (c *WorkSpaces) StartWorkspacesWithContext(ctx aws.Context, input *workspaces.StartWorkspacesInput, opts ...request.Option) (*workspaces.StartWorkspacesOutput, error) {
	c.inc("StartWorkspaces")
	return c.svc.StartWorkspacesWithContext(ctx, input, opts...)
}

// StopWorkspacesRequest is a passthrough to the underlying StopWorkspacesRequest.
// It will increment the count of requests made to StopWorkspaces.
func (c *WorkSpaces) StopWorkspacesRequest(input *workspaces.StopWorkspacesInput) (req *request.Request, output *workspaces.StopWorkspacesOutput) {
	c.inc("StopWorkspaces")
	return c.svc.StopWorkspacesRequest(input)
}

// StopWorkspaces is a passthrough to the underlying StopWorkspaces method.
// It will increment the count of requests made to StopWorkspaces.
func (c *WorkSpaces) StopWorkspaces(input *workspaces.StopWorkspacesInput) (*workspaces.StopWorkspacesOutput, error) {
	c.inc("StopWorkspaces")
	return c.svc.StopWorkspaces(input)
}

// StopWorkspacesWithContext is a passthrough to the underlying StopWorkspacesWithContext method.
// It will increment the count of requests made to StopWorkspaces.
func (c *WorkSpaces) StopWorkspacesWithContext(ctx aws.Context, input *workspaces.StopWorkspacesInput, opts ...request.Option) (*workspaces.StopWorkspacesOutput, error) {
	c.inc("StopWorkspaces")
	return c.svc.StopWorkspacesWithContext(ctx, input, opts...)
}

// TerminateWorkspacesRequest is a passthrough to the underlying TerminateWorkspacesRequest.
// It will increment the count of requests made to TerminateWorkspaces.
func (c *WorkSpaces) TerminateWorkspacesRequest(input *workspaces.TerminateWorkspacesInput) (req *request.Request, output *workspaces.TerminateWorkspacesOutput) {
	c.inc("TerminateWorkspaces")
	return c.svc.TerminateWorkspacesRequest(input)
}

// TerminateWorkspaces is a passthrough to the underlying TerminateWorkspaces method.
// It will increment the count of requests made to TerminateWorkspaces.
func (c *WorkSpaces) TerminateWorkspaces(input *workspaces.TerminateWorkspacesInput) (*workspaces.TerminateWorkspacesOutput, error) {
	c.inc("TerminateWorkspaces")
	return c.svc.TerminateWorkspaces(input)
}

// TerminateWorkspacesWithContext is a passthrough to the underlying TerminateWorkspacesWithContext method.
// It will increment the count of requests made to TerminateWorkspaces.
func (c *WorkSpaces) TerminateWorkspacesWithContext(ctx aws.Context, input *workspaces.TerminateWorkspacesInput, opts ...request.Option) (*workspaces.TerminateWorkspacesOutput, error) {
	c.inc("TerminateWorkspaces")
	return c.svc.TerminateWorkspacesWithContext(ctx, input, opts...)
}
