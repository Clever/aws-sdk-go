// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package kinesisanalyticscounter

import (
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/kinesisanalytics"
)

// AddApplicationCloudWatchLoggingOptionRequest is a passthrough to the underlying AddApplicationCloudWatchLoggingOptionRequest.
// It will increment the count of requests made to AddApplicationCloudWatchLoggingOption.
func (c *KinesisAnalytics) AddApplicationCloudWatchLoggingOptionRequest(input *kinesisanalytics.AddApplicationCloudWatchLoggingOptionInput) (req *request.Request, output *kinesisanalytics.AddApplicationCloudWatchLoggingOptionOutput) {
	c.inc("AddApplicationCloudWatchLoggingOption")
	return c.svc.AddApplicationCloudWatchLoggingOptionRequest(input)
}

// AddApplicationCloudWatchLoggingOption is a passthrough to the underlying AddApplicationCloudWatchLoggingOption method.
// It will increment the count of requests made to AddApplicationCloudWatchLoggingOption.
func (c *KinesisAnalytics) AddApplicationCloudWatchLoggingOption(input *kinesisanalytics.AddApplicationCloudWatchLoggingOptionInput) (*kinesisanalytics.AddApplicationCloudWatchLoggingOptionOutput, error) {
	c.inc("AddApplicationCloudWatchLoggingOption")
	return c.svc.AddApplicationCloudWatchLoggingOption(input)
}

// AddApplicationCloudWatchLoggingOptionWithContext is a passthrough to the underlying AddApplicationCloudWatchLoggingOptionWithContext method.
// It will increment the count of requests made to AddApplicationCloudWatchLoggingOption.
func (c *KinesisAnalytics) AddApplicationCloudWatchLoggingOptionWithContext(ctx aws.Context, input *kinesisanalytics.AddApplicationCloudWatchLoggingOptionInput, opts ...request.Option) (*kinesisanalytics.AddApplicationCloudWatchLoggingOptionOutput, error) {
	c.inc("AddApplicationCloudWatchLoggingOption")
	return c.svc.AddApplicationCloudWatchLoggingOptionWithContext(ctx, input, opts...)
}

// AddApplicationInputRequest is a passthrough to the underlying AddApplicationInputRequest.
// It will increment the count of requests made to AddApplicationInput.
func (c *KinesisAnalytics) AddApplicationInputRequest(input *kinesisanalytics.AddApplicationInputInput) (req *request.Request, output *kinesisanalytics.AddApplicationInputOutput) {
	c.inc("AddApplicationInput")
	return c.svc.AddApplicationInputRequest(input)
}

// AddApplicationInput is a passthrough to the underlying AddApplicationInput method.
// It will increment the count of requests made to AddApplicationInput.
func (c *KinesisAnalytics) AddApplicationInput(input *kinesisanalytics.AddApplicationInputInput) (*kinesisanalytics.AddApplicationInputOutput, error) {
	c.inc("AddApplicationInput")
	return c.svc.AddApplicationInput(input)
}

// AddApplicationInputWithContext is a passthrough to the underlying AddApplicationInputWithContext method.
// It will increment the count of requests made to AddApplicationInput.
func (c *KinesisAnalytics) AddApplicationInputWithContext(ctx aws.Context, input *kinesisanalytics.AddApplicationInputInput, opts ...request.Option) (*kinesisanalytics.AddApplicationInputOutput, error) {
	c.inc("AddApplicationInput")
	return c.svc.AddApplicationInputWithContext(ctx, input, opts...)
}

// AddApplicationInputProcessingConfigurationRequest is a passthrough to the underlying AddApplicationInputProcessingConfigurationRequest.
// It will increment the count of requests made to AddApplicationInputProcessingConfiguration.
func (c *KinesisAnalytics) AddApplicationInputProcessingConfigurationRequest(input *kinesisanalytics.AddApplicationInputProcessingConfigurationInput) (req *request.Request, output *kinesisanalytics.AddApplicationInputProcessingConfigurationOutput) {
	c.inc("AddApplicationInputProcessingConfiguration")
	return c.svc.AddApplicationInputProcessingConfigurationRequest(input)
}

// AddApplicationInputProcessingConfiguration is a passthrough to the underlying AddApplicationInputProcessingConfiguration method.
// It will increment the count of requests made to AddApplicationInputProcessingConfiguration.
func (c *KinesisAnalytics) AddApplicationInputProcessingConfiguration(input *kinesisanalytics.AddApplicationInputProcessingConfigurationInput) (*kinesisanalytics.AddApplicationInputProcessingConfigurationOutput, error) {
	c.inc("AddApplicationInputProcessingConfiguration")
	return c.svc.AddApplicationInputProcessingConfiguration(input)
}

// AddApplicationInputProcessingConfigurationWithContext is a passthrough to the underlying AddApplicationInputProcessingConfigurationWithContext method.
// It will increment the count of requests made to AddApplicationInputProcessingConfiguration.
func (c *KinesisAnalytics) AddApplicationInputProcessingConfigurationWithContext(ctx aws.Context, input *kinesisanalytics.AddApplicationInputProcessingConfigurationInput, opts ...request.Option) (*kinesisanalytics.AddApplicationInputProcessingConfigurationOutput, error) {
	c.inc("AddApplicationInputProcessingConfiguration")
	return c.svc.AddApplicationInputProcessingConfigurationWithContext(ctx, input, opts...)
}

// AddApplicationOutputRequest is a passthrough to the underlying AddApplicationOutputRequest.
// It will increment the count of requests made to AddApplicationOutput.
func (c *KinesisAnalytics) AddApplicationOutputRequest(input *kinesisanalytics.AddApplicationOutputInput) (req *request.Request, output *kinesisanalytics.AddApplicationOutputOutput) {
	c.inc("AddApplicationOutput")
	return c.svc.AddApplicationOutputRequest(input)
}

// AddApplicationOutput is a passthrough to the underlying AddApplicationOutput method.
// It will increment the count of requests made to AddApplicationOutput.
func (c *KinesisAnalytics) AddApplicationOutput(input *kinesisanalytics.AddApplicationOutputInput) (*kinesisanalytics.AddApplicationOutputOutput, error) {
	c.inc("AddApplicationOutput")
	return c.svc.AddApplicationOutput(input)
}

// AddApplicationOutputWithContext is a passthrough to the underlying AddApplicationOutputWithContext method.
// It will increment the count of requests made to AddApplicationOutput.
func (c *KinesisAnalytics) AddApplicationOutputWithContext(ctx aws.Context, input *kinesisanalytics.AddApplicationOutputInput, opts ...request.Option) (*kinesisanalytics.AddApplicationOutputOutput, error) {
	c.inc("AddApplicationOutput")
	return c.svc.AddApplicationOutputWithContext(ctx, input, opts...)
}

// AddApplicationReferenceDataSourceRequest is a passthrough to the underlying AddApplicationReferenceDataSourceRequest.
// It will increment the count of requests made to AddApplicationReferenceDataSource.
func (c *KinesisAnalytics) AddApplicationReferenceDataSourceRequest(input *kinesisanalytics.AddApplicationReferenceDataSourceInput) (req *request.Request, output *kinesisanalytics.AddApplicationReferenceDataSourceOutput) {
	c.inc("AddApplicationReferenceDataSource")
	return c.svc.AddApplicationReferenceDataSourceRequest(input)
}

// AddApplicationReferenceDataSource is a passthrough to the underlying AddApplicationReferenceDataSource method.
// It will increment the count of requests made to AddApplicationReferenceDataSource.
func (c *KinesisAnalytics) AddApplicationReferenceDataSource(input *kinesisanalytics.AddApplicationReferenceDataSourceInput) (*kinesisanalytics.AddApplicationReferenceDataSourceOutput, error) {
	c.inc("AddApplicationReferenceDataSource")
	return c.svc.AddApplicationReferenceDataSource(input)
}

// AddApplicationReferenceDataSourceWithContext is a passthrough to the underlying AddApplicationReferenceDataSourceWithContext method.
// It will increment the count of requests made to AddApplicationReferenceDataSource.
func (c *KinesisAnalytics) AddApplicationReferenceDataSourceWithContext(ctx aws.Context, input *kinesisanalytics.AddApplicationReferenceDataSourceInput, opts ...request.Option) (*kinesisanalytics.AddApplicationReferenceDataSourceOutput, error) {
	c.inc("AddApplicationReferenceDataSource")
	return c.svc.AddApplicationReferenceDataSourceWithContext(ctx, input, opts...)
}

// CreateApplicationRequest is a passthrough to the underlying CreateApplicationRequest.
// It will increment the count of requests made to CreateApplication.
func (c *KinesisAnalytics) CreateApplicationRequest(input *kinesisanalytics.CreateApplicationInput) (req *request.Request, output *kinesisanalytics.CreateApplicationOutput) {
	c.inc("CreateApplication")
	return c.svc.CreateApplicationRequest(input)
}

// CreateApplication is a passthrough to the underlying CreateApplication method.
// It will increment the count of requests made to CreateApplication.
func (c *KinesisAnalytics) CreateApplication(input *kinesisanalytics.CreateApplicationInput) (*kinesisanalytics.CreateApplicationOutput, error) {
	c.inc("CreateApplication")
	return c.svc.CreateApplication(input)
}

// CreateApplicationWithContext is a passthrough to the underlying CreateApplicationWithContext method.
// It will increment the count of requests made to CreateApplication.
func (c *KinesisAnalytics) CreateApplicationWithContext(ctx aws.Context, input *kinesisanalytics.CreateApplicationInput, opts ...request.Option) (*kinesisanalytics.CreateApplicationOutput, error) {
	c.inc("CreateApplication")
	return c.svc.CreateApplicationWithContext(ctx, input, opts...)
}

// DeleteApplicationRequest is a passthrough to the underlying DeleteApplicationRequest.
// It will increment the count of requests made to DeleteApplication.
func (c *KinesisAnalytics) DeleteApplicationRequest(input *kinesisanalytics.DeleteApplicationInput) (req *request.Request, output *kinesisanalytics.DeleteApplicationOutput) {
	c.inc("DeleteApplication")
	return c.svc.DeleteApplicationRequest(input)
}

// DeleteApplication is a passthrough to the underlying DeleteApplication method.
// It will increment the count of requests made to DeleteApplication.
func (c *KinesisAnalytics) DeleteApplication(input *kinesisanalytics.DeleteApplicationInput) (*kinesisanalytics.DeleteApplicationOutput, error) {
	c.inc("DeleteApplication")
	return c.svc.DeleteApplication(input)
}

// DeleteApplicationWithContext is a passthrough to the underlying DeleteApplicationWithContext method.
// It will increment the count of requests made to DeleteApplication.
func (c *KinesisAnalytics) DeleteApplicationWithContext(ctx aws.Context, input *kinesisanalytics.DeleteApplicationInput, opts ...request.Option) (*kinesisanalytics.DeleteApplicationOutput, error) {
	c.inc("DeleteApplication")
	return c.svc.DeleteApplicationWithContext(ctx, input, opts...)
}

// DeleteApplicationCloudWatchLoggingOptionRequest is a passthrough to the underlying DeleteApplicationCloudWatchLoggingOptionRequest.
// It will increment the count of requests made to DeleteApplicationCloudWatchLoggingOption.
func (c *KinesisAnalytics) DeleteApplicationCloudWatchLoggingOptionRequest(input *kinesisanalytics.DeleteApplicationCloudWatchLoggingOptionInput) (req *request.Request, output *kinesisanalytics.DeleteApplicationCloudWatchLoggingOptionOutput) {
	c.inc("DeleteApplicationCloudWatchLoggingOption")
	return c.svc.DeleteApplicationCloudWatchLoggingOptionRequest(input)
}

// DeleteApplicationCloudWatchLoggingOption is a passthrough to the underlying DeleteApplicationCloudWatchLoggingOption method.
// It will increment the count of requests made to DeleteApplicationCloudWatchLoggingOption.
func (c *KinesisAnalytics) DeleteApplicationCloudWatchLoggingOption(input *kinesisanalytics.DeleteApplicationCloudWatchLoggingOptionInput) (*kinesisanalytics.DeleteApplicationCloudWatchLoggingOptionOutput, error) {
	c.inc("DeleteApplicationCloudWatchLoggingOption")
	return c.svc.DeleteApplicationCloudWatchLoggingOption(input)
}

// DeleteApplicationCloudWatchLoggingOptionWithContext is a passthrough to the underlying DeleteApplicationCloudWatchLoggingOptionWithContext method.
// It will increment the count of requests made to DeleteApplicationCloudWatchLoggingOption.
func (c *KinesisAnalytics) DeleteApplicationCloudWatchLoggingOptionWithContext(ctx aws.Context, input *kinesisanalytics.DeleteApplicationCloudWatchLoggingOptionInput, opts ...request.Option) (*kinesisanalytics.DeleteApplicationCloudWatchLoggingOptionOutput, error) {
	c.inc("DeleteApplicationCloudWatchLoggingOption")
	return c.svc.DeleteApplicationCloudWatchLoggingOptionWithContext(ctx, input, opts...)
}

// DeleteApplicationInputProcessingConfigurationRequest is a passthrough to the underlying DeleteApplicationInputProcessingConfigurationRequest.
// It will increment the count of requests made to DeleteApplicationInputProcessingConfiguration.
func (c *KinesisAnalytics) DeleteApplicationInputProcessingConfigurationRequest(input *kinesisanalytics.DeleteApplicationInputProcessingConfigurationInput) (req *request.Request, output *kinesisanalytics.DeleteApplicationInputProcessingConfigurationOutput) {
	c.inc("DeleteApplicationInputProcessingConfiguration")
	return c.svc.DeleteApplicationInputProcessingConfigurationRequest(input)
}

// DeleteApplicationInputProcessingConfiguration is a passthrough to the underlying DeleteApplicationInputProcessingConfiguration method.
// It will increment the count of requests made to DeleteApplicationInputProcessingConfiguration.
func (c *KinesisAnalytics) DeleteApplicationInputProcessingConfiguration(input *kinesisanalytics.DeleteApplicationInputProcessingConfigurationInput) (*kinesisanalytics.DeleteApplicationInputProcessingConfigurationOutput, error) {
	c.inc("DeleteApplicationInputProcessingConfiguration")
	return c.svc.DeleteApplicationInputProcessingConfiguration(input)
}

// DeleteApplicationInputProcessingConfigurationWithContext is a passthrough to the underlying DeleteApplicationInputProcessingConfigurationWithContext method.
// It will increment the count of requests made to DeleteApplicationInputProcessingConfiguration.
func (c *KinesisAnalytics) DeleteApplicationInputProcessingConfigurationWithContext(ctx aws.Context, input *kinesisanalytics.DeleteApplicationInputProcessingConfigurationInput, opts ...request.Option) (*kinesisanalytics.DeleteApplicationInputProcessingConfigurationOutput, error) {
	c.inc("DeleteApplicationInputProcessingConfiguration")
	return c.svc.DeleteApplicationInputProcessingConfigurationWithContext(ctx, input, opts...)
}

// DeleteApplicationOutputRequest is a passthrough to the underlying DeleteApplicationOutputRequest.
// It will increment the count of requests made to DeleteApplicationOutput.
func (c *KinesisAnalytics) DeleteApplicationOutputRequest(input *kinesisanalytics.DeleteApplicationOutputInput) (req *request.Request, output *kinesisanalytics.DeleteApplicationOutputOutput) {
	c.inc("DeleteApplicationOutput")
	return c.svc.DeleteApplicationOutputRequest(input)
}

// DeleteApplicationOutput is a passthrough to the underlying DeleteApplicationOutput method.
// It will increment the count of requests made to DeleteApplicationOutput.
func (c *KinesisAnalytics) DeleteApplicationOutput(input *kinesisanalytics.DeleteApplicationOutputInput) (*kinesisanalytics.DeleteApplicationOutputOutput, error) {
	c.inc("DeleteApplicationOutput")
	return c.svc.DeleteApplicationOutput(input)
}

// DeleteApplicationOutputWithContext is a passthrough to the underlying DeleteApplicationOutputWithContext method.
// It will increment the count of requests made to DeleteApplicationOutput.
func (c *KinesisAnalytics) DeleteApplicationOutputWithContext(ctx aws.Context, input *kinesisanalytics.DeleteApplicationOutputInput, opts ...request.Option) (*kinesisanalytics.DeleteApplicationOutputOutput, error) {
	c.inc("DeleteApplicationOutput")
	return c.svc.DeleteApplicationOutputWithContext(ctx, input, opts...)
}

// DeleteApplicationReferenceDataSourceRequest is a passthrough to the underlying DeleteApplicationReferenceDataSourceRequest.
// It will increment the count of requests made to DeleteApplicationReferenceDataSource.
func (c *KinesisAnalytics) DeleteApplicationReferenceDataSourceRequest(input *kinesisanalytics.DeleteApplicationReferenceDataSourceInput) (req *request.Request, output *kinesisanalytics.DeleteApplicationReferenceDataSourceOutput) {
	c.inc("DeleteApplicationReferenceDataSource")
	return c.svc.DeleteApplicationReferenceDataSourceRequest(input)
}

// DeleteApplicationReferenceDataSource is a passthrough to the underlying DeleteApplicationReferenceDataSource method.
// It will increment the count of requests made to DeleteApplicationReferenceDataSource.
func (c *KinesisAnalytics) DeleteApplicationReferenceDataSource(input *kinesisanalytics.DeleteApplicationReferenceDataSourceInput) (*kinesisanalytics.DeleteApplicationReferenceDataSourceOutput, error) {
	c.inc("DeleteApplicationReferenceDataSource")
	return c.svc.DeleteApplicationReferenceDataSource(input)
}

// DeleteApplicationReferenceDataSourceWithContext is a passthrough to the underlying DeleteApplicationReferenceDataSourceWithContext method.
// It will increment the count of requests made to DeleteApplicationReferenceDataSource.
func (c *KinesisAnalytics) DeleteApplicationReferenceDataSourceWithContext(ctx aws.Context, input *kinesisanalytics.DeleteApplicationReferenceDataSourceInput, opts ...request.Option) (*kinesisanalytics.DeleteApplicationReferenceDataSourceOutput, error) {
	c.inc("DeleteApplicationReferenceDataSource")
	return c.svc.DeleteApplicationReferenceDataSourceWithContext(ctx, input, opts...)
}

// DescribeApplicationRequest is a passthrough to the underlying DescribeApplicationRequest.
// It will increment the count of requests made to DescribeApplication.
func (c *KinesisAnalytics) DescribeApplicationRequest(input *kinesisanalytics.DescribeApplicationInput) (req *request.Request, output *kinesisanalytics.DescribeApplicationOutput) {
	c.inc("DescribeApplication")
	return c.svc.DescribeApplicationRequest(input)
}

// DescribeApplication is a passthrough to the underlying DescribeApplication method.
// It will increment the count of requests made to DescribeApplication.
func (c *KinesisAnalytics) DescribeApplication(input *kinesisanalytics.DescribeApplicationInput) (*kinesisanalytics.DescribeApplicationOutput, error) {
	c.inc("DescribeApplication")
	return c.svc.DescribeApplication(input)
}

// DescribeApplicationWithContext is a passthrough to the underlying DescribeApplicationWithContext method.
// It will increment the count of requests made to DescribeApplication.
func (c *KinesisAnalytics) DescribeApplicationWithContext(ctx aws.Context, input *kinesisanalytics.DescribeApplicationInput, opts ...request.Option) (*kinesisanalytics.DescribeApplicationOutput, error) {
	c.inc("DescribeApplication")
	return c.svc.DescribeApplicationWithContext(ctx, input, opts...)
}

// DiscoverInputSchemaRequest is a passthrough to the underlying DiscoverInputSchemaRequest.
// It will increment the count of requests made to DiscoverInputSchema.
func (c *KinesisAnalytics) DiscoverInputSchemaRequest(input *kinesisanalytics.DiscoverInputSchemaInput) (req *request.Request, output *kinesisanalytics.DiscoverInputSchemaOutput) {
	c.inc("DiscoverInputSchema")
	return c.svc.DiscoverInputSchemaRequest(input)
}

// DiscoverInputSchema is a passthrough to the underlying DiscoverInputSchema method.
// It will increment the count of requests made to DiscoverInputSchema.
func (c *KinesisAnalytics) DiscoverInputSchema(input *kinesisanalytics.DiscoverInputSchemaInput) (*kinesisanalytics.DiscoverInputSchemaOutput, error) {
	c.inc("DiscoverInputSchema")
	return c.svc.DiscoverInputSchema(input)
}

// DiscoverInputSchemaWithContext is a passthrough to the underlying DiscoverInputSchemaWithContext method.
// It will increment the count of requests made to DiscoverInputSchema.
func (c *KinesisAnalytics) DiscoverInputSchemaWithContext(ctx aws.Context, input *kinesisanalytics.DiscoverInputSchemaInput, opts ...request.Option) (*kinesisanalytics.DiscoverInputSchemaOutput, error) {
	c.inc("DiscoverInputSchema")
	return c.svc.DiscoverInputSchemaWithContext(ctx, input, opts...)
}

// ListApplicationsRequest is a passthrough to the underlying ListApplicationsRequest.
// It will increment the count of requests made to ListApplications.
func (c *KinesisAnalytics) ListApplicationsRequest(input *kinesisanalytics.ListApplicationsInput) (req *request.Request, output *kinesisanalytics.ListApplicationsOutput) {
	c.inc("ListApplications")
	return c.svc.ListApplicationsRequest(input)
}

// ListApplications is a passthrough to the underlying ListApplications method.
// It will increment the count of requests made to ListApplications.
func (c *KinesisAnalytics) ListApplications(input *kinesisanalytics.ListApplicationsInput) (*kinesisanalytics.ListApplicationsOutput, error) {
	c.inc("ListApplications")
	return c.svc.ListApplications(input)
}

// ListApplicationsWithContext is a passthrough to the underlying ListApplicationsWithContext method.
// It will increment the count of requests made to ListApplications.
func (c *KinesisAnalytics) ListApplicationsWithContext(ctx aws.Context, input *kinesisanalytics.ListApplicationsInput, opts ...request.Option) (*kinesisanalytics.ListApplicationsOutput, error) {
	c.inc("ListApplications")
	return c.svc.ListApplicationsWithContext(ctx, input, opts...)
}

// StartApplicationRequest is a passthrough to the underlying StartApplicationRequest.
// It will increment the count of requests made to StartApplication.
func (c *KinesisAnalytics) StartApplicationRequest(input *kinesisanalytics.StartApplicationInput) (req *request.Request, output *kinesisanalytics.StartApplicationOutput) {
	c.inc("StartApplication")
	return c.svc.StartApplicationRequest(input)
}

// StartApplication is a passthrough to the underlying StartApplication method.
// It will increment the count of requests made to StartApplication.
func (c *KinesisAnalytics) StartApplication(input *kinesisanalytics.StartApplicationInput) (*kinesisanalytics.StartApplicationOutput, error) {
	c.inc("StartApplication")
	return c.svc.StartApplication(input)
}

// StartApplicationWithContext is a passthrough to the underlying StartApplicationWithContext method.
// It will increment the count of requests made to StartApplication.
func (c *KinesisAnalytics) StartApplicationWithContext(ctx aws.Context, input *kinesisanalytics.StartApplicationInput, opts ...request.Option) (*kinesisanalytics.StartApplicationOutput, error) {
	c.inc("StartApplication")
	return c.svc.StartApplicationWithContext(ctx, input, opts...)
}

// StopApplicationRequest is a passthrough to the underlying StopApplicationRequest.
// It will increment the count of requests made to StopApplication.
func (c *KinesisAnalytics) StopApplicationRequest(input *kinesisanalytics.StopApplicationInput) (req *request.Request, output *kinesisanalytics.StopApplicationOutput) {
	c.inc("StopApplication")
	return c.svc.StopApplicationRequest(input)
}

// StopApplication is a passthrough to the underlying StopApplication method.
// It will increment the count of requests made to StopApplication.
func (c *KinesisAnalytics) StopApplication(input *kinesisanalytics.StopApplicationInput) (*kinesisanalytics.StopApplicationOutput, error) {
	c.inc("StopApplication")
	return c.svc.StopApplication(input)
}

// StopApplicationWithContext is a passthrough to the underlying StopApplicationWithContext method.
// It will increment the count of requests made to StopApplication.
func (c *KinesisAnalytics) StopApplicationWithContext(ctx aws.Context, input *kinesisanalytics.StopApplicationInput, opts ...request.Option) (*kinesisanalytics.StopApplicationOutput, error) {
	c.inc("StopApplication")
	return c.svc.StopApplicationWithContext(ctx, input, opts...)
}

// UpdateApplicationRequest is a passthrough to the underlying UpdateApplicationRequest.
// It will increment the count of requests made to UpdateApplication.
func (c *KinesisAnalytics) UpdateApplicationRequest(input *kinesisanalytics.UpdateApplicationInput) (req *request.Request, output *kinesisanalytics.UpdateApplicationOutput) {
	c.inc("UpdateApplication")
	return c.svc.UpdateApplicationRequest(input)
}

// UpdateApplication is a passthrough to the underlying UpdateApplication method.
// It will increment the count of requests made to UpdateApplication.
func (c *KinesisAnalytics) UpdateApplication(input *kinesisanalytics.UpdateApplicationInput) (*kinesisanalytics.UpdateApplicationOutput, error) {
	c.inc("UpdateApplication")
	return c.svc.UpdateApplication(input)
}

// UpdateApplicationWithContext is a passthrough to the underlying UpdateApplicationWithContext method.
// It will increment the count of requests made to UpdateApplication.
func (c *KinesisAnalytics) UpdateApplicationWithContext(ctx aws.Context, input *kinesisanalytics.UpdateApplicationInput, opts ...request.Option) (*kinesisanalytics.UpdateApplicationOutput, error) {
	c.inc("UpdateApplication")
	return c.svc.UpdateApplicationWithContext(ctx, input, opts...)
}
