// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package simpledbcounter

import (
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/simpledb"
)

// BatchDeleteAttributesRequest is a passthrough to the underlying BatchDeleteAttributesRequest.
// It will increment the count of requests made to BatchDeleteAttributes.
func (c *SimpleDB) BatchDeleteAttributesRequest(input *simpledb.BatchDeleteAttributesInput) (req *request.Request, output *simpledb.BatchDeleteAttributesOutput) {
	c.inc("BatchDeleteAttributes")
	return c.svc.BatchDeleteAttributesRequest(input)
}

// BatchDeleteAttributes is a passthrough to the underlying BatchDeleteAttributes method.
// It will increment the count of requests made to BatchDeleteAttributes.
func (c *SimpleDB) BatchDeleteAttributes(input *simpledb.BatchDeleteAttributesInput) (*simpledb.BatchDeleteAttributesOutput, error) {
	c.inc("BatchDeleteAttributes")
	return c.svc.BatchDeleteAttributes(input)
}

// BatchDeleteAttributesWithContext is a passthrough to the underlying BatchDeleteAttributesWithContext method.
// It will increment the count of requests made to BatchDeleteAttributes.
func (c *SimpleDB) BatchDeleteAttributesWithContext(ctx aws.Context, input *simpledb.BatchDeleteAttributesInput, opts ...request.Option) (*simpledb.BatchDeleteAttributesOutput, error) {
	c.inc("BatchDeleteAttributes")
	return c.svc.BatchDeleteAttributesWithContext(ctx, input, opts...)
}

// BatchPutAttributesRequest is a passthrough to the underlying BatchPutAttributesRequest.
// It will increment the count of requests made to BatchPutAttributes.
func (c *SimpleDB) BatchPutAttributesRequest(input *simpledb.BatchPutAttributesInput) (req *request.Request, output *simpledb.BatchPutAttributesOutput) {
	c.inc("BatchPutAttributes")
	return c.svc.BatchPutAttributesRequest(input)
}

// BatchPutAttributes is a passthrough to the underlying BatchPutAttributes method.
// It will increment the count of requests made to BatchPutAttributes.
func (c *SimpleDB) BatchPutAttributes(input *simpledb.BatchPutAttributesInput) (*simpledb.BatchPutAttributesOutput, error) {
	c.inc("BatchPutAttributes")
	return c.svc.BatchPutAttributes(input)
}

// BatchPutAttributesWithContext is a passthrough to the underlying BatchPutAttributesWithContext method.
// It will increment the count of requests made to BatchPutAttributes.
func (c *SimpleDB) BatchPutAttributesWithContext(ctx aws.Context, input *simpledb.BatchPutAttributesInput, opts ...request.Option) (*simpledb.BatchPutAttributesOutput, error) {
	c.inc("BatchPutAttributes")
	return c.svc.BatchPutAttributesWithContext(ctx, input, opts...)
}

// CreateDomainRequest is a passthrough to the underlying CreateDomainRequest.
// It will increment the count of requests made to CreateDomain.
func (c *SimpleDB) CreateDomainRequest(input *simpledb.CreateDomainInput) (req *request.Request, output *simpledb.CreateDomainOutput) {
	c.inc("CreateDomain")
	return c.svc.CreateDomainRequest(input)
}

// CreateDomain is a passthrough to the underlying CreateDomain method.
// It will increment the count of requests made to CreateDomain.
func (c *SimpleDB) CreateDomain(input *simpledb.CreateDomainInput) (*simpledb.CreateDomainOutput, error) {
	c.inc("CreateDomain")
	return c.svc.CreateDomain(input)
}

// CreateDomainWithContext is a passthrough to the underlying CreateDomainWithContext method.
// It will increment the count of requests made to CreateDomain.
func (c *SimpleDB) CreateDomainWithContext(ctx aws.Context, input *simpledb.CreateDomainInput, opts ...request.Option) (*simpledb.CreateDomainOutput, error) {
	c.inc("CreateDomain")
	return c.svc.CreateDomainWithContext(ctx, input, opts...)
}

// DeleteAttributesRequest is a passthrough to the underlying DeleteAttributesRequest.
// It will increment the count of requests made to DeleteAttributes.
func (c *SimpleDB) DeleteAttributesRequest(input *simpledb.DeleteAttributesInput) (req *request.Request, output *simpledb.DeleteAttributesOutput) {
	c.inc("DeleteAttributes")
	return c.svc.DeleteAttributesRequest(input)
}

// DeleteAttributes is a passthrough to the underlying DeleteAttributes method.
// It will increment the count of requests made to DeleteAttributes.
func (c *SimpleDB) DeleteAttributes(input *simpledb.DeleteAttributesInput) (*simpledb.DeleteAttributesOutput, error) {
	c.inc("DeleteAttributes")
	return c.svc.DeleteAttributes(input)
}

// DeleteAttributesWithContext is a passthrough to the underlying DeleteAttributesWithContext method.
// It will increment the count of requests made to DeleteAttributes.
func (c *SimpleDB) DeleteAttributesWithContext(ctx aws.Context, input *simpledb.DeleteAttributesInput, opts ...request.Option) (*simpledb.DeleteAttributesOutput, error) {
	c.inc("DeleteAttributes")
	return c.svc.DeleteAttributesWithContext(ctx, input, opts...)
}

// DeleteDomainRequest is a passthrough to the underlying DeleteDomainRequest.
// It will increment the count of requests made to DeleteDomain.
func (c *SimpleDB) DeleteDomainRequest(input *simpledb.DeleteDomainInput) (req *request.Request, output *simpledb.DeleteDomainOutput) {
	c.inc("DeleteDomain")
	return c.svc.DeleteDomainRequest(input)
}

// DeleteDomain is a passthrough to the underlying DeleteDomain method.
// It will increment the count of requests made to DeleteDomain.
func (c *SimpleDB) DeleteDomain(input *simpledb.DeleteDomainInput) (*simpledb.DeleteDomainOutput, error) {
	c.inc("DeleteDomain")
	return c.svc.DeleteDomain(input)
}

// DeleteDomainWithContext is a passthrough to the underlying DeleteDomainWithContext method.
// It will increment the count of requests made to DeleteDomain.
func (c *SimpleDB) DeleteDomainWithContext(ctx aws.Context, input *simpledb.DeleteDomainInput, opts ...request.Option) (*simpledb.DeleteDomainOutput, error) {
	c.inc("DeleteDomain")
	return c.svc.DeleteDomainWithContext(ctx, input, opts...)
}

// DomainMetadataRequest is a passthrough to the underlying DomainMetadataRequest.
// It will increment the count of requests made to DomainMetadata.
func (c *SimpleDB) DomainMetadataRequest(input *simpledb.DomainMetadataInput) (req *request.Request, output *simpledb.DomainMetadataOutput) {
	c.inc("DomainMetadata")
	return c.svc.DomainMetadataRequest(input)
}

// DomainMetadata is a passthrough to the underlying DomainMetadata method.
// It will increment the count of requests made to DomainMetadata.
func (c *SimpleDB) DomainMetadata(input *simpledb.DomainMetadataInput) (*simpledb.DomainMetadataOutput, error) {
	c.inc("DomainMetadata")
	return c.svc.DomainMetadata(input)
}

// DomainMetadataWithContext is a passthrough to the underlying DomainMetadataWithContext method.
// It will increment the count of requests made to DomainMetadata.
func (c *SimpleDB) DomainMetadataWithContext(ctx aws.Context, input *simpledb.DomainMetadataInput, opts ...request.Option) (*simpledb.DomainMetadataOutput, error) {
	c.inc("DomainMetadata")
	return c.svc.DomainMetadataWithContext(ctx, input, opts...)
}

// GetAttributesRequest is a passthrough to the underlying GetAttributesRequest.
// It will increment the count of requests made to GetAttributes.
func (c *SimpleDB) GetAttributesRequest(input *simpledb.GetAttributesInput) (req *request.Request, output *simpledb.GetAttributesOutput) {
	c.inc("GetAttributes")
	return c.svc.GetAttributesRequest(input)
}

// GetAttributes is a passthrough to the underlying GetAttributes method.
// It will increment the count of requests made to GetAttributes.
func (c *SimpleDB) GetAttributes(input *simpledb.GetAttributesInput) (*simpledb.GetAttributesOutput, error) {
	c.inc("GetAttributes")
	return c.svc.GetAttributes(input)
}

// GetAttributesWithContext is a passthrough to the underlying GetAttributesWithContext method.
// It will increment the count of requests made to GetAttributes.
func (c *SimpleDB) GetAttributesWithContext(ctx aws.Context, input *simpledb.GetAttributesInput, opts ...request.Option) (*simpledb.GetAttributesOutput, error) {
	c.inc("GetAttributes")
	return c.svc.GetAttributesWithContext(ctx, input, opts...)
}

// ListDomainsRequest is a passthrough to the underlying ListDomainsRequest.
// It will increment the count of requests made to ListDomains.
func (c *SimpleDB) ListDomainsRequest(input *simpledb.ListDomainsInput) (req *request.Request, output *simpledb.ListDomainsOutput) {
	c.inc("ListDomains")
	return c.svc.ListDomainsRequest(input)
}

// ListDomains is a passthrough to the underlying ListDomains method.
// It will increment the count of requests made to ListDomains.
func (c *SimpleDB) ListDomains(input *simpledb.ListDomainsInput) (*simpledb.ListDomainsOutput, error) {
	c.inc("ListDomains")
	return c.svc.ListDomains(input)
}

// ListDomainsWithContext is a passthrough to the underlying ListDomainsWithContext method.
// It will increment the count of requests made to ListDomains.
func (c *SimpleDB) ListDomainsWithContext(ctx aws.Context, input *simpledb.ListDomainsInput, opts ...request.Option) (*simpledb.ListDomainsOutput, error) {
	c.inc("ListDomains")
	return c.svc.ListDomainsWithContext(ctx, input, opts...)
}

// ListDomainsPages is a passthrough to the underlying ListDomainsPages method.
// It will increment the count of requests made to ListDomains on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListDomainsPagesWithContext to avoid this.
func (c *SimpleDB) ListDomainsPages(input *simpledb.ListDomainsInput, fn func(*simpledb.ListDomainsOutput, bool) bool) error {
	wrappedFn := func(page *simpledb.ListDomainsOutput, lastPage bool) bool {
		c.inc("ListDomains")
		return fn(page, lastPage)
	}
	return c.svc.ListDomainsPages(input, wrappedFn)
}

// ListDomainsPagesWithContext is a passthrough to the underlying ListDomainsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListDomains when applied to the request.
func (c *SimpleDB) ListDomainsPagesWithContext(ctx aws.Context, input *simpledb.ListDomainsInput, fn func(*simpledb.ListDomainsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListDomains"))
	return c.svc.ListDomainsPagesWithContext(ctx, input, fn, opts...)
}

// PutAttributesRequest is a passthrough to the underlying PutAttributesRequest.
// It will increment the count of requests made to PutAttributes.
func (c *SimpleDB) PutAttributesRequest(input *simpledb.PutAttributesInput) (req *request.Request, output *simpledb.PutAttributesOutput) {
	c.inc("PutAttributes")
	return c.svc.PutAttributesRequest(input)
}

// PutAttributes is a passthrough to the underlying PutAttributes method.
// It will increment the count of requests made to PutAttributes.
func (c *SimpleDB) PutAttributes(input *simpledb.PutAttributesInput) (*simpledb.PutAttributesOutput, error) {
	c.inc("PutAttributes")
	return c.svc.PutAttributes(input)
}

// PutAttributesWithContext is a passthrough to the underlying PutAttributesWithContext method.
// It will increment the count of requests made to PutAttributes.
func (c *SimpleDB) PutAttributesWithContext(ctx aws.Context, input *simpledb.PutAttributesInput, opts ...request.Option) (*simpledb.PutAttributesOutput, error) {
	c.inc("PutAttributes")
	return c.svc.PutAttributesWithContext(ctx, input, opts...)
}

// SelectRequest is a passthrough to the underlying SelectRequest.
// It will increment the count of requests made to Select.
func (c *SimpleDB) SelectRequest(input *simpledb.SelectInput) (req *request.Request, output *simpledb.SelectOutput) {
	c.inc("Select")
	return c.svc.SelectRequest(input)
}

// Select is a passthrough to the underlying Select method.
// It will increment the count of requests made to Select.
func (c *SimpleDB) Select(input *simpledb.SelectInput) (*simpledb.SelectOutput, error) {
	c.inc("Select")
	return c.svc.Select(input)
}

// SelectWithContext is a passthrough to the underlying SelectWithContext method.
// It will increment the count of requests made to Select.
func (c *SimpleDB) SelectWithContext(ctx aws.Context, input *simpledb.SelectInput, opts ...request.Option) (*simpledb.SelectOutput, error) {
	c.inc("Select")
	return c.svc.SelectWithContext(ctx, input, opts...)
}

// SelectPages is a passthrough to the underlying SelectPages method.
// It will increment the count of requests made to Select on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use SelectPagesWithContext to avoid this.
func (c *SimpleDB) SelectPages(input *simpledb.SelectInput, fn func(*simpledb.SelectOutput, bool) bool) error {
	wrappedFn := func(page *simpledb.SelectOutput, lastPage bool) bool {
		c.inc("Select")
		return fn(page, lastPage)
	}
	return c.svc.SelectPages(input, wrappedFn)
}

// SelectPagesWithContext is a passthrough to the underlying SelectPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to Select when applied to the request.
func (c *SimpleDB) SelectPagesWithContext(ctx aws.Context, input *simpledb.SelectInput, fn func(*simpledb.SelectOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("Select"))
	return c.svc.SelectPagesWithContext(ctx, input, fn, opts...)
}
