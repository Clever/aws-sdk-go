// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package batchcounter

import (
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/batch"
)

// CancelJobRequest is a passthrough to the underlying CancelJobRequest.
// It will increment the count of requests made to CancelJob.
func (c *Batch) CancelJobRequest(input *batch.CancelJobInput) (req *request.Request, output *batch.CancelJobOutput) {
	c.inc("CancelJob")
	return c.svc.CancelJobRequest(input)
}

// CancelJob is a passthrough to the underlying CancelJob method.
// It will increment the count of requests made to CancelJob.
func (c *Batch) CancelJob(input *batch.CancelJobInput) (*batch.CancelJobOutput, error) {
	c.inc("CancelJob")
	return c.svc.CancelJob(input)
}

// CancelJobWithContext is a passthrough to the underlying CancelJobWithContext method.
// It will increment the count of requests made to CancelJob.
func (c *Batch) CancelJobWithContext(ctx aws.Context, input *batch.CancelJobInput, opts ...request.Option) (*batch.CancelJobOutput, error) {
	c.inc("CancelJob")
	return c.svc.CancelJobWithContext(ctx, input, opts...)
}

// CreateComputeEnvironmentRequest is a passthrough to the underlying CreateComputeEnvironmentRequest.
// It will increment the count of requests made to CreateComputeEnvironment.
func (c *Batch) CreateComputeEnvironmentRequest(input *batch.CreateComputeEnvironmentInput) (req *request.Request, output *batch.CreateComputeEnvironmentOutput) {
	c.inc("CreateComputeEnvironment")
	return c.svc.CreateComputeEnvironmentRequest(input)
}

// CreateComputeEnvironment is a passthrough to the underlying CreateComputeEnvironment method.
// It will increment the count of requests made to CreateComputeEnvironment.
func (c *Batch) CreateComputeEnvironment(input *batch.CreateComputeEnvironmentInput) (*batch.CreateComputeEnvironmentOutput, error) {
	c.inc("CreateComputeEnvironment")
	return c.svc.CreateComputeEnvironment(input)
}

// CreateComputeEnvironmentWithContext is a passthrough to the underlying CreateComputeEnvironmentWithContext method.
// It will increment the count of requests made to CreateComputeEnvironment.
func (c *Batch) CreateComputeEnvironmentWithContext(ctx aws.Context, input *batch.CreateComputeEnvironmentInput, opts ...request.Option) (*batch.CreateComputeEnvironmentOutput, error) {
	c.inc("CreateComputeEnvironment")
	return c.svc.CreateComputeEnvironmentWithContext(ctx, input, opts...)
}

// CreateJobQueueRequest is a passthrough to the underlying CreateJobQueueRequest.
// It will increment the count of requests made to CreateJobQueue.
func (c *Batch) CreateJobQueueRequest(input *batch.CreateJobQueueInput) (req *request.Request, output *batch.CreateJobQueueOutput) {
	c.inc("CreateJobQueue")
	return c.svc.CreateJobQueueRequest(input)
}

// CreateJobQueue is a passthrough to the underlying CreateJobQueue method.
// It will increment the count of requests made to CreateJobQueue.
func (c *Batch) CreateJobQueue(input *batch.CreateJobQueueInput) (*batch.CreateJobQueueOutput, error) {
	c.inc("CreateJobQueue")
	return c.svc.CreateJobQueue(input)
}

// CreateJobQueueWithContext is a passthrough to the underlying CreateJobQueueWithContext method.
// It will increment the count of requests made to CreateJobQueue.
func (c *Batch) CreateJobQueueWithContext(ctx aws.Context, input *batch.CreateJobQueueInput, opts ...request.Option) (*batch.CreateJobQueueOutput, error) {
	c.inc("CreateJobQueue")
	return c.svc.CreateJobQueueWithContext(ctx, input, opts...)
}

// DeleteComputeEnvironmentRequest is a passthrough to the underlying DeleteComputeEnvironmentRequest.
// It will increment the count of requests made to DeleteComputeEnvironment.
func (c *Batch) DeleteComputeEnvironmentRequest(input *batch.DeleteComputeEnvironmentInput) (req *request.Request, output *batch.DeleteComputeEnvironmentOutput) {
	c.inc("DeleteComputeEnvironment")
	return c.svc.DeleteComputeEnvironmentRequest(input)
}

// DeleteComputeEnvironment is a passthrough to the underlying DeleteComputeEnvironment method.
// It will increment the count of requests made to DeleteComputeEnvironment.
func (c *Batch) DeleteComputeEnvironment(input *batch.DeleteComputeEnvironmentInput) (*batch.DeleteComputeEnvironmentOutput, error) {
	c.inc("DeleteComputeEnvironment")
	return c.svc.DeleteComputeEnvironment(input)
}

// DeleteComputeEnvironmentWithContext is a passthrough to the underlying DeleteComputeEnvironmentWithContext method.
// It will increment the count of requests made to DeleteComputeEnvironment.
func (c *Batch) DeleteComputeEnvironmentWithContext(ctx aws.Context, input *batch.DeleteComputeEnvironmentInput, opts ...request.Option) (*batch.DeleteComputeEnvironmentOutput, error) {
	c.inc("DeleteComputeEnvironment")
	return c.svc.DeleteComputeEnvironmentWithContext(ctx, input, opts...)
}

// DeleteJobQueueRequest is a passthrough to the underlying DeleteJobQueueRequest.
// It will increment the count of requests made to DeleteJobQueue.
func (c *Batch) DeleteJobQueueRequest(input *batch.DeleteJobQueueInput) (req *request.Request, output *batch.DeleteJobQueueOutput) {
	c.inc("DeleteJobQueue")
	return c.svc.DeleteJobQueueRequest(input)
}

// DeleteJobQueue is a passthrough to the underlying DeleteJobQueue method.
// It will increment the count of requests made to DeleteJobQueue.
func (c *Batch) DeleteJobQueue(input *batch.DeleteJobQueueInput) (*batch.DeleteJobQueueOutput, error) {
	c.inc("DeleteJobQueue")
	return c.svc.DeleteJobQueue(input)
}

// DeleteJobQueueWithContext is a passthrough to the underlying DeleteJobQueueWithContext method.
// It will increment the count of requests made to DeleteJobQueue.
func (c *Batch) DeleteJobQueueWithContext(ctx aws.Context, input *batch.DeleteJobQueueInput, opts ...request.Option) (*batch.DeleteJobQueueOutput, error) {
	c.inc("DeleteJobQueue")
	return c.svc.DeleteJobQueueWithContext(ctx, input, opts...)
}

// DeregisterJobDefinitionRequest is a passthrough to the underlying DeregisterJobDefinitionRequest.
// It will increment the count of requests made to DeregisterJobDefinition.
func (c *Batch) DeregisterJobDefinitionRequest(input *batch.DeregisterJobDefinitionInput) (req *request.Request, output *batch.DeregisterJobDefinitionOutput) {
	c.inc("DeregisterJobDefinition")
	return c.svc.DeregisterJobDefinitionRequest(input)
}

// DeregisterJobDefinition is a passthrough to the underlying DeregisterJobDefinition method.
// It will increment the count of requests made to DeregisterJobDefinition.
func (c *Batch) DeregisterJobDefinition(input *batch.DeregisterJobDefinitionInput) (*batch.DeregisterJobDefinitionOutput, error) {
	c.inc("DeregisterJobDefinition")
	return c.svc.DeregisterJobDefinition(input)
}

// DeregisterJobDefinitionWithContext is a passthrough to the underlying DeregisterJobDefinitionWithContext method.
// It will increment the count of requests made to DeregisterJobDefinition.
func (c *Batch) DeregisterJobDefinitionWithContext(ctx aws.Context, input *batch.DeregisterJobDefinitionInput, opts ...request.Option) (*batch.DeregisterJobDefinitionOutput, error) {
	c.inc("DeregisterJobDefinition")
	return c.svc.DeregisterJobDefinitionWithContext(ctx, input, opts...)
}

// DescribeComputeEnvironmentsRequest is a passthrough to the underlying DescribeComputeEnvironmentsRequest.
// It will increment the count of requests made to DescribeComputeEnvironments.
func (c *Batch) DescribeComputeEnvironmentsRequest(input *batch.DescribeComputeEnvironmentsInput) (req *request.Request, output *batch.DescribeComputeEnvironmentsOutput) {
	c.inc("DescribeComputeEnvironments")
	return c.svc.DescribeComputeEnvironmentsRequest(input)
}

// DescribeComputeEnvironments is a passthrough to the underlying DescribeComputeEnvironments method.
// It will increment the count of requests made to DescribeComputeEnvironments.
func (c *Batch) DescribeComputeEnvironments(input *batch.DescribeComputeEnvironmentsInput) (*batch.DescribeComputeEnvironmentsOutput, error) {
	c.inc("DescribeComputeEnvironments")
	return c.svc.DescribeComputeEnvironments(input)
}

// DescribeComputeEnvironmentsWithContext is a passthrough to the underlying DescribeComputeEnvironmentsWithContext method.
// It will increment the count of requests made to DescribeComputeEnvironments.
func (c *Batch) DescribeComputeEnvironmentsWithContext(ctx aws.Context, input *batch.DescribeComputeEnvironmentsInput, opts ...request.Option) (*batch.DescribeComputeEnvironmentsOutput, error) {
	c.inc("DescribeComputeEnvironments")
	return c.svc.DescribeComputeEnvironmentsWithContext(ctx, input, opts...)
}

// DescribeJobDefinitionsRequest is a passthrough to the underlying DescribeJobDefinitionsRequest.
// It will increment the count of requests made to DescribeJobDefinitions.
func (c *Batch) DescribeJobDefinitionsRequest(input *batch.DescribeJobDefinitionsInput) (req *request.Request, output *batch.DescribeJobDefinitionsOutput) {
	c.inc("DescribeJobDefinitions")
	return c.svc.DescribeJobDefinitionsRequest(input)
}

// DescribeJobDefinitions is a passthrough to the underlying DescribeJobDefinitions method.
// It will increment the count of requests made to DescribeJobDefinitions.
func (c *Batch) DescribeJobDefinitions(input *batch.DescribeJobDefinitionsInput) (*batch.DescribeJobDefinitionsOutput, error) {
	c.inc("DescribeJobDefinitions")
	return c.svc.DescribeJobDefinitions(input)
}

// DescribeJobDefinitionsWithContext is a passthrough to the underlying DescribeJobDefinitionsWithContext method.
// It will increment the count of requests made to DescribeJobDefinitions.
func (c *Batch) DescribeJobDefinitionsWithContext(ctx aws.Context, input *batch.DescribeJobDefinitionsInput, opts ...request.Option) (*batch.DescribeJobDefinitionsOutput, error) {
	c.inc("DescribeJobDefinitions")
	return c.svc.DescribeJobDefinitionsWithContext(ctx, input, opts...)
}

// DescribeJobQueuesRequest is a passthrough to the underlying DescribeJobQueuesRequest.
// It will increment the count of requests made to DescribeJobQueues.
func (c *Batch) DescribeJobQueuesRequest(input *batch.DescribeJobQueuesInput) (req *request.Request, output *batch.DescribeJobQueuesOutput) {
	c.inc("DescribeJobQueues")
	return c.svc.DescribeJobQueuesRequest(input)
}

// DescribeJobQueues is a passthrough to the underlying DescribeJobQueues method.
// It will increment the count of requests made to DescribeJobQueues.
func (c *Batch) DescribeJobQueues(input *batch.DescribeJobQueuesInput) (*batch.DescribeJobQueuesOutput, error) {
	c.inc("DescribeJobQueues")
	return c.svc.DescribeJobQueues(input)
}

// DescribeJobQueuesWithContext is a passthrough to the underlying DescribeJobQueuesWithContext method.
// It will increment the count of requests made to DescribeJobQueues.
func (c *Batch) DescribeJobQueuesWithContext(ctx aws.Context, input *batch.DescribeJobQueuesInput, opts ...request.Option) (*batch.DescribeJobQueuesOutput, error) {
	c.inc("DescribeJobQueues")
	return c.svc.DescribeJobQueuesWithContext(ctx, input, opts...)
}

// DescribeJobsRequest is a passthrough to the underlying DescribeJobsRequest.
// It will increment the count of requests made to DescribeJobs.
func (c *Batch) DescribeJobsRequest(input *batch.DescribeJobsInput) (req *request.Request, output *batch.DescribeJobsOutput) {
	c.inc("DescribeJobs")
	return c.svc.DescribeJobsRequest(input)
}

// DescribeJobs is a passthrough to the underlying DescribeJobs method.
// It will increment the count of requests made to DescribeJobs.
func (c *Batch) DescribeJobs(input *batch.DescribeJobsInput) (*batch.DescribeJobsOutput, error) {
	c.inc("DescribeJobs")
	return c.svc.DescribeJobs(input)
}

// DescribeJobsWithContext is a passthrough to the underlying DescribeJobsWithContext method.
// It will increment the count of requests made to DescribeJobs.
func (c *Batch) DescribeJobsWithContext(ctx aws.Context, input *batch.DescribeJobsInput, opts ...request.Option) (*batch.DescribeJobsOutput, error) {
	c.inc("DescribeJobs")
	return c.svc.DescribeJobsWithContext(ctx, input, opts...)
}

// ListJobsRequest is a passthrough to the underlying ListJobsRequest.
// It will increment the count of requests made to ListJobs.
func (c *Batch) ListJobsRequest(input *batch.ListJobsInput) (req *request.Request, output *batch.ListJobsOutput) {
	c.inc("ListJobs")
	return c.svc.ListJobsRequest(input)
}

// ListJobs is a passthrough to the underlying ListJobs method.
// It will increment the count of requests made to ListJobs.
func (c *Batch) ListJobs(input *batch.ListJobsInput) (*batch.ListJobsOutput, error) {
	c.inc("ListJobs")
	return c.svc.ListJobs(input)
}

// ListJobsWithContext is a passthrough to the underlying ListJobsWithContext method.
// It will increment the count of requests made to ListJobs.
func (c *Batch) ListJobsWithContext(ctx aws.Context, input *batch.ListJobsInput, opts ...request.Option) (*batch.ListJobsOutput, error) {
	c.inc("ListJobs")
	return c.svc.ListJobsWithContext(ctx, input, opts...)
}

// RegisterJobDefinitionRequest is a passthrough to the underlying RegisterJobDefinitionRequest.
// It will increment the count of requests made to RegisterJobDefinition.
func (c *Batch) RegisterJobDefinitionRequest(input *batch.RegisterJobDefinitionInput) (req *request.Request, output *batch.RegisterJobDefinitionOutput) {
	c.inc("RegisterJobDefinition")
	return c.svc.RegisterJobDefinitionRequest(input)
}

// RegisterJobDefinition is a passthrough to the underlying RegisterJobDefinition method.
// It will increment the count of requests made to RegisterJobDefinition.
func (c *Batch) RegisterJobDefinition(input *batch.RegisterJobDefinitionInput) (*batch.RegisterJobDefinitionOutput, error) {
	c.inc("RegisterJobDefinition")
	return c.svc.RegisterJobDefinition(input)
}

// RegisterJobDefinitionWithContext is a passthrough to the underlying RegisterJobDefinitionWithContext method.
// It will increment the count of requests made to RegisterJobDefinition.
func (c *Batch) RegisterJobDefinitionWithContext(ctx aws.Context, input *batch.RegisterJobDefinitionInput, opts ...request.Option) (*batch.RegisterJobDefinitionOutput, error) {
	c.inc("RegisterJobDefinition")
	return c.svc.RegisterJobDefinitionWithContext(ctx, input, opts...)
}

// SubmitJobRequest is a passthrough to the underlying SubmitJobRequest.
// It will increment the count of requests made to SubmitJob.
func (c *Batch) SubmitJobRequest(input *batch.SubmitJobInput) (req *request.Request, output *batch.SubmitJobOutput) {
	c.inc("SubmitJob")
	return c.svc.SubmitJobRequest(input)
}

// SubmitJob is a passthrough to the underlying SubmitJob method.
// It will increment the count of requests made to SubmitJob.
func (c *Batch) SubmitJob(input *batch.SubmitJobInput) (*batch.SubmitJobOutput, error) {
	c.inc("SubmitJob")
	return c.svc.SubmitJob(input)
}

// SubmitJobWithContext is a passthrough to the underlying SubmitJobWithContext method.
// It will increment the count of requests made to SubmitJob.
func (c *Batch) SubmitJobWithContext(ctx aws.Context, input *batch.SubmitJobInput, opts ...request.Option) (*batch.SubmitJobOutput, error) {
	c.inc("SubmitJob")
	return c.svc.SubmitJobWithContext(ctx, input, opts...)
}

// TerminateJobRequest is a passthrough to the underlying TerminateJobRequest.
// It will increment the count of requests made to TerminateJob.
func (c *Batch) TerminateJobRequest(input *batch.TerminateJobInput) (req *request.Request, output *batch.TerminateJobOutput) {
	c.inc("TerminateJob")
	return c.svc.TerminateJobRequest(input)
}

// TerminateJob is a passthrough to the underlying TerminateJob method.
// It will increment the count of requests made to TerminateJob.
func (c *Batch) TerminateJob(input *batch.TerminateJobInput) (*batch.TerminateJobOutput, error) {
	c.inc("TerminateJob")
	return c.svc.TerminateJob(input)
}

// TerminateJobWithContext is a passthrough to the underlying TerminateJobWithContext method.
// It will increment the count of requests made to TerminateJob.
func (c *Batch) TerminateJobWithContext(ctx aws.Context, input *batch.TerminateJobInput, opts ...request.Option) (*batch.TerminateJobOutput, error) {
	c.inc("TerminateJob")
	return c.svc.TerminateJobWithContext(ctx, input, opts...)
}

// UpdateComputeEnvironmentRequest is a passthrough to the underlying UpdateComputeEnvironmentRequest.
// It will increment the count of requests made to UpdateComputeEnvironment.
func (c *Batch) UpdateComputeEnvironmentRequest(input *batch.UpdateComputeEnvironmentInput) (req *request.Request, output *batch.UpdateComputeEnvironmentOutput) {
	c.inc("UpdateComputeEnvironment")
	return c.svc.UpdateComputeEnvironmentRequest(input)
}

// UpdateComputeEnvironment is a passthrough to the underlying UpdateComputeEnvironment method.
// It will increment the count of requests made to UpdateComputeEnvironment.
func (c *Batch) UpdateComputeEnvironment(input *batch.UpdateComputeEnvironmentInput) (*batch.UpdateComputeEnvironmentOutput, error) {
	c.inc("UpdateComputeEnvironment")
	return c.svc.UpdateComputeEnvironment(input)
}

// UpdateComputeEnvironmentWithContext is a passthrough to the underlying UpdateComputeEnvironmentWithContext method.
// It will increment the count of requests made to UpdateComputeEnvironment.
func (c *Batch) UpdateComputeEnvironmentWithContext(ctx aws.Context, input *batch.UpdateComputeEnvironmentInput, opts ...request.Option) (*batch.UpdateComputeEnvironmentOutput, error) {
	c.inc("UpdateComputeEnvironment")
	return c.svc.UpdateComputeEnvironmentWithContext(ctx, input, opts...)
}

// UpdateJobQueueRequest is a passthrough to the underlying UpdateJobQueueRequest.
// It will increment the count of requests made to UpdateJobQueue.
func (c *Batch) UpdateJobQueueRequest(input *batch.UpdateJobQueueInput) (req *request.Request, output *batch.UpdateJobQueueOutput) {
	c.inc("UpdateJobQueue")
	return c.svc.UpdateJobQueueRequest(input)
}

// UpdateJobQueue is a passthrough to the underlying UpdateJobQueue method.
// It will increment the count of requests made to UpdateJobQueue.
func (c *Batch) UpdateJobQueue(input *batch.UpdateJobQueueInput) (*batch.UpdateJobQueueOutput, error) {
	c.inc("UpdateJobQueue")
	return c.svc.UpdateJobQueue(input)
}

// UpdateJobQueueWithContext is a passthrough to the underlying UpdateJobQueueWithContext method.
// It will increment the count of requests made to UpdateJobQueue.
func (c *Batch) UpdateJobQueueWithContext(ctx aws.Context, input *batch.UpdateJobQueueInput, opts ...request.Option) (*batch.UpdateJobQueueOutput, error) {
	c.inc("UpdateJobQueue")
	return c.svc.UpdateJobQueueWithContext(ctx, input, opts...)
}
