// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package workdocscounter

import (
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/workdocs"
)

// AbortDocumentVersionUploadRequest is a passthrough to the underlying AbortDocumentVersionUploadRequest.
// It will increment the count of requests made to AbortDocumentVersionUpload.
func (c *WorkDocs) AbortDocumentVersionUploadRequest(input *workdocs.AbortDocumentVersionUploadInput) (req *request.Request, output *workdocs.AbortDocumentVersionUploadOutput) {
	c.inc("AbortDocumentVersionUpload")
	return c.svc.AbortDocumentVersionUploadRequest(input)
}

// AbortDocumentVersionUpload is a passthrough to the underlying AbortDocumentVersionUpload method.
// It will increment the count of requests made to AbortDocumentVersionUpload.
func (c *WorkDocs) AbortDocumentVersionUpload(input *workdocs.AbortDocumentVersionUploadInput) (*workdocs.AbortDocumentVersionUploadOutput, error) {
	c.inc("AbortDocumentVersionUpload")
	return c.svc.AbortDocumentVersionUpload(input)
}

// AbortDocumentVersionUploadWithContext is a passthrough to the underlying AbortDocumentVersionUploadWithContext method.
// It will increment the count of requests made to AbortDocumentVersionUpload.
func (c *WorkDocs) AbortDocumentVersionUploadWithContext(ctx aws.Context, input *workdocs.AbortDocumentVersionUploadInput, opts ...request.Option) (*workdocs.AbortDocumentVersionUploadOutput, error) {
	c.inc("AbortDocumentVersionUpload")
	return c.svc.AbortDocumentVersionUploadWithContext(ctx, input, opts...)
}

// ActivateUserRequest is a passthrough to the underlying ActivateUserRequest.
// It will increment the count of requests made to ActivateUser.
func (c *WorkDocs) ActivateUserRequest(input *workdocs.ActivateUserInput) (req *request.Request, output *workdocs.ActivateUserOutput) {
	c.inc("ActivateUser")
	return c.svc.ActivateUserRequest(input)
}

// ActivateUser is a passthrough to the underlying ActivateUser method.
// It will increment the count of requests made to ActivateUser.
func (c *WorkDocs) ActivateUser(input *workdocs.ActivateUserInput) (*workdocs.ActivateUserOutput, error) {
	c.inc("ActivateUser")
	return c.svc.ActivateUser(input)
}

// ActivateUserWithContext is a passthrough to the underlying ActivateUserWithContext method.
// It will increment the count of requests made to ActivateUser.
func (c *WorkDocs) ActivateUserWithContext(ctx aws.Context, input *workdocs.ActivateUserInput, opts ...request.Option) (*workdocs.ActivateUserOutput, error) {
	c.inc("ActivateUser")
	return c.svc.ActivateUserWithContext(ctx, input, opts...)
}

// AddResourcePermissionsRequest is a passthrough to the underlying AddResourcePermissionsRequest.
// It will increment the count of requests made to AddResourcePermissions.
func (c *WorkDocs) AddResourcePermissionsRequest(input *workdocs.AddResourcePermissionsInput) (req *request.Request, output *workdocs.AddResourcePermissionsOutput) {
	c.inc("AddResourcePermissions")
	return c.svc.AddResourcePermissionsRequest(input)
}

// AddResourcePermissions is a passthrough to the underlying AddResourcePermissions method.
// It will increment the count of requests made to AddResourcePermissions.
func (c *WorkDocs) AddResourcePermissions(input *workdocs.AddResourcePermissionsInput) (*workdocs.AddResourcePermissionsOutput, error) {
	c.inc("AddResourcePermissions")
	return c.svc.AddResourcePermissions(input)
}

// AddResourcePermissionsWithContext is a passthrough to the underlying AddResourcePermissionsWithContext method.
// It will increment the count of requests made to AddResourcePermissions.
func (c *WorkDocs) AddResourcePermissionsWithContext(ctx aws.Context, input *workdocs.AddResourcePermissionsInput, opts ...request.Option) (*workdocs.AddResourcePermissionsOutput, error) {
	c.inc("AddResourcePermissions")
	return c.svc.AddResourcePermissionsWithContext(ctx, input, opts...)
}

// CreateCommentRequest is a passthrough to the underlying CreateCommentRequest.
// It will increment the count of requests made to CreateComment.
func (c *WorkDocs) CreateCommentRequest(input *workdocs.CreateCommentInput) (req *request.Request, output *workdocs.CreateCommentOutput) {
	c.inc("CreateComment")
	return c.svc.CreateCommentRequest(input)
}

// CreateComment is a passthrough to the underlying CreateComment method.
// It will increment the count of requests made to CreateComment.
func (c *WorkDocs) CreateComment(input *workdocs.CreateCommentInput) (*workdocs.CreateCommentOutput, error) {
	c.inc("CreateComment")
	return c.svc.CreateComment(input)
}

// CreateCommentWithContext is a passthrough to the underlying CreateCommentWithContext method.
// It will increment the count of requests made to CreateComment.
func (c *WorkDocs) CreateCommentWithContext(ctx aws.Context, input *workdocs.CreateCommentInput, opts ...request.Option) (*workdocs.CreateCommentOutput, error) {
	c.inc("CreateComment")
	return c.svc.CreateCommentWithContext(ctx, input, opts...)
}

// CreateCustomMetadataRequest is a passthrough to the underlying CreateCustomMetadataRequest.
// It will increment the count of requests made to CreateCustomMetadata.
func (c *WorkDocs) CreateCustomMetadataRequest(input *workdocs.CreateCustomMetadataInput) (req *request.Request, output *workdocs.CreateCustomMetadataOutput) {
	c.inc("CreateCustomMetadata")
	return c.svc.CreateCustomMetadataRequest(input)
}

// CreateCustomMetadata is a passthrough to the underlying CreateCustomMetadata method.
// It will increment the count of requests made to CreateCustomMetadata.
func (c *WorkDocs) CreateCustomMetadata(input *workdocs.CreateCustomMetadataInput) (*workdocs.CreateCustomMetadataOutput, error) {
	c.inc("CreateCustomMetadata")
	return c.svc.CreateCustomMetadata(input)
}

// CreateCustomMetadataWithContext is a passthrough to the underlying CreateCustomMetadataWithContext method.
// It will increment the count of requests made to CreateCustomMetadata.
func (c *WorkDocs) CreateCustomMetadataWithContext(ctx aws.Context, input *workdocs.CreateCustomMetadataInput, opts ...request.Option) (*workdocs.CreateCustomMetadataOutput, error) {
	c.inc("CreateCustomMetadata")
	return c.svc.CreateCustomMetadataWithContext(ctx, input, opts...)
}

// CreateFolderRequest is a passthrough to the underlying CreateFolderRequest.
// It will increment the count of requests made to CreateFolder.
func (c *WorkDocs) CreateFolderRequest(input *workdocs.CreateFolderInput) (req *request.Request, output *workdocs.CreateFolderOutput) {
	c.inc("CreateFolder")
	return c.svc.CreateFolderRequest(input)
}

// CreateFolder is a passthrough to the underlying CreateFolder method.
// It will increment the count of requests made to CreateFolder.
func (c *WorkDocs) CreateFolder(input *workdocs.CreateFolderInput) (*workdocs.CreateFolderOutput, error) {
	c.inc("CreateFolder")
	return c.svc.CreateFolder(input)
}

// CreateFolderWithContext is a passthrough to the underlying CreateFolderWithContext method.
// It will increment the count of requests made to CreateFolder.
func (c *WorkDocs) CreateFolderWithContext(ctx aws.Context, input *workdocs.CreateFolderInput, opts ...request.Option) (*workdocs.CreateFolderOutput, error) {
	c.inc("CreateFolder")
	return c.svc.CreateFolderWithContext(ctx, input, opts...)
}

// CreateLabelsRequest is a passthrough to the underlying CreateLabelsRequest.
// It will increment the count of requests made to CreateLabels.
func (c *WorkDocs) CreateLabelsRequest(input *workdocs.CreateLabelsInput) (req *request.Request, output *workdocs.CreateLabelsOutput) {
	c.inc("CreateLabels")
	return c.svc.CreateLabelsRequest(input)
}

// CreateLabels is a passthrough to the underlying CreateLabels method.
// It will increment the count of requests made to CreateLabels.
func (c *WorkDocs) CreateLabels(input *workdocs.CreateLabelsInput) (*workdocs.CreateLabelsOutput, error) {
	c.inc("CreateLabels")
	return c.svc.CreateLabels(input)
}

// CreateLabelsWithContext is a passthrough to the underlying CreateLabelsWithContext method.
// It will increment the count of requests made to CreateLabels.
func (c *WorkDocs) CreateLabelsWithContext(ctx aws.Context, input *workdocs.CreateLabelsInput, opts ...request.Option) (*workdocs.CreateLabelsOutput, error) {
	c.inc("CreateLabels")
	return c.svc.CreateLabelsWithContext(ctx, input, opts...)
}

// CreateNotificationSubscriptionRequest is a passthrough to the underlying CreateNotificationSubscriptionRequest.
// It will increment the count of requests made to CreateNotificationSubscription.
func (c *WorkDocs) CreateNotificationSubscriptionRequest(input *workdocs.CreateNotificationSubscriptionInput) (req *request.Request, output *workdocs.CreateNotificationSubscriptionOutput) {
	c.inc("CreateNotificationSubscription")
	return c.svc.CreateNotificationSubscriptionRequest(input)
}

// CreateNotificationSubscription is a passthrough to the underlying CreateNotificationSubscription method.
// It will increment the count of requests made to CreateNotificationSubscription.
func (c *WorkDocs) CreateNotificationSubscription(input *workdocs.CreateNotificationSubscriptionInput) (*workdocs.CreateNotificationSubscriptionOutput, error) {
	c.inc("CreateNotificationSubscription")
	return c.svc.CreateNotificationSubscription(input)
}

// CreateNotificationSubscriptionWithContext is a passthrough to the underlying CreateNotificationSubscriptionWithContext method.
// It will increment the count of requests made to CreateNotificationSubscription.
func (c *WorkDocs) CreateNotificationSubscriptionWithContext(ctx aws.Context, input *workdocs.CreateNotificationSubscriptionInput, opts ...request.Option) (*workdocs.CreateNotificationSubscriptionOutput, error) {
	c.inc("CreateNotificationSubscription")
	return c.svc.CreateNotificationSubscriptionWithContext(ctx, input, opts...)
}

// CreateUserRequest is a passthrough to the underlying CreateUserRequest.
// It will increment the count of requests made to CreateUser.
func (c *WorkDocs) CreateUserRequest(input *workdocs.CreateUserInput) (req *request.Request, output *workdocs.CreateUserOutput) {
	c.inc("CreateUser")
	return c.svc.CreateUserRequest(input)
}

// CreateUser is a passthrough to the underlying CreateUser method.
// It will increment the count of requests made to CreateUser.
func (c *WorkDocs) CreateUser(input *workdocs.CreateUserInput) (*workdocs.CreateUserOutput, error) {
	c.inc("CreateUser")
	return c.svc.CreateUser(input)
}

// CreateUserWithContext is a passthrough to the underlying CreateUserWithContext method.
// It will increment the count of requests made to CreateUser.
func (c *WorkDocs) CreateUserWithContext(ctx aws.Context, input *workdocs.CreateUserInput, opts ...request.Option) (*workdocs.CreateUserOutput, error) {
	c.inc("CreateUser")
	return c.svc.CreateUserWithContext(ctx, input, opts...)
}

// DeactivateUserRequest is a passthrough to the underlying DeactivateUserRequest.
// It will increment the count of requests made to DeactivateUser.
func (c *WorkDocs) DeactivateUserRequest(input *workdocs.DeactivateUserInput) (req *request.Request, output *workdocs.DeactivateUserOutput) {
	c.inc("DeactivateUser")
	return c.svc.DeactivateUserRequest(input)
}

// DeactivateUser is a passthrough to the underlying DeactivateUser method.
// It will increment the count of requests made to DeactivateUser.
func (c *WorkDocs) DeactivateUser(input *workdocs.DeactivateUserInput) (*workdocs.DeactivateUserOutput, error) {
	c.inc("DeactivateUser")
	return c.svc.DeactivateUser(input)
}

// DeactivateUserWithContext is a passthrough to the underlying DeactivateUserWithContext method.
// It will increment the count of requests made to DeactivateUser.
func (c *WorkDocs) DeactivateUserWithContext(ctx aws.Context, input *workdocs.DeactivateUserInput, opts ...request.Option) (*workdocs.DeactivateUserOutput, error) {
	c.inc("DeactivateUser")
	return c.svc.DeactivateUserWithContext(ctx, input, opts...)
}

// DeleteCommentRequest is a passthrough to the underlying DeleteCommentRequest.
// It will increment the count of requests made to DeleteComment.
func (c *WorkDocs) DeleteCommentRequest(input *workdocs.DeleteCommentInput) (req *request.Request, output *workdocs.DeleteCommentOutput) {
	c.inc("DeleteComment")
	return c.svc.DeleteCommentRequest(input)
}

// DeleteComment is a passthrough to the underlying DeleteComment method.
// It will increment the count of requests made to DeleteComment.
func (c *WorkDocs) DeleteComment(input *workdocs.DeleteCommentInput) (*workdocs.DeleteCommentOutput, error) {
	c.inc("DeleteComment")
	return c.svc.DeleteComment(input)
}

// DeleteCommentWithContext is a passthrough to the underlying DeleteCommentWithContext method.
// It will increment the count of requests made to DeleteComment.
func (c *WorkDocs) DeleteCommentWithContext(ctx aws.Context, input *workdocs.DeleteCommentInput, opts ...request.Option) (*workdocs.DeleteCommentOutput, error) {
	c.inc("DeleteComment")
	return c.svc.DeleteCommentWithContext(ctx, input, opts...)
}

// DeleteCustomMetadataRequest is a passthrough to the underlying DeleteCustomMetadataRequest.
// It will increment the count of requests made to DeleteCustomMetadata.
func (c *WorkDocs) DeleteCustomMetadataRequest(input *workdocs.DeleteCustomMetadataInput) (req *request.Request, output *workdocs.DeleteCustomMetadataOutput) {
	c.inc("DeleteCustomMetadata")
	return c.svc.DeleteCustomMetadataRequest(input)
}

// DeleteCustomMetadata is a passthrough to the underlying DeleteCustomMetadata method.
// It will increment the count of requests made to DeleteCustomMetadata.
func (c *WorkDocs) DeleteCustomMetadata(input *workdocs.DeleteCustomMetadataInput) (*workdocs.DeleteCustomMetadataOutput, error) {
	c.inc("DeleteCustomMetadata")
	return c.svc.DeleteCustomMetadata(input)
}

// DeleteCustomMetadataWithContext is a passthrough to the underlying DeleteCustomMetadataWithContext method.
// It will increment the count of requests made to DeleteCustomMetadata.
func (c *WorkDocs) DeleteCustomMetadataWithContext(ctx aws.Context, input *workdocs.DeleteCustomMetadataInput, opts ...request.Option) (*workdocs.DeleteCustomMetadataOutput, error) {
	c.inc("DeleteCustomMetadata")
	return c.svc.DeleteCustomMetadataWithContext(ctx, input, opts...)
}

// DeleteDocumentRequest is a passthrough to the underlying DeleteDocumentRequest.
// It will increment the count of requests made to DeleteDocument.
func (c *WorkDocs) DeleteDocumentRequest(input *workdocs.DeleteDocumentInput) (req *request.Request, output *workdocs.DeleteDocumentOutput) {
	c.inc("DeleteDocument")
	return c.svc.DeleteDocumentRequest(input)
}

// DeleteDocument is a passthrough to the underlying DeleteDocument method.
// It will increment the count of requests made to DeleteDocument.
func (c *WorkDocs) DeleteDocument(input *workdocs.DeleteDocumentInput) (*workdocs.DeleteDocumentOutput, error) {
	c.inc("DeleteDocument")
	return c.svc.DeleteDocument(input)
}

// DeleteDocumentWithContext is a passthrough to the underlying DeleteDocumentWithContext method.
// It will increment the count of requests made to DeleteDocument.
func (c *WorkDocs) DeleteDocumentWithContext(ctx aws.Context, input *workdocs.DeleteDocumentInput, opts ...request.Option) (*workdocs.DeleteDocumentOutput, error) {
	c.inc("DeleteDocument")
	return c.svc.DeleteDocumentWithContext(ctx, input, opts...)
}

// DeleteFolderRequest is a passthrough to the underlying DeleteFolderRequest.
// It will increment the count of requests made to DeleteFolder.
func (c *WorkDocs) DeleteFolderRequest(input *workdocs.DeleteFolderInput) (req *request.Request, output *workdocs.DeleteFolderOutput) {
	c.inc("DeleteFolder")
	return c.svc.DeleteFolderRequest(input)
}

// DeleteFolder is a passthrough to the underlying DeleteFolder method.
// It will increment the count of requests made to DeleteFolder.
func (c *WorkDocs) DeleteFolder(input *workdocs.DeleteFolderInput) (*workdocs.DeleteFolderOutput, error) {
	c.inc("DeleteFolder")
	return c.svc.DeleteFolder(input)
}

// DeleteFolderWithContext is a passthrough to the underlying DeleteFolderWithContext method.
// It will increment the count of requests made to DeleteFolder.
func (c *WorkDocs) DeleteFolderWithContext(ctx aws.Context, input *workdocs.DeleteFolderInput, opts ...request.Option) (*workdocs.DeleteFolderOutput, error) {
	c.inc("DeleteFolder")
	return c.svc.DeleteFolderWithContext(ctx, input, opts...)
}

// DeleteFolderContentsRequest is a passthrough to the underlying DeleteFolderContentsRequest.
// It will increment the count of requests made to DeleteFolderContents.
func (c *WorkDocs) DeleteFolderContentsRequest(input *workdocs.DeleteFolderContentsInput) (req *request.Request, output *workdocs.DeleteFolderContentsOutput) {
	c.inc("DeleteFolderContents")
	return c.svc.DeleteFolderContentsRequest(input)
}

// DeleteFolderContents is a passthrough to the underlying DeleteFolderContents method.
// It will increment the count of requests made to DeleteFolderContents.
func (c *WorkDocs) DeleteFolderContents(input *workdocs.DeleteFolderContentsInput) (*workdocs.DeleteFolderContentsOutput, error) {
	c.inc("DeleteFolderContents")
	return c.svc.DeleteFolderContents(input)
}

// DeleteFolderContentsWithContext is a passthrough to the underlying DeleteFolderContentsWithContext method.
// It will increment the count of requests made to DeleteFolderContents.
func (c *WorkDocs) DeleteFolderContentsWithContext(ctx aws.Context, input *workdocs.DeleteFolderContentsInput, opts ...request.Option) (*workdocs.DeleteFolderContentsOutput, error) {
	c.inc("DeleteFolderContents")
	return c.svc.DeleteFolderContentsWithContext(ctx, input, opts...)
}

// DeleteLabelsRequest is a passthrough to the underlying DeleteLabelsRequest.
// It will increment the count of requests made to DeleteLabels.
func (c *WorkDocs) DeleteLabelsRequest(input *workdocs.DeleteLabelsInput) (req *request.Request, output *workdocs.DeleteLabelsOutput) {
	c.inc("DeleteLabels")
	return c.svc.DeleteLabelsRequest(input)
}

// DeleteLabels is a passthrough to the underlying DeleteLabels method.
// It will increment the count of requests made to DeleteLabels.
func (c *WorkDocs) DeleteLabels(input *workdocs.DeleteLabelsInput) (*workdocs.DeleteLabelsOutput, error) {
	c.inc("DeleteLabels")
	return c.svc.DeleteLabels(input)
}

// DeleteLabelsWithContext is a passthrough to the underlying DeleteLabelsWithContext method.
// It will increment the count of requests made to DeleteLabels.
func (c *WorkDocs) DeleteLabelsWithContext(ctx aws.Context, input *workdocs.DeleteLabelsInput, opts ...request.Option) (*workdocs.DeleteLabelsOutput, error) {
	c.inc("DeleteLabels")
	return c.svc.DeleteLabelsWithContext(ctx, input, opts...)
}

// DeleteNotificationSubscriptionRequest is a passthrough to the underlying DeleteNotificationSubscriptionRequest.
// It will increment the count of requests made to DeleteNotificationSubscription.
func (c *WorkDocs) DeleteNotificationSubscriptionRequest(input *workdocs.DeleteNotificationSubscriptionInput) (req *request.Request, output *workdocs.DeleteNotificationSubscriptionOutput) {
	c.inc("DeleteNotificationSubscription")
	return c.svc.DeleteNotificationSubscriptionRequest(input)
}

// DeleteNotificationSubscription is a passthrough to the underlying DeleteNotificationSubscription method.
// It will increment the count of requests made to DeleteNotificationSubscription.
func (c *WorkDocs) DeleteNotificationSubscription(input *workdocs.DeleteNotificationSubscriptionInput) (*workdocs.DeleteNotificationSubscriptionOutput, error) {
	c.inc("DeleteNotificationSubscription")
	return c.svc.DeleteNotificationSubscription(input)
}

// DeleteNotificationSubscriptionWithContext is a passthrough to the underlying DeleteNotificationSubscriptionWithContext method.
// It will increment the count of requests made to DeleteNotificationSubscription.
func (c *WorkDocs) DeleteNotificationSubscriptionWithContext(ctx aws.Context, input *workdocs.DeleteNotificationSubscriptionInput, opts ...request.Option) (*workdocs.DeleteNotificationSubscriptionOutput, error) {
	c.inc("DeleteNotificationSubscription")
	return c.svc.DeleteNotificationSubscriptionWithContext(ctx, input, opts...)
}

// DeleteUserRequest is a passthrough to the underlying DeleteUserRequest.
// It will increment the count of requests made to DeleteUser.
func (c *WorkDocs) DeleteUserRequest(input *workdocs.DeleteUserInput) (req *request.Request, output *workdocs.DeleteUserOutput) {
	c.inc("DeleteUser")
	return c.svc.DeleteUserRequest(input)
}

// DeleteUser is a passthrough to the underlying DeleteUser method.
// It will increment the count of requests made to DeleteUser.
func (c *WorkDocs) DeleteUser(input *workdocs.DeleteUserInput) (*workdocs.DeleteUserOutput, error) {
	c.inc("DeleteUser")
	return c.svc.DeleteUser(input)
}

// DeleteUserWithContext is a passthrough to the underlying DeleteUserWithContext method.
// It will increment the count of requests made to DeleteUser.
func (c *WorkDocs) DeleteUserWithContext(ctx aws.Context, input *workdocs.DeleteUserInput, opts ...request.Option) (*workdocs.DeleteUserOutput, error) {
	c.inc("DeleteUser")
	return c.svc.DeleteUserWithContext(ctx, input, opts...)
}

// DescribeActivitiesRequest is a passthrough to the underlying DescribeActivitiesRequest.
// It will increment the count of requests made to DescribeActivities.
func (c *WorkDocs) DescribeActivitiesRequest(input *workdocs.DescribeActivitiesInput) (req *request.Request, output *workdocs.DescribeActivitiesOutput) {
	c.inc("DescribeActivities")
	return c.svc.DescribeActivitiesRequest(input)
}

// DescribeActivities is a passthrough to the underlying DescribeActivities method.
// It will increment the count of requests made to DescribeActivities.
func (c *WorkDocs) DescribeActivities(input *workdocs.DescribeActivitiesInput) (*workdocs.DescribeActivitiesOutput, error) {
	c.inc("DescribeActivities")
	return c.svc.DescribeActivities(input)
}

// DescribeActivitiesWithContext is a passthrough to the underlying DescribeActivitiesWithContext method.
// It will increment the count of requests made to DescribeActivities.
func (c *WorkDocs) DescribeActivitiesWithContext(ctx aws.Context, input *workdocs.DescribeActivitiesInput, opts ...request.Option) (*workdocs.DescribeActivitiesOutput, error) {
	c.inc("DescribeActivities")
	return c.svc.DescribeActivitiesWithContext(ctx, input, opts...)
}

// DescribeCommentsRequest is a passthrough to the underlying DescribeCommentsRequest.
// It will increment the count of requests made to DescribeComments.
func (c *WorkDocs) DescribeCommentsRequest(input *workdocs.DescribeCommentsInput) (req *request.Request, output *workdocs.DescribeCommentsOutput) {
	c.inc("DescribeComments")
	return c.svc.DescribeCommentsRequest(input)
}

// DescribeComments is a passthrough to the underlying DescribeComments method.
// It will increment the count of requests made to DescribeComments.
func (c *WorkDocs) DescribeComments(input *workdocs.DescribeCommentsInput) (*workdocs.DescribeCommentsOutput, error) {
	c.inc("DescribeComments")
	return c.svc.DescribeComments(input)
}

// DescribeCommentsWithContext is a passthrough to the underlying DescribeCommentsWithContext method.
// It will increment the count of requests made to DescribeComments.
func (c *WorkDocs) DescribeCommentsWithContext(ctx aws.Context, input *workdocs.DescribeCommentsInput, opts ...request.Option) (*workdocs.DescribeCommentsOutput, error) {
	c.inc("DescribeComments")
	return c.svc.DescribeCommentsWithContext(ctx, input, opts...)
}

// DescribeDocumentVersionsRequest is a passthrough to the underlying DescribeDocumentVersionsRequest.
// It will increment the count of requests made to DescribeDocumentVersions.
func (c *WorkDocs) DescribeDocumentVersionsRequest(input *workdocs.DescribeDocumentVersionsInput) (req *request.Request, output *workdocs.DescribeDocumentVersionsOutput) {
	c.inc("DescribeDocumentVersions")
	return c.svc.DescribeDocumentVersionsRequest(input)
}

// DescribeDocumentVersions is a passthrough to the underlying DescribeDocumentVersions method.
// It will increment the count of requests made to DescribeDocumentVersions.
func (c *WorkDocs) DescribeDocumentVersions(input *workdocs.DescribeDocumentVersionsInput) (*workdocs.DescribeDocumentVersionsOutput, error) {
	c.inc("DescribeDocumentVersions")
	return c.svc.DescribeDocumentVersions(input)
}

// DescribeDocumentVersionsWithContext is a passthrough to the underlying DescribeDocumentVersionsWithContext method.
// It will increment the count of requests made to DescribeDocumentVersions.
func (c *WorkDocs) DescribeDocumentVersionsWithContext(ctx aws.Context, input *workdocs.DescribeDocumentVersionsInput, opts ...request.Option) (*workdocs.DescribeDocumentVersionsOutput, error) {
	c.inc("DescribeDocumentVersions")
	return c.svc.DescribeDocumentVersionsWithContext(ctx, input, opts...)
}

// DescribeDocumentVersionsPages is a passthrough to the underlying DescribeDocumentVersionsPages method.
// It will increment the count of requests made to DescribeDocumentVersions on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeDocumentVersionsPagesWithContext to avoid this.
func (c *WorkDocs) DescribeDocumentVersionsPages(input *workdocs.DescribeDocumentVersionsInput, fn func(*workdocs.DescribeDocumentVersionsOutput, bool) bool) error {
	wrappedFn := func(page *workdocs.DescribeDocumentVersionsOutput, lastPage bool) bool {
		c.inc("DescribeDocumentVersions")
		return fn(page, lastPage)
	}
	return c.svc.DescribeDocumentVersionsPages(input, wrappedFn)
}

// DescribeDocumentVersionsPagesWithContext is a passthrough to the underlying DescribeDocumentVersionsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeDocumentVersions when applied to the request.
func (c *WorkDocs) DescribeDocumentVersionsPagesWithContext(ctx aws.Context, input *workdocs.DescribeDocumentVersionsInput, fn func(*workdocs.DescribeDocumentVersionsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeDocumentVersions"))
	return c.svc.DescribeDocumentVersionsPagesWithContext(ctx, input, fn, opts...)
}

// DescribeFolderContentsRequest is a passthrough to the underlying DescribeFolderContentsRequest.
// It will increment the count of requests made to DescribeFolderContents.
func (c *WorkDocs) DescribeFolderContentsRequest(input *workdocs.DescribeFolderContentsInput) (req *request.Request, output *workdocs.DescribeFolderContentsOutput) {
	c.inc("DescribeFolderContents")
	return c.svc.DescribeFolderContentsRequest(input)
}

// DescribeFolderContents is a passthrough to the underlying DescribeFolderContents method.
// It will increment the count of requests made to DescribeFolderContents.
func (c *WorkDocs) DescribeFolderContents(input *workdocs.DescribeFolderContentsInput) (*workdocs.DescribeFolderContentsOutput, error) {
	c.inc("DescribeFolderContents")
	return c.svc.DescribeFolderContents(input)
}

// DescribeFolderContentsWithContext is a passthrough to the underlying DescribeFolderContentsWithContext method.
// It will increment the count of requests made to DescribeFolderContents.
func (c *WorkDocs) DescribeFolderContentsWithContext(ctx aws.Context, input *workdocs.DescribeFolderContentsInput, opts ...request.Option) (*workdocs.DescribeFolderContentsOutput, error) {
	c.inc("DescribeFolderContents")
	return c.svc.DescribeFolderContentsWithContext(ctx, input, opts...)
}

// DescribeFolderContentsPages is a passthrough to the underlying DescribeFolderContentsPages method.
// It will increment the count of requests made to DescribeFolderContents on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeFolderContentsPagesWithContext to avoid this.
func (c *WorkDocs) DescribeFolderContentsPages(input *workdocs.DescribeFolderContentsInput, fn func(*workdocs.DescribeFolderContentsOutput, bool) bool) error {
	wrappedFn := func(page *workdocs.DescribeFolderContentsOutput, lastPage bool) bool {
		c.inc("DescribeFolderContents")
		return fn(page, lastPage)
	}
	return c.svc.DescribeFolderContentsPages(input, wrappedFn)
}

// DescribeFolderContentsPagesWithContext is a passthrough to the underlying DescribeFolderContentsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeFolderContents when applied to the request.
func (c *WorkDocs) DescribeFolderContentsPagesWithContext(ctx aws.Context, input *workdocs.DescribeFolderContentsInput, fn func(*workdocs.DescribeFolderContentsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeFolderContents"))
	return c.svc.DescribeFolderContentsPagesWithContext(ctx, input, fn, opts...)
}

// DescribeNotificationSubscriptionsRequest is a passthrough to the underlying DescribeNotificationSubscriptionsRequest.
// It will increment the count of requests made to DescribeNotificationSubscriptions.
func (c *WorkDocs) DescribeNotificationSubscriptionsRequest(input *workdocs.DescribeNotificationSubscriptionsInput) (req *request.Request, output *workdocs.DescribeNotificationSubscriptionsOutput) {
	c.inc("DescribeNotificationSubscriptions")
	return c.svc.DescribeNotificationSubscriptionsRequest(input)
}

// DescribeNotificationSubscriptions is a passthrough to the underlying DescribeNotificationSubscriptions method.
// It will increment the count of requests made to DescribeNotificationSubscriptions.
func (c *WorkDocs) DescribeNotificationSubscriptions(input *workdocs.DescribeNotificationSubscriptionsInput) (*workdocs.DescribeNotificationSubscriptionsOutput, error) {
	c.inc("DescribeNotificationSubscriptions")
	return c.svc.DescribeNotificationSubscriptions(input)
}

// DescribeNotificationSubscriptionsWithContext is a passthrough to the underlying DescribeNotificationSubscriptionsWithContext method.
// It will increment the count of requests made to DescribeNotificationSubscriptions.
func (c *WorkDocs) DescribeNotificationSubscriptionsWithContext(ctx aws.Context, input *workdocs.DescribeNotificationSubscriptionsInput, opts ...request.Option) (*workdocs.DescribeNotificationSubscriptionsOutput, error) {
	c.inc("DescribeNotificationSubscriptions")
	return c.svc.DescribeNotificationSubscriptionsWithContext(ctx, input, opts...)
}

// DescribeResourcePermissionsRequest is a passthrough to the underlying DescribeResourcePermissionsRequest.
// It will increment the count of requests made to DescribeResourcePermissions.
func (c *WorkDocs) DescribeResourcePermissionsRequest(input *workdocs.DescribeResourcePermissionsInput) (req *request.Request, output *workdocs.DescribeResourcePermissionsOutput) {
	c.inc("DescribeResourcePermissions")
	return c.svc.DescribeResourcePermissionsRequest(input)
}

// DescribeResourcePermissions is a passthrough to the underlying DescribeResourcePermissions method.
// It will increment the count of requests made to DescribeResourcePermissions.
func (c *WorkDocs) DescribeResourcePermissions(input *workdocs.DescribeResourcePermissionsInput) (*workdocs.DescribeResourcePermissionsOutput, error) {
	c.inc("DescribeResourcePermissions")
	return c.svc.DescribeResourcePermissions(input)
}

// DescribeResourcePermissionsWithContext is a passthrough to the underlying DescribeResourcePermissionsWithContext method.
// It will increment the count of requests made to DescribeResourcePermissions.
func (c *WorkDocs) DescribeResourcePermissionsWithContext(ctx aws.Context, input *workdocs.DescribeResourcePermissionsInput, opts ...request.Option) (*workdocs.DescribeResourcePermissionsOutput, error) {
	c.inc("DescribeResourcePermissions")
	return c.svc.DescribeResourcePermissionsWithContext(ctx, input, opts...)
}

// DescribeRootFoldersRequest is a passthrough to the underlying DescribeRootFoldersRequest.
// It will increment the count of requests made to DescribeRootFolders.
func (c *WorkDocs) DescribeRootFoldersRequest(input *workdocs.DescribeRootFoldersInput) (req *request.Request, output *workdocs.DescribeRootFoldersOutput) {
	c.inc("DescribeRootFolders")
	return c.svc.DescribeRootFoldersRequest(input)
}

// DescribeRootFolders is a passthrough to the underlying DescribeRootFolders method.
// It will increment the count of requests made to DescribeRootFolders.
func (c *WorkDocs) DescribeRootFolders(input *workdocs.DescribeRootFoldersInput) (*workdocs.DescribeRootFoldersOutput, error) {
	c.inc("DescribeRootFolders")
	return c.svc.DescribeRootFolders(input)
}

// DescribeRootFoldersWithContext is a passthrough to the underlying DescribeRootFoldersWithContext method.
// It will increment the count of requests made to DescribeRootFolders.
func (c *WorkDocs) DescribeRootFoldersWithContext(ctx aws.Context, input *workdocs.DescribeRootFoldersInput, opts ...request.Option) (*workdocs.DescribeRootFoldersOutput, error) {
	c.inc("DescribeRootFolders")
	return c.svc.DescribeRootFoldersWithContext(ctx, input, opts...)
}

// DescribeUsersRequest is a passthrough to the underlying DescribeUsersRequest.
// It will increment the count of requests made to DescribeUsers.
func (c *WorkDocs) DescribeUsersRequest(input *workdocs.DescribeUsersInput) (req *request.Request, output *workdocs.DescribeUsersOutput) {
	c.inc("DescribeUsers")
	return c.svc.DescribeUsersRequest(input)
}

// DescribeUsers is a passthrough to the underlying DescribeUsers method.
// It will increment the count of requests made to DescribeUsers.
func (c *WorkDocs) DescribeUsers(input *workdocs.DescribeUsersInput) (*workdocs.DescribeUsersOutput, error) {
	c.inc("DescribeUsers")
	return c.svc.DescribeUsers(input)
}

// DescribeUsersWithContext is a passthrough to the underlying DescribeUsersWithContext method.
// It will increment the count of requests made to DescribeUsers.
func (c *WorkDocs) DescribeUsersWithContext(ctx aws.Context, input *workdocs.DescribeUsersInput, opts ...request.Option) (*workdocs.DescribeUsersOutput, error) {
	c.inc("DescribeUsers")
	return c.svc.DescribeUsersWithContext(ctx, input, opts...)
}

// DescribeUsersPages is a passthrough to the underlying DescribeUsersPages method.
// It will increment the count of requests made to DescribeUsers on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeUsersPagesWithContext to avoid this.
func (c *WorkDocs) DescribeUsersPages(input *workdocs.DescribeUsersInput, fn func(*workdocs.DescribeUsersOutput, bool) bool) error {
	wrappedFn := func(page *workdocs.DescribeUsersOutput, lastPage bool) bool {
		c.inc("DescribeUsers")
		return fn(page, lastPage)
	}
	return c.svc.DescribeUsersPages(input, wrappedFn)
}

// DescribeUsersPagesWithContext is a passthrough to the underlying DescribeUsersPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeUsers when applied to the request.
func (c *WorkDocs) DescribeUsersPagesWithContext(ctx aws.Context, input *workdocs.DescribeUsersInput, fn func(*workdocs.DescribeUsersOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeUsers"))
	return c.svc.DescribeUsersPagesWithContext(ctx, input, fn, opts...)
}

// GetCurrentUserRequest is a passthrough to the underlying GetCurrentUserRequest.
// It will increment the count of requests made to GetCurrentUser.
func (c *WorkDocs) GetCurrentUserRequest(input *workdocs.GetCurrentUserInput) (req *request.Request, output *workdocs.GetCurrentUserOutput) {
	c.inc("GetCurrentUser")
	return c.svc.GetCurrentUserRequest(input)
}

// GetCurrentUser is a passthrough to the underlying GetCurrentUser method.
// It will increment the count of requests made to GetCurrentUser.
func (c *WorkDocs) GetCurrentUser(input *workdocs.GetCurrentUserInput) (*workdocs.GetCurrentUserOutput, error) {
	c.inc("GetCurrentUser")
	return c.svc.GetCurrentUser(input)
}

// GetCurrentUserWithContext is a passthrough to the underlying GetCurrentUserWithContext method.
// It will increment the count of requests made to GetCurrentUser.
func (c *WorkDocs) GetCurrentUserWithContext(ctx aws.Context, input *workdocs.GetCurrentUserInput, opts ...request.Option) (*workdocs.GetCurrentUserOutput, error) {
	c.inc("GetCurrentUser")
	return c.svc.GetCurrentUserWithContext(ctx, input, opts...)
}

// GetDocumentRequest is a passthrough to the underlying GetDocumentRequest.
// It will increment the count of requests made to GetDocument.
func (c *WorkDocs) GetDocumentRequest(input *workdocs.GetDocumentInput) (req *request.Request, output *workdocs.GetDocumentOutput) {
	c.inc("GetDocument")
	return c.svc.GetDocumentRequest(input)
}

// GetDocument is a passthrough to the underlying GetDocument method.
// It will increment the count of requests made to GetDocument.
func (c *WorkDocs) GetDocument(input *workdocs.GetDocumentInput) (*workdocs.GetDocumentOutput, error) {
	c.inc("GetDocument")
	return c.svc.GetDocument(input)
}

// GetDocumentWithContext is a passthrough to the underlying GetDocumentWithContext method.
// It will increment the count of requests made to GetDocument.
func (c *WorkDocs) GetDocumentWithContext(ctx aws.Context, input *workdocs.GetDocumentInput, opts ...request.Option) (*workdocs.GetDocumentOutput, error) {
	c.inc("GetDocument")
	return c.svc.GetDocumentWithContext(ctx, input, opts...)
}

// GetDocumentPathRequest is a passthrough to the underlying GetDocumentPathRequest.
// It will increment the count of requests made to GetDocumentPath.
func (c *WorkDocs) GetDocumentPathRequest(input *workdocs.GetDocumentPathInput) (req *request.Request, output *workdocs.GetDocumentPathOutput) {
	c.inc("GetDocumentPath")
	return c.svc.GetDocumentPathRequest(input)
}

// GetDocumentPath is a passthrough to the underlying GetDocumentPath method.
// It will increment the count of requests made to GetDocumentPath.
func (c *WorkDocs) GetDocumentPath(input *workdocs.GetDocumentPathInput) (*workdocs.GetDocumentPathOutput, error) {
	c.inc("GetDocumentPath")
	return c.svc.GetDocumentPath(input)
}

// GetDocumentPathWithContext is a passthrough to the underlying GetDocumentPathWithContext method.
// It will increment the count of requests made to GetDocumentPath.
func (c *WorkDocs) GetDocumentPathWithContext(ctx aws.Context, input *workdocs.GetDocumentPathInput, opts ...request.Option) (*workdocs.GetDocumentPathOutput, error) {
	c.inc("GetDocumentPath")
	return c.svc.GetDocumentPathWithContext(ctx, input, opts...)
}

// GetDocumentVersionRequest is a passthrough to the underlying GetDocumentVersionRequest.
// It will increment the count of requests made to GetDocumentVersion.
func (c *WorkDocs) GetDocumentVersionRequest(input *workdocs.GetDocumentVersionInput) (req *request.Request, output *workdocs.GetDocumentVersionOutput) {
	c.inc("GetDocumentVersion")
	return c.svc.GetDocumentVersionRequest(input)
}

// GetDocumentVersion is a passthrough to the underlying GetDocumentVersion method.
// It will increment the count of requests made to GetDocumentVersion.
func (c *WorkDocs) GetDocumentVersion(input *workdocs.GetDocumentVersionInput) (*workdocs.GetDocumentVersionOutput, error) {
	c.inc("GetDocumentVersion")
	return c.svc.GetDocumentVersion(input)
}

// GetDocumentVersionWithContext is a passthrough to the underlying GetDocumentVersionWithContext method.
// It will increment the count of requests made to GetDocumentVersion.
func (c *WorkDocs) GetDocumentVersionWithContext(ctx aws.Context, input *workdocs.GetDocumentVersionInput, opts ...request.Option) (*workdocs.GetDocumentVersionOutput, error) {
	c.inc("GetDocumentVersion")
	return c.svc.GetDocumentVersionWithContext(ctx, input, opts...)
}

// GetFolderRequest is a passthrough to the underlying GetFolderRequest.
// It will increment the count of requests made to GetFolder.
func (c *WorkDocs) GetFolderRequest(input *workdocs.GetFolderInput) (req *request.Request, output *workdocs.GetFolderOutput) {
	c.inc("GetFolder")
	return c.svc.GetFolderRequest(input)
}

// GetFolder is a passthrough to the underlying GetFolder method.
// It will increment the count of requests made to GetFolder.
func (c *WorkDocs) GetFolder(input *workdocs.GetFolderInput) (*workdocs.GetFolderOutput, error) {
	c.inc("GetFolder")
	return c.svc.GetFolder(input)
}

// GetFolderWithContext is a passthrough to the underlying GetFolderWithContext method.
// It will increment the count of requests made to GetFolder.
func (c *WorkDocs) GetFolderWithContext(ctx aws.Context, input *workdocs.GetFolderInput, opts ...request.Option) (*workdocs.GetFolderOutput, error) {
	c.inc("GetFolder")
	return c.svc.GetFolderWithContext(ctx, input, opts...)
}

// GetFolderPathRequest is a passthrough to the underlying GetFolderPathRequest.
// It will increment the count of requests made to GetFolderPath.
func (c *WorkDocs) GetFolderPathRequest(input *workdocs.GetFolderPathInput) (req *request.Request, output *workdocs.GetFolderPathOutput) {
	c.inc("GetFolderPath")
	return c.svc.GetFolderPathRequest(input)
}

// GetFolderPath is a passthrough to the underlying GetFolderPath method.
// It will increment the count of requests made to GetFolderPath.
func (c *WorkDocs) GetFolderPath(input *workdocs.GetFolderPathInput) (*workdocs.GetFolderPathOutput, error) {
	c.inc("GetFolderPath")
	return c.svc.GetFolderPath(input)
}

// GetFolderPathWithContext is a passthrough to the underlying GetFolderPathWithContext method.
// It will increment the count of requests made to GetFolderPath.
func (c *WorkDocs) GetFolderPathWithContext(ctx aws.Context, input *workdocs.GetFolderPathInput, opts ...request.Option) (*workdocs.GetFolderPathOutput, error) {
	c.inc("GetFolderPath")
	return c.svc.GetFolderPathWithContext(ctx, input, opts...)
}

// InitiateDocumentVersionUploadRequest is a passthrough to the underlying InitiateDocumentVersionUploadRequest.
// It will increment the count of requests made to InitiateDocumentVersionUpload.
func (c *WorkDocs) InitiateDocumentVersionUploadRequest(input *workdocs.InitiateDocumentVersionUploadInput) (req *request.Request, output *workdocs.InitiateDocumentVersionUploadOutput) {
	c.inc("InitiateDocumentVersionUpload")
	return c.svc.InitiateDocumentVersionUploadRequest(input)
}

// InitiateDocumentVersionUpload is a passthrough to the underlying InitiateDocumentVersionUpload method.
// It will increment the count of requests made to InitiateDocumentVersionUpload.
func (c *WorkDocs) InitiateDocumentVersionUpload(input *workdocs.InitiateDocumentVersionUploadInput) (*workdocs.InitiateDocumentVersionUploadOutput, error) {
	c.inc("InitiateDocumentVersionUpload")
	return c.svc.InitiateDocumentVersionUpload(input)
}

// InitiateDocumentVersionUploadWithContext is a passthrough to the underlying InitiateDocumentVersionUploadWithContext method.
// It will increment the count of requests made to InitiateDocumentVersionUpload.
func (c *WorkDocs) InitiateDocumentVersionUploadWithContext(ctx aws.Context, input *workdocs.InitiateDocumentVersionUploadInput, opts ...request.Option) (*workdocs.InitiateDocumentVersionUploadOutput, error) {
	c.inc("InitiateDocumentVersionUpload")
	return c.svc.InitiateDocumentVersionUploadWithContext(ctx, input, opts...)
}

// RemoveAllResourcePermissionsRequest is a passthrough to the underlying RemoveAllResourcePermissionsRequest.
// It will increment the count of requests made to RemoveAllResourcePermissions.
func (c *WorkDocs) RemoveAllResourcePermissionsRequest(input *workdocs.RemoveAllResourcePermissionsInput) (req *request.Request, output *workdocs.RemoveAllResourcePermissionsOutput) {
	c.inc("RemoveAllResourcePermissions")
	return c.svc.RemoveAllResourcePermissionsRequest(input)
}

// RemoveAllResourcePermissions is a passthrough to the underlying RemoveAllResourcePermissions method.
// It will increment the count of requests made to RemoveAllResourcePermissions.
func (c *WorkDocs) RemoveAllResourcePermissions(input *workdocs.RemoveAllResourcePermissionsInput) (*workdocs.RemoveAllResourcePermissionsOutput, error) {
	c.inc("RemoveAllResourcePermissions")
	return c.svc.RemoveAllResourcePermissions(input)
}

// RemoveAllResourcePermissionsWithContext is a passthrough to the underlying RemoveAllResourcePermissionsWithContext method.
// It will increment the count of requests made to RemoveAllResourcePermissions.
func (c *WorkDocs) RemoveAllResourcePermissionsWithContext(ctx aws.Context, input *workdocs.RemoveAllResourcePermissionsInput, opts ...request.Option) (*workdocs.RemoveAllResourcePermissionsOutput, error) {
	c.inc("RemoveAllResourcePermissions")
	return c.svc.RemoveAllResourcePermissionsWithContext(ctx, input, opts...)
}

// RemoveResourcePermissionRequest is a passthrough to the underlying RemoveResourcePermissionRequest.
// It will increment the count of requests made to RemoveResourcePermission.
func (c *WorkDocs) RemoveResourcePermissionRequest(input *workdocs.RemoveResourcePermissionInput) (req *request.Request, output *workdocs.RemoveResourcePermissionOutput) {
	c.inc("RemoveResourcePermission")
	return c.svc.RemoveResourcePermissionRequest(input)
}

// RemoveResourcePermission is a passthrough to the underlying RemoveResourcePermission method.
// It will increment the count of requests made to RemoveResourcePermission.
func (c *WorkDocs) RemoveResourcePermission(input *workdocs.RemoveResourcePermissionInput) (*workdocs.RemoveResourcePermissionOutput, error) {
	c.inc("RemoveResourcePermission")
	return c.svc.RemoveResourcePermission(input)
}

// RemoveResourcePermissionWithContext is a passthrough to the underlying RemoveResourcePermissionWithContext method.
// It will increment the count of requests made to RemoveResourcePermission.
func (c *WorkDocs) RemoveResourcePermissionWithContext(ctx aws.Context, input *workdocs.RemoveResourcePermissionInput, opts ...request.Option) (*workdocs.RemoveResourcePermissionOutput, error) {
	c.inc("RemoveResourcePermission")
	return c.svc.RemoveResourcePermissionWithContext(ctx, input, opts...)
}

// UpdateDocumentRequest is a passthrough to the underlying UpdateDocumentRequest.
// It will increment the count of requests made to UpdateDocument.
func (c *WorkDocs) UpdateDocumentRequest(input *workdocs.UpdateDocumentInput) (req *request.Request, output *workdocs.UpdateDocumentOutput) {
	c.inc("UpdateDocument")
	return c.svc.UpdateDocumentRequest(input)
}

// UpdateDocument is a passthrough to the underlying UpdateDocument method.
// It will increment the count of requests made to UpdateDocument.
func (c *WorkDocs) UpdateDocument(input *workdocs.UpdateDocumentInput) (*workdocs.UpdateDocumentOutput, error) {
	c.inc("UpdateDocument")
	return c.svc.UpdateDocument(input)
}

// UpdateDocumentWithContext is a passthrough to the underlying UpdateDocumentWithContext method.
// It will increment the count of requests made to UpdateDocument.
func (c *WorkDocs) UpdateDocumentWithContext(ctx aws.Context, input *workdocs.UpdateDocumentInput, opts ...request.Option) (*workdocs.UpdateDocumentOutput, error) {
	c.inc("UpdateDocument")
	return c.svc.UpdateDocumentWithContext(ctx, input, opts...)
}

// UpdateDocumentVersionRequest is a passthrough to the underlying UpdateDocumentVersionRequest.
// It will increment the count of requests made to UpdateDocumentVersion.
func (c *WorkDocs) UpdateDocumentVersionRequest(input *workdocs.UpdateDocumentVersionInput) (req *request.Request, output *workdocs.UpdateDocumentVersionOutput) {
	c.inc("UpdateDocumentVersion")
	return c.svc.UpdateDocumentVersionRequest(input)
}

// UpdateDocumentVersion is a passthrough to the underlying UpdateDocumentVersion method.
// It will increment the count of requests made to UpdateDocumentVersion.
func (c *WorkDocs) UpdateDocumentVersion(input *workdocs.UpdateDocumentVersionInput) (*workdocs.UpdateDocumentVersionOutput, error) {
	c.inc("UpdateDocumentVersion")
	return c.svc.UpdateDocumentVersion(input)
}

// UpdateDocumentVersionWithContext is a passthrough to the underlying UpdateDocumentVersionWithContext method.
// It will increment the count of requests made to UpdateDocumentVersion.
func (c *WorkDocs) UpdateDocumentVersionWithContext(ctx aws.Context, input *workdocs.UpdateDocumentVersionInput, opts ...request.Option) (*workdocs.UpdateDocumentVersionOutput, error) {
	c.inc("UpdateDocumentVersion")
	return c.svc.UpdateDocumentVersionWithContext(ctx, input, opts...)
}

// UpdateFolderRequest is a passthrough to the underlying UpdateFolderRequest.
// It will increment the count of requests made to UpdateFolder.
func (c *WorkDocs) UpdateFolderRequest(input *workdocs.UpdateFolderInput) (req *request.Request, output *workdocs.UpdateFolderOutput) {
	c.inc("UpdateFolder")
	return c.svc.UpdateFolderRequest(input)
}

// UpdateFolder is a passthrough to the underlying UpdateFolder method.
// It will increment the count of requests made to UpdateFolder.
func (c *WorkDocs) UpdateFolder(input *workdocs.UpdateFolderInput) (*workdocs.UpdateFolderOutput, error) {
	c.inc("UpdateFolder")
	return c.svc.UpdateFolder(input)
}

// UpdateFolderWithContext is a passthrough to the underlying UpdateFolderWithContext method.
// It will increment the count of requests made to UpdateFolder.
func (c *WorkDocs) UpdateFolderWithContext(ctx aws.Context, input *workdocs.UpdateFolderInput, opts ...request.Option) (*workdocs.UpdateFolderOutput, error) {
	c.inc("UpdateFolder")
	return c.svc.UpdateFolderWithContext(ctx, input, opts...)
}

// UpdateUserRequest is a passthrough to the underlying UpdateUserRequest.
// It will increment the count of requests made to UpdateUser.
func (c *WorkDocs) UpdateUserRequest(input *workdocs.UpdateUserInput) (req *request.Request, output *workdocs.UpdateUserOutput) {
	c.inc("UpdateUser")
	return c.svc.UpdateUserRequest(input)
}

// UpdateUser is a passthrough to the underlying UpdateUser method.
// It will increment the count of requests made to UpdateUser.
func (c *WorkDocs) UpdateUser(input *workdocs.UpdateUserInput) (*workdocs.UpdateUserOutput, error) {
	c.inc("UpdateUser")
	return c.svc.UpdateUser(input)
}

// UpdateUserWithContext is a passthrough to the underlying UpdateUserWithContext method.
// It will increment the count of requests made to UpdateUser.
func (c *WorkDocs) UpdateUserWithContext(ctx aws.Context, input *workdocs.UpdateUserInput, opts ...request.Option) (*workdocs.UpdateUserOutput, error) {
	c.inc("UpdateUser")
	return c.svc.UpdateUserWithContext(ctx, input, opts...)
}
