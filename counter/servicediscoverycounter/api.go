// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package servicediscoverycounter

import (
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/servicediscovery"
)

// CreatePrivateDnsNamespaceRequest is a passthrough to the underlying CreatePrivateDnsNamespaceRequest.
// It will increment the count of requests made to CreatePrivateDnsNamespace.
func (c *ServiceDiscovery) CreatePrivateDnsNamespaceRequest(input *servicediscovery.CreatePrivateDnsNamespaceInput) (req *request.Request, output *servicediscovery.CreatePrivateDnsNamespaceOutput) {
	c.inc("CreatePrivateDnsNamespace")
	return c.svc.CreatePrivateDnsNamespaceRequest(input)
}

// CreatePrivateDnsNamespace is a passthrough to the underlying CreatePrivateDnsNamespace method.
// It will increment the count of requests made to CreatePrivateDnsNamespace.
func (c *ServiceDiscovery) CreatePrivateDnsNamespace(input *servicediscovery.CreatePrivateDnsNamespaceInput) (*servicediscovery.CreatePrivateDnsNamespaceOutput, error) {
	c.inc("CreatePrivateDnsNamespace")
	return c.svc.CreatePrivateDnsNamespace(input)
}

// CreatePrivateDnsNamespaceWithContext is a passthrough to the underlying CreatePrivateDnsNamespaceWithContext method.
// It will increment the count of requests made to CreatePrivateDnsNamespace.
func (c *ServiceDiscovery) CreatePrivateDnsNamespaceWithContext(ctx aws.Context, input *servicediscovery.CreatePrivateDnsNamespaceInput, opts ...request.Option) (*servicediscovery.CreatePrivateDnsNamespaceOutput, error) {
	c.inc("CreatePrivateDnsNamespace")
	return c.svc.CreatePrivateDnsNamespaceWithContext(ctx, input, opts...)
}

// CreatePublicDnsNamespaceRequest is a passthrough to the underlying CreatePublicDnsNamespaceRequest.
// It will increment the count of requests made to CreatePublicDnsNamespace.
func (c *ServiceDiscovery) CreatePublicDnsNamespaceRequest(input *servicediscovery.CreatePublicDnsNamespaceInput) (req *request.Request, output *servicediscovery.CreatePublicDnsNamespaceOutput) {
	c.inc("CreatePublicDnsNamespace")
	return c.svc.CreatePublicDnsNamespaceRequest(input)
}

// CreatePublicDnsNamespace is a passthrough to the underlying CreatePublicDnsNamespace method.
// It will increment the count of requests made to CreatePublicDnsNamespace.
func (c *ServiceDiscovery) CreatePublicDnsNamespace(input *servicediscovery.CreatePublicDnsNamespaceInput) (*servicediscovery.CreatePublicDnsNamespaceOutput, error) {
	c.inc("CreatePublicDnsNamespace")
	return c.svc.CreatePublicDnsNamespace(input)
}

// CreatePublicDnsNamespaceWithContext is a passthrough to the underlying CreatePublicDnsNamespaceWithContext method.
// It will increment the count of requests made to CreatePublicDnsNamespace.
func (c *ServiceDiscovery) CreatePublicDnsNamespaceWithContext(ctx aws.Context, input *servicediscovery.CreatePublicDnsNamespaceInput, opts ...request.Option) (*servicediscovery.CreatePublicDnsNamespaceOutput, error) {
	c.inc("CreatePublicDnsNamespace")
	return c.svc.CreatePublicDnsNamespaceWithContext(ctx, input, opts...)
}

// CreateServiceRequest is a passthrough to the underlying CreateServiceRequest.
// It will increment the count of requests made to CreateService.
func (c *ServiceDiscovery) CreateServiceRequest(input *servicediscovery.CreateServiceInput) (req *request.Request, output *servicediscovery.CreateServiceOutput) {
	c.inc("CreateService")
	return c.svc.CreateServiceRequest(input)
}

// CreateService is a passthrough to the underlying CreateService method.
// It will increment the count of requests made to CreateService.
func (c *ServiceDiscovery) CreateService(input *servicediscovery.CreateServiceInput) (*servicediscovery.CreateServiceOutput, error) {
	c.inc("CreateService")
	return c.svc.CreateService(input)
}

// CreateServiceWithContext is a passthrough to the underlying CreateServiceWithContext method.
// It will increment the count of requests made to CreateService.
func (c *ServiceDiscovery) CreateServiceWithContext(ctx aws.Context, input *servicediscovery.CreateServiceInput, opts ...request.Option) (*servicediscovery.CreateServiceOutput, error) {
	c.inc("CreateService")
	return c.svc.CreateServiceWithContext(ctx, input, opts...)
}

// DeleteNamespaceRequest is a passthrough to the underlying DeleteNamespaceRequest.
// It will increment the count of requests made to DeleteNamespace.
func (c *ServiceDiscovery) DeleteNamespaceRequest(input *servicediscovery.DeleteNamespaceInput) (req *request.Request, output *servicediscovery.DeleteNamespaceOutput) {
	c.inc("DeleteNamespace")
	return c.svc.DeleteNamespaceRequest(input)
}

// DeleteNamespace is a passthrough to the underlying DeleteNamespace method.
// It will increment the count of requests made to DeleteNamespace.
func (c *ServiceDiscovery) DeleteNamespace(input *servicediscovery.DeleteNamespaceInput) (*servicediscovery.DeleteNamespaceOutput, error) {
	c.inc("DeleteNamespace")
	return c.svc.DeleteNamespace(input)
}

// DeleteNamespaceWithContext is a passthrough to the underlying DeleteNamespaceWithContext method.
// It will increment the count of requests made to DeleteNamespace.
func (c *ServiceDiscovery) DeleteNamespaceWithContext(ctx aws.Context, input *servicediscovery.DeleteNamespaceInput, opts ...request.Option) (*servicediscovery.DeleteNamespaceOutput, error) {
	c.inc("DeleteNamespace")
	return c.svc.DeleteNamespaceWithContext(ctx, input, opts...)
}

// DeleteServiceRequest is a passthrough to the underlying DeleteServiceRequest.
// It will increment the count of requests made to DeleteService.
func (c *ServiceDiscovery) DeleteServiceRequest(input *servicediscovery.DeleteServiceInput) (req *request.Request, output *servicediscovery.DeleteServiceOutput) {
	c.inc("DeleteService")
	return c.svc.DeleteServiceRequest(input)
}

// DeleteService is a passthrough to the underlying DeleteService method.
// It will increment the count of requests made to DeleteService.
func (c *ServiceDiscovery) DeleteService(input *servicediscovery.DeleteServiceInput) (*servicediscovery.DeleteServiceOutput, error) {
	c.inc("DeleteService")
	return c.svc.DeleteService(input)
}

// DeleteServiceWithContext is a passthrough to the underlying DeleteServiceWithContext method.
// It will increment the count of requests made to DeleteService.
func (c *ServiceDiscovery) DeleteServiceWithContext(ctx aws.Context, input *servicediscovery.DeleteServiceInput, opts ...request.Option) (*servicediscovery.DeleteServiceOutput, error) {
	c.inc("DeleteService")
	return c.svc.DeleteServiceWithContext(ctx, input, opts...)
}

// DeregisterInstanceRequest is a passthrough to the underlying DeregisterInstanceRequest.
// It will increment the count of requests made to DeregisterInstance.
func (c *ServiceDiscovery) DeregisterInstanceRequest(input *servicediscovery.DeregisterInstanceInput) (req *request.Request, output *servicediscovery.DeregisterInstanceOutput) {
	c.inc("DeregisterInstance")
	return c.svc.DeregisterInstanceRequest(input)
}

// DeregisterInstance is a passthrough to the underlying DeregisterInstance method.
// It will increment the count of requests made to DeregisterInstance.
func (c *ServiceDiscovery) DeregisterInstance(input *servicediscovery.DeregisterInstanceInput) (*servicediscovery.DeregisterInstanceOutput, error) {
	c.inc("DeregisterInstance")
	return c.svc.DeregisterInstance(input)
}

// DeregisterInstanceWithContext is a passthrough to the underlying DeregisterInstanceWithContext method.
// It will increment the count of requests made to DeregisterInstance.
func (c *ServiceDiscovery) DeregisterInstanceWithContext(ctx aws.Context, input *servicediscovery.DeregisterInstanceInput, opts ...request.Option) (*servicediscovery.DeregisterInstanceOutput, error) {
	c.inc("DeregisterInstance")
	return c.svc.DeregisterInstanceWithContext(ctx, input, opts...)
}

// GetInstanceRequest is a passthrough to the underlying GetInstanceRequest.
// It will increment the count of requests made to GetInstance.
func (c *ServiceDiscovery) GetInstanceRequest(input *servicediscovery.GetInstanceInput) (req *request.Request, output *servicediscovery.GetInstanceOutput) {
	c.inc("GetInstance")
	return c.svc.GetInstanceRequest(input)
}

// GetInstance is a passthrough to the underlying GetInstance method.
// It will increment the count of requests made to GetInstance.
func (c *ServiceDiscovery) GetInstance(input *servicediscovery.GetInstanceInput) (*servicediscovery.GetInstanceOutput, error) {
	c.inc("GetInstance")
	return c.svc.GetInstance(input)
}

// GetInstanceWithContext is a passthrough to the underlying GetInstanceWithContext method.
// It will increment the count of requests made to GetInstance.
func (c *ServiceDiscovery) GetInstanceWithContext(ctx aws.Context, input *servicediscovery.GetInstanceInput, opts ...request.Option) (*servicediscovery.GetInstanceOutput, error) {
	c.inc("GetInstance")
	return c.svc.GetInstanceWithContext(ctx, input, opts...)
}

// GetInstancesHealthStatusRequest is a passthrough to the underlying GetInstancesHealthStatusRequest.
// It will increment the count of requests made to GetInstancesHealthStatus.
func (c *ServiceDiscovery) GetInstancesHealthStatusRequest(input *servicediscovery.GetInstancesHealthStatusInput) (req *request.Request, output *servicediscovery.GetInstancesHealthStatusOutput) {
	c.inc("GetInstancesHealthStatus")
	return c.svc.GetInstancesHealthStatusRequest(input)
}

// GetInstancesHealthStatus is a passthrough to the underlying GetInstancesHealthStatus method.
// It will increment the count of requests made to GetInstancesHealthStatus.
func (c *ServiceDiscovery) GetInstancesHealthStatus(input *servicediscovery.GetInstancesHealthStatusInput) (*servicediscovery.GetInstancesHealthStatusOutput, error) {
	c.inc("GetInstancesHealthStatus")
	return c.svc.GetInstancesHealthStatus(input)
}

// GetInstancesHealthStatusWithContext is a passthrough to the underlying GetInstancesHealthStatusWithContext method.
// It will increment the count of requests made to GetInstancesHealthStatus.
func (c *ServiceDiscovery) GetInstancesHealthStatusWithContext(ctx aws.Context, input *servicediscovery.GetInstancesHealthStatusInput, opts ...request.Option) (*servicediscovery.GetInstancesHealthStatusOutput, error) {
	c.inc("GetInstancesHealthStatus")
	return c.svc.GetInstancesHealthStatusWithContext(ctx, input, opts...)
}

// GetInstancesHealthStatusPages is a passthrough to the underlying GetInstancesHealthStatusPages method.
// It will increment the count of requests made to GetInstancesHealthStatus on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use GetInstancesHealthStatusPagesWithContext to avoid this.
func (c *ServiceDiscovery) GetInstancesHealthStatusPages(input *servicediscovery.GetInstancesHealthStatusInput, fn func(*servicediscovery.GetInstancesHealthStatusOutput, bool) bool) error {
	wrappedFn := func(page *servicediscovery.GetInstancesHealthStatusOutput, lastPage bool) bool {
		c.inc("GetInstancesHealthStatus")
		return fn(page, lastPage)
	}
	return c.svc.GetInstancesHealthStatusPages(input, wrappedFn)
}

// GetInstancesHealthStatusPagesWithContext is a passthrough to the underlying GetInstancesHealthStatusPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to GetInstancesHealthStatus when applied to the request.
func (c *ServiceDiscovery) GetInstancesHealthStatusPagesWithContext(ctx aws.Context, input *servicediscovery.GetInstancesHealthStatusInput, fn func(*servicediscovery.GetInstancesHealthStatusOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("GetInstancesHealthStatus"))
	return c.svc.GetInstancesHealthStatusPagesWithContext(ctx, input, fn, opts...)
}

// GetNamespaceRequest is a passthrough to the underlying GetNamespaceRequest.
// It will increment the count of requests made to GetNamespace.
func (c *ServiceDiscovery) GetNamespaceRequest(input *servicediscovery.GetNamespaceInput) (req *request.Request, output *servicediscovery.GetNamespaceOutput) {
	c.inc("GetNamespace")
	return c.svc.GetNamespaceRequest(input)
}

// GetNamespace is a passthrough to the underlying GetNamespace method.
// It will increment the count of requests made to GetNamespace.
func (c *ServiceDiscovery) GetNamespace(input *servicediscovery.GetNamespaceInput) (*servicediscovery.GetNamespaceOutput, error) {
	c.inc("GetNamespace")
	return c.svc.GetNamespace(input)
}

// GetNamespaceWithContext is a passthrough to the underlying GetNamespaceWithContext method.
// It will increment the count of requests made to GetNamespace.
func (c *ServiceDiscovery) GetNamespaceWithContext(ctx aws.Context, input *servicediscovery.GetNamespaceInput, opts ...request.Option) (*servicediscovery.GetNamespaceOutput, error) {
	c.inc("GetNamespace")
	return c.svc.GetNamespaceWithContext(ctx, input, opts...)
}

// GetOperationRequest is a passthrough to the underlying GetOperationRequest.
// It will increment the count of requests made to GetOperation.
func (c *ServiceDiscovery) GetOperationRequest(input *servicediscovery.GetOperationInput) (req *request.Request, output *servicediscovery.GetOperationOutput) {
	c.inc("GetOperation")
	return c.svc.GetOperationRequest(input)
}

// GetOperation is a passthrough to the underlying GetOperation method.
// It will increment the count of requests made to GetOperation.
func (c *ServiceDiscovery) GetOperation(input *servicediscovery.GetOperationInput) (*servicediscovery.GetOperationOutput, error) {
	c.inc("GetOperation")
	return c.svc.GetOperation(input)
}

// GetOperationWithContext is a passthrough to the underlying GetOperationWithContext method.
// It will increment the count of requests made to GetOperation.
func (c *ServiceDiscovery) GetOperationWithContext(ctx aws.Context, input *servicediscovery.GetOperationInput, opts ...request.Option) (*servicediscovery.GetOperationOutput, error) {
	c.inc("GetOperation")
	return c.svc.GetOperationWithContext(ctx, input, opts...)
}

// GetServiceRequest is a passthrough to the underlying GetServiceRequest.
// It will increment the count of requests made to GetService.
func (c *ServiceDiscovery) GetServiceRequest(input *servicediscovery.GetServiceInput) (req *request.Request, output *servicediscovery.GetServiceOutput) {
	c.inc("GetService")
	return c.svc.GetServiceRequest(input)
}

// GetService is a passthrough to the underlying GetService method.
// It will increment the count of requests made to GetService.
func (c *ServiceDiscovery) GetService(input *servicediscovery.GetServiceInput) (*servicediscovery.GetServiceOutput, error) {
	c.inc("GetService")
	return c.svc.GetService(input)
}

// GetServiceWithContext is a passthrough to the underlying GetServiceWithContext method.
// It will increment the count of requests made to GetService.
func (c *ServiceDiscovery) GetServiceWithContext(ctx aws.Context, input *servicediscovery.GetServiceInput, opts ...request.Option) (*servicediscovery.GetServiceOutput, error) {
	c.inc("GetService")
	return c.svc.GetServiceWithContext(ctx, input, opts...)
}

// ListInstancesRequest is a passthrough to the underlying ListInstancesRequest.
// It will increment the count of requests made to ListInstances.
func (c *ServiceDiscovery) ListInstancesRequest(input *servicediscovery.ListInstancesInput) (req *request.Request, output *servicediscovery.ListInstancesOutput) {
	c.inc("ListInstances")
	return c.svc.ListInstancesRequest(input)
}

// ListInstances is a passthrough to the underlying ListInstances method.
// It will increment the count of requests made to ListInstances.
func (c *ServiceDiscovery) ListInstances(input *servicediscovery.ListInstancesInput) (*servicediscovery.ListInstancesOutput, error) {
	c.inc("ListInstances")
	return c.svc.ListInstances(input)
}

// ListInstancesWithContext is a passthrough to the underlying ListInstancesWithContext method.
// It will increment the count of requests made to ListInstances.
func (c *ServiceDiscovery) ListInstancesWithContext(ctx aws.Context, input *servicediscovery.ListInstancesInput, opts ...request.Option) (*servicediscovery.ListInstancesOutput, error) {
	c.inc("ListInstances")
	return c.svc.ListInstancesWithContext(ctx, input, opts...)
}

// ListInstancesPages is a passthrough to the underlying ListInstancesPages method.
// It will increment the count of requests made to ListInstances on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListInstancesPagesWithContext to avoid this.
func (c *ServiceDiscovery) ListInstancesPages(input *servicediscovery.ListInstancesInput, fn func(*servicediscovery.ListInstancesOutput, bool) bool) error {
	wrappedFn := func(page *servicediscovery.ListInstancesOutput, lastPage bool) bool {
		c.inc("ListInstances")
		return fn(page, lastPage)
	}
	return c.svc.ListInstancesPages(input, wrappedFn)
}

// ListInstancesPagesWithContext is a passthrough to the underlying ListInstancesPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListInstances when applied to the request.
func (c *ServiceDiscovery) ListInstancesPagesWithContext(ctx aws.Context, input *servicediscovery.ListInstancesInput, fn func(*servicediscovery.ListInstancesOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListInstances"))
	return c.svc.ListInstancesPagesWithContext(ctx, input, fn, opts...)
}

// ListNamespacesRequest is a passthrough to the underlying ListNamespacesRequest.
// It will increment the count of requests made to ListNamespaces.
func (c *ServiceDiscovery) ListNamespacesRequest(input *servicediscovery.ListNamespacesInput) (req *request.Request, output *servicediscovery.ListNamespacesOutput) {
	c.inc("ListNamespaces")
	return c.svc.ListNamespacesRequest(input)
}

// ListNamespaces is a passthrough to the underlying ListNamespaces method.
// It will increment the count of requests made to ListNamespaces.
func (c *ServiceDiscovery) ListNamespaces(input *servicediscovery.ListNamespacesInput) (*servicediscovery.ListNamespacesOutput, error) {
	c.inc("ListNamespaces")
	return c.svc.ListNamespaces(input)
}

// ListNamespacesWithContext is a passthrough to the underlying ListNamespacesWithContext method.
// It will increment the count of requests made to ListNamespaces.
func (c *ServiceDiscovery) ListNamespacesWithContext(ctx aws.Context, input *servicediscovery.ListNamespacesInput, opts ...request.Option) (*servicediscovery.ListNamespacesOutput, error) {
	c.inc("ListNamespaces")
	return c.svc.ListNamespacesWithContext(ctx, input, opts...)
}

// ListNamespacesPages is a passthrough to the underlying ListNamespacesPages method.
// It will increment the count of requests made to ListNamespaces on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListNamespacesPagesWithContext to avoid this.
func (c *ServiceDiscovery) ListNamespacesPages(input *servicediscovery.ListNamespacesInput, fn func(*servicediscovery.ListNamespacesOutput, bool) bool) error {
	wrappedFn := func(page *servicediscovery.ListNamespacesOutput, lastPage bool) bool {
		c.inc("ListNamespaces")
		return fn(page, lastPage)
	}
	return c.svc.ListNamespacesPages(input, wrappedFn)
}

// ListNamespacesPagesWithContext is a passthrough to the underlying ListNamespacesPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListNamespaces when applied to the request.
func (c *ServiceDiscovery) ListNamespacesPagesWithContext(ctx aws.Context, input *servicediscovery.ListNamespacesInput, fn func(*servicediscovery.ListNamespacesOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListNamespaces"))
	return c.svc.ListNamespacesPagesWithContext(ctx, input, fn, opts...)
}

// ListOperationsRequest is a passthrough to the underlying ListOperationsRequest.
// It will increment the count of requests made to ListOperations.
func (c *ServiceDiscovery) ListOperationsRequest(input *servicediscovery.ListOperationsInput) (req *request.Request, output *servicediscovery.ListOperationsOutput) {
	c.inc("ListOperations")
	return c.svc.ListOperationsRequest(input)
}

// ListOperations is a passthrough to the underlying ListOperations method.
// It will increment the count of requests made to ListOperations.
func (c *ServiceDiscovery) ListOperations(input *servicediscovery.ListOperationsInput) (*servicediscovery.ListOperationsOutput, error) {
	c.inc("ListOperations")
	return c.svc.ListOperations(input)
}

// ListOperationsWithContext is a passthrough to the underlying ListOperationsWithContext method.
// It will increment the count of requests made to ListOperations.
func (c *ServiceDiscovery) ListOperationsWithContext(ctx aws.Context, input *servicediscovery.ListOperationsInput, opts ...request.Option) (*servicediscovery.ListOperationsOutput, error) {
	c.inc("ListOperations")
	return c.svc.ListOperationsWithContext(ctx, input, opts...)
}

// ListOperationsPages is a passthrough to the underlying ListOperationsPages method.
// It will increment the count of requests made to ListOperations on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListOperationsPagesWithContext to avoid this.
func (c *ServiceDiscovery) ListOperationsPages(input *servicediscovery.ListOperationsInput, fn func(*servicediscovery.ListOperationsOutput, bool) bool) error {
	wrappedFn := func(page *servicediscovery.ListOperationsOutput, lastPage bool) bool {
		c.inc("ListOperations")
		return fn(page, lastPage)
	}
	return c.svc.ListOperationsPages(input, wrappedFn)
}

// ListOperationsPagesWithContext is a passthrough to the underlying ListOperationsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListOperations when applied to the request.
func (c *ServiceDiscovery) ListOperationsPagesWithContext(ctx aws.Context, input *servicediscovery.ListOperationsInput, fn func(*servicediscovery.ListOperationsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListOperations"))
	return c.svc.ListOperationsPagesWithContext(ctx, input, fn, opts...)
}

// ListServicesRequest is a passthrough to the underlying ListServicesRequest.
// It will increment the count of requests made to ListServices.
func (c *ServiceDiscovery) ListServicesRequest(input *servicediscovery.ListServicesInput) (req *request.Request, output *servicediscovery.ListServicesOutput) {
	c.inc("ListServices")
	return c.svc.ListServicesRequest(input)
}

// ListServices is a passthrough to the underlying ListServices method.
// It will increment the count of requests made to ListServices.
func (c *ServiceDiscovery) ListServices(input *servicediscovery.ListServicesInput) (*servicediscovery.ListServicesOutput, error) {
	c.inc("ListServices")
	return c.svc.ListServices(input)
}

// ListServicesWithContext is a passthrough to the underlying ListServicesWithContext method.
// It will increment the count of requests made to ListServices.
func (c *ServiceDiscovery) ListServicesWithContext(ctx aws.Context, input *servicediscovery.ListServicesInput, opts ...request.Option) (*servicediscovery.ListServicesOutput, error) {
	c.inc("ListServices")
	return c.svc.ListServicesWithContext(ctx, input, opts...)
}

// ListServicesPages is a passthrough to the underlying ListServicesPages method.
// It will increment the count of requests made to ListServices on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListServicesPagesWithContext to avoid this.
func (c *ServiceDiscovery) ListServicesPages(input *servicediscovery.ListServicesInput, fn func(*servicediscovery.ListServicesOutput, bool) bool) error {
	wrappedFn := func(page *servicediscovery.ListServicesOutput, lastPage bool) bool {
		c.inc("ListServices")
		return fn(page, lastPage)
	}
	return c.svc.ListServicesPages(input, wrappedFn)
}

// ListServicesPagesWithContext is a passthrough to the underlying ListServicesPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListServices when applied to the request.
func (c *ServiceDiscovery) ListServicesPagesWithContext(ctx aws.Context, input *servicediscovery.ListServicesInput, fn func(*servicediscovery.ListServicesOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListServices"))
	return c.svc.ListServicesPagesWithContext(ctx, input, fn, opts...)
}

// RegisterInstanceRequest is a passthrough to the underlying RegisterInstanceRequest.
// It will increment the count of requests made to RegisterInstance.
func (c *ServiceDiscovery) RegisterInstanceRequest(input *servicediscovery.RegisterInstanceInput) (req *request.Request, output *servicediscovery.RegisterInstanceOutput) {
	c.inc("RegisterInstance")
	return c.svc.RegisterInstanceRequest(input)
}

// RegisterInstance is a passthrough to the underlying RegisterInstance method.
// It will increment the count of requests made to RegisterInstance.
func (c *ServiceDiscovery) RegisterInstance(input *servicediscovery.RegisterInstanceInput) (*servicediscovery.RegisterInstanceOutput, error) {
	c.inc("RegisterInstance")
	return c.svc.RegisterInstance(input)
}

// RegisterInstanceWithContext is a passthrough to the underlying RegisterInstanceWithContext method.
// It will increment the count of requests made to RegisterInstance.
func (c *ServiceDiscovery) RegisterInstanceWithContext(ctx aws.Context, input *servicediscovery.RegisterInstanceInput, opts ...request.Option) (*servicediscovery.RegisterInstanceOutput, error) {
	c.inc("RegisterInstance")
	return c.svc.RegisterInstanceWithContext(ctx, input, opts...)
}

// UpdateServiceRequest is a passthrough to the underlying UpdateServiceRequest.
// It will increment the count of requests made to UpdateService.
func (c *ServiceDiscovery) UpdateServiceRequest(input *servicediscovery.UpdateServiceInput) (req *request.Request, output *servicediscovery.UpdateServiceOutput) {
	c.inc("UpdateService")
	return c.svc.UpdateServiceRequest(input)
}

// UpdateService is a passthrough to the underlying UpdateService method.
// It will increment the count of requests made to UpdateService.
func (c *ServiceDiscovery) UpdateService(input *servicediscovery.UpdateServiceInput) (*servicediscovery.UpdateServiceOutput, error) {
	c.inc("UpdateService")
	return c.svc.UpdateService(input)
}

// UpdateServiceWithContext is a passthrough to the underlying UpdateServiceWithContext method.
// It will increment the count of requests made to UpdateService.
func (c *ServiceDiscovery) UpdateServiceWithContext(ctx aws.Context, input *servicediscovery.UpdateServiceInput, opts ...request.Option) (*servicediscovery.UpdateServiceOutput, error) {
	c.inc("UpdateService")
	return c.svc.UpdateServiceWithContext(ctx, input, opts...)
}
