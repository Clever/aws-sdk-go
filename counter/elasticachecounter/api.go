// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package elasticachecounter

import (
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/elasticache"
)

// AddTagsToResourceRequest is a passthrough to the underlying AddTagsToResourceRequest.
// It will increment the count of requests made to AddTagsToResource.
func (c *ElastiCache) AddTagsToResourceRequest(input *elasticache.AddTagsToResourceInput) (req *request.Request, output *elasticache.TagListMessage) {
	c.inc("AddTagsToResource")
	return c.svc.AddTagsToResourceRequest(input)
}

// AddTagsToResource is a passthrough to the underlying AddTagsToResource method.
// It will increment the count of requests made to AddTagsToResource.
func (c *ElastiCache) AddTagsToResource(input *elasticache.AddTagsToResourceInput) (*elasticache.TagListMessage, error) {
	c.inc("AddTagsToResource")
	return c.svc.AddTagsToResource(input)
}

// AddTagsToResourceWithContext is a passthrough to the underlying AddTagsToResourceWithContext method.
// It will increment the count of requests made to AddTagsToResource.
func (c *ElastiCache) AddTagsToResourceWithContext(ctx aws.Context, input *elasticache.AddTagsToResourceInput, opts ...request.Option) (*elasticache.TagListMessage, error) {
	c.inc("AddTagsToResource")
	return c.svc.AddTagsToResourceWithContext(ctx, input, opts...)
}

// AuthorizeCacheSecurityGroupIngressRequest is a passthrough to the underlying AuthorizeCacheSecurityGroupIngressRequest.
// It will increment the count of requests made to AuthorizeCacheSecurityGroupIngress.
func (c *ElastiCache) AuthorizeCacheSecurityGroupIngressRequest(input *elasticache.AuthorizeCacheSecurityGroupIngressInput) (req *request.Request, output *elasticache.AuthorizeCacheSecurityGroupIngressOutput) {
	c.inc("AuthorizeCacheSecurityGroupIngress")
	return c.svc.AuthorizeCacheSecurityGroupIngressRequest(input)
}

// AuthorizeCacheSecurityGroupIngress is a passthrough to the underlying AuthorizeCacheSecurityGroupIngress method.
// It will increment the count of requests made to AuthorizeCacheSecurityGroupIngress.
func (c *ElastiCache) AuthorizeCacheSecurityGroupIngress(input *elasticache.AuthorizeCacheSecurityGroupIngressInput) (*elasticache.AuthorizeCacheSecurityGroupIngressOutput, error) {
	c.inc("AuthorizeCacheSecurityGroupIngress")
	return c.svc.AuthorizeCacheSecurityGroupIngress(input)
}

// AuthorizeCacheSecurityGroupIngressWithContext is a passthrough to the underlying AuthorizeCacheSecurityGroupIngressWithContext method.
// It will increment the count of requests made to AuthorizeCacheSecurityGroupIngress.
func (c *ElastiCache) AuthorizeCacheSecurityGroupIngressWithContext(ctx aws.Context, input *elasticache.AuthorizeCacheSecurityGroupIngressInput, opts ...request.Option) (*elasticache.AuthorizeCacheSecurityGroupIngressOutput, error) {
	c.inc("AuthorizeCacheSecurityGroupIngress")
	return c.svc.AuthorizeCacheSecurityGroupIngressWithContext(ctx, input, opts...)
}

// CopySnapshotRequest is a passthrough to the underlying CopySnapshotRequest.
// It will increment the count of requests made to CopySnapshot.
func (c *ElastiCache) CopySnapshotRequest(input *elasticache.CopySnapshotInput) (req *request.Request, output *elasticache.CopySnapshotOutput) {
	c.inc("CopySnapshot")
	return c.svc.CopySnapshotRequest(input)
}

// CopySnapshot is a passthrough to the underlying CopySnapshot method.
// It will increment the count of requests made to CopySnapshot.
func (c *ElastiCache) CopySnapshot(input *elasticache.CopySnapshotInput) (*elasticache.CopySnapshotOutput, error) {
	c.inc("CopySnapshot")
	return c.svc.CopySnapshot(input)
}

// CopySnapshotWithContext is a passthrough to the underlying CopySnapshotWithContext method.
// It will increment the count of requests made to CopySnapshot.
func (c *ElastiCache) CopySnapshotWithContext(ctx aws.Context, input *elasticache.CopySnapshotInput, opts ...request.Option) (*elasticache.CopySnapshotOutput, error) {
	c.inc("CopySnapshot")
	return c.svc.CopySnapshotWithContext(ctx, input, opts...)
}

// CreateCacheClusterRequest is a passthrough to the underlying CreateCacheClusterRequest.
// It will increment the count of requests made to CreateCacheCluster.
func (c *ElastiCache) CreateCacheClusterRequest(input *elasticache.CreateCacheClusterInput) (req *request.Request, output *elasticache.CreateCacheClusterOutput) {
	c.inc("CreateCacheCluster")
	return c.svc.CreateCacheClusterRequest(input)
}

// CreateCacheCluster is a passthrough to the underlying CreateCacheCluster method.
// It will increment the count of requests made to CreateCacheCluster.
func (c *ElastiCache) CreateCacheCluster(input *elasticache.CreateCacheClusterInput) (*elasticache.CreateCacheClusterOutput, error) {
	c.inc("CreateCacheCluster")
	return c.svc.CreateCacheCluster(input)
}

// CreateCacheClusterWithContext is a passthrough to the underlying CreateCacheClusterWithContext method.
// It will increment the count of requests made to CreateCacheCluster.
func (c *ElastiCache) CreateCacheClusterWithContext(ctx aws.Context, input *elasticache.CreateCacheClusterInput, opts ...request.Option) (*elasticache.CreateCacheClusterOutput, error) {
	c.inc("CreateCacheCluster")
	return c.svc.CreateCacheClusterWithContext(ctx, input, opts...)
}

// CreateCacheParameterGroupRequest is a passthrough to the underlying CreateCacheParameterGroupRequest.
// It will increment the count of requests made to CreateCacheParameterGroup.
func (c *ElastiCache) CreateCacheParameterGroupRequest(input *elasticache.CreateCacheParameterGroupInput) (req *request.Request, output *elasticache.CreateCacheParameterGroupOutput) {
	c.inc("CreateCacheParameterGroup")
	return c.svc.CreateCacheParameterGroupRequest(input)
}

// CreateCacheParameterGroup is a passthrough to the underlying CreateCacheParameterGroup method.
// It will increment the count of requests made to CreateCacheParameterGroup.
func (c *ElastiCache) CreateCacheParameterGroup(input *elasticache.CreateCacheParameterGroupInput) (*elasticache.CreateCacheParameterGroupOutput, error) {
	c.inc("CreateCacheParameterGroup")
	return c.svc.CreateCacheParameterGroup(input)
}

// CreateCacheParameterGroupWithContext is a passthrough to the underlying CreateCacheParameterGroupWithContext method.
// It will increment the count of requests made to CreateCacheParameterGroup.
func (c *ElastiCache) CreateCacheParameterGroupWithContext(ctx aws.Context, input *elasticache.CreateCacheParameterGroupInput, opts ...request.Option) (*elasticache.CreateCacheParameterGroupOutput, error) {
	c.inc("CreateCacheParameterGroup")
	return c.svc.CreateCacheParameterGroupWithContext(ctx, input, opts...)
}

// CreateCacheSecurityGroupRequest is a passthrough to the underlying CreateCacheSecurityGroupRequest.
// It will increment the count of requests made to CreateCacheSecurityGroup.
func (c *ElastiCache) CreateCacheSecurityGroupRequest(input *elasticache.CreateCacheSecurityGroupInput) (req *request.Request, output *elasticache.CreateCacheSecurityGroupOutput) {
	c.inc("CreateCacheSecurityGroup")
	return c.svc.CreateCacheSecurityGroupRequest(input)
}

// CreateCacheSecurityGroup is a passthrough to the underlying CreateCacheSecurityGroup method.
// It will increment the count of requests made to CreateCacheSecurityGroup.
func (c *ElastiCache) CreateCacheSecurityGroup(input *elasticache.CreateCacheSecurityGroupInput) (*elasticache.CreateCacheSecurityGroupOutput, error) {
	c.inc("CreateCacheSecurityGroup")
	return c.svc.CreateCacheSecurityGroup(input)
}

// CreateCacheSecurityGroupWithContext is a passthrough to the underlying CreateCacheSecurityGroupWithContext method.
// It will increment the count of requests made to CreateCacheSecurityGroup.
func (c *ElastiCache) CreateCacheSecurityGroupWithContext(ctx aws.Context, input *elasticache.CreateCacheSecurityGroupInput, opts ...request.Option) (*elasticache.CreateCacheSecurityGroupOutput, error) {
	c.inc("CreateCacheSecurityGroup")
	return c.svc.CreateCacheSecurityGroupWithContext(ctx, input, opts...)
}

// CreateCacheSubnetGroupRequest is a passthrough to the underlying CreateCacheSubnetGroupRequest.
// It will increment the count of requests made to CreateCacheSubnetGroup.
func (c *ElastiCache) CreateCacheSubnetGroupRequest(input *elasticache.CreateCacheSubnetGroupInput) (req *request.Request, output *elasticache.CreateCacheSubnetGroupOutput) {
	c.inc("CreateCacheSubnetGroup")
	return c.svc.CreateCacheSubnetGroupRequest(input)
}

// CreateCacheSubnetGroup is a passthrough to the underlying CreateCacheSubnetGroup method.
// It will increment the count of requests made to CreateCacheSubnetGroup.
func (c *ElastiCache) CreateCacheSubnetGroup(input *elasticache.CreateCacheSubnetGroupInput) (*elasticache.CreateCacheSubnetGroupOutput, error) {
	c.inc("CreateCacheSubnetGroup")
	return c.svc.CreateCacheSubnetGroup(input)
}

// CreateCacheSubnetGroupWithContext is a passthrough to the underlying CreateCacheSubnetGroupWithContext method.
// It will increment the count of requests made to CreateCacheSubnetGroup.
func (c *ElastiCache) CreateCacheSubnetGroupWithContext(ctx aws.Context, input *elasticache.CreateCacheSubnetGroupInput, opts ...request.Option) (*elasticache.CreateCacheSubnetGroupOutput, error) {
	c.inc("CreateCacheSubnetGroup")
	return c.svc.CreateCacheSubnetGroupWithContext(ctx, input, opts...)
}

// CreateReplicationGroupRequest is a passthrough to the underlying CreateReplicationGroupRequest.
// It will increment the count of requests made to CreateReplicationGroup.
func (c *ElastiCache) CreateReplicationGroupRequest(input *elasticache.CreateReplicationGroupInput) (req *request.Request, output *elasticache.CreateReplicationGroupOutput) {
	c.inc("CreateReplicationGroup")
	return c.svc.CreateReplicationGroupRequest(input)
}

// CreateReplicationGroup is a passthrough to the underlying CreateReplicationGroup method.
// It will increment the count of requests made to CreateReplicationGroup.
func (c *ElastiCache) CreateReplicationGroup(input *elasticache.CreateReplicationGroupInput) (*elasticache.CreateReplicationGroupOutput, error) {
	c.inc("CreateReplicationGroup")
	return c.svc.CreateReplicationGroup(input)
}

// CreateReplicationGroupWithContext is a passthrough to the underlying CreateReplicationGroupWithContext method.
// It will increment the count of requests made to CreateReplicationGroup.
func (c *ElastiCache) CreateReplicationGroupWithContext(ctx aws.Context, input *elasticache.CreateReplicationGroupInput, opts ...request.Option) (*elasticache.CreateReplicationGroupOutput, error) {
	c.inc("CreateReplicationGroup")
	return c.svc.CreateReplicationGroupWithContext(ctx, input, opts...)
}

// CreateSnapshotRequest is a passthrough to the underlying CreateSnapshotRequest.
// It will increment the count of requests made to CreateSnapshot.
func (c *ElastiCache) CreateSnapshotRequest(input *elasticache.CreateSnapshotInput) (req *request.Request, output *elasticache.CreateSnapshotOutput) {
	c.inc("CreateSnapshot")
	return c.svc.CreateSnapshotRequest(input)
}

// CreateSnapshot is a passthrough to the underlying CreateSnapshot method.
// It will increment the count of requests made to CreateSnapshot.
func (c *ElastiCache) CreateSnapshot(input *elasticache.CreateSnapshotInput) (*elasticache.CreateSnapshotOutput, error) {
	c.inc("CreateSnapshot")
	return c.svc.CreateSnapshot(input)
}

// CreateSnapshotWithContext is a passthrough to the underlying CreateSnapshotWithContext method.
// It will increment the count of requests made to CreateSnapshot.
func (c *ElastiCache) CreateSnapshotWithContext(ctx aws.Context, input *elasticache.CreateSnapshotInput, opts ...request.Option) (*elasticache.CreateSnapshotOutput, error) {
	c.inc("CreateSnapshot")
	return c.svc.CreateSnapshotWithContext(ctx, input, opts...)
}

// DeleteCacheClusterRequest is a passthrough to the underlying DeleteCacheClusterRequest.
// It will increment the count of requests made to DeleteCacheCluster.
func (c *ElastiCache) DeleteCacheClusterRequest(input *elasticache.DeleteCacheClusterInput) (req *request.Request, output *elasticache.DeleteCacheClusterOutput) {
	c.inc("DeleteCacheCluster")
	return c.svc.DeleteCacheClusterRequest(input)
}

// DeleteCacheCluster is a passthrough to the underlying DeleteCacheCluster method.
// It will increment the count of requests made to DeleteCacheCluster.
func (c *ElastiCache) DeleteCacheCluster(input *elasticache.DeleteCacheClusterInput) (*elasticache.DeleteCacheClusterOutput, error) {
	c.inc("DeleteCacheCluster")
	return c.svc.DeleteCacheCluster(input)
}

// DeleteCacheClusterWithContext is a passthrough to the underlying DeleteCacheClusterWithContext method.
// It will increment the count of requests made to DeleteCacheCluster.
func (c *ElastiCache) DeleteCacheClusterWithContext(ctx aws.Context, input *elasticache.DeleteCacheClusterInput, opts ...request.Option) (*elasticache.DeleteCacheClusterOutput, error) {
	c.inc("DeleteCacheCluster")
	return c.svc.DeleteCacheClusterWithContext(ctx, input, opts...)
}

// DeleteCacheParameterGroupRequest is a passthrough to the underlying DeleteCacheParameterGroupRequest.
// It will increment the count of requests made to DeleteCacheParameterGroup.
func (c *ElastiCache) DeleteCacheParameterGroupRequest(input *elasticache.DeleteCacheParameterGroupInput) (req *request.Request, output *elasticache.DeleteCacheParameterGroupOutput) {
	c.inc("DeleteCacheParameterGroup")
	return c.svc.DeleteCacheParameterGroupRequest(input)
}

// DeleteCacheParameterGroup is a passthrough to the underlying DeleteCacheParameterGroup method.
// It will increment the count of requests made to DeleteCacheParameterGroup.
func (c *ElastiCache) DeleteCacheParameterGroup(input *elasticache.DeleteCacheParameterGroupInput) (*elasticache.DeleteCacheParameterGroupOutput, error) {
	c.inc("DeleteCacheParameterGroup")
	return c.svc.DeleteCacheParameterGroup(input)
}

// DeleteCacheParameterGroupWithContext is a passthrough to the underlying DeleteCacheParameterGroupWithContext method.
// It will increment the count of requests made to DeleteCacheParameterGroup.
func (c *ElastiCache) DeleteCacheParameterGroupWithContext(ctx aws.Context, input *elasticache.DeleteCacheParameterGroupInput, opts ...request.Option) (*elasticache.DeleteCacheParameterGroupOutput, error) {
	c.inc("DeleteCacheParameterGroup")
	return c.svc.DeleteCacheParameterGroupWithContext(ctx, input, opts...)
}

// DeleteCacheSecurityGroupRequest is a passthrough to the underlying DeleteCacheSecurityGroupRequest.
// It will increment the count of requests made to DeleteCacheSecurityGroup.
func (c *ElastiCache) DeleteCacheSecurityGroupRequest(input *elasticache.DeleteCacheSecurityGroupInput) (req *request.Request, output *elasticache.DeleteCacheSecurityGroupOutput) {
	c.inc("DeleteCacheSecurityGroup")
	return c.svc.DeleteCacheSecurityGroupRequest(input)
}

// DeleteCacheSecurityGroup is a passthrough to the underlying DeleteCacheSecurityGroup method.
// It will increment the count of requests made to DeleteCacheSecurityGroup.
func (c *ElastiCache) DeleteCacheSecurityGroup(input *elasticache.DeleteCacheSecurityGroupInput) (*elasticache.DeleteCacheSecurityGroupOutput, error) {
	c.inc("DeleteCacheSecurityGroup")
	return c.svc.DeleteCacheSecurityGroup(input)
}

// DeleteCacheSecurityGroupWithContext is a passthrough to the underlying DeleteCacheSecurityGroupWithContext method.
// It will increment the count of requests made to DeleteCacheSecurityGroup.
func (c *ElastiCache) DeleteCacheSecurityGroupWithContext(ctx aws.Context, input *elasticache.DeleteCacheSecurityGroupInput, opts ...request.Option) (*elasticache.DeleteCacheSecurityGroupOutput, error) {
	c.inc("DeleteCacheSecurityGroup")
	return c.svc.DeleteCacheSecurityGroupWithContext(ctx, input, opts...)
}

// DeleteCacheSubnetGroupRequest is a passthrough to the underlying DeleteCacheSubnetGroupRequest.
// It will increment the count of requests made to DeleteCacheSubnetGroup.
func (c *ElastiCache) DeleteCacheSubnetGroupRequest(input *elasticache.DeleteCacheSubnetGroupInput) (req *request.Request, output *elasticache.DeleteCacheSubnetGroupOutput) {
	c.inc("DeleteCacheSubnetGroup")
	return c.svc.DeleteCacheSubnetGroupRequest(input)
}

// DeleteCacheSubnetGroup is a passthrough to the underlying DeleteCacheSubnetGroup method.
// It will increment the count of requests made to DeleteCacheSubnetGroup.
func (c *ElastiCache) DeleteCacheSubnetGroup(input *elasticache.DeleteCacheSubnetGroupInput) (*elasticache.DeleteCacheSubnetGroupOutput, error) {
	c.inc("DeleteCacheSubnetGroup")
	return c.svc.DeleteCacheSubnetGroup(input)
}

// DeleteCacheSubnetGroupWithContext is a passthrough to the underlying DeleteCacheSubnetGroupWithContext method.
// It will increment the count of requests made to DeleteCacheSubnetGroup.
func (c *ElastiCache) DeleteCacheSubnetGroupWithContext(ctx aws.Context, input *elasticache.DeleteCacheSubnetGroupInput, opts ...request.Option) (*elasticache.DeleteCacheSubnetGroupOutput, error) {
	c.inc("DeleteCacheSubnetGroup")
	return c.svc.DeleteCacheSubnetGroupWithContext(ctx, input, opts...)
}

// DeleteReplicationGroupRequest is a passthrough to the underlying DeleteReplicationGroupRequest.
// It will increment the count of requests made to DeleteReplicationGroup.
func (c *ElastiCache) DeleteReplicationGroupRequest(input *elasticache.DeleteReplicationGroupInput) (req *request.Request, output *elasticache.DeleteReplicationGroupOutput) {
	c.inc("DeleteReplicationGroup")
	return c.svc.DeleteReplicationGroupRequest(input)
}

// DeleteReplicationGroup is a passthrough to the underlying DeleteReplicationGroup method.
// It will increment the count of requests made to DeleteReplicationGroup.
func (c *ElastiCache) DeleteReplicationGroup(input *elasticache.DeleteReplicationGroupInput) (*elasticache.DeleteReplicationGroupOutput, error) {
	c.inc("DeleteReplicationGroup")
	return c.svc.DeleteReplicationGroup(input)
}

// DeleteReplicationGroupWithContext is a passthrough to the underlying DeleteReplicationGroupWithContext method.
// It will increment the count of requests made to DeleteReplicationGroup.
func (c *ElastiCache) DeleteReplicationGroupWithContext(ctx aws.Context, input *elasticache.DeleteReplicationGroupInput, opts ...request.Option) (*elasticache.DeleteReplicationGroupOutput, error) {
	c.inc("DeleteReplicationGroup")
	return c.svc.DeleteReplicationGroupWithContext(ctx, input, opts...)
}

// DeleteSnapshotRequest is a passthrough to the underlying DeleteSnapshotRequest.
// It will increment the count of requests made to DeleteSnapshot.
func (c *ElastiCache) DeleteSnapshotRequest(input *elasticache.DeleteSnapshotInput) (req *request.Request, output *elasticache.DeleteSnapshotOutput) {
	c.inc("DeleteSnapshot")
	return c.svc.DeleteSnapshotRequest(input)
}

// DeleteSnapshot is a passthrough to the underlying DeleteSnapshot method.
// It will increment the count of requests made to DeleteSnapshot.
func (c *ElastiCache) DeleteSnapshot(input *elasticache.DeleteSnapshotInput) (*elasticache.DeleteSnapshotOutput, error) {
	c.inc("DeleteSnapshot")
	return c.svc.DeleteSnapshot(input)
}

// DeleteSnapshotWithContext is a passthrough to the underlying DeleteSnapshotWithContext method.
// It will increment the count of requests made to DeleteSnapshot.
func (c *ElastiCache) DeleteSnapshotWithContext(ctx aws.Context, input *elasticache.DeleteSnapshotInput, opts ...request.Option) (*elasticache.DeleteSnapshotOutput, error) {
	c.inc("DeleteSnapshot")
	return c.svc.DeleteSnapshotWithContext(ctx, input, opts...)
}

// DescribeCacheClustersRequest is a passthrough to the underlying DescribeCacheClustersRequest.
// It will increment the count of requests made to DescribeCacheClusters.
func (c *ElastiCache) DescribeCacheClustersRequest(input *elasticache.DescribeCacheClustersInput) (req *request.Request, output *elasticache.DescribeCacheClustersOutput) {
	c.inc("DescribeCacheClusters")
	return c.svc.DescribeCacheClustersRequest(input)
}

// DescribeCacheClusters is a passthrough to the underlying DescribeCacheClusters method.
// It will increment the count of requests made to DescribeCacheClusters.
func (c *ElastiCache) DescribeCacheClusters(input *elasticache.DescribeCacheClustersInput) (*elasticache.DescribeCacheClustersOutput, error) {
	c.inc("DescribeCacheClusters")
	return c.svc.DescribeCacheClusters(input)
}

// DescribeCacheClustersWithContext is a passthrough to the underlying DescribeCacheClustersWithContext method.
// It will increment the count of requests made to DescribeCacheClusters.
func (c *ElastiCache) DescribeCacheClustersWithContext(ctx aws.Context, input *elasticache.DescribeCacheClustersInput, opts ...request.Option) (*elasticache.DescribeCacheClustersOutput, error) {
	c.inc("DescribeCacheClusters")
	return c.svc.DescribeCacheClustersWithContext(ctx, input, opts...)
}

// DescribeCacheClustersPages is a passthrough to the underlying DescribeCacheClustersPages method.
// It will increment the count of requests made to DescribeCacheClusters on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeCacheClustersPagesWithContext to avoid this.
func (c *ElastiCache) DescribeCacheClustersPages(input *elasticache.DescribeCacheClustersInput, fn func(*elasticache.DescribeCacheClustersOutput, bool) bool) error {
	wrappedFn := func(page *elasticache.DescribeCacheClustersOutput, lastPage bool) bool {
		c.inc("DescribeCacheClusters")
		return fn(page, lastPage)
	}
	return c.DescribeCacheClustersPages(input, wrappedFn)
}

// DescribeCacheClustersPagesWithContext is a passthrough to the underlying DescribeCacheClustersPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeCacheClusters when applied to the request.
func (c *ElastiCache) DescribeCacheClustersPagesWithContext(ctx aws.Context, input *elasticache.DescribeCacheClustersInput, fn func(*elasticache.DescribeCacheClustersOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeCacheClusters"))
	return c.DescribeCacheClustersPagesWithContext(ctx, input, fn, opts...)
}

// DescribeCacheEngineVersionsRequest is a passthrough to the underlying DescribeCacheEngineVersionsRequest.
// It will increment the count of requests made to DescribeCacheEngineVersions.
func (c *ElastiCache) DescribeCacheEngineVersionsRequest(input *elasticache.DescribeCacheEngineVersionsInput) (req *request.Request, output *elasticache.DescribeCacheEngineVersionsOutput) {
	c.inc("DescribeCacheEngineVersions")
	return c.svc.DescribeCacheEngineVersionsRequest(input)
}

// DescribeCacheEngineVersions is a passthrough to the underlying DescribeCacheEngineVersions method.
// It will increment the count of requests made to DescribeCacheEngineVersions.
func (c *ElastiCache) DescribeCacheEngineVersions(input *elasticache.DescribeCacheEngineVersionsInput) (*elasticache.DescribeCacheEngineVersionsOutput, error) {
	c.inc("DescribeCacheEngineVersions")
	return c.svc.DescribeCacheEngineVersions(input)
}

// DescribeCacheEngineVersionsWithContext is a passthrough to the underlying DescribeCacheEngineVersionsWithContext method.
// It will increment the count of requests made to DescribeCacheEngineVersions.
func (c *ElastiCache) DescribeCacheEngineVersionsWithContext(ctx aws.Context, input *elasticache.DescribeCacheEngineVersionsInput, opts ...request.Option) (*elasticache.DescribeCacheEngineVersionsOutput, error) {
	c.inc("DescribeCacheEngineVersions")
	return c.svc.DescribeCacheEngineVersionsWithContext(ctx, input, opts...)
}

// DescribeCacheEngineVersionsPages is a passthrough to the underlying DescribeCacheEngineVersionsPages method.
// It will increment the count of requests made to DescribeCacheEngineVersions on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeCacheEngineVersionsPagesWithContext to avoid this.
func (c *ElastiCache) DescribeCacheEngineVersionsPages(input *elasticache.DescribeCacheEngineVersionsInput, fn func(*elasticache.DescribeCacheEngineVersionsOutput, bool) bool) error {
	wrappedFn := func(page *elasticache.DescribeCacheEngineVersionsOutput, lastPage bool) bool {
		c.inc("DescribeCacheEngineVersions")
		return fn(page, lastPage)
	}
	return c.DescribeCacheEngineVersionsPages(input, wrappedFn)
}

// DescribeCacheEngineVersionsPagesWithContext is a passthrough to the underlying DescribeCacheEngineVersionsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeCacheEngineVersions when applied to the request.
func (c *ElastiCache) DescribeCacheEngineVersionsPagesWithContext(ctx aws.Context, input *elasticache.DescribeCacheEngineVersionsInput, fn func(*elasticache.DescribeCacheEngineVersionsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeCacheEngineVersions"))
	return c.DescribeCacheEngineVersionsPagesWithContext(ctx, input, fn, opts...)
}

// DescribeCacheParameterGroupsRequest is a passthrough to the underlying DescribeCacheParameterGroupsRequest.
// It will increment the count of requests made to DescribeCacheParameterGroups.
func (c *ElastiCache) DescribeCacheParameterGroupsRequest(input *elasticache.DescribeCacheParameterGroupsInput) (req *request.Request, output *elasticache.DescribeCacheParameterGroupsOutput) {
	c.inc("DescribeCacheParameterGroups")
	return c.svc.DescribeCacheParameterGroupsRequest(input)
}

// DescribeCacheParameterGroups is a passthrough to the underlying DescribeCacheParameterGroups method.
// It will increment the count of requests made to DescribeCacheParameterGroups.
func (c *ElastiCache) DescribeCacheParameterGroups(input *elasticache.DescribeCacheParameterGroupsInput) (*elasticache.DescribeCacheParameterGroupsOutput, error) {
	c.inc("DescribeCacheParameterGroups")
	return c.svc.DescribeCacheParameterGroups(input)
}

// DescribeCacheParameterGroupsWithContext is a passthrough to the underlying DescribeCacheParameterGroupsWithContext method.
// It will increment the count of requests made to DescribeCacheParameterGroups.
func (c *ElastiCache) DescribeCacheParameterGroupsWithContext(ctx aws.Context, input *elasticache.DescribeCacheParameterGroupsInput, opts ...request.Option) (*elasticache.DescribeCacheParameterGroupsOutput, error) {
	c.inc("DescribeCacheParameterGroups")
	return c.svc.DescribeCacheParameterGroupsWithContext(ctx, input, opts...)
}

// DescribeCacheParameterGroupsPages is a passthrough to the underlying DescribeCacheParameterGroupsPages method.
// It will increment the count of requests made to DescribeCacheParameterGroups on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeCacheParameterGroupsPagesWithContext to avoid this.
func (c *ElastiCache) DescribeCacheParameterGroupsPages(input *elasticache.DescribeCacheParameterGroupsInput, fn func(*elasticache.DescribeCacheParameterGroupsOutput, bool) bool) error {
	wrappedFn := func(page *elasticache.DescribeCacheParameterGroupsOutput, lastPage bool) bool {
		c.inc("DescribeCacheParameterGroups")
		return fn(page, lastPage)
	}
	return c.DescribeCacheParameterGroupsPages(input, wrappedFn)
}

// DescribeCacheParameterGroupsPagesWithContext is a passthrough to the underlying DescribeCacheParameterGroupsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeCacheParameterGroups when applied to the request.
func (c *ElastiCache) DescribeCacheParameterGroupsPagesWithContext(ctx aws.Context, input *elasticache.DescribeCacheParameterGroupsInput, fn func(*elasticache.DescribeCacheParameterGroupsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeCacheParameterGroups"))
	return c.DescribeCacheParameterGroupsPagesWithContext(ctx, input, fn, opts...)
}

// DescribeCacheParametersRequest is a passthrough to the underlying DescribeCacheParametersRequest.
// It will increment the count of requests made to DescribeCacheParameters.
func (c *ElastiCache) DescribeCacheParametersRequest(input *elasticache.DescribeCacheParametersInput) (req *request.Request, output *elasticache.DescribeCacheParametersOutput) {
	c.inc("DescribeCacheParameters")
	return c.svc.DescribeCacheParametersRequest(input)
}

// DescribeCacheParameters is a passthrough to the underlying DescribeCacheParameters method.
// It will increment the count of requests made to DescribeCacheParameters.
func (c *ElastiCache) DescribeCacheParameters(input *elasticache.DescribeCacheParametersInput) (*elasticache.DescribeCacheParametersOutput, error) {
	c.inc("DescribeCacheParameters")
	return c.svc.DescribeCacheParameters(input)
}

// DescribeCacheParametersWithContext is a passthrough to the underlying DescribeCacheParametersWithContext method.
// It will increment the count of requests made to DescribeCacheParameters.
func (c *ElastiCache) DescribeCacheParametersWithContext(ctx aws.Context, input *elasticache.DescribeCacheParametersInput, opts ...request.Option) (*elasticache.DescribeCacheParametersOutput, error) {
	c.inc("DescribeCacheParameters")
	return c.svc.DescribeCacheParametersWithContext(ctx, input, opts...)
}

// DescribeCacheParametersPages is a passthrough to the underlying DescribeCacheParametersPages method.
// It will increment the count of requests made to DescribeCacheParameters on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeCacheParametersPagesWithContext to avoid this.
func (c *ElastiCache) DescribeCacheParametersPages(input *elasticache.DescribeCacheParametersInput, fn func(*elasticache.DescribeCacheParametersOutput, bool) bool) error {
	wrappedFn := func(page *elasticache.DescribeCacheParametersOutput, lastPage bool) bool {
		c.inc("DescribeCacheParameters")
		return fn(page, lastPage)
	}
	return c.DescribeCacheParametersPages(input, wrappedFn)
}

// DescribeCacheParametersPagesWithContext is a passthrough to the underlying DescribeCacheParametersPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeCacheParameters when applied to the request.
func (c *ElastiCache) DescribeCacheParametersPagesWithContext(ctx aws.Context, input *elasticache.DescribeCacheParametersInput, fn func(*elasticache.DescribeCacheParametersOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeCacheParameters"))
	return c.DescribeCacheParametersPagesWithContext(ctx, input, fn, opts...)
}

// DescribeCacheSecurityGroupsRequest is a passthrough to the underlying DescribeCacheSecurityGroupsRequest.
// It will increment the count of requests made to DescribeCacheSecurityGroups.
func (c *ElastiCache) DescribeCacheSecurityGroupsRequest(input *elasticache.DescribeCacheSecurityGroupsInput) (req *request.Request, output *elasticache.DescribeCacheSecurityGroupsOutput) {
	c.inc("DescribeCacheSecurityGroups")
	return c.svc.DescribeCacheSecurityGroupsRequest(input)
}

// DescribeCacheSecurityGroups is a passthrough to the underlying DescribeCacheSecurityGroups method.
// It will increment the count of requests made to DescribeCacheSecurityGroups.
func (c *ElastiCache) DescribeCacheSecurityGroups(input *elasticache.DescribeCacheSecurityGroupsInput) (*elasticache.DescribeCacheSecurityGroupsOutput, error) {
	c.inc("DescribeCacheSecurityGroups")
	return c.svc.DescribeCacheSecurityGroups(input)
}

// DescribeCacheSecurityGroupsWithContext is a passthrough to the underlying DescribeCacheSecurityGroupsWithContext method.
// It will increment the count of requests made to DescribeCacheSecurityGroups.
func (c *ElastiCache) DescribeCacheSecurityGroupsWithContext(ctx aws.Context, input *elasticache.DescribeCacheSecurityGroupsInput, opts ...request.Option) (*elasticache.DescribeCacheSecurityGroupsOutput, error) {
	c.inc("DescribeCacheSecurityGroups")
	return c.svc.DescribeCacheSecurityGroupsWithContext(ctx, input, opts...)
}

// DescribeCacheSecurityGroupsPages is a passthrough to the underlying DescribeCacheSecurityGroupsPages method.
// It will increment the count of requests made to DescribeCacheSecurityGroups on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeCacheSecurityGroupsPagesWithContext to avoid this.
func (c *ElastiCache) DescribeCacheSecurityGroupsPages(input *elasticache.DescribeCacheSecurityGroupsInput, fn func(*elasticache.DescribeCacheSecurityGroupsOutput, bool) bool) error {
	wrappedFn := func(page *elasticache.DescribeCacheSecurityGroupsOutput, lastPage bool) bool {
		c.inc("DescribeCacheSecurityGroups")
		return fn(page, lastPage)
	}
	return c.DescribeCacheSecurityGroupsPages(input, wrappedFn)
}

// DescribeCacheSecurityGroupsPagesWithContext is a passthrough to the underlying DescribeCacheSecurityGroupsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeCacheSecurityGroups when applied to the request.
func (c *ElastiCache) DescribeCacheSecurityGroupsPagesWithContext(ctx aws.Context, input *elasticache.DescribeCacheSecurityGroupsInput, fn func(*elasticache.DescribeCacheSecurityGroupsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeCacheSecurityGroups"))
	return c.DescribeCacheSecurityGroupsPagesWithContext(ctx, input, fn, opts...)
}

// DescribeCacheSubnetGroupsRequest is a passthrough to the underlying DescribeCacheSubnetGroupsRequest.
// It will increment the count of requests made to DescribeCacheSubnetGroups.
func (c *ElastiCache) DescribeCacheSubnetGroupsRequest(input *elasticache.DescribeCacheSubnetGroupsInput) (req *request.Request, output *elasticache.DescribeCacheSubnetGroupsOutput) {
	c.inc("DescribeCacheSubnetGroups")
	return c.svc.DescribeCacheSubnetGroupsRequest(input)
}

// DescribeCacheSubnetGroups is a passthrough to the underlying DescribeCacheSubnetGroups method.
// It will increment the count of requests made to DescribeCacheSubnetGroups.
func (c *ElastiCache) DescribeCacheSubnetGroups(input *elasticache.DescribeCacheSubnetGroupsInput) (*elasticache.DescribeCacheSubnetGroupsOutput, error) {
	c.inc("DescribeCacheSubnetGroups")
	return c.svc.DescribeCacheSubnetGroups(input)
}

// DescribeCacheSubnetGroupsWithContext is a passthrough to the underlying DescribeCacheSubnetGroupsWithContext method.
// It will increment the count of requests made to DescribeCacheSubnetGroups.
func (c *ElastiCache) DescribeCacheSubnetGroupsWithContext(ctx aws.Context, input *elasticache.DescribeCacheSubnetGroupsInput, opts ...request.Option) (*elasticache.DescribeCacheSubnetGroupsOutput, error) {
	c.inc("DescribeCacheSubnetGroups")
	return c.svc.DescribeCacheSubnetGroupsWithContext(ctx, input, opts...)
}

// DescribeCacheSubnetGroupsPages is a passthrough to the underlying DescribeCacheSubnetGroupsPages method.
// It will increment the count of requests made to DescribeCacheSubnetGroups on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeCacheSubnetGroupsPagesWithContext to avoid this.
func (c *ElastiCache) DescribeCacheSubnetGroupsPages(input *elasticache.DescribeCacheSubnetGroupsInput, fn func(*elasticache.DescribeCacheSubnetGroupsOutput, bool) bool) error {
	wrappedFn := func(page *elasticache.DescribeCacheSubnetGroupsOutput, lastPage bool) bool {
		c.inc("DescribeCacheSubnetGroups")
		return fn(page, lastPage)
	}
	return c.DescribeCacheSubnetGroupsPages(input, wrappedFn)
}

// DescribeCacheSubnetGroupsPagesWithContext is a passthrough to the underlying DescribeCacheSubnetGroupsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeCacheSubnetGroups when applied to the request.
func (c *ElastiCache) DescribeCacheSubnetGroupsPagesWithContext(ctx aws.Context, input *elasticache.DescribeCacheSubnetGroupsInput, fn func(*elasticache.DescribeCacheSubnetGroupsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeCacheSubnetGroups"))
	return c.DescribeCacheSubnetGroupsPagesWithContext(ctx, input, fn, opts...)
}

// DescribeEngineDefaultParametersRequest is a passthrough to the underlying DescribeEngineDefaultParametersRequest.
// It will increment the count of requests made to DescribeEngineDefaultParameters.
func (c *ElastiCache) DescribeEngineDefaultParametersRequest(input *elasticache.DescribeEngineDefaultParametersInput) (req *request.Request, output *elasticache.DescribeEngineDefaultParametersOutput) {
	c.inc("DescribeEngineDefaultParameters")
	return c.svc.DescribeEngineDefaultParametersRequest(input)
}

// DescribeEngineDefaultParameters is a passthrough to the underlying DescribeEngineDefaultParameters method.
// It will increment the count of requests made to DescribeEngineDefaultParameters.
func (c *ElastiCache) DescribeEngineDefaultParameters(input *elasticache.DescribeEngineDefaultParametersInput) (*elasticache.DescribeEngineDefaultParametersOutput, error) {
	c.inc("DescribeEngineDefaultParameters")
	return c.svc.DescribeEngineDefaultParameters(input)
}

// DescribeEngineDefaultParametersWithContext is a passthrough to the underlying DescribeEngineDefaultParametersWithContext method.
// It will increment the count of requests made to DescribeEngineDefaultParameters.
func (c *ElastiCache) DescribeEngineDefaultParametersWithContext(ctx aws.Context, input *elasticache.DescribeEngineDefaultParametersInput, opts ...request.Option) (*elasticache.DescribeEngineDefaultParametersOutput, error) {
	c.inc("DescribeEngineDefaultParameters")
	return c.svc.DescribeEngineDefaultParametersWithContext(ctx, input, opts...)
}

// DescribeEngineDefaultParametersPages is a passthrough to the underlying DescribeEngineDefaultParametersPages method.
// It will increment the count of requests made to DescribeEngineDefaultParameters on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeEngineDefaultParametersPagesWithContext to avoid this.
func (c *ElastiCache) DescribeEngineDefaultParametersPages(input *elasticache.DescribeEngineDefaultParametersInput, fn func(*elasticache.DescribeEngineDefaultParametersOutput, bool) bool) error {
	wrappedFn := func(page *elasticache.DescribeEngineDefaultParametersOutput, lastPage bool) bool {
		c.inc("DescribeEngineDefaultParameters")
		return fn(page, lastPage)
	}
	return c.DescribeEngineDefaultParametersPages(input, wrappedFn)
}

// DescribeEngineDefaultParametersPagesWithContext is a passthrough to the underlying DescribeEngineDefaultParametersPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeEngineDefaultParameters when applied to the request.
func (c *ElastiCache) DescribeEngineDefaultParametersPagesWithContext(ctx aws.Context, input *elasticache.DescribeEngineDefaultParametersInput, fn func(*elasticache.DescribeEngineDefaultParametersOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeEngineDefaultParameters"))
	return c.DescribeEngineDefaultParametersPagesWithContext(ctx, input, fn, opts...)
}

// DescribeEventsRequest is a passthrough to the underlying DescribeEventsRequest.
// It will increment the count of requests made to DescribeEvents.
func (c *ElastiCache) DescribeEventsRequest(input *elasticache.DescribeEventsInput) (req *request.Request, output *elasticache.DescribeEventsOutput) {
	c.inc("DescribeEvents")
	return c.svc.DescribeEventsRequest(input)
}

// DescribeEvents is a passthrough to the underlying DescribeEvents method.
// It will increment the count of requests made to DescribeEvents.
func (c *ElastiCache) DescribeEvents(input *elasticache.DescribeEventsInput) (*elasticache.DescribeEventsOutput, error) {
	c.inc("DescribeEvents")
	return c.svc.DescribeEvents(input)
}

// DescribeEventsWithContext is a passthrough to the underlying DescribeEventsWithContext method.
// It will increment the count of requests made to DescribeEvents.
func (c *ElastiCache) DescribeEventsWithContext(ctx aws.Context, input *elasticache.DescribeEventsInput, opts ...request.Option) (*elasticache.DescribeEventsOutput, error) {
	c.inc("DescribeEvents")
	return c.svc.DescribeEventsWithContext(ctx, input, opts...)
}

// DescribeEventsPages is a passthrough to the underlying DescribeEventsPages method.
// It will increment the count of requests made to DescribeEvents on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeEventsPagesWithContext to avoid this.
func (c *ElastiCache) DescribeEventsPages(input *elasticache.DescribeEventsInput, fn func(*elasticache.DescribeEventsOutput, bool) bool) error {
	wrappedFn := func(page *elasticache.DescribeEventsOutput, lastPage bool) bool {
		c.inc("DescribeEvents")
		return fn(page, lastPage)
	}
	return c.DescribeEventsPages(input, wrappedFn)
}

// DescribeEventsPagesWithContext is a passthrough to the underlying DescribeEventsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeEvents when applied to the request.
func (c *ElastiCache) DescribeEventsPagesWithContext(ctx aws.Context, input *elasticache.DescribeEventsInput, fn func(*elasticache.DescribeEventsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeEvents"))
	return c.DescribeEventsPagesWithContext(ctx, input, fn, opts...)
}

// DescribeReplicationGroupsRequest is a passthrough to the underlying DescribeReplicationGroupsRequest.
// It will increment the count of requests made to DescribeReplicationGroups.
func (c *ElastiCache) DescribeReplicationGroupsRequest(input *elasticache.DescribeReplicationGroupsInput) (req *request.Request, output *elasticache.DescribeReplicationGroupsOutput) {
	c.inc("DescribeReplicationGroups")
	return c.svc.DescribeReplicationGroupsRequest(input)
}

// DescribeReplicationGroups is a passthrough to the underlying DescribeReplicationGroups method.
// It will increment the count of requests made to DescribeReplicationGroups.
func (c *ElastiCache) DescribeReplicationGroups(input *elasticache.DescribeReplicationGroupsInput) (*elasticache.DescribeReplicationGroupsOutput, error) {
	c.inc("DescribeReplicationGroups")
	return c.svc.DescribeReplicationGroups(input)
}

// DescribeReplicationGroupsWithContext is a passthrough to the underlying DescribeReplicationGroupsWithContext method.
// It will increment the count of requests made to DescribeReplicationGroups.
func (c *ElastiCache) DescribeReplicationGroupsWithContext(ctx aws.Context, input *elasticache.DescribeReplicationGroupsInput, opts ...request.Option) (*elasticache.DescribeReplicationGroupsOutput, error) {
	c.inc("DescribeReplicationGroups")
	return c.svc.DescribeReplicationGroupsWithContext(ctx, input, opts...)
}

// DescribeReplicationGroupsPages is a passthrough to the underlying DescribeReplicationGroupsPages method.
// It will increment the count of requests made to DescribeReplicationGroups on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeReplicationGroupsPagesWithContext to avoid this.
func (c *ElastiCache) DescribeReplicationGroupsPages(input *elasticache.DescribeReplicationGroupsInput, fn func(*elasticache.DescribeReplicationGroupsOutput, bool) bool) error {
	wrappedFn := func(page *elasticache.DescribeReplicationGroupsOutput, lastPage bool) bool {
		c.inc("DescribeReplicationGroups")
		return fn(page, lastPage)
	}
	return c.DescribeReplicationGroupsPages(input, wrappedFn)
}

// DescribeReplicationGroupsPagesWithContext is a passthrough to the underlying DescribeReplicationGroupsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeReplicationGroups when applied to the request.
func (c *ElastiCache) DescribeReplicationGroupsPagesWithContext(ctx aws.Context, input *elasticache.DescribeReplicationGroupsInput, fn func(*elasticache.DescribeReplicationGroupsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeReplicationGroups"))
	return c.DescribeReplicationGroupsPagesWithContext(ctx, input, fn, opts...)
}

// DescribeReservedCacheNodesRequest is a passthrough to the underlying DescribeReservedCacheNodesRequest.
// It will increment the count of requests made to DescribeReservedCacheNodes.
func (c *ElastiCache) DescribeReservedCacheNodesRequest(input *elasticache.DescribeReservedCacheNodesInput) (req *request.Request, output *elasticache.DescribeReservedCacheNodesOutput) {
	c.inc("DescribeReservedCacheNodes")
	return c.svc.DescribeReservedCacheNodesRequest(input)
}

// DescribeReservedCacheNodes is a passthrough to the underlying DescribeReservedCacheNodes method.
// It will increment the count of requests made to DescribeReservedCacheNodes.
func (c *ElastiCache) DescribeReservedCacheNodes(input *elasticache.DescribeReservedCacheNodesInput) (*elasticache.DescribeReservedCacheNodesOutput, error) {
	c.inc("DescribeReservedCacheNodes")
	return c.svc.DescribeReservedCacheNodes(input)
}

// DescribeReservedCacheNodesWithContext is a passthrough to the underlying DescribeReservedCacheNodesWithContext method.
// It will increment the count of requests made to DescribeReservedCacheNodes.
func (c *ElastiCache) DescribeReservedCacheNodesWithContext(ctx aws.Context, input *elasticache.DescribeReservedCacheNodesInput, opts ...request.Option) (*elasticache.DescribeReservedCacheNodesOutput, error) {
	c.inc("DescribeReservedCacheNodes")
	return c.svc.DescribeReservedCacheNodesWithContext(ctx, input, opts...)
}

// DescribeReservedCacheNodesPages is a passthrough to the underlying DescribeReservedCacheNodesPages method.
// It will increment the count of requests made to DescribeReservedCacheNodes on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeReservedCacheNodesPagesWithContext to avoid this.
func (c *ElastiCache) DescribeReservedCacheNodesPages(input *elasticache.DescribeReservedCacheNodesInput, fn func(*elasticache.DescribeReservedCacheNodesOutput, bool) bool) error {
	wrappedFn := func(page *elasticache.DescribeReservedCacheNodesOutput, lastPage bool) bool {
		c.inc("DescribeReservedCacheNodes")
		return fn(page, lastPage)
	}
	return c.DescribeReservedCacheNodesPages(input, wrappedFn)
}

// DescribeReservedCacheNodesPagesWithContext is a passthrough to the underlying DescribeReservedCacheNodesPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeReservedCacheNodes when applied to the request.
func (c *ElastiCache) DescribeReservedCacheNodesPagesWithContext(ctx aws.Context, input *elasticache.DescribeReservedCacheNodesInput, fn func(*elasticache.DescribeReservedCacheNodesOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeReservedCacheNodes"))
	return c.DescribeReservedCacheNodesPagesWithContext(ctx, input, fn, opts...)
}

// DescribeReservedCacheNodesOfferingsRequest is a passthrough to the underlying DescribeReservedCacheNodesOfferingsRequest.
// It will increment the count of requests made to DescribeReservedCacheNodesOfferings.
func (c *ElastiCache) DescribeReservedCacheNodesOfferingsRequest(input *elasticache.DescribeReservedCacheNodesOfferingsInput) (req *request.Request, output *elasticache.DescribeReservedCacheNodesOfferingsOutput) {
	c.inc("DescribeReservedCacheNodesOfferings")
	return c.svc.DescribeReservedCacheNodesOfferingsRequest(input)
}

// DescribeReservedCacheNodesOfferings is a passthrough to the underlying DescribeReservedCacheNodesOfferings method.
// It will increment the count of requests made to DescribeReservedCacheNodesOfferings.
func (c *ElastiCache) DescribeReservedCacheNodesOfferings(input *elasticache.DescribeReservedCacheNodesOfferingsInput) (*elasticache.DescribeReservedCacheNodesOfferingsOutput, error) {
	c.inc("DescribeReservedCacheNodesOfferings")
	return c.svc.DescribeReservedCacheNodesOfferings(input)
}

// DescribeReservedCacheNodesOfferingsWithContext is a passthrough to the underlying DescribeReservedCacheNodesOfferingsWithContext method.
// It will increment the count of requests made to DescribeReservedCacheNodesOfferings.
func (c *ElastiCache) DescribeReservedCacheNodesOfferingsWithContext(ctx aws.Context, input *elasticache.DescribeReservedCacheNodesOfferingsInput, opts ...request.Option) (*elasticache.DescribeReservedCacheNodesOfferingsOutput, error) {
	c.inc("DescribeReservedCacheNodesOfferings")
	return c.svc.DescribeReservedCacheNodesOfferingsWithContext(ctx, input, opts...)
}

// DescribeReservedCacheNodesOfferingsPages is a passthrough to the underlying DescribeReservedCacheNodesOfferingsPages method.
// It will increment the count of requests made to DescribeReservedCacheNodesOfferings on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeReservedCacheNodesOfferingsPagesWithContext to avoid this.
func (c *ElastiCache) DescribeReservedCacheNodesOfferingsPages(input *elasticache.DescribeReservedCacheNodesOfferingsInput, fn func(*elasticache.DescribeReservedCacheNodesOfferingsOutput, bool) bool) error {
	wrappedFn := func(page *elasticache.DescribeReservedCacheNodesOfferingsOutput, lastPage bool) bool {
		c.inc("DescribeReservedCacheNodesOfferings")
		return fn(page, lastPage)
	}
	return c.DescribeReservedCacheNodesOfferingsPages(input, wrappedFn)
}

// DescribeReservedCacheNodesOfferingsPagesWithContext is a passthrough to the underlying DescribeReservedCacheNodesOfferingsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeReservedCacheNodesOfferings when applied to the request.
func (c *ElastiCache) DescribeReservedCacheNodesOfferingsPagesWithContext(ctx aws.Context, input *elasticache.DescribeReservedCacheNodesOfferingsInput, fn func(*elasticache.DescribeReservedCacheNodesOfferingsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeReservedCacheNodesOfferings"))
	return c.DescribeReservedCacheNodesOfferingsPagesWithContext(ctx, input, fn, opts...)
}

// DescribeSnapshotsRequest is a passthrough to the underlying DescribeSnapshotsRequest.
// It will increment the count of requests made to DescribeSnapshots.
func (c *ElastiCache) DescribeSnapshotsRequest(input *elasticache.DescribeSnapshotsInput) (req *request.Request, output *elasticache.DescribeSnapshotsOutput) {
	c.inc("DescribeSnapshots")
	return c.svc.DescribeSnapshotsRequest(input)
}

// DescribeSnapshots is a passthrough to the underlying DescribeSnapshots method.
// It will increment the count of requests made to DescribeSnapshots.
func (c *ElastiCache) DescribeSnapshots(input *elasticache.DescribeSnapshotsInput) (*elasticache.DescribeSnapshotsOutput, error) {
	c.inc("DescribeSnapshots")
	return c.svc.DescribeSnapshots(input)
}

// DescribeSnapshotsWithContext is a passthrough to the underlying DescribeSnapshotsWithContext method.
// It will increment the count of requests made to DescribeSnapshots.
func (c *ElastiCache) DescribeSnapshotsWithContext(ctx aws.Context, input *elasticache.DescribeSnapshotsInput, opts ...request.Option) (*elasticache.DescribeSnapshotsOutput, error) {
	c.inc("DescribeSnapshots")
	return c.svc.DescribeSnapshotsWithContext(ctx, input, opts...)
}

// DescribeSnapshotsPages is a passthrough to the underlying DescribeSnapshotsPages method.
// It will increment the count of requests made to DescribeSnapshots on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeSnapshotsPagesWithContext to avoid this.
func (c *ElastiCache) DescribeSnapshotsPages(input *elasticache.DescribeSnapshotsInput, fn func(*elasticache.DescribeSnapshotsOutput, bool) bool) error {
	wrappedFn := func(page *elasticache.DescribeSnapshotsOutput, lastPage bool) bool {
		c.inc("DescribeSnapshots")
		return fn(page, lastPage)
	}
	return c.DescribeSnapshotsPages(input, wrappedFn)
}

// DescribeSnapshotsPagesWithContext is a passthrough to the underlying DescribeSnapshotsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeSnapshots when applied to the request.
func (c *ElastiCache) DescribeSnapshotsPagesWithContext(ctx aws.Context, input *elasticache.DescribeSnapshotsInput, fn func(*elasticache.DescribeSnapshotsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeSnapshots"))
	return c.DescribeSnapshotsPagesWithContext(ctx, input, fn, opts...)
}

// ListAllowedNodeTypeModificationsRequest is a passthrough to the underlying ListAllowedNodeTypeModificationsRequest.
// It will increment the count of requests made to ListAllowedNodeTypeModifications.
func (c *ElastiCache) ListAllowedNodeTypeModificationsRequest(input *elasticache.ListAllowedNodeTypeModificationsInput) (req *request.Request, output *elasticache.ListAllowedNodeTypeModificationsOutput) {
	c.inc("ListAllowedNodeTypeModifications")
	return c.svc.ListAllowedNodeTypeModificationsRequest(input)
}

// ListAllowedNodeTypeModifications is a passthrough to the underlying ListAllowedNodeTypeModifications method.
// It will increment the count of requests made to ListAllowedNodeTypeModifications.
func (c *ElastiCache) ListAllowedNodeTypeModifications(input *elasticache.ListAllowedNodeTypeModificationsInput) (*elasticache.ListAllowedNodeTypeModificationsOutput, error) {
	c.inc("ListAllowedNodeTypeModifications")
	return c.svc.ListAllowedNodeTypeModifications(input)
}

// ListAllowedNodeTypeModificationsWithContext is a passthrough to the underlying ListAllowedNodeTypeModificationsWithContext method.
// It will increment the count of requests made to ListAllowedNodeTypeModifications.
func (c *ElastiCache) ListAllowedNodeTypeModificationsWithContext(ctx aws.Context, input *elasticache.ListAllowedNodeTypeModificationsInput, opts ...request.Option) (*elasticache.ListAllowedNodeTypeModificationsOutput, error) {
	c.inc("ListAllowedNodeTypeModifications")
	return c.svc.ListAllowedNodeTypeModificationsWithContext(ctx, input, opts...)
}

// ListTagsForResourceRequest is a passthrough to the underlying ListTagsForResourceRequest.
// It will increment the count of requests made to ListTagsForResource.
func (c *ElastiCache) ListTagsForResourceRequest(input *elasticache.ListTagsForResourceInput) (req *request.Request, output *elasticache.TagListMessage) {
	c.inc("ListTagsForResource")
	return c.svc.ListTagsForResourceRequest(input)
}

// ListTagsForResource is a passthrough to the underlying ListTagsForResource method.
// It will increment the count of requests made to ListTagsForResource.
func (c *ElastiCache) ListTagsForResource(input *elasticache.ListTagsForResourceInput) (*elasticache.TagListMessage, error) {
	c.inc("ListTagsForResource")
	return c.svc.ListTagsForResource(input)
}

// ListTagsForResourceWithContext is a passthrough to the underlying ListTagsForResourceWithContext method.
// It will increment the count of requests made to ListTagsForResource.
func (c *ElastiCache) ListTagsForResourceWithContext(ctx aws.Context, input *elasticache.ListTagsForResourceInput, opts ...request.Option) (*elasticache.TagListMessage, error) {
	c.inc("ListTagsForResource")
	return c.svc.ListTagsForResourceWithContext(ctx, input, opts...)
}

// ModifyCacheClusterRequest is a passthrough to the underlying ModifyCacheClusterRequest.
// It will increment the count of requests made to ModifyCacheCluster.
func (c *ElastiCache) ModifyCacheClusterRequest(input *elasticache.ModifyCacheClusterInput) (req *request.Request, output *elasticache.ModifyCacheClusterOutput) {
	c.inc("ModifyCacheCluster")
	return c.svc.ModifyCacheClusterRequest(input)
}

// ModifyCacheCluster is a passthrough to the underlying ModifyCacheCluster method.
// It will increment the count of requests made to ModifyCacheCluster.
func (c *ElastiCache) ModifyCacheCluster(input *elasticache.ModifyCacheClusterInput) (*elasticache.ModifyCacheClusterOutput, error) {
	c.inc("ModifyCacheCluster")
	return c.svc.ModifyCacheCluster(input)
}

// ModifyCacheClusterWithContext is a passthrough to the underlying ModifyCacheClusterWithContext method.
// It will increment the count of requests made to ModifyCacheCluster.
func (c *ElastiCache) ModifyCacheClusterWithContext(ctx aws.Context, input *elasticache.ModifyCacheClusterInput, opts ...request.Option) (*elasticache.ModifyCacheClusterOutput, error) {
	c.inc("ModifyCacheCluster")
	return c.svc.ModifyCacheClusterWithContext(ctx, input, opts...)
}

// ModifyCacheParameterGroupRequest is a passthrough to the underlying ModifyCacheParameterGroupRequest.
// It will increment the count of requests made to ModifyCacheParameterGroup.
func (c *ElastiCache) ModifyCacheParameterGroupRequest(input *elasticache.ModifyCacheParameterGroupInput) (req *request.Request, output *elasticache.CacheParameterGroupNameMessage) {
	c.inc("ModifyCacheParameterGroup")
	return c.svc.ModifyCacheParameterGroupRequest(input)
}

// ModifyCacheParameterGroup is a passthrough to the underlying ModifyCacheParameterGroup method.
// It will increment the count of requests made to ModifyCacheParameterGroup.
func (c *ElastiCache) ModifyCacheParameterGroup(input *elasticache.ModifyCacheParameterGroupInput) (*elasticache.CacheParameterGroupNameMessage, error) {
	c.inc("ModifyCacheParameterGroup")
	return c.svc.ModifyCacheParameterGroup(input)
}

// ModifyCacheParameterGroupWithContext is a passthrough to the underlying ModifyCacheParameterGroupWithContext method.
// It will increment the count of requests made to ModifyCacheParameterGroup.
func (c *ElastiCache) ModifyCacheParameterGroupWithContext(ctx aws.Context, input *elasticache.ModifyCacheParameterGroupInput, opts ...request.Option) (*elasticache.CacheParameterGroupNameMessage, error) {
	c.inc("ModifyCacheParameterGroup")
	return c.svc.ModifyCacheParameterGroupWithContext(ctx, input, opts...)
}

// ModifyCacheSubnetGroupRequest is a passthrough to the underlying ModifyCacheSubnetGroupRequest.
// It will increment the count of requests made to ModifyCacheSubnetGroup.
func (c *ElastiCache) ModifyCacheSubnetGroupRequest(input *elasticache.ModifyCacheSubnetGroupInput) (req *request.Request, output *elasticache.ModifyCacheSubnetGroupOutput) {
	c.inc("ModifyCacheSubnetGroup")
	return c.svc.ModifyCacheSubnetGroupRequest(input)
}

// ModifyCacheSubnetGroup is a passthrough to the underlying ModifyCacheSubnetGroup method.
// It will increment the count of requests made to ModifyCacheSubnetGroup.
func (c *ElastiCache) ModifyCacheSubnetGroup(input *elasticache.ModifyCacheSubnetGroupInput) (*elasticache.ModifyCacheSubnetGroupOutput, error) {
	c.inc("ModifyCacheSubnetGroup")
	return c.svc.ModifyCacheSubnetGroup(input)
}

// ModifyCacheSubnetGroupWithContext is a passthrough to the underlying ModifyCacheSubnetGroupWithContext method.
// It will increment the count of requests made to ModifyCacheSubnetGroup.
func (c *ElastiCache) ModifyCacheSubnetGroupWithContext(ctx aws.Context, input *elasticache.ModifyCacheSubnetGroupInput, opts ...request.Option) (*elasticache.ModifyCacheSubnetGroupOutput, error) {
	c.inc("ModifyCacheSubnetGroup")
	return c.svc.ModifyCacheSubnetGroupWithContext(ctx, input, opts...)
}

// ModifyReplicationGroupRequest is a passthrough to the underlying ModifyReplicationGroupRequest.
// It will increment the count of requests made to ModifyReplicationGroup.
func (c *ElastiCache) ModifyReplicationGroupRequest(input *elasticache.ModifyReplicationGroupInput) (req *request.Request, output *elasticache.ModifyReplicationGroupOutput) {
	c.inc("ModifyReplicationGroup")
	return c.svc.ModifyReplicationGroupRequest(input)
}

// ModifyReplicationGroup is a passthrough to the underlying ModifyReplicationGroup method.
// It will increment the count of requests made to ModifyReplicationGroup.
func (c *ElastiCache) ModifyReplicationGroup(input *elasticache.ModifyReplicationGroupInput) (*elasticache.ModifyReplicationGroupOutput, error) {
	c.inc("ModifyReplicationGroup")
	return c.svc.ModifyReplicationGroup(input)
}

// ModifyReplicationGroupWithContext is a passthrough to the underlying ModifyReplicationGroupWithContext method.
// It will increment the count of requests made to ModifyReplicationGroup.
func (c *ElastiCache) ModifyReplicationGroupWithContext(ctx aws.Context, input *elasticache.ModifyReplicationGroupInput, opts ...request.Option) (*elasticache.ModifyReplicationGroupOutput, error) {
	c.inc("ModifyReplicationGroup")
	return c.svc.ModifyReplicationGroupWithContext(ctx, input, opts...)
}

// PurchaseReservedCacheNodesOfferingRequest is a passthrough to the underlying PurchaseReservedCacheNodesOfferingRequest.
// It will increment the count of requests made to PurchaseReservedCacheNodesOffering.
func (c *ElastiCache) PurchaseReservedCacheNodesOfferingRequest(input *elasticache.PurchaseReservedCacheNodesOfferingInput) (req *request.Request, output *elasticache.PurchaseReservedCacheNodesOfferingOutput) {
	c.inc("PurchaseReservedCacheNodesOffering")
	return c.svc.PurchaseReservedCacheNodesOfferingRequest(input)
}

// PurchaseReservedCacheNodesOffering is a passthrough to the underlying PurchaseReservedCacheNodesOffering method.
// It will increment the count of requests made to PurchaseReservedCacheNodesOffering.
func (c *ElastiCache) PurchaseReservedCacheNodesOffering(input *elasticache.PurchaseReservedCacheNodesOfferingInput) (*elasticache.PurchaseReservedCacheNodesOfferingOutput, error) {
	c.inc("PurchaseReservedCacheNodesOffering")
	return c.svc.PurchaseReservedCacheNodesOffering(input)
}

// PurchaseReservedCacheNodesOfferingWithContext is a passthrough to the underlying PurchaseReservedCacheNodesOfferingWithContext method.
// It will increment the count of requests made to PurchaseReservedCacheNodesOffering.
func (c *ElastiCache) PurchaseReservedCacheNodesOfferingWithContext(ctx aws.Context, input *elasticache.PurchaseReservedCacheNodesOfferingInput, opts ...request.Option) (*elasticache.PurchaseReservedCacheNodesOfferingOutput, error) {
	c.inc("PurchaseReservedCacheNodesOffering")
	return c.svc.PurchaseReservedCacheNodesOfferingWithContext(ctx, input, opts...)
}

// RebootCacheClusterRequest is a passthrough to the underlying RebootCacheClusterRequest.
// It will increment the count of requests made to RebootCacheCluster.
func (c *ElastiCache) RebootCacheClusterRequest(input *elasticache.RebootCacheClusterInput) (req *request.Request, output *elasticache.RebootCacheClusterOutput) {
	c.inc("RebootCacheCluster")
	return c.svc.RebootCacheClusterRequest(input)
}

// RebootCacheCluster is a passthrough to the underlying RebootCacheCluster method.
// It will increment the count of requests made to RebootCacheCluster.
func (c *ElastiCache) RebootCacheCluster(input *elasticache.RebootCacheClusterInput) (*elasticache.RebootCacheClusterOutput, error) {
	c.inc("RebootCacheCluster")
	return c.svc.RebootCacheCluster(input)
}

// RebootCacheClusterWithContext is a passthrough to the underlying RebootCacheClusterWithContext method.
// It will increment the count of requests made to RebootCacheCluster.
func (c *ElastiCache) RebootCacheClusterWithContext(ctx aws.Context, input *elasticache.RebootCacheClusterInput, opts ...request.Option) (*elasticache.RebootCacheClusterOutput, error) {
	c.inc("RebootCacheCluster")
	return c.svc.RebootCacheClusterWithContext(ctx, input, opts...)
}

// RemoveTagsFromResourceRequest is a passthrough to the underlying RemoveTagsFromResourceRequest.
// It will increment the count of requests made to RemoveTagsFromResource.
func (c *ElastiCache) RemoveTagsFromResourceRequest(input *elasticache.RemoveTagsFromResourceInput) (req *request.Request, output *elasticache.TagListMessage) {
	c.inc("RemoveTagsFromResource")
	return c.svc.RemoveTagsFromResourceRequest(input)
}

// RemoveTagsFromResource is a passthrough to the underlying RemoveTagsFromResource method.
// It will increment the count of requests made to RemoveTagsFromResource.
func (c *ElastiCache) RemoveTagsFromResource(input *elasticache.RemoveTagsFromResourceInput) (*elasticache.TagListMessage, error) {
	c.inc("RemoveTagsFromResource")
	return c.svc.RemoveTagsFromResource(input)
}

// RemoveTagsFromResourceWithContext is a passthrough to the underlying RemoveTagsFromResourceWithContext method.
// It will increment the count of requests made to RemoveTagsFromResource.
func (c *ElastiCache) RemoveTagsFromResourceWithContext(ctx aws.Context, input *elasticache.RemoveTagsFromResourceInput, opts ...request.Option) (*elasticache.TagListMessage, error) {
	c.inc("RemoveTagsFromResource")
	return c.svc.RemoveTagsFromResourceWithContext(ctx, input, opts...)
}

// ResetCacheParameterGroupRequest is a passthrough to the underlying ResetCacheParameterGroupRequest.
// It will increment the count of requests made to ResetCacheParameterGroup.
func (c *ElastiCache) ResetCacheParameterGroupRequest(input *elasticache.ResetCacheParameterGroupInput) (req *request.Request, output *elasticache.CacheParameterGroupNameMessage) {
	c.inc("ResetCacheParameterGroup")
	return c.svc.ResetCacheParameterGroupRequest(input)
}

// ResetCacheParameterGroup is a passthrough to the underlying ResetCacheParameterGroup method.
// It will increment the count of requests made to ResetCacheParameterGroup.
func (c *ElastiCache) ResetCacheParameterGroup(input *elasticache.ResetCacheParameterGroupInput) (*elasticache.CacheParameterGroupNameMessage, error) {
	c.inc("ResetCacheParameterGroup")
	return c.svc.ResetCacheParameterGroup(input)
}

// ResetCacheParameterGroupWithContext is a passthrough to the underlying ResetCacheParameterGroupWithContext method.
// It will increment the count of requests made to ResetCacheParameterGroup.
func (c *ElastiCache) ResetCacheParameterGroupWithContext(ctx aws.Context, input *elasticache.ResetCacheParameterGroupInput, opts ...request.Option) (*elasticache.CacheParameterGroupNameMessage, error) {
	c.inc("ResetCacheParameterGroup")
	return c.svc.ResetCacheParameterGroupWithContext(ctx, input, opts...)
}

// RevokeCacheSecurityGroupIngressRequest is a passthrough to the underlying RevokeCacheSecurityGroupIngressRequest.
// It will increment the count of requests made to RevokeCacheSecurityGroupIngress.
func (c *ElastiCache) RevokeCacheSecurityGroupIngressRequest(input *elasticache.RevokeCacheSecurityGroupIngressInput) (req *request.Request, output *elasticache.RevokeCacheSecurityGroupIngressOutput) {
	c.inc("RevokeCacheSecurityGroupIngress")
	return c.svc.RevokeCacheSecurityGroupIngressRequest(input)
}

// RevokeCacheSecurityGroupIngress is a passthrough to the underlying RevokeCacheSecurityGroupIngress method.
// It will increment the count of requests made to RevokeCacheSecurityGroupIngress.
func (c *ElastiCache) RevokeCacheSecurityGroupIngress(input *elasticache.RevokeCacheSecurityGroupIngressInput) (*elasticache.RevokeCacheSecurityGroupIngressOutput, error) {
	c.inc("RevokeCacheSecurityGroupIngress")
	return c.svc.RevokeCacheSecurityGroupIngress(input)
}

// RevokeCacheSecurityGroupIngressWithContext is a passthrough to the underlying RevokeCacheSecurityGroupIngressWithContext method.
// It will increment the count of requests made to RevokeCacheSecurityGroupIngress.
func (c *ElastiCache) RevokeCacheSecurityGroupIngressWithContext(ctx aws.Context, input *elasticache.RevokeCacheSecurityGroupIngressInput, opts ...request.Option) (*elasticache.RevokeCacheSecurityGroupIngressOutput, error) {
	c.inc("RevokeCacheSecurityGroupIngress")
	return c.svc.RevokeCacheSecurityGroupIngressWithContext(ctx, input, opts...)
}

// TestFailoverRequest is a passthrough to the underlying TestFailoverRequest.
// It will increment the count of requests made to TestFailover.
func (c *ElastiCache) TestFailoverRequest(input *elasticache.TestFailoverInput) (req *request.Request, output *elasticache.TestFailoverOutput) {
	c.inc("TestFailover")
	return c.svc.TestFailoverRequest(input)
}

// TestFailover is a passthrough to the underlying TestFailover method.
// It will increment the count of requests made to TestFailover.
func (c *ElastiCache) TestFailover(input *elasticache.TestFailoverInput) (*elasticache.TestFailoverOutput, error) {
	c.inc("TestFailover")
	return c.svc.TestFailover(input)
}

// TestFailoverWithContext is a passthrough to the underlying TestFailoverWithContext method.
// It will increment the count of requests made to TestFailover.
func (c *ElastiCache) TestFailoverWithContext(ctx aws.Context, input *elasticache.TestFailoverInput, opts ...request.Option) (*elasticache.TestFailoverOutput, error) {
	c.inc("TestFailover")
	return c.svc.TestFailoverWithContext(ctx, input, opts...)
}
