// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package autoscalingcounter

import (
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/autoscaling"
)

// AttachInstancesRequest is a passthrough to the underlying AttachInstancesRequest.
// It will increment the count of requests made to AttachInstances.
func (c *AutoScaling) AttachInstancesRequest(input *autoscaling.AttachInstancesInput) (req *request.Request, output *autoscaling.AttachInstancesOutput) {
	c.inc("AttachInstances")
	return c.svc.AttachInstancesRequest(input)
}

// AttachInstances is a passthrough to the underlying AttachInstances method.
// It will increment the count of requests made to AttachInstances.
func (c *AutoScaling) AttachInstances(input *autoscaling.AttachInstancesInput) (*autoscaling.AttachInstancesOutput, error) {
	c.inc("AttachInstances")
	return c.svc.AttachInstances(input)
}

// AttachInstancesWithContext is a passthrough to the underlying AttachInstancesWithContext method.
// It will increment the count of requests made to AttachInstances.
func (c *AutoScaling) AttachInstancesWithContext(ctx aws.Context, input *autoscaling.AttachInstancesInput, opts ...request.Option) (*autoscaling.AttachInstancesOutput, error) {
	c.inc("AttachInstances")
	return c.svc.AttachInstancesWithContext(ctx, input, opts...)
}

// AttachLoadBalancerTargetGroupsRequest is a passthrough to the underlying AttachLoadBalancerTargetGroupsRequest.
// It will increment the count of requests made to AttachLoadBalancerTargetGroups.
func (c *AutoScaling) AttachLoadBalancerTargetGroupsRequest(input *autoscaling.AttachLoadBalancerTargetGroupsInput) (req *request.Request, output *autoscaling.AttachLoadBalancerTargetGroupsOutput) {
	c.inc("AttachLoadBalancerTargetGroups")
	return c.svc.AttachLoadBalancerTargetGroupsRequest(input)
}

// AttachLoadBalancerTargetGroups is a passthrough to the underlying AttachLoadBalancerTargetGroups method.
// It will increment the count of requests made to AttachLoadBalancerTargetGroups.
func (c *AutoScaling) AttachLoadBalancerTargetGroups(input *autoscaling.AttachLoadBalancerTargetGroupsInput) (*autoscaling.AttachLoadBalancerTargetGroupsOutput, error) {
	c.inc("AttachLoadBalancerTargetGroups")
	return c.svc.AttachLoadBalancerTargetGroups(input)
}

// AttachLoadBalancerTargetGroupsWithContext is a passthrough to the underlying AttachLoadBalancerTargetGroupsWithContext method.
// It will increment the count of requests made to AttachLoadBalancerTargetGroups.
func (c *AutoScaling) AttachLoadBalancerTargetGroupsWithContext(ctx aws.Context, input *autoscaling.AttachLoadBalancerTargetGroupsInput, opts ...request.Option) (*autoscaling.AttachLoadBalancerTargetGroupsOutput, error) {
	c.inc("AttachLoadBalancerTargetGroups")
	return c.svc.AttachLoadBalancerTargetGroupsWithContext(ctx, input, opts...)
}

// AttachLoadBalancersRequest is a passthrough to the underlying AttachLoadBalancersRequest.
// It will increment the count of requests made to AttachLoadBalancers.
func (c *AutoScaling) AttachLoadBalancersRequest(input *autoscaling.AttachLoadBalancersInput) (req *request.Request, output *autoscaling.AttachLoadBalancersOutput) {
	c.inc("AttachLoadBalancers")
	return c.svc.AttachLoadBalancersRequest(input)
}

// AttachLoadBalancers is a passthrough to the underlying AttachLoadBalancers method.
// It will increment the count of requests made to AttachLoadBalancers.
func (c *AutoScaling) AttachLoadBalancers(input *autoscaling.AttachLoadBalancersInput) (*autoscaling.AttachLoadBalancersOutput, error) {
	c.inc("AttachLoadBalancers")
	return c.svc.AttachLoadBalancers(input)
}

// AttachLoadBalancersWithContext is a passthrough to the underlying AttachLoadBalancersWithContext method.
// It will increment the count of requests made to AttachLoadBalancers.
func (c *AutoScaling) AttachLoadBalancersWithContext(ctx aws.Context, input *autoscaling.AttachLoadBalancersInput, opts ...request.Option) (*autoscaling.AttachLoadBalancersOutput, error) {
	c.inc("AttachLoadBalancers")
	return c.svc.AttachLoadBalancersWithContext(ctx, input, opts...)
}

// CompleteLifecycleActionRequest is a passthrough to the underlying CompleteLifecycleActionRequest.
// It will increment the count of requests made to CompleteLifecycleAction.
func (c *AutoScaling) CompleteLifecycleActionRequest(input *autoscaling.CompleteLifecycleActionInput) (req *request.Request, output *autoscaling.CompleteLifecycleActionOutput) {
	c.inc("CompleteLifecycleAction")
	return c.svc.CompleteLifecycleActionRequest(input)
}

// CompleteLifecycleAction is a passthrough to the underlying CompleteLifecycleAction method.
// It will increment the count of requests made to CompleteLifecycleAction.
func (c *AutoScaling) CompleteLifecycleAction(input *autoscaling.CompleteLifecycleActionInput) (*autoscaling.CompleteLifecycleActionOutput, error) {
	c.inc("CompleteLifecycleAction")
	return c.svc.CompleteLifecycleAction(input)
}

// CompleteLifecycleActionWithContext is a passthrough to the underlying CompleteLifecycleActionWithContext method.
// It will increment the count of requests made to CompleteLifecycleAction.
func (c *AutoScaling) CompleteLifecycleActionWithContext(ctx aws.Context, input *autoscaling.CompleteLifecycleActionInput, opts ...request.Option) (*autoscaling.CompleteLifecycleActionOutput, error) {
	c.inc("CompleteLifecycleAction")
	return c.svc.CompleteLifecycleActionWithContext(ctx, input, opts...)
}

// CreateAutoScalingGroupRequest is a passthrough to the underlying CreateAutoScalingGroupRequest.
// It will increment the count of requests made to CreateAutoScalingGroup.
func (c *AutoScaling) CreateAutoScalingGroupRequest(input *autoscaling.CreateAutoScalingGroupInput) (req *request.Request, output *autoscaling.CreateAutoScalingGroupOutput) {
	c.inc("CreateAutoScalingGroup")
	return c.svc.CreateAutoScalingGroupRequest(input)
}

// CreateAutoScalingGroup is a passthrough to the underlying CreateAutoScalingGroup method.
// It will increment the count of requests made to CreateAutoScalingGroup.
func (c *AutoScaling) CreateAutoScalingGroup(input *autoscaling.CreateAutoScalingGroupInput) (*autoscaling.CreateAutoScalingGroupOutput, error) {
	c.inc("CreateAutoScalingGroup")
	return c.svc.CreateAutoScalingGroup(input)
}

// CreateAutoScalingGroupWithContext is a passthrough to the underlying CreateAutoScalingGroupWithContext method.
// It will increment the count of requests made to CreateAutoScalingGroup.
func (c *AutoScaling) CreateAutoScalingGroupWithContext(ctx aws.Context, input *autoscaling.CreateAutoScalingGroupInput, opts ...request.Option) (*autoscaling.CreateAutoScalingGroupOutput, error) {
	c.inc("CreateAutoScalingGroup")
	return c.svc.CreateAutoScalingGroupWithContext(ctx, input, opts...)
}

// CreateLaunchConfigurationRequest is a passthrough to the underlying CreateLaunchConfigurationRequest.
// It will increment the count of requests made to CreateLaunchConfiguration.
func (c *AutoScaling) CreateLaunchConfigurationRequest(input *autoscaling.CreateLaunchConfigurationInput) (req *request.Request, output *autoscaling.CreateLaunchConfigurationOutput) {
	c.inc("CreateLaunchConfiguration")
	return c.svc.CreateLaunchConfigurationRequest(input)
}

// CreateLaunchConfiguration is a passthrough to the underlying CreateLaunchConfiguration method.
// It will increment the count of requests made to CreateLaunchConfiguration.
func (c *AutoScaling) CreateLaunchConfiguration(input *autoscaling.CreateLaunchConfigurationInput) (*autoscaling.CreateLaunchConfigurationOutput, error) {
	c.inc("CreateLaunchConfiguration")
	return c.svc.CreateLaunchConfiguration(input)
}

// CreateLaunchConfigurationWithContext is a passthrough to the underlying CreateLaunchConfigurationWithContext method.
// It will increment the count of requests made to CreateLaunchConfiguration.
func (c *AutoScaling) CreateLaunchConfigurationWithContext(ctx aws.Context, input *autoscaling.CreateLaunchConfigurationInput, opts ...request.Option) (*autoscaling.CreateLaunchConfigurationOutput, error) {
	c.inc("CreateLaunchConfiguration")
	return c.svc.CreateLaunchConfigurationWithContext(ctx, input, opts...)
}

// CreateOrUpdateTagsRequest is a passthrough to the underlying CreateOrUpdateTagsRequest.
// It will increment the count of requests made to CreateOrUpdateTags.
func (c *AutoScaling) CreateOrUpdateTagsRequest(input *autoscaling.CreateOrUpdateTagsInput) (req *request.Request, output *autoscaling.CreateOrUpdateTagsOutput) {
	c.inc("CreateOrUpdateTags")
	return c.svc.CreateOrUpdateTagsRequest(input)
}

// CreateOrUpdateTags is a passthrough to the underlying CreateOrUpdateTags method.
// It will increment the count of requests made to CreateOrUpdateTags.
func (c *AutoScaling) CreateOrUpdateTags(input *autoscaling.CreateOrUpdateTagsInput) (*autoscaling.CreateOrUpdateTagsOutput, error) {
	c.inc("CreateOrUpdateTags")
	return c.svc.CreateOrUpdateTags(input)
}

// CreateOrUpdateTagsWithContext is a passthrough to the underlying CreateOrUpdateTagsWithContext method.
// It will increment the count of requests made to CreateOrUpdateTags.
func (c *AutoScaling) CreateOrUpdateTagsWithContext(ctx aws.Context, input *autoscaling.CreateOrUpdateTagsInput, opts ...request.Option) (*autoscaling.CreateOrUpdateTagsOutput, error) {
	c.inc("CreateOrUpdateTags")
	return c.svc.CreateOrUpdateTagsWithContext(ctx, input, opts...)
}

// DeleteAutoScalingGroupRequest is a passthrough to the underlying DeleteAutoScalingGroupRequest.
// It will increment the count of requests made to DeleteAutoScalingGroup.
func (c *AutoScaling) DeleteAutoScalingGroupRequest(input *autoscaling.DeleteAutoScalingGroupInput) (req *request.Request, output *autoscaling.DeleteAutoScalingGroupOutput) {
	c.inc("DeleteAutoScalingGroup")
	return c.svc.DeleteAutoScalingGroupRequest(input)
}

// DeleteAutoScalingGroup is a passthrough to the underlying DeleteAutoScalingGroup method.
// It will increment the count of requests made to DeleteAutoScalingGroup.
func (c *AutoScaling) DeleteAutoScalingGroup(input *autoscaling.DeleteAutoScalingGroupInput) (*autoscaling.DeleteAutoScalingGroupOutput, error) {
	c.inc("DeleteAutoScalingGroup")
	return c.svc.DeleteAutoScalingGroup(input)
}

// DeleteAutoScalingGroupWithContext is a passthrough to the underlying DeleteAutoScalingGroupWithContext method.
// It will increment the count of requests made to DeleteAutoScalingGroup.
func (c *AutoScaling) DeleteAutoScalingGroupWithContext(ctx aws.Context, input *autoscaling.DeleteAutoScalingGroupInput, opts ...request.Option) (*autoscaling.DeleteAutoScalingGroupOutput, error) {
	c.inc("DeleteAutoScalingGroup")
	return c.svc.DeleteAutoScalingGroupWithContext(ctx, input, opts...)
}

// DeleteLaunchConfigurationRequest is a passthrough to the underlying DeleteLaunchConfigurationRequest.
// It will increment the count of requests made to DeleteLaunchConfiguration.
func (c *AutoScaling) DeleteLaunchConfigurationRequest(input *autoscaling.DeleteLaunchConfigurationInput) (req *request.Request, output *autoscaling.DeleteLaunchConfigurationOutput) {
	c.inc("DeleteLaunchConfiguration")
	return c.svc.DeleteLaunchConfigurationRequest(input)
}

// DeleteLaunchConfiguration is a passthrough to the underlying DeleteLaunchConfiguration method.
// It will increment the count of requests made to DeleteLaunchConfiguration.
func (c *AutoScaling) DeleteLaunchConfiguration(input *autoscaling.DeleteLaunchConfigurationInput) (*autoscaling.DeleteLaunchConfigurationOutput, error) {
	c.inc("DeleteLaunchConfiguration")
	return c.svc.DeleteLaunchConfiguration(input)
}

// DeleteLaunchConfigurationWithContext is a passthrough to the underlying DeleteLaunchConfigurationWithContext method.
// It will increment the count of requests made to DeleteLaunchConfiguration.
func (c *AutoScaling) DeleteLaunchConfigurationWithContext(ctx aws.Context, input *autoscaling.DeleteLaunchConfigurationInput, opts ...request.Option) (*autoscaling.DeleteLaunchConfigurationOutput, error) {
	c.inc("DeleteLaunchConfiguration")
	return c.svc.DeleteLaunchConfigurationWithContext(ctx, input, opts...)
}

// DeleteLifecycleHookRequest is a passthrough to the underlying DeleteLifecycleHookRequest.
// It will increment the count of requests made to DeleteLifecycleHook.
func (c *AutoScaling) DeleteLifecycleHookRequest(input *autoscaling.DeleteLifecycleHookInput) (req *request.Request, output *autoscaling.DeleteLifecycleHookOutput) {
	c.inc("DeleteLifecycleHook")
	return c.svc.DeleteLifecycleHookRequest(input)
}

// DeleteLifecycleHook is a passthrough to the underlying DeleteLifecycleHook method.
// It will increment the count of requests made to DeleteLifecycleHook.
func (c *AutoScaling) DeleteLifecycleHook(input *autoscaling.DeleteLifecycleHookInput) (*autoscaling.DeleteLifecycleHookOutput, error) {
	c.inc("DeleteLifecycleHook")
	return c.svc.DeleteLifecycleHook(input)
}

// DeleteLifecycleHookWithContext is a passthrough to the underlying DeleteLifecycleHookWithContext method.
// It will increment the count of requests made to DeleteLifecycleHook.
func (c *AutoScaling) DeleteLifecycleHookWithContext(ctx aws.Context, input *autoscaling.DeleteLifecycleHookInput, opts ...request.Option) (*autoscaling.DeleteLifecycleHookOutput, error) {
	c.inc("DeleteLifecycleHook")
	return c.svc.DeleteLifecycleHookWithContext(ctx, input, opts...)
}

// DeleteNotificationConfigurationRequest is a passthrough to the underlying DeleteNotificationConfigurationRequest.
// It will increment the count of requests made to DeleteNotificationConfiguration.
func (c *AutoScaling) DeleteNotificationConfigurationRequest(input *autoscaling.DeleteNotificationConfigurationInput) (req *request.Request, output *autoscaling.DeleteNotificationConfigurationOutput) {
	c.inc("DeleteNotificationConfiguration")
	return c.svc.DeleteNotificationConfigurationRequest(input)
}

// DeleteNotificationConfiguration is a passthrough to the underlying DeleteNotificationConfiguration method.
// It will increment the count of requests made to DeleteNotificationConfiguration.
func (c *AutoScaling) DeleteNotificationConfiguration(input *autoscaling.DeleteNotificationConfigurationInput) (*autoscaling.DeleteNotificationConfigurationOutput, error) {
	c.inc("DeleteNotificationConfiguration")
	return c.svc.DeleteNotificationConfiguration(input)
}

// DeleteNotificationConfigurationWithContext is a passthrough to the underlying DeleteNotificationConfigurationWithContext method.
// It will increment the count of requests made to DeleteNotificationConfiguration.
func (c *AutoScaling) DeleteNotificationConfigurationWithContext(ctx aws.Context, input *autoscaling.DeleteNotificationConfigurationInput, opts ...request.Option) (*autoscaling.DeleteNotificationConfigurationOutput, error) {
	c.inc("DeleteNotificationConfiguration")
	return c.svc.DeleteNotificationConfigurationWithContext(ctx, input, opts...)
}

// DeletePolicyRequest is a passthrough to the underlying DeletePolicyRequest.
// It will increment the count of requests made to DeletePolicy.
func (c *AutoScaling) DeletePolicyRequest(input *autoscaling.DeletePolicyInput) (req *request.Request, output *autoscaling.DeletePolicyOutput) {
	c.inc("DeletePolicy")
	return c.svc.DeletePolicyRequest(input)
}

// DeletePolicy is a passthrough to the underlying DeletePolicy method.
// It will increment the count of requests made to DeletePolicy.
func (c *AutoScaling) DeletePolicy(input *autoscaling.DeletePolicyInput) (*autoscaling.DeletePolicyOutput, error) {
	c.inc("DeletePolicy")
	return c.svc.DeletePolicy(input)
}

// DeletePolicyWithContext is a passthrough to the underlying DeletePolicyWithContext method.
// It will increment the count of requests made to DeletePolicy.
func (c *AutoScaling) DeletePolicyWithContext(ctx aws.Context, input *autoscaling.DeletePolicyInput, opts ...request.Option) (*autoscaling.DeletePolicyOutput, error) {
	c.inc("DeletePolicy")
	return c.svc.DeletePolicyWithContext(ctx, input, opts...)
}

// DeleteScheduledActionRequest is a passthrough to the underlying DeleteScheduledActionRequest.
// It will increment the count of requests made to DeleteScheduledAction.
func (c *AutoScaling) DeleteScheduledActionRequest(input *autoscaling.DeleteScheduledActionInput) (req *request.Request, output *autoscaling.DeleteScheduledActionOutput) {
	c.inc("DeleteScheduledAction")
	return c.svc.DeleteScheduledActionRequest(input)
}

// DeleteScheduledAction is a passthrough to the underlying DeleteScheduledAction method.
// It will increment the count of requests made to DeleteScheduledAction.
func (c *AutoScaling) DeleteScheduledAction(input *autoscaling.DeleteScheduledActionInput) (*autoscaling.DeleteScheduledActionOutput, error) {
	c.inc("DeleteScheduledAction")
	return c.svc.DeleteScheduledAction(input)
}

// DeleteScheduledActionWithContext is a passthrough to the underlying DeleteScheduledActionWithContext method.
// It will increment the count of requests made to DeleteScheduledAction.
func (c *AutoScaling) DeleteScheduledActionWithContext(ctx aws.Context, input *autoscaling.DeleteScheduledActionInput, opts ...request.Option) (*autoscaling.DeleteScheduledActionOutput, error) {
	c.inc("DeleteScheduledAction")
	return c.svc.DeleteScheduledActionWithContext(ctx, input, opts...)
}

// DeleteTagsRequest is a passthrough to the underlying DeleteTagsRequest.
// It will increment the count of requests made to DeleteTags.
func (c *AutoScaling) DeleteTagsRequest(input *autoscaling.DeleteTagsInput) (req *request.Request, output *autoscaling.DeleteTagsOutput) {
	c.inc("DeleteTags")
	return c.svc.DeleteTagsRequest(input)
}

// DeleteTags is a passthrough to the underlying DeleteTags method.
// It will increment the count of requests made to DeleteTags.
func (c *AutoScaling) DeleteTags(input *autoscaling.DeleteTagsInput) (*autoscaling.DeleteTagsOutput, error) {
	c.inc("DeleteTags")
	return c.svc.DeleteTags(input)
}

// DeleteTagsWithContext is a passthrough to the underlying DeleteTagsWithContext method.
// It will increment the count of requests made to DeleteTags.
func (c *AutoScaling) DeleteTagsWithContext(ctx aws.Context, input *autoscaling.DeleteTagsInput, opts ...request.Option) (*autoscaling.DeleteTagsOutput, error) {
	c.inc("DeleteTags")
	return c.svc.DeleteTagsWithContext(ctx, input, opts...)
}

// DescribeAccountLimitsRequest is a passthrough to the underlying DescribeAccountLimitsRequest.
// It will increment the count of requests made to DescribeAccountLimits.
func (c *AutoScaling) DescribeAccountLimitsRequest(input *autoscaling.DescribeAccountLimitsInput) (req *request.Request, output *autoscaling.DescribeAccountLimitsOutput) {
	c.inc("DescribeAccountLimits")
	return c.svc.DescribeAccountLimitsRequest(input)
}

// DescribeAccountLimits is a passthrough to the underlying DescribeAccountLimits method.
// It will increment the count of requests made to DescribeAccountLimits.
func (c *AutoScaling) DescribeAccountLimits(input *autoscaling.DescribeAccountLimitsInput) (*autoscaling.DescribeAccountLimitsOutput, error) {
	c.inc("DescribeAccountLimits")
	return c.svc.DescribeAccountLimits(input)
}

// DescribeAccountLimitsWithContext is a passthrough to the underlying DescribeAccountLimitsWithContext method.
// It will increment the count of requests made to DescribeAccountLimits.
func (c *AutoScaling) DescribeAccountLimitsWithContext(ctx aws.Context, input *autoscaling.DescribeAccountLimitsInput, opts ...request.Option) (*autoscaling.DescribeAccountLimitsOutput, error) {
	c.inc("DescribeAccountLimits")
	return c.svc.DescribeAccountLimitsWithContext(ctx, input, opts...)
}

// DescribeAdjustmentTypesRequest is a passthrough to the underlying DescribeAdjustmentTypesRequest.
// It will increment the count of requests made to DescribeAdjustmentTypes.
func (c *AutoScaling) DescribeAdjustmentTypesRequest(input *autoscaling.DescribeAdjustmentTypesInput) (req *request.Request, output *autoscaling.DescribeAdjustmentTypesOutput) {
	c.inc("DescribeAdjustmentTypes")
	return c.svc.DescribeAdjustmentTypesRequest(input)
}

// DescribeAdjustmentTypes is a passthrough to the underlying DescribeAdjustmentTypes method.
// It will increment the count of requests made to DescribeAdjustmentTypes.
func (c *AutoScaling) DescribeAdjustmentTypes(input *autoscaling.DescribeAdjustmentTypesInput) (*autoscaling.DescribeAdjustmentTypesOutput, error) {
	c.inc("DescribeAdjustmentTypes")
	return c.svc.DescribeAdjustmentTypes(input)
}

// DescribeAdjustmentTypesWithContext is a passthrough to the underlying DescribeAdjustmentTypesWithContext method.
// It will increment the count of requests made to DescribeAdjustmentTypes.
func (c *AutoScaling) DescribeAdjustmentTypesWithContext(ctx aws.Context, input *autoscaling.DescribeAdjustmentTypesInput, opts ...request.Option) (*autoscaling.DescribeAdjustmentTypesOutput, error) {
	c.inc("DescribeAdjustmentTypes")
	return c.svc.DescribeAdjustmentTypesWithContext(ctx, input, opts...)
}

// DescribeAutoScalingGroupsRequest is a passthrough to the underlying DescribeAutoScalingGroupsRequest.
// It will increment the count of requests made to DescribeAutoScalingGroups.
func (c *AutoScaling) DescribeAutoScalingGroupsRequest(input *autoscaling.DescribeAutoScalingGroupsInput) (req *request.Request, output *autoscaling.DescribeAutoScalingGroupsOutput) {
	c.inc("DescribeAutoScalingGroups")
	return c.svc.DescribeAutoScalingGroupsRequest(input)
}

// DescribeAutoScalingGroups is a passthrough to the underlying DescribeAutoScalingGroups method.
// It will increment the count of requests made to DescribeAutoScalingGroups.
func (c *AutoScaling) DescribeAutoScalingGroups(input *autoscaling.DescribeAutoScalingGroupsInput) (*autoscaling.DescribeAutoScalingGroupsOutput, error) {
	c.inc("DescribeAutoScalingGroups")
	return c.svc.DescribeAutoScalingGroups(input)
}

// DescribeAutoScalingGroupsWithContext is a passthrough to the underlying DescribeAutoScalingGroupsWithContext method.
// It will increment the count of requests made to DescribeAutoScalingGroups.
func (c *AutoScaling) DescribeAutoScalingGroupsWithContext(ctx aws.Context, input *autoscaling.DescribeAutoScalingGroupsInput, opts ...request.Option) (*autoscaling.DescribeAutoScalingGroupsOutput, error) {
	c.inc("DescribeAutoScalingGroups")
	return c.svc.DescribeAutoScalingGroupsWithContext(ctx, input, opts...)
}

// DescribeAutoScalingGroupsPages is a passthrough to the underlying DescribeAutoScalingGroupsPages method.
// It will increment the count of requests made to DescribeAutoScalingGroups on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeAutoScalingGroupsPagesWithContext to avoid this.
func (c *AutoScaling) DescribeAutoScalingGroupsPages(input *autoscaling.DescribeAutoScalingGroupsInput, fn func(*autoscaling.DescribeAutoScalingGroupsOutput, bool) bool) error {
	wrappedFn := func(page *autoscaling.DescribeAutoScalingGroupsOutput, lastPage bool) bool {
		c.inc("DescribeAutoScalingGroups")
		return fn(page, lastPage)
	}
	return c.svc.DescribeAutoScalingGroupsPages(input, wrappedFn)
}

// DescribeAutoScalingGroupsPagesWithContext is a passthrough to the underlying DescribeAutoScalingGroupsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeAutoScalingGroups when applied to the request.
func (c *AutoScaling) DescribeAutoScalingGroupsPagesWithContext(ctx aws.Context, input *autoscaling.DescribeAutoScalingGroupsInput, fn func(*autoscaling.DescribeAutoScalingGroupsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeAutoScalingGroups"))
	return c.svc.DescribeAutoScalingGroupsPagesWithContext(ctx, input, fn, opts...)
}

// DescribeAutoScalingInstancesRequest is a passthrough to the underlying DescribeAutoScalingInstancesRequest.
// It will increment the count of requests made to DescribeAutoScalingInstances.
func (c *AutoScaling) DescribeAutoScalingInstancesRequest(input *autoscaling.DescribeAutoScalingInstancesInput) (req *request.Request, output *autoscaling.DescribeAutoScalingInstancesOutput) {
	c.inc("DescribeAutoScalingInstances")
	return c.svc.DescribeAutoScalingInstancesRequest(input)
}

// DescribeAutoScalingInstances is a passthrough to the underlying DescribeAutoScalingInstances method.
// It will increment the count of requests made to DescribeAutoScalingInstances.
func (c *AutoScaling) DescribeAutoScalingInstances(input *autoscaling.DescribeAutoScalingInstancesInput) (*autoscaling.DescribeAutoScalingInstancesOutput, error) {
	c.inc("DescribeAutoScalingInstances")
	return c.svc.DescribeAutoScalingInstances(input)
}

// DescribeAutoScalingInstancesWithContext is a passthrough to the underlying DescribeAutoScalingInstancesWithContext method.
// It will increment the count of requests made to DescribeAutoScalingInstances.
func (c *AutoScaling) DescribeAutoScalingInstancesWithContext(ctx aws.Context, input *autoscaling.DescribeAutoScalingInstancesInput, opts ...request.Option) (*autoscaling.DescribeAutoScalingInstancesOutput, error) {
	c.inc("DescribeAutoScalingInstances")
	return c.svc.DescribeAutoScalingInstancesWithContext(ctx, input, opts...)
}

// DescribeAutoScalingInstancesPages is a passthrough to the underlying DescribeAutoScalingInstancesPages method.
// It will increment the count of requests made to DescribeAutoScalingInstances on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeAutoScalingInstancesPagesWithContext to avoid this.
func (c *AutoScaling) DescribeAutoScalingInstancesPages(input *autoscaling.DescribeAutoScalingInstancesInput, fn func(*autoscaling.DescribeAutoScalingInstancesOutput, bool) bool) error {
	wrappedFn := func(page *autoscaling.DescribeAutoScalingInstancesOutput, lastPage bool) bool {
		c.inc("DescribeAutoScalingInstances")
		return fn(page, lastPage)
	}
	return c.svc.DescribeAutoScalingInstancesPages(input, wrappedFn)
}

// DescribeAutoScalingInstancesPagesWithContext is a passthrough to the underlying DescribeAutoScalingInstancesPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeAutoScalingInstances when applied to the request.
func (c *AutoScaling) DescribeAutoScalingInstancesPagesWithContext(ctx aws.Context, input *autoscaling.DescribeAutoScalingInstancesInput, fn func(*autoscaling.DescribeAutoScalingInstancesOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeAutoScalingInstances"))
	return c.svc.DescribeAutoScalingInstancesPagesWithContext(ctx, input, fn, opts...)
}

// DescribeAutoScalingNotificationTypesRequest is a passthrough to the underlying DescribeAutoScalingNotificationTypesRequest.
// It will increment the count of requests made to DescribeAutoScalingNotificationTypes.
func (c *AutoScaling) DescribeAutoScalingNotificationTypesRequest(input *autoscaling.DescribeAutoScalingNotificationTypesInput) (req *request.Request, output *autoscaling.DescribeAutoScalingNotificationTypesOutput) {
	c.inc("DescribeAutoScalingNotificationTypes")
	return c.svc.DescribeAutoScalingNotificationTypesRequest(input)
}

// DescribeAutoScalingNotificationTypes is a passthrough to the underlying DescribeAutoScalingNotificationTypes method.
// It will increment the count of requests made to DescribeAutoScalingNotificationTypes.
func (c *AutoScaling) DescribeAutoScalingNotificationTypes(input *autoscaling.DescribeAutoScalingNotificationTypesInput) (*autoscaling.DescribeAutoScalingNotificationTypesOutput, error) {
	c.inc("DescribeAutoScalingNotificationTypes")
	return c.svc.DescribeAutoScalingNotificationTypes(input)
}

// DescribeAutoScalingNotificationTypesWithContext is a passthrough to the underlying DescribeAutoScalingNotificationTypesWithContext method.
// It will increment the count of requests made to DescribeAutoScalingNotificationTypes.
func (c *AutoScaling) DescribeAutoScalingNotificationTypesWithContext(ctx aws.Context, input *autoscaling.DescribeAutoScalingNotificationTypesInput, opts ...request.Option) (*autoscaling.DescribeAutoScalingNotificationTypesOutput, error) {
	c.inc("DescribeAutoScalingNotificationTypes")
	return c.svc.DescribeAutoScalingNotificationTypesWithContext(ctx, input, opts...)
}

// DescribeLaunchConfigurationsRequest is a passthrough to the underlying DescribeLaunchConfigurationsRequest.
// It will increment the count of requests made to DescribeLaunchConfigurations.
func (c *AutoScaling) DescribeLaunchConfigurationsRequest(input *autoscaling.DescribeLaunchConfigurationsInput) (req *request.Request, output *autoscaling.DescribeLaunchConfigurationsOutput) {
	c.inc("DescribeLaunchConfigurations")
	return c.svc.DescribeLaunchConfigurationsRequest(input)
}

// DescribeLaunchConfigurations is a passthrough to the underlying DescribeLaunchConfigurations method.
// It will increment the count of requests made to DescribeLaunchConfigurations.
func (c *AutoScaling) DescribeLaunchConfigurations(input *autoscaling.DescribeLaunchConfigurationsInput) (*autoscaling.DescribeLaunchConfigurationsOutput, error) {
	c.inc("DescribeLaunchConfigurations")
	return c.svc.DescribeLaunchConfigurations(input)
}

// DescribeLaunchConfigurationsWithContext is a passthrough to the underlying DescribeLaunchConfigurationsWithContext method.
// It will increment the count of requests made to DescribeLaunchConfigurations.
func (c *AutoScaling) DescribeLaunchConfigurationsWithContext(ctx aws.Context, input *autoscaling.DescribeLaunchConfigurationsInput, opts ...request.Option) (*autoscaling.DescribeLaunchConfigurationsOutput, error) {
	c.inc("DescribeLaunchConfigurations")
	return c.svc.DescribeLaunchConfigurationsWithContext(ctx, input, opts...)
}

// DescribeLaunchConfigurationsPages is a passthrough to the underlying DescribeLaunchConfigurationsPages method.
// It will increment the count of requests made to DescribeLaunchConfigurations on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeLaunchConfigurationsPagesWithContext to avoid this.
func (c *AutoScaling) DescribeLaunchConfigurationsPages(input *autoscaling.DescribeLaunchConfigurationsInput, fn func(*autoscaling.DescribeLaunchConfigurationsOutput, bool) bool) error {
	wrappedFn := func(page *autoscaling.DescribeLaunchConfigurationsOutput, lastPage bool) bool {
		c.inc("DescribeLaunchConfigurations")
		return fn(page, lastPage)
	}
	return c.svc.DescribeLaunchConfigurationsPages(input, wrappedFn)
}

// DescribeLaunchConfigurationsPagesWithContext is a passthrough to the underlying DescribeLaunchConfigurationsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeLaunchConfigurations when applied to the request.
func (c *AutoScaling) DescribeLaunchConfigurationsPagesWithContext(ctx aws.Context, input *autoscaling.DescribeLaunchConfigurationsInput, fn func(*autoscaling.DescribeLaunchConfigurationsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeLaunchConfigurations"))
	return c.svc.DescribeLaunchConfigurationsPagesWithContext(ctx, input, fn, opts...)
}

// DescribeLifecycleHookTypesRequest is a passthrough to the underlying DescribeLifecycleHookTypesRequest.
// It will increment the count of requests made to DescribeLifecycleHookTypes.
func (c *AutoScaling) DescribeLifecycleHookTypesRequest(input *autoscaling.DescribeLifecycleHookTypesInput) (req *request.Request, output *autoscaling.DescribeLifecycleHookTypesOutput) {
	c.inc("DescribeLifecycleHookTypes")
	return c.svc.DescribeLifecycleHookTypesRequest(input)
}

// DescribeLifecycleHookTypes is a passthrough to the underlying DescribeLifecycleHookTypes method.
// It will increment the count of requests made to DescribeLifecycleHookTypes.
func (c *AutoScaling) DescribeLifecycleHookTypes(input *autoscaling.DescribeLifecycleHookTypesInput) (*autoscaling.DescribeLifecycleHookTypesOutput, error) {
	c.inc("DescribeLifecycleHookTypes")
	return c.svc.DescribeLifecycleHookTypes(input)
}

// DescribeLifecycleHookTypesWithContext is a passthrough to the underlying DescribeLifecycleHookTypesWithContext method.
// It will increment the count of requests made to DescribeLifecycleHookTypes.
func (c *AutoScaling) DescribeLifecycleHookTypesWithContext(ctx aws.Context, input *autoscaling.DescribeLifecycleHookTypesInput, opts ...request.Option) (*autoscaling.DescribeLifecycleHookTypesOutput, error) {
	c.inc("DescribeLifecycleHookTypes")
	return c.svc.DescribeLifecycleHookTypesWithContext(ctx, input, opts...)
}

// DescribeLifecycleHooksRequest is a passthrough to the underlying DescribeLifecycleHooksRequest.
// It will increment the count of requests made to DescribeLifecycleHooks.
func (c *AutoScaling) DescribeLifecycleHooksRequest(input *autoscaling.DescribeLifecycleHooksInput) (req *request.Request, output *autoscaling.DescribeLifecycleHooksOutput) {
	c.inc("DescribeLifecycleHooks")
	return c.svc.DescribeLifecycleHooksRequest(input)
}

// DescribeLifecycleHooks is a passthrough to the underlying DescribeLifecycleHooks method.
// It will increment the count of requests made to DescribeLifecycleHooks.
func (c *AutoScaling) DescribeLifecycleHooks(input *autoscaling.DescribeLifecycleHooksInput) (*autoscaling.DescribeLifecycleHooksOutput, error) {
	c.inc("DescribeLifecycleHooks")
	return c.svc.DescribeLifecycleHooks(input)
}

// DescribeLifecycleHooksWithContext is a passthrough to the underlying DescribeLifecycleHooksWithContext method.
// It will increment the count of requests made to DescribeLifecycleHooks.
func (c *AutoScaling) DescribeLifecycleHooksWithContext(ctx aws.Context, input *autoscaling.DescribeLifecycleHooksInput, opts ...request.Option) (*autoscaling.DescribeLifecycleHooksOutput, error) {
	c.inc("DescribeLifecycleHooks")
	return c.svc.DescribeLifecycleHooksWithContext(ctx, input, opts...)
}

// DescribeLoadBalancerTargetGroupsRequest is a passthrough to the underlying DescribeLoadBalancerTargetGroupsRequest.
// It will increment the count of requests made to DescribeLoadBalancerTargetGroups.
func (c *AutoScaling) DescribeLoadBalancerTargetGroupsRequest(input *autoscaling.DescribeLoadBalancerTargetGroupsInput) (req *request.Request, output *autoscaling.DescribeLoadBalancerTargetGroupsOutput) {
	c.inc("DescribeLoadBalancerTargetGroups")
	return c.svc.DescribeLoadBalancerTargetGroupsRequest(input)
}

// DescribeLoadBalancerTargetGroups is a passthrough to the underlying DescribeLoadBalancerTargetGroups method.
// It will increment the count of requests made to DescribeLoadBalancerTargetGroups.
func (c *AutoScaling) DescribeLoadBalancerTargetGroups(input *autoscaling.DescribeLoadBalancerTargetGroupsInput) (*autoscaling.DescribeLoadBalancerTargetGroupsOutput, error) {
	c.inc("DescribeLoadBalancerTargetGroups")
	return c.svc.DescribeLoadBalancerTargetGroups(input)
}

// DescribeLoadBalancerTargetGroupsWithContext is a passthrough to the underlying DescribeLoadBalancerTargetGroupsWithContext method.
// It will increment the count of requests made to DescribeLoadBalancerTargetGroups.
func (c *AutoScaling) DescribeLoadBalancerTargetGroupsWithContext(ctx aws.Context, input *autoscaling.DescribeLoadBalancerTargetGroupsInput, opts ...request.Option) (*autoscaling.DescribeLoadBalancerTargetGroupsOutput, error) {
	c.inc("DescribeLoadBalancerTargetGroups")
	return c.svc.DescribeLoadBalancerTargetGroupsWithContext(ctx, input, opts...)
}

// DescribeLoadBalancersRequest is a passthrough to the underlying DescribeLoadBalancersRequest.
// It will increment the count of requests made to DescribeLoadBalancers.
func (c *AutoScaling) DescribeLoadBalancersRequest(input *autoscaling.DescribeLoadBalancersInput) (req *request.Request, output *autoscaling.DescribeLoadBalancersOutput) {
	c.inc("DescribeLoadBalancers")
	return c.svc.DescribeLoadBalancersRequest(input)
}

// DescribeLoadBalancers is a passthrough to the underlying DescribeLoadBalancers method.
// It will increment the count of requests made to DescribeLoadBalancers.
func (c *AutoScaling) DescribeLoadBalancers(input *autoscaling.DescribeLoadBalancersInput) (*autoscaling.DescribeLoadBalancersOutput, error) {
	c.inc("DescribeLoadBalancers")
	return c.svc.DescribeLoadBalancers(input)
}

// DescribeLoadBalancersWithContext is a passthrough to the underlying DescribeLoadBalancersWithContext method.
// It will increment the count of requests made to DescribeLoadBalancers.
func (c *AutoScaling) DescribeLoadBalancersWithContext(ctx aws.Context, input *autoscaling.DescribeLoadBalancersInput, opts ...request.Option) (*autoscaling.DescribeLoadBalancersOutput, error) {
	c.inc("DescribeLoadBalancers")
	return c.svc.DescribeLoadBalancersWithContext(ctx, input, opts...)
}

// DescribeMetricCollectionTypesRequest is a passthrough to the underlying DescribeMetricCollectionTypesRequest.
// It will increment the count of requests made to DescribeMetricCollectionTypes.
func (c *AutoScaling) DescribeMetricCollectionTypesRequest(input *autoscaling.DescribeMetricCollectionTypesInput) (req *request.Request, output *autoscaling.DescribeMetricCollectionTypesOutput) {
	c.inc("DescribeMetricCollectionTypes")
	return c.svc.DescribeMetricCollectionTypesRequest(input)
}

// DescribeMetricCollectionTypes is a passthrough to the underlying DescribeMetricCollectionTypes method.
// It will increment the count of requests made to DescribeMetricCollectionTypes.
func (c *AutoScaling) DescribeMetricCollectionTypes(input *autoscaling.DescribeMetricCollectionTypesInput) (*autoscaling.DescribeMetricCollectionTypesOutput, error) {
	c.inc("DescribeMetricCollectionTypes")
	return c.svc.DescribeMetricCollectionTypes(input)
}

// DescribeMetricCollectionTypesWithContext is a passthrough to the underlying DescribeMetricCollectionTypesWithContext method.
// It will increment the count of requests made to DescribeMetricCollectionTypes.
func (c *AutoScaling) DescribeMetricCollectionTypesWithContext(ctx aws.Context, input *autoscaling.DescribeMetricCollectionTypesInput, opts ...request.Option) (*autoscaling.DescribeMetricCollectionTypesOutput, error) {
	c.inc("DescribeMetricCollectionTypes")
	return c.svc.DescribeMetricCollectionTypesWithContext(ctx, input, opts...)
}

// DescribeNotificationConfigurationsRequest is a passthrough to the underlying DescribeNotificationConfigurationsRequest.
// It will increment the count of requests made to DescribeNotificationConfigurations.
func (c *AutoScaling) DescribeNotificationConfigurationsRequest(input *autoscaling.DescribeNotificationConfigurationsInput) (req *request.Request, output *autoscaling.DescribeNotificationConfigurationsOutput) {
	c.inc("DescribeNotificationConfigurations")
	return c.svc.DescribeNotificationConfigurationsRequest(input)
}

// DescribeNotificationConfigurations is a passthrough to the underlying DescribeNotificationConfigurations method.
// It will increment the count of requests made to DescribeNotificationConfigurations.
func (c *AutoScaling) DescribeNotificationConfigurations(input *autoscaling.DescribeNotificationConfigurationsInput) (*autoscaling.DescribeNotificationConfigurationsOutput, error) {
	c.inc("DescribeNotificationConfigurations")
	return c.svc.DescribeNotificationConfigurations(input)
}

// DescribeNotificationConfigurationsWithContext is a passthrough to the underlying DescribeNotificationConfigurationsWithContext method.
// It will increment the count of requests made to DescribeNotificationConfigurations.
func (c *AutoScaling) DescribeNotificationConfigurationsWithContext(ctx aws.Context, input *autoscaling.DescribeNotificationConfigurationsInput, opts ...request.Option) (*autoscaling.DescribeNotificationConfigurationsOutput, error) {
	c.inc("DescribeNotificationConfigurations")
	return c.svc.DescribeNotificationConfigurationsWithContext(ctx, input, opts...)
}

// DescribeNotificationConfigurationsPages is a passthrough to the underlying DescribeNotificationConfigurationsPages method.
// It will increment the count of requests made to DescribeNotificationConfigurations on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeNotificationConfigurationsPagesWithContext to avoid this.
func (c *AutoScaling) DescribeNotificationConfigurationsPages(input *autoscaling.DescribeNotificationConfigurationsInput, fn func(*autoscaling.DescribeNotificationConfigurationsOutput, bool) bool) error {
	wrappedFn := func(page *autoscaling.DescribeNotificationConfigurationsOutput, lastPage bool) bool {
		c.inc("DescribeNotificationConfigurations")
		return fn(page, lastPage)
	}
	return c.svc.DescribeNotificationConfigurationsPages(input, wrappedFn)
}

// DescribeNotificationConfigurationsPagesWithContext is a passthrough to the underlying DescribeNotificationConfigurationsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeNotificationConfigurations when applied to the request.
func (c *AutoScaling) DescribeNotificationConfigurationsPagesWithContext(ctx aws.Context, input *autoscaling.DescribeNotificationConfigurationsInput, fn func(*autoscaling.DescribeNotificationConfigurationsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeNotificationConfigurations"))
	return c.svc.DescribeNotificationConfigurationsPagesWithContext(ctx, input, fn, opts...)
}

// DescribePoliciesRequest is a passthrough to the underlying DescribePoliciesRequest.
// It will increment the count of requests made to DescribePolicies.
func (c *AutoScaling) DescribePoliciesRequest(input *autoscaling.DescribePoliciesInput) (req *request.Request, output *autoscaling.DescribePoliciesOutput) {
	c.inc("DescribePolicies")
	return c.svc.DescribePoliciesRequest(input)
}

// DescribePolicies is a passthrough to the underlying DescribePolicies method.
// It will increment the count of requests made to DescribePolicies.
func (c *AutoScaling) DescribePolicies(input *autoscaling.DescribePoliciesInput) (*autoscaling.DescribePoliciesOutput, error) {
	c.inc("DescribePolicies")
	return c.svc.DescribePolicies(input)
}

// DescribePoliciesWithContext is a passthrough to the underlying DescribePoliciesWithContext method.
// It will increment the count of requests made to DescribePolicies.
func (c *AutoScaling) DescribePoliciesWithContext(ctx aws.Context, input *autoscaling.DescribePoliciesInput, opts ...request.Option) (*autoscaling.DescribePoliciesOutput, error) {
	c.inc("DescribePolicies")
	return c.svc.DescribePoliciesWithContext(ctx, input, opts...)
}

// DescribePoliciesPages is a passthrough to the underlying DescribePoliciesPages method.
// It will increment the count of requests made to DescribePolicies on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribePoliciesPagesWithContext to avoid this.
func (c *AutoScaling) DescribePoliciesPages(input *autoscaling.DescribePoliciesInput, fn func(*autoscaling.DescribePoliciesOutput, bool) bool) error {
	wrappedFn := func(page *autoscaling.DescribePoliciesOutput, lastPage bool) bool {
		c.inc("DescribePolicies")
		return fn(page, lastPage)
	}
	return c.svc.DescribePoliciesPages(input, wrappedFn)
}

// DescribePoliciesPagesWithContext is a passthrough to the underlying DescribePoliciesPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribePolicies when applied to the request.
func (c *AutoScaling) DescribePoliciesPagesWithContext(ctx aws.Context, input *autoscaling.DescribePoliciesInput, fn func(*autoscaling.DescribePoliciesOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribePolicies"))
	return c.svc.DescribePoliciesPagesWithContext(ctx, input, fn, opts...)
}

// DescribeScalingActivitiesRequest is a passthrough to the underlying DescribeScalingActivitiesRequest.
// It will increment the count of requests made to DescribeScalingActivities.
func (c *AutoScaling) DescribeScalingActivitiesRequest(input *autoscaling.DescribeScalingActivitiesInput) (req *request.Request, output *autoscaling.DescribeScalingActivitiesOutput) {
	c.inc("DescribeScalingActivities")
	return c.svc.DescribeScalingActivitiesRequest(input)
}

// DescribeScalingActivities is a passthrough to the underlying DescribeScalingActivities method.
// It will increment the count of requests made to DescribeScalingActivities.
func (c *AutoScaling) DescribeScalingActivities(input *autoscaling.DescribeScalingActivitiesInput) (*autoscaling.DescribeScalingActivitiesOutput, error) {
	c.inc("DescribeScalingActivities")
	return c.svc.DescribeScalingActivities(input)
}

// DescribeScalingActivitiesWithContext is a passthrough to the underlying DescribeScalingActivitiesWithContext method.
// It will increment the count of requests made to DescribeScalingActivities.
func (c *AutoScaling) DescribeScalingActivitiesWithContext(ctx aws.Context, input *autoscaling.DescribeScalingActivitiesInput, opts ...request.Option) (*autoscaling.DescribeScalingActivitiesOutput, error) {
	c.inc("DescribeScalingActivities")
	return c.svc.DescribeScalingActivitiesWithContext(ctx, input, opts...)
}

// DescribeScalingActivitiesPages is a passthrough to the underlying DescribeScalingActivitiesPages method.
// It will increment the count of requests made to DescribeScalingActivities on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeScalingActivitiesPagesWithContext to avoid this.
func (c *AutoScaling) DescribeScalingActivitiesPages(input *autoscaling.DescribeScalingActivitiesInput, fn func(*autoscaling.DescribeScalingActivitiesOutput, bool) bool) error {
	wrappedFn := func(page *autoscaling.DescribeScalingActivitiesOutput, lastPage bool) bool {
		c.inc("DescribeScalingActivities")
		return fn(page, lastPage)
	}
	return c.svc.DescribeScalingActivitiesPages(input, wrappedFn)
}

// DescribeScalingActivitiesPagesWithContext is a passthrough to the underlying DescribeScalingActivitiesPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeScalingActivities when applied to the request.
func (c *AutoScaling) DescribeScalingActivitiesPagesWithContext(ctx aws.Context, input *autoscaling.DescribeScalingActivitiesInput, fn func(*autoscaling.DescribeScalingActivitiesOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeScalingActivities"))
	return c.svc.DescribeScalingActivitiesPagesWithContext(ctx, input, fn, opts...)
}

// DescribeScalingProcessTypesRequest is a passthrough to the underlying DescribeScalingProcessTypesRequest.
// It will increment the count of requests made to DescribeScalingProcessTypes.
func (c *AutoScaling) DescribeScalingProcessTypesRequest(input *autoscaling.DescribeScalingProcessTypesInput) (req *request.Request, output *autoscaling.DescribeScalingProcessTypesOutput) {
	c.inc("DescribeScalingProcessTypes")
	return c.svc.DescribeScalingProcessTypesRequest(input)
}

// DescribeScalingProcessTypes is a passthrough to the underlying DescribeScalingProcessTypes method.
// It will increment the count of requests made to DescribeScalingProcessTypes.
func (c *AutoScaling) DescribeScalingProcessTypes(input *autoscaling.DescribeScalingProcessTypesInput) (*autoscaling.DescribeScalingProcessTypesOutput, error) {
	c.inc("DescribeScalingProcessTypes")
	return c.svc.DescribeScalingProcessTypes(input)
}

// DescribeScalingProcessTypesWithContext is a passthrough to the underlying DescribeScalingProcessTypesWithContext method.
// It will increment the count of requests made to DescribeScalingProcessTypes.
func (c *AutoScaling) DescribeScalingProcessTypesWithContext(ctx aws.Context, input *autoscaling.DescribeScalingProcessTypesInput, opts ...request.Option) (*autoscaling.DescribeScalingProcessTypesOutput, error) {
	c.inc("DescribeScalingProcessTypes")
	return c.svc.DescribeScalingProcessTypesWithContext(ctx, input, opts...)
}

// DescribeScheduledActionsRequest is a passthrough to the underlying DescribeScheduledActionsRequest.
// It will increment the count of requests made to DescribeScheduledActions.
func (c *AutoScaling) DescribeScheduledActionsRequest(input *autoscaling.DescribeScheduledActionsInput) (req *request.Request, output *autoscaling.DescribeScheduledActionsOutput) {
	c.inc("DescribeScheduledActions")
	return c.svc.DescribeScheduledActionsRequest(input)
}

// DescribeScheduledActions is a passthrough to the underlying DescribeScheduledActions method.
// It will increment the count of requests made to DescribeScheduledActions.
func (c *AutoScaling) DescribeScheduledActions(input *autoscaling.DescribeScheduledActionsInput) (*autoscaling.DescribeScheduledActionsOutput, error) {
	c.inc("DescribeScheduledActions")
	return c.svc.DescribeScheduledActions(input)
}

// DescribeScheduledActionsWithContext is a passthrough to the underlying DescribeScheduledActionsWithContext method.
// It will increment the count of requests made to DescribeScheduledActions.
func (c *AutoScaling) DescribeScheduledActionsWithContext(ctx aws.Context, input *autoscaling.DescribeScheduledActionsInput, opts ...request.Option) (*autoscaling.DescribeScheduledActionsOutput, error) {
	c.inc("DescribeScheduledActions")
	return c.svc.DescribeScheduledActionsWithContext(ctx, input, opts...)
}

// DescribeScheduledActionsPages is a passthrough to the underlying DescribeScheduledActionsPages method.
// It will increment the count of requests made to DescribeScheduledActions on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeScheduledActionsPagesWithContext to avoid this.
func (c *AutoScaling) DescribeScheduledActionsPages(input *autoscaling.DescribeScheduledActionsInput, fn func(*autoscaling.DescribeScheduledActionsOutput, bool) bool) error {
	wrappedFn := func(page *autoscaling.DescribeScheduledActionsOutput, lastPage bool) bool {
		c.inc("DescribeScheduledActions")
		return fn(page, lastPage)
	}
	return c.svc.DescribeScheduledActionsPages(input, wrappedFn)
}

// DescribeScheduledActionsPagesWithContext is a passthrough to the underlying DescribeScheduledActionsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeScheduledActions when applied to the request.
func (c *AutoScaling) DescribeScheduledActionsPagesWithContext(ctx aws.Context, input *autoscaling.DescribeScheduledActionsInput, fn func(*autoscaling.DescribeScheduledActionsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeScheduledActions"))
	return c.svc.DescribeScheduledActionsPagesWithContext(ctx, input, fn, opts...)
}

// DescribeTagsRequest is a passthrough to the underlying DescribeTagsRequest.
// It will increment the count of requests made to DescribeTags.
func (c *AutoScaling) DescribeTagsRequest(input *autoscaling.DescribeTagsInput) (req *request.Request, output *autoscaling.DescribeTagsOutput) {
	c.inc("DescribeTags")
	return c.svc.DescribeTagsRequest(input)
}

// DescribeTags is a passthrough to the underlying DescribeTags method.
// It will increment the count of requests made to DescribeTags.
func (c *AutoScaling) DescribeTags(input *autoscaling.DescribeTagsInput) (*autoscaling.DescribeTagsOutput, error) {
	c.inc("DescribeTags")
	return c.svc.DescribeTags(input)
}

// DescribeTagsWithContext is a passthrough to the underlying DescribeTagsWithContext method.
// It will increment the count of requests made to DescribeTags.
func (c *AutoScaling) DescribeTagsWithContext(ctx aws.Context, input *autoscaling.DescribeTagsInput, opts ...request.Option) (*autoscaling.DescribeTagsOutput, error) {
	c.inc("DescribeTags")
	return c.svc.DescribeTagsWithContext(ctx, input, opts...)
}

// DescribeTagsPages is a passthrough to the underlying DescribeTagsPages method.
// It will increment the count of requests made to DescribeTags on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeTagsPagesWithContext to avoid this.
func (c *AutoScaling) DescribeTagsPages(input *autoscaling.DescribeTagsInput, fn func(*autoscaling.DescribeTagsOutput, bool) bool) error {
	wrappedFn := func(page *autoscaling.DescribeTagsOutput, lastPage bool) bool {
		c.inc("DescribeTags")
		return fn(page, lastPage)
	}
	return c.svc.DescribeTagsPages(input, wrappedFn)
}

// DescribeTagsPagesWithContext is a passthrough to the underlying DescribeTagsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeTags when applied to the request.
func (c *AutoScaling) DescribeTagsPagesWithContext(ctx aws.Context, input *autoscaling.DescribeTagsInput, fn func(*autoscaling.DescribeTagsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeTags"))
	return c.svc.DescribeTagsPagesWithContext(ctx, input, fn, opts...)
}

// DescribeTerminationPolicyTypesRequest is a passthrough to the underlying DescribeTerminationPolicyTypesRequest.
// It will increment the count of requests made to DescribeTerminationPolicyTypes.
func (c *AutoScaling) DescribeTerminationPolicyTypesRequest(input *autoscaling.DescribeTerminationPolicyTypesInput) (req *request.Request, output *autoscaling.DescribeTerminationPolicyTypesOutput) {
	c.inc("DescribeTerminationPolicyTypes")
	return c.svc.DescribeTerminationPolicyTypesRequest(input)
}

// DescribeTerminationPolicyTypes is a passthrough to the underlying DescribeTerminationPolicyTypes method.
// It will increment the count of requests made to DescribeTerminationPolicyTypes.
func (c *AutoScaling) DescribeTerminationPolicyTypes(input *autoscaling.DescribeTerminationPolicyTypesInput) (*autoscaling.DescribeTerminationPolicyTypesOutput, error) {
	c.inc("DescribeTerminationPolicyTypes")
	return c.svc.DescribeTerminationPolicyTypes(input)
}

// DescribeTerminationPolicyTypesWithContext is a passthrough to the underlying DescribeTerminationPolicyTypesWithContext method.
// It will increment the count of requests made to DescribeTerminationPolicyTypes.
func (c *AutoScaling) DescribeTerminationPolicyTypesWithContext(ctx aws.Context, input *autoscaling.DescribeTerminationPolicyTypesInput, opts ...request.Option) (*autoscaling.DescribeTerminationPolicyTypesOutput, error) {
	c.inc("DescribeTerminationPolicyTypes")
	return c.svc.DescribeTerminationPolicyTypesWithContext(ctx, input, opts...)
}

// DetachInstancesRequest is a passthrough to the underlying DetachInstancesRequest.
// It will increment the count of requests made to DetachInstances.
func (c *AutoScaling) DetachInstancesRequest(input *autoscaling.DetachInstancesInput) (req *request.Request, output *autoscaling.DetachInstancesOutput) {
	c.inc("DetachInstances")
	return c.svc.DetachInstancesRequest(input)
}

// DetachInstances is a passthrough to the underlying DetachInstances method.
// It will increment the count of requests made to DetachInstances.
func (c *AutoScaling) DetachInstances(input *autoscaling.DetachInstancesInput) (*autoscaling.DetachInstancesOutput, error) {
	c.inc("DetachInstances")
	return c.svc.DetachInstances(input)
}

// DetachInstancesWithContext is a passthrough to the underlying DetachInstancesWithContext method.
// It will increment the count of requests made to DetachInstances.
func (c *AutoScaling) DetachInstancesWithContext(ctx aws.Context, input *autoscaling.DetachInstancesInput, opts ...request.Option) (*autoscaling.DetachInstancesOutput, error) {
	c.inc("DetachInstances")
	return c.svc.DetachInstancesWithContext(ctx, input, opts...)
}

// DetachLoadBalancerTargetGroupsRequest is a passthrough to the underlying DetachLoadBalancerTargetGroupsRequest.
// It will increment the count of requests made to DetachLoadBalancerTargetGroups.
func (c *AutoScaling) DetachLoadBalancerTargetGroupsRequest(input *autoscaling.DetachLoadBalancerTargetGroupsInput) (req *request.Request, output *autoscaling.DetachLoadBalancerTargetGroupsOutput) {
	c.inc("DetachLoadBalancerTargetGroups")
	return c.svc.DetachLoadBalancerTargetGroupsRequest(input)
}

// DetachLoadBalancerTargetGroups is a passthrough to the underlying DetachLoadBalancerTargetGroups method.
// It will increment the count of requests made to DetachLoadBalancerTargetGroups.
func (c *AutoScaling) DetachLoadBalancerTargetGroups(input *autoscaling.DetachLoadBalancerTargetGroupsInput) (*autoscaling.DetachLoadBalancerTargetGroupsOutput, error) {
	c.inc("DetachLoadBalancerTargetGroups")
	return c.svc.DetachLoadBalancerTargetGroups(input)
}

// DetachLoadBalancerTargetGroupsWithContext is a passthrough to the underlying DetachLoadBalancerTargetGroupsWithContext method.
// It will increment the count of requests made to DetachLoadBalancerTargetGroups.
func (c *AutoScaling) DetachLoadBalancerTargetGroupsWithContext(ctx aws.Context, input *autoscaling.DetachLoadBalancerTargetGroupsInput, opts ...request.Option) (*autoscaling.DetachLoadBalancerTargetGroupsOutput, error) {
	c.inc("DetachLoadBalancerTargetGroups")
	return c.svc.DetachLoadBalancerTargetGroupsWithContext(ctx, input, opts...)
}

// DetachLoadBalancersRequest is a passthrough to the underlying DetachLoadBalancersRequest.
// It will increment the count of requests made to DetachLoadBalancers.
func (c *AutoScaling) DetachLoadBalancersRequest(input *autoscaling.DetachLoadBalancersInput) (req *request.Request, output *autoscaling.DetachLoadBalancersOutput) {
	c.inc("DetachLoadBalancers")
	return c.svc.DetachLoadBalancersRequest(input)
}

// DetachLoadBalancers is a passthrough to the underlying DetachLoadBalancers method.
// It will increment the count of requests made to DetachLoadBalancers.
func (c *AutoScaling) DetachLoadBalancers(input *autoscaling.DetachLoadBalancersInput) (*autoscaling.DetachLoadBalancersOutput, error) {
	c.inc("DetachLoadBalancers")
	return c.svc.DetachLoadBalancers(input)
}

// DetachLoadBalancersWithContext is a passthrough to the underlying DetachLoadBalancersWithContext method.
// It will increment the count of requests made to DetachLoadBalancers.
func (c *AutoScaling) DetachLoadBalancersWithContext(ctx aws.Context, input *autoscaling.DetachLoadBalancersInput, opts ...request.Option) (*autoscaling.DetachLoadBalancersOutput, error) {
	c.inc("DetachLoadBalancers")
	return c.svc.DetachLoadBalancersWithContext(ctx, input, opts...)
}

// DisableMetricsCollectionRequest is a passthrough to the underlying DisableMetricsCollectionRequest.
// It will increment the count of requests made to DisableMetricsCollection.
func (c *AutoScaling) DisableMetricsCollectionRequest(input *autoscaling.DisableMetricsCollectionInput) (req *request.Request, output *autoscaling.DisableMetricsCollectionOutput) {
	c.inc("DisableMetricsCollection")
	return c.svc.DisableMetricsCollectionRequest(input)
}

// DisableMetricsCollection is a passthrough to the underlying DisableMetricsCollection method.
// It will increment the count of requests made to DisableMetricsCollection.
func (c *AutoScaling) DisableMetricsCollection(input *autoscaling.DisableMetricsCollectionInput) (*autoscaling.DisableMetricsCollectionOutput, error) {
	c.inc("DisableMetricsCollection")
	return c.svc.DisableMetricsCollection(input)
}

// DisableMetricsCollectionWithContext is a passthrough to the underlying DisableMetricsCollectionWithContext method.
// It will increment the count of requests made to DisableMetricsCollection.
func (c *AutoScaling) DisableMetricsCollectionWithContext(ctx aws.Context, input *autoscaling.DisableMetricsCollectionInput, opts ...request.Option) (*autoscaling.DisableMetricsCollectionOutput, error) {
	c.inc("DisableMetricsCollection")
	return c.svc.DisableMetricsCollectionWithContext(ctx, input, opts...)
}

// EnableMetricsCollectionRequest is a passthrough to the underlying EnableMetricsCollectionRequest.
// It will increment the count of requests made to EnableMetricsCollection.
func (c *AutoScaling) EnableMetricsCollectionRequest(input *autoscaling.EnableMetricsCollectionInput) (req *request.Request, output *autoscaling.EnableMetricsCollectionOutput) {
	c.inc("EnableMetricsCollection")
	return c.svc.EnableMetricsCollectionRequest(input)
}

// EnableMetricsCollection is a passthrough to the underlying EnableMetricsCollection method.
// It will increment the count of requests made to EnableMetricsCollection.
func (c *AutoScaling) EnableMetricsCollection(input *autoscaling.EnableMetricsCollectionInput) (*autoscaling.EnableMetricsCollectionOutput, error) {
	c.inc("EnableMetricsCollection")
	return c.svc.EnableMetricsCollection(input)
}

// EnableMetricsCollectionWithContext is a passthrough to the underlying EnableMetricsCollectionWithContext method.
// It will increment the count of requests made to EnableMetricsCollection.
func (c *AutoScaling) EnableMetricsCollectionWithContext(ctx aws.Context, input *autoscaling.EnableMetricsCollectionInput, opts ...request.Option) (*autoscaling.EnableMetricsCollectionOutput, error) {
	c.inc("EnableMetricsCollection")
	return c.svc.EnableMetricsCollectionWithContext(ctx, input, opts...)
}

// EnterStandbyRequest is a passthrough to the underlying EnterStandbyRequest.
// It will increment the count of requests made to EnterStandby.
func (c *AutoScaling) EnterStandbyRequest(input *autoscaling.EnterStandbyInput) (req *request.Request, output *autoscaling.EnterStandbyOutput) {
	c.inc("EnterStandby")
	return c.svc.EnterStandbyRequest(input)
}

// EnterStandby is a passthrough to the underlying EnterStandby method.
// It will increment the count of requests made to EnterStandby.
func (c *AutoScaling) EnterStandby(input *autoscaling.EnterStandbyInput) (*autoscaling.EnterStandbyOutput, error) {
	c.inc("EnterStandby")
	return c.svc.EnterStandby(input)
}

// EnterStandbyWithContext is a passthrough to the underlying EnterStandbyWithContext method.
// It will increment the count of requests made to EnterStandby.
func (c *AutoScaling) EnterStandbyWithContext(ctx aws.Context, input *autoscaling.EnterStandbyInput, opts ...request.Option) (*autoscaling.EnterStandbyOutput, error) {
	c.inc("EnterStandby")
	return c.svc.EnterStandbyWithContext(ctx, input, opts...)
}

// ExecutePolicyRequest is a passthrough to the underlying ExecutePolicyRequest.
// It will increment the count of requests made to ExecutePolicy.
func (c *AutoScaling) ExecutePolicyRequest(input *autoscaling.ExecutePolicyInput) (req *request.Request, output *autoscaling.ExecutePolicyOutput) {
	c.inc("ExecutePolicy")
	return c.svc.ExecutePolicyRequest(input)
}

// ExecutePolicy is a passthrough to the underlying ExecutePolicy method.
// It will increment the count of requests made to ExecutePolicy.
func (c *AutoScaling) ExecutePolicy(input *autoscaling.ExecutePolicyInput) (*autoscaling.ExecutePolicyOutput, error) {
	c.inc("ExecutePolicy")
	return c.svc.ExecutePolicy(input)
}

// ExecutePolicyWithContext is a passthrough to the underlying ExecutePolicyWithContext method.
// It will increment the count of requests made to ExecutePolicy.
func (c *AutoScaling) ExecutePolicyWithContext(ctx aws.Context, input *autoscaling.ExecutePolicyInput, opts ...request.Option) (*autoscaling.ExecutePolicyOutput, error) {
	c.inc("ExecutePolicy")
	return c.svc.ExecutePolicyWithContext(ctx, input, opts...)
}

// ExitStandbyRequest is a passthrough to the underlying ExitStandbyRequest.
// It will increment the count of requests made to ExitStandby.
func (c *AutoScaling) ExitStandbyRequest(input *autoscaling.ExitStandbyInput) (req *request.Request, output *autoscaling.ExitStandbyOutput) {
	c.inc("ExitStandby")
	return c.svc.ExitStandbyRequest(input)
}

// ExitStandby is a passthrough to the underlying ExitStandby method.
// It will increment the count of requests made to ExitStandby.
func (c *AutoScaling) ExitStandby(input *autoscaling.ExitStandbyInput) (*autoscaling.ExitStandbyOutput, error) {
	c.inc("ExitStandby")
	return c.svc.ExitStandby(input)
}

// ExitStandbyWithContext is a passthrough to the underlying ExitStandbyWithContext method.
// It will increment the count of requests made to ExitStandby.
func (c *AutoScaling) ExitStandbyWithContext(ctx aws.Context, input *autoscaling.ExitStandbyInput, opts ...request.Option) (*autoscaling.ExitStandbyOutput, error) {
	c.inc("ExitStandby")
	return c.svc.ExitStandbyWithContext(ctx, input, opts...)
}

// PutLifecycleHookRequest is a passthrough to the underlying PutLifecycleHookRequest.
// It will increment the count of requests made to PutLifecycleHook.
func (c *AutoScaling) PutLifecycleHookRequest(input *autoscaling.PutLifecycleHookInput) (req *request.Request, output *autoscaling.PutLifecycleHookOutput) {
	c.inc("PutLifecycleHook")
	return c.svc.PutLifecycleHookRequest(input)
}

// PutLifecycleHook is a passthrough to the underlying PutLifecycleHook method.
// It will increment the count of requests made to PutLifecycleHook.
func (c *AutoScaling) PutLifecycleHook(input *autoscaling.PutLifecycleHookInput) (*autoscaling.PutLifecycleHookOutput, error) {
	c.inc("PutLifecycleHook")
	return c.svc.PutLifecycleHook(input)
}

// PutLifecycleHookWithContext is a passthrough to the underlying PutLifecycleHookWithContext method.
// It will increment the count of requests made to PutLifecycleHook.
func (c *AutoScaling) PutLifecycleHookWithContext(ctx aws.Context, input *autoscaling.PutLifecycleHookInput, opts ...request.Option) (*autoscaling.PutLifecycleHookOutput, error) {
	c.inc("PutLifecycleHook")
	return c.svc.PutLifecycleHookWithContext(ctx, input, opts...)
}

// PutNotificationConfigurationRequest is a passthrough to the underlying PutNotificationConfigurationRequest.
// It will increment the count of requests made to PutNotificationConfiguration.
func (c *AutoScaling) PutNotificationConfigurationRequest(input *autoscaling.PutNotificationConfigurationInput) (req *request.Request, output *autoscaling.PutNotificationConfigurationOutput) {
	c.inc("PutNotificationConfiguration")
	return c.svc.PutNotificationConfigurationRequest(input)
}

// PutNotificationConfiguration is a passthrough to the underlying PutNotificationConfiguration method.
// It will increment the count of requests made to PutNotificationConfiguration.
func (c *AutoScaling) PutNotificationConfiguration(input *autoscaling.PutNotificationConfigurationInput) (*autoscaling.PutNotificationConfigurationOutput, error) {
	c.inc("PutNotificationConfiguration")
	return c.svc.PutNotificationConfiguration(input)
}

// PutNotificationConfigurationWithContext is a passthrough to the underlying PutNotificationConfigurationWithContext method.
// It will increment the count of requests made to PutNotificationConfiguration.
func (c *AutoScaling) PutNotificationConfigurationWithContext(ctx aws.Context, input *autoscaling.PutNotificationConfigurationInput, opts ...request.Option) (*autoscaling.PutNotificationConfigurationOutput, error) {
	c.inc("PutNotificationConfiguration")
	return c.svc.PutNotificationConfigurationWithContext(ctx, input, opts...)
}

// PutScalingPolicyRequest is a passthrough to the underlying PutScalingPolicyRequest.
// It will increment the count of requests made to PutScalingPolicy.
func (c *AutoScaling) PutScalingPolicyRequest(input *autoscaling.PutScalingPolicyInput) (req *request.Request, output *autoscaling.PutScalingPolicyOutput) {
	c.inc("PutScalingPolicy")
	return c.svc.PutScalingPolicyRequest(input)
}

// PutScalingPolicy is a passthrough to the underlying PutScalingPolicy method.
// It will increment the count of requests made to PutScalingPolicy.
func (c *AutoScaling) PutScalingPolicy(input *autoscaling.PutScalingPolicyInput) (*autoscaling.PutScalingPolicyOutput, error) {
	c.inc("PutScalingPolicy")
	return c.svc.PutScalingPolicy(input)
}

// PutScalingPolicyWithContext is a passthrough to the underlying PutScalingPolicyWithContext method.
// It will increment the count of requests made to PutScalingPolicy.
func (c *AutoScaling) PutScalingPolicyWithContext(ctx aws.Context, input *autoscaling.PutScalingPolicyInput, opts ...request.Option) (*autoscaling.PutScalingPolicyOutput, error) {
	c.inc("PutScalingPolicy")
	return c.svc.PutScalingPolicyWithContext(ctx, input, opts...)
}

// PutScheduledUpdateGroupActionRequest is a passthrough to the underlying PutScheduledUpdateGroupActionRequest.
// It will increment the count of requests made to PutScheduledUpdateGroupAction.
func (c *AutoScaling) PutScheduledUpdateGroupActionRequest(input *autoscaling.PutScheduledUpdateGroupActionInput) (req *request.Request, output *autoscaling.PutScheduledUpdateGroupActionOutput) {
	c.inc("PutScheduledUpdateGroupAction")
	return c.svc.PutScheduledUpdateGroupActionRequest(input)
}

// PutScheduledUpdateGroupAction is a passthrough to the underlying PutScheduledUpdateGroupAction method.
// It will increment the count of requests made to PutScheduledUpdateGroupAction.
func (c *AutoScaling) PutScheduledUpdateGroupAction(input *autoscaling.PutScheduledUpdateGroupActionInput) (*autoscaling.PutScheduledUpdateGroupActionOutput, error) {
	c.inc("PutScheduledUpdateGroupAction")
	return c.svc.PutScheduledUpdateGroupAction(input)
}

// PutScheduledUpdateGroupActionWithContext is a passthrough to the underlying PutScheduledUpdateGroupActionWithContext method.
// It will increment the count of requests made to PutScheduledUpdateGroupAction.
func (c *AutoScaling) PutScheduledUpdateGroupActionWithContext(ctx aws.Context, input *autoscaling.PutScheduledUpdateGroupActionInput, opts ...request.Option) (*autoscaling.PutScheduledUpdateGroupActionOutput, error) {
	c.inc("PutScheduledUpdateGroupAction")
	return c.svc.PutScheduledUpdateGroupActionWithContext(ctx, input, opts...)
}

// RecordLifecycleActionHeartbeatRequest is a passthrough to the underlying RecordLifecycleActionHeartbeatRequest.
// It will increment the count of requests made to RecordLifecycleActionHeartbeat.
func (c *AutoScaling) RecordLifecycleActionHeartbeatRequest(input *autoscaling.RecordLifecycleActionHeartbeatInput) (req *request.Request, output *autoscaling.RecordLifecycleActionHeartbeatOutput) {
	c.inc("RecordLifecycleActionHeartbeat")
	return c.svc.RecordLifecycleActionHeartbeatRequest(input)
}

// RecordLifecycleActionHeartbeat is a passthrough to the underlying RecordLifecycleActionHeartbeat method.
// It will increment the count of requests made to RecordLifecycleActionHeartbeat.
func (c *AutoScaling) RecordLifecycleActionHeartbeat(input *autoscaling.RecordLifecycleActionHeartbeatInput) (*autoscaling.RecordLifecycleActionHeartbeatOutput, error) {
	c.inc("RecordLifecycleActionHeartbeat")
	return c.svc.RecordLifecycleActionHeartbeat(input)
}

// RecordLifecycleActionHeartbeatWithContext is a passthrough to the underlying RecordLifecycleActionHeartbeatWithContext method.
// It will increment the count of requests made to RecordLifecycleActionHeartbeat.
func (c *AutoScaling) RecordLifecycleActionHeartbeatWithContext(ctx aws.Context, input *autoscaling.RecordLifecycleActionHeartbeatInput, opts ...request.Option) (*autoscaling.RecordLifecycleActionHeartbeatOutput, error) {
	c.inc("RecordLifecycleActionHeartbeat")
	return c.svc.RecordLifecycleActionHeartbeatWithContext(ctx, input, opts...)
}

// ResumeProcessesRequest is a passthrough to the underlying ResumeProcessesRequest.
// It will increment the count of requests made to ResumeProcesses.
func (c *AutoScaling) ResumeProcessesRequest(input *autoscaling.ScalingProcessQuery) (req *request.Request, output *autoscaling.ResumeProcessesOutput) {
	c.inc("ResumeProcesses")
	return c.svc.ResumeProcessesRequest(input)
}

// ResumeProcesses is a passthrough to the underlying ResumeProcesses method.
// It will increment the count of requests made to ResumeProcesses.
func (c *AutoScaling) ResumeProcesses(input *autoscaling.ScalingProcessQuery) (*autoscaling.ResumeProcessesOutput, error) {
	c.inc("ResumeProcesses")
	return c.svc.ResumeProcesses(input)
}

// ResumeProcessesWithContext is a passthrough to the underlying ResumeProcessesWithContext method.
// It will increment the count of requests made to ResumeProcesses.
func (c *AutoScaling) ResumeProcessesWithContext(ctx aws.Context, input *autoscaling.ScalingProcessQuery, opts ...request.Option) (*autoscaling.ResumeProcessesOutput, error) {
	c.inc("ResumeProcesses")
	return c.svc.ResumeProcessesWithContext(ctx, input, opts...)
}

// SetDesiredCapacityRequest is a passthrough to the underlying SetDesiredCapacityRequest.
// It will increment the count of requests made to SetDesiredCapacity.
func (c *AutoScaling) SetDesiredCapacityRequest(input *autoscaling.SetDesiredCapacityInput) (req *request.Request, output *autoscaling.SetDesiredCapacityOutput) {
	c.inc("SetDesiredCapacity")
	return c.svc.SetDesiredCapacityRequest(input)
}

// SetDesiredCapacity is a passthrough to the underlying SetDesiredCapacity method.
// It will increment the count of requests made to SetDesiredCapacity.
func (c *AutoScaling) SetDesiredCapacity(input *autoscaling.SetDesiredCapacityInput) (*autoscaling.SetDesiredCapacityOutput, error) {
	c.inc("SetDesiredCapacity")
	return c.svc.SetDesiredCapacity(input)
}

// SetDesiredCapacityWithContext is a passthrough to the underlying SetDesiredCapacityWithContext method.
// It will increment the count of requests made to SetDesiredCapacity.
func (c *AutoScaling) SetDesiredCapacityWithContext(ctx aws.Context, input *autoscaling.SetDesiredCapacityInput, opts ...request.Option) (*autoscaling.SetDesiredCapacityOutput, error) {
	c.inc("SetDesiredCapacity")
	return c.svc.SetDesiredCapacityWithContext(ctx, input, opts...)
}

// SetInstanceHealthRequest is a passthrough to the underlying SetInstanceHealthRequest.
// It will increment the count of requests made to SetInstanceHealth.
func (c *AutoScaling) SetInstanceHealthRequest(input *autoscaling.SetInstanceHealthInput) (req *request.Request, output *autoscaling.SetInstanceHealthOutput) {
	c.inc("SetInstanceHealth")
	return c.svc.SetInstanceHealthRequest(input)
}

// SetInstanceHealth is a passthrough to the underlying SetInstanceHealth method.
// It will increment the count of requests made to SetInstanceHealth.
func (c *AutoScaling) SetInstanceHealth(input *autoscaling.SetInstanceHealthInput) (*autoscaling.SetInstanceHealthOutput, error) {
	c.inc("SetInstanceHealth")
	return c.svc.SetInstanceHealth(input)
}

// SetInstanceHealthWithContext is a passthrough to the underlying SetInstanceHealthWithContext method.
// It will increment the count of requests made to SetInstanceHealth.
func (c *AutoScaling) SetInstanceHealthWithContext(ctx aws.Context, input *autoscaling.SetInstanceHealthInput, opts ...request.Option) (*autoscaling.SetInstanceHealthOutput, error) {
	c.inc("SetInstanceHealth")
	return c.svc.SetInstanceHealthWithContext(ctx, input, opts...)
}

// SetInstanceProtectionRequest is a passthrough to the underlying SetInstanceProtectionRequest.
// It will increment the count of requests made to SetInstanceProtection.
func (c *AutoScaling) SetInstanceProtectionRequest(input *autoscaling.SetInstanceProtectionInput) (req *request.Request, output *autoscaling.SetInstanceProtectionOutput) {
	c.inc("SetInstanceProtection")
	return c.svc.SetInstanceProtectionRequest(input)
}

// SetInstanceProtection is a passthrough to the underlying SetInstanceProtection method.
// It will increment the count of requests made to SetInstanceProtection.
func (c *AutoScaling) SetInstanceProtection(input *autoscaling.SetInstanceProtectionInput) (*autoscaling.SetInstanceProtectionOutput, error) {
	c.inc("SetInstanceProtection")
	return c.svc.SetInstanceProtection(input)
}

// SetInstanceProtectionWithContext is a passthrough to the underlying SetInstanceProtectionWithContext method.
// It will increment the count of requests made to SetInstanceProtection.
func (c *AutoScaling) SetInstanceProtectionWithContext(ctx aws.Context, input *autoscaling.SetInstanceProtectionInput, opts ...request.Option) (*autoscaling.SetInstanceProtectionOutput, error) {
	c.inc("SetInstanceProtection")
	return c.svc.SetInstanceProtectionWithContext(ctx, input, opts...)
}

// SuspendProcessesRequest is a passthrough to the underlying SuspendProcessesRequest.
// It will increment the count of requests made to SuspendProcesses.
func (c *AutoScaling) SuspendProcessesRequest(input *autoscaling.ScalingProcessQuery) (req *request.Request, output *autoscaling.SuspendProcessesOutput) {
	c.inc("SuspendProcesses")
	return c.svc.SuspendProcessesRequest(input)
}

// SuspendProcesses is a passthrough to the underlying SuspendProcesses method.
// It will increment the count of requests made to SuspendProcesses.
func (c *AutoScaling) SuspendProcesses(input *autoscaling.ScalingProcessQuery) (*autoscaling.SuspendProcessesOutput, error) {
	c.inc("SuspendProcesses")
	return c.svc.SuspendProcesses(input)
}

// SuspendProcessesWithContext is a passthrough to the underlying SuspendProcessesWithContext method.
// It will increment the count of requests made to SuspendProcesses.
func (c *AutoScaling) SuspendProcessesWithContext(ctx aws.Context, input *autoscaling.ScalingProcessQuery, opts ...request.Option) (*autoscaling.SuspendProcessesOutput, error) {
	c.inc("SuspendProcesses")
	return c.svc.SuspendProcessesWithContext(ctx, input, opts...)
}

// TerminateInstanceInAutoScalingGroupRequest is a passthrough to the underlying TerminateInstanceInAutoScalingGroupRequest.
// It will increment the count of requests made to TerminateInstanceInAutoScalingGroup.
func (c *AutoScaling) TerminateInstanceInAutoScalingGroupRequest(input *autoscaling.TerminateInstanceInAutoScalingGroupInput) (req *request.Request, output *autoscaling.TerminateInstanceInAutoScalingGroupOutput) {
	c.inc("TerminateInstanceInAutoScalingGroup")
	return c.svc.TerminateInstanceInAutoScalingGroupRequest(input)
}

// TerminateInstanceInAutoScalingGroup is a passthrough to the underlying TerminateInstanceInAutoScalingGroup method.
// It will increment the count of requests made to TerminateInstanceInAutoScalingGroup.
func (c *AutoScaling) TerminateInstanceInAutoScalingGroup(input *autoscaling.TerminateInstanceInAutoScalingGroupInput) (*autoscaling.TerminateInstanceInAutoScalingGroupOutput, error) {
	c.inc("TerminateInstanceInAutoScalingGroup")
	return c.svc.TerminateInstanceInAutoScalingGroup(input)
}

// TerminateInstanceInAutoScalingGroupWithContext is a passthrough to the underlying TerminateInstanceInAutoScalingGroupWithContext method.
// It will increment the count of requests made to TerminateInstanceInAutoScalingGroup.
func (c *AutoScaling) TerminateInstanceInAutoScalingGroupWithContext(ctx aws.Context, input *autoscaling.TerminateInstanceInAutoScalingGroupInput, opts ...request.Option) (*autoscaling.TerminateInstanceInAutoScalingGroupOutput, error) {
	c.inc("TerminateInstanceInAutoScalingGroup")
	return c.svc.TerminateInstanceInAutoScalingGroupWithContext(ctx, input, opts...)
}

// UpdateAutoScalingGroupRequest is a passthrough to the underlying UpdateAutoScalingGroupRequest.
// It will increment the count of requests made to UpdateAutoScalingGroup.
func (c *AutoScaling) UpdateAutoScalingGroupRequest(input *autoscaling.UpdateAutoScalingGroupInput) (req *request.Request, output *autoscaling.UpdateAutoScalingGroupOutput) {
	c.inc("UpdateAutoScalingGroup")
	return c.svc.UpdateAutoScalingGroupRequest(input)
}

// UpdateAutoScalingGroup is a passthrough to the underlying UpdateAutoScalingGroup method.
// It will increment the count of requests made to UpdateAutoScalingGroup.
func (c *AutoScaling) UpdateAutoScalingGroup(input *autoscaling.UpdateAutoScalingGroupInput) (*autoscaling.UpdateAutoScalingGroupOutput, error) {
	c.inc("UpdateAutoScalingGroup")
	return c.svc.UpdateAutoScalingGroup(input)
}

// UpdateAutoScalingGroupWithContext is a passthrough to the underlying UpdateAutoScalingGroupWithContext method.
// It will increment the count of requests made to UpdateAutoScalingGroup.
func (c *AutoScaling) UpdateAutoScalingGroupWithContext(ctx aws.Context, input *autoscaling.UpdateAutoScalingGroupInput, opts ...request.Option) (*autoscaling.UpdateAutoScalingGroupOutput, error) {
	c.inc("UpdateAutoScalingGroup")
	return c.svc.UpdateAutoScalingGroupWithContext(ctx, input, opts...)
}
