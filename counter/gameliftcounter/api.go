// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package gameliftcounter

import (
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/gamelift"
)

// AcceptMatchRequest is a passthrough to the underlying AcceptMatchRequest.
// It will increment the count of requests made to AcceptMatch.
func (c *GameLift) AcceptMatchRequest(input *gamelift.AcceptMatchInput) (req *request.Request, output *gamelift.AcceptMatchOutput) {
	c.inc("AcceptMatch")
	return c.svc.AcceptMatchRequest(input)
}

// AcceptMatch is a passthrough to the underlying AcceptMatch method.
// It will increment the count of requests made to AcceptMatch.
func (c *GameLift) AcceptMatch(input *gamelift.AcceptMatchInput) (*gamelift.AcceptMatchOutput, error) {
	c.inc("AcceptMatch")
	return c.svc.AcceptMatch(input)
}

// AcceptMatchWithContext is a passthrough to the underlying AcceptMatchWithContext method.
// It will increment the count of requests made to AcceptMatch.
func (c *GameLift) AcceptMatchWithContext(ctx aws.Context, input *gamelift.AcceptMatchInput, opts ...request.Option) (*gamelift.AcceptMatchOutput, error) {
	c.inc("AcceptMatch")
	return c.svc.AcceptMatchWithContext(ctx, input, opts...)
}

// CreateAliasRequest is a passthrough to the underlying CreateAliasRequest.
// It will increment the count of requests made to CreateAlias.
func (c *GameLift) CreateAliasRequest(input *gamelift.CreateAliasInput) (req *request.Request, output *gamelift.CreateAliasOutput) {
	c.inc("CreateAlias")
	return c.svc.CreateAliasRequest(input)
}

// CreateAlias is a passthrough to the underlying CreateAlias method.
// It will increment the count of requests made to CreateAlias.
func (c *GameLift) CreateAlias(input *gamelift.CreateAliasInput) (*gamelift.CreateAliasOutput, error) {
	c.inc("CreateAlias")
	return c.svc.CreateAlias(input)
}

// CreateAliasWithContext is a passthrough to the underlying CreateAliasWithContext method.
// It will increment the count of requests made to CreateAlias.
func (c *GameLift) CreateAliasWithContext(ctx aws.Context, input *gamelift.CreateAliasInput, opts ...request.Option) (*gamelift.CreateAliasOutput, error) {
	c.inc("CreateAlias")
	return c.svc.CreateAliasWithContext(ctx, input, opts...)
}

// CreateBuildRequest is a passthrough to the underlying CreateBuildRequest.
// It will increment the count of requests made to CreateBuild.
func (c *GameLift) CreateBuildRequest(input *gamelift.CreateBuildInput) (req *request.Request, output *gamelift.CreateBuildOutput) {
	c.inc("CreateBuild")
	return c.svc.CreateBuildRequest(input)
}

// CreateBuild is a passthrough to the underlying CreateBuild method.
// It will increment the count of requests made to CreateBuild.
func (c *GameLift) CreateBuild(input *gamelift.CreateBuildInput) (*gamelift.CreateBuildOutput, error) {
	c.inc("CreateBuild")
	return c.svc.CreateBuild(input)
}

// CreateBuildWithContext is a passthrough to the underlying CreateBuildWithContext method.
// It will increment the count of requests made to CreateBuild.
func (c *GameLift) CreateBuildWithContext(ctx aws.Context, input *gamelift.CreateBuildInput, opts ...request.Option) (*gamelift.CreateBuildOutput, error) {
	c.inc("CreateBuild")
	return c.svc.CreateBuildWithContext(ctx, input, opts...)
}

// CreateFleetRequest is a passthrough to the underlying CreateFleetRequest.
// It will increment the count of requests made to CreateFleet.
func (c *GameLift) CreateFleetRequest(input *gamelift.CreateFleetInput) (req *request.Request, output *gamelift.CreateFleetOutput) {
	c.inc("CreateFleet")
	return c.svc.CreateFleetRequest(input)
}

// CreateFleet is a passthrough to the underlying CreateFleet method.
// It will increment the count of requests made to CreateFleet.
func (c *GameLift) CreateFleet(input *gamelift.CreateFleetInput) (*gamelift.CreateFleetOutput, error) {
	c.inc("CreateFleet")
	return c.svc.CreateFleet(input)
}

// CreateFleetWithContext is a passthrough to the underlying CreateFleetWithContext method.
// It will increment the count of requests made to CreateFleet.
func (c *GameLift) CreateFleetWithContext(ctx aws.Context, input *gamelift.CreateFleetInput, opts ...request.Option) (*gamelift.CreateFleetOutput, error) {
	c.inc("CreateFleet")
	return c.svc.CreateFleetWithContext(ctx, input, opts...)
}

// CreateGameSessionRequest is a passthrough to the underlying CreateGameSessionRequest.
// It will increment the count of requests made to CreateGameSession.
func (c *GameLift) CreateGameSessionRequest(input *gamelift.CreateGameSessionInput) (req *request.Request, output *gamelift.CreateGameSessionOutput) {
	c.inc("CreateGameSession")
	return c.svc.CreateGameSessionRequest(input)
}

// CreateGameSession is a passthrough to the underlying CreateGameSession method.
// It will increment the count of requests made to CreateGameSession.
func (c *GameLift) CreateGameSession(input *gamelift.CreateGameSessionInput) (*gamelift.CreateGameSessionOutput, error) {
	c.inc("CreateGameSession")
	return c.svc.CreateGameSession(input)
}

// CreateGameSessionWithContext is a passthrough to the underlying CreateGameSessionWithContext method.
// It will increment the count of requests made to CreateGameSession.
func (c *GameLift) CreateGameSessionWithContext(ctx aws.Context, input *gamelift.CreateGameSessionInput, opts ...request.Option) (*gamelift.CreateGameSessionOutput, error) {
	c.inc("CreateGameSession")
	return c.svc.CreateGameSessionWithContext(ctx, input, opts...)
}

// CreateGameSessionQueueRequest is a passthrough to the underlying CreateGameSessionQueueRequest.
// It will increment the count of requests made to CreateGameSessionQueue.
func (c *GameLift) CreateGameSessionQueueRequest(input *gamelift.CreateGameSessionQueueInput) (req *request.Request, output *gamelift.CreateGameSessionQueueOutput) {
	c.inc("CreateGameSessionQueue")
	return c.svc.CreateGameSessionQueueRequest(input)
}

// CreateGameSessionQueue is a passthrough to the underlying CreateGameSessionQueue method.
// It will increment the count of requests made to CreateGameSessionQueue.
func (c *GameLift) CreateGameSessionQueue(input *gamelift.CreateGameSessionQueueInput) (*gamelift.CreateGameSessionQueueOutput, error) {
	c.inc("CreateGameSessionQueue")
	return c.svc.CreateGameSessionQueue(input)
}

// CreateGameSessionQueueWithContext is a passthrough to the underlying CreateGameSessionQueueWithContext method.
// It will increment the count of requests made to CreateGameSessionQueue.
func (c *GameLift) CreateGameSessionQueueWithContext(ctx aws.Context, input *gamelift.CreateGameSessionQueueInput, opts ...request.Option) (*gamelift.CreateGameSessionQueueOutput, error) {
	c.inc("CreateGameSessionQueue")
	return c.svc.CreateGameSessionQueueWithContext(ctx, input, opts...)
}

// CreateMatchmakingConfigurationRequest is a passthrough to the underlying CreateMatchmakingConfigurationRequest.
// It will increment the count of requests made to CreateMatchmakingConfiguration.
func (c *GameLift) CreateMatchmakingConfigurationRequest(input *gamelift.CreateMatchmakingConfigurationInput) (req *request.Request, output *gamelift.CreateMatchmakingConfigurationOutput) {
	c.inc("CreateMatchmakingConfiguration")
	return c.svc.CreateMatchmakingConfigurationRequest(input)
}

// CreateMatchmakingConfiguration is a passthrough to the underlying CreateMatchmakingConfiguration method.
// It will increment the count of requests made to CreateMatchmakingConfiguration.
func (c *GameLift) CreateMatchmakingConfiguration(input *gamelift.CreateMatchmakingConfigurationInput) (*gamelift.CreateMatchmakingConfigurationOutput, error) {
	c.inc("CreateMatchmakingConfiguration")
	return c.svc.CreateMatchmakingConfiguration(input)
}

// CreateMatchmakingConfigurationWithContext is a passthrough to the underlying CreateMatchmakingConfigurationWithContext method.
// It will increment the count of requests made to CreateMatchmakingConfiguration.
func (c *GameLift) CreateMatchmakingConfigurationWithContext(ctx aws.Context, input *gamelift.CreateMatchmakingConfigurationInput, opts ...request.Option) (*gamelift.CreateMatchmakingConfigurationOutput, error) {
	c.inc("CreateMatchmakingConfiguration")
	return c.svc.CreateMatchmakingConfigurationWithContext(ctx, input, opts...)
}

// CreateMatchmakingRuleSetRequest is a passthrough to the underlying CreateMatchmakingRuleSetRequest.
// It will increment the count of requests made to CreateMatchmakingRuleSet.
func (c *GameLift) CreateMatchmakingRuleSetRequest(input *gamelift.CreateMatchmakingRuleSetInput) (req *request.Request, output *gamelift.CreateMatchmakingRuleSetOutput) {
	c.inc("CreateMatchmakingRuleSet")
	return c.svc.CreateMatchmakingRuleSetRequest(input)
}

// CreateMatchmakingRuleSet is a passthrough to the underlying CreateMatchmakingRuleSet method.
// It will increment the count of requests made to CreateMatchmakingRuleSet.
func (c *GameLift) CreateMatchmakingRuleSet(input *gamelift.CreateMatchmakingRuleSetInput) (*gamelift.CreateMatchmakingRuleSetOutput, error) {
	c.inc("CreateMatchmakingRuleSet")
	return c.svc.CreateMatchmakingRuleSet(input)
}

// CreateMatchmakingRuleSetWithContext is a passthrough to the underlying CreateMatchmakingRuleSetWithContext method.
// It will increment the count of requests made to CreateMatchmakingRuleSet.
func (c *GameLift) CreateMatchmakingRuleSetWithContext(ctx aws.Context, input *gamelift.CreateMatchmakingRuleSetInput, opts ...request.Option) (*gamelift.CreateMatchmakingRuleSetOutput, error) {
	c.inc("CreateMatchmakingRuleSet")
	return c.svc.CreateMatchmakingRuleSetWithContext(ctx, input, opts...)
}

// CreatePlayerSessionRequest is a passthrough to the underlying CreatePlayerSessionRequest.
// It will increment the count of requests made to CreatePlayerSession.
func (c *GameLift) CreatePlayerSessionRequest(input *gamelift.CreatePlayerSessionInput) (req *request.Request, output *gamelift.CreatePlayerSessionOutput) {
	c.inc("CreatePlayerSession")
	return c.svc.CreatePlayerSessionRequest(input)
}

// CreatePlayerSession is a passthrough to the underlying CreatePlayerSession method.
// It will increment the count of requests made to CreatePlayerSession.
func (c *GameLift) CreatePlayerSession(input *gamelift.CreatePlayerSessionInput) (*gamelift.CreatePlayerSessionOutput, error) {
	c.inc("CreatePlayerSession")
	return c.svc.CreatePlayerSession(input)
}

// CreatePlayerSessionWithContext is a passthrough to the underlying CreatePlayerSessionWithContext method.
// It will increment the count of requests made to CreatePlayerSession.
func (c *GameLift) CreatePlayerSessionWithContext(ctx aws.Context, input *gamelift.CreatePlayerSessionInput, opts ...request.Option) (*gamelift.CreatePlayerSessionOutput, error) {
	c.inc("CreatePlayerSession")
	return c.svc.CreatePlayerSessionWithContext(ctx, input, opts...)
}

// CreatePlayerSessionsRequest is a passthrough to the underlying CreatePlayerSessionsRequest.
// It will increment the count of requests made to CreatePlayerSessions.
func (c *GameLift) CreatePlayerSessionsRequest(input *gamelift.CreatePlayerSessionsInput) (req *request.Request, output *gamelift.CreatePlayerSessionsOutput) {
	c.inc("CreatePlayerSessions")
	return c.svc.CreatePlayerSessionsRequest(input)
}

// CreatePlayerSessions is a passthrough to the underlying CreatePlayerSessions method.
// It will increment the count of requests made to CreatePlayerSessions.
func (c *GameLift) CreatePlayerSessions(input *gamelift.CreatePlayerSessionsInput) (*gamelift.CreatePlayerSessionsOutput, error) {
	c.inc("CreatePlayerSessions")
	return c.svc.CreatePlayerSessions(input)
}

// CreatePlayerSessionsWithContext is a passthrough to the underlying CreatePlayerSessionsWithContext method.
// It will increment the count of requests made to CreatePlayerSessions.
func (c *GameLift) CreatePlayerSessionsWithContext(ctx aws.Context, input *gamelift.CreatePlayerSessionsInput, opts ...request.Option) (*gamelift.CreatePlayerSessionsOutput, error) {
	c.inc("CreatePlayerSessions")
	return c.svc.CreatePlayerSessionsWithContext(ctx, input, opts...)
}

// CreateVpcPeeringAuthorizationRequest is a passthrough to the underlying CreateVpcPeeringAuthorizationRequest.
// It will increment the count of requests made to CreateVpcPeeringAuthorization.
func (c *GameLift) CreateVpcPeeringAuthorizationRequest(input *gamelift.CreateVpcPeeringAuthorizationInput) (req *request.Request, output *gamelift.CreateVpcPeeringAuthorizationOutput) {
	c.inc("CreateVpcPeeringAuthorization")
	return c.svc.CreateVpcPeeringAuthorizationRequest(input)
}

// CreateVpcPeeringAuthorization is a passthrough to the underlying CreateVpcPeeringAuthorization method.
// It will increment the count of requests made to CreateVpcPeeringAuthorization.
func (c *GameLift) CreateVpcPeeringAuthorization(input *gamelift.CreateVpcPeeringAuthorizationInput) (*gamelift.CreateVpcPeeringAuthorizationOutput, error) {
	c.inc("CreateVpcPeeringAuthorization")
	return c.svc.CreateVpcPeeringAuthorization(input)
}

// CreateVpcPeeringAuthorizationWithContext is a passthrough to the underlying CreateVpcPeeringAuthorizationWithContext method.
// It will increment the count of requests made to CreateVpcPeeringAuthorization.
func (c *GameLift) CreateVpcPeeringAuthorizationWithContext(ctx aws.Context, input *gamelift.CreateVpcPeeringAuthorizationInput, opts ...request.Option) (*gamelift.CreateVpcPeeringAuthorizationOutput, error) {
	c.inc("CreateVpcPeeringAuthorization")
	return c.svc.CreateVpcPeeringAuthorizationWithContext(ctx, input, opts...)
}

// CreateVpcPeeringConnectionRequest is a passthrough to the underlying CreateVpcPeeringConnectionRequest.
// It will increment the count of requests made to CreateVpcPeeringConnection.
func (c *GameLift) CreateVpcPeeringConnectionRequest(input *gamelift.CreateVpcPeeringConnectionInput) (req *request.Request, output *gamelift.CreateVpcPeeringConnectionOutput) {
	c.inc("CreateVpcPeeringConnection")
	return c.svc.CreateVpcPeeringConnectionRequest(input)
}

// CreateVpcPeeringConnection is a passthrough to the underlying CreateVpcPeeringConnection method.
// It will increment the count of requests made to CreateVpcPeeringConnection.
func (c *GameLift) CreateVpcPeeringConnection(input *gamelift.CreateVpcPeeringConnectionInput) (*gamelift.CreateVpcPeeringConnectionOutput, error) {
	c.inc("CreateVpcPeeringConnection")
	return c.svc.CreateVpcPeeringConnection(input)
}

// CreateVpcPeeringConnectionWithContext is a passthrough to the underlying CreateVpcPeeringConnectionWithContext method.
// It will increment the count of requests made to CreateVpcPeeringConnection.
func (c *GameLift) CreateVpcPeeringConnectionWithContext(ctx aws.Context, input *gamelift.CreateVpcPeeringConnectionInput, opts ...request.Option) (*gamelift.CreateVpcPeeringConnectionOutput, error) {
	c.inc("CreateVpcPeeringConnection")
	return c.svc.CreateVpcPeeringConnectionWithContext(ctx, input, opts...)
}

// DeleteAliasRequest is a passthrough to the underlying DeleteAliasRequest.
// It will increment the count of requests made to DeleteAlias.
func (c *GameLift) DeleteAliasRequest(input *gamelift.DeleteAliasInput) (req *request.Request, output *gamelift.DeleteAliasOutput) {
	c.inc("DeleteAlias")
	return c.svc.DeleteAliasRequest(input)
}

// DeleteAlias is a passthrough to the underlying DeleteAlias method.
// It will increment the count of requests made to DeleteAlias.
func (c *GameLift) DeleteAlias(input *gamelift.DeleteAliasInput) (*gamelift.DeleteAliasOutput, error) {
	c.inc("DeleteAlias")
	return c.svc.DeleteAlias(input)
}

// DeleteAliasWithContext is a passthrough to the underlying DeleteAliasWithContext method.
// It will increment the count of requests made to DeleteAlias.
func (c *GameLift) DeleteAliasWithContext(ctx aws.Context, input *gamelift.DeleteAliasInput, opts ...request.Option) (*gamelift.DeleteAliasOutput, error) {
	c.inc("DeleteAlias")
	return c.svc.DeleteAliasWithContext(ctx, input, opts...)
}

// DeleteBuildRequest is a passthrough to the underlying DeleteBuildRequest.
// It will increment the count of requests made to DeleteBuild.
func (c *GameLift) DeleteBuildRequest(input *gamelift.DeleteBuildInput) (req *request.Request, output *gamelift.DeleteBuildOutput) {
	c.inc("DeleteBuild")
	return c.svc.DeleteBuildRequest(input)
}

// DeleteBuild is a passthrough to the underlying DeleteBuild method.
// It will increment the count of requests made to DeleteBuild.
func (c *GameLift) DeleteBuild(input *gamelift.DeleteBuildInput) (*gamelift.DeleteBuildOutput, error) {
	c.inc("DeleteBuild")
	return c.svc.DeleteBuild(input)
}

// DeleteBuildWithContext is a passthrough to the underlying DeleteBuildWithContext method.
// It will increment the count of requests made to DeleteBuild.
func (c *GameLift) DeleteBuildWithContext(ctx aws.Context, input *gamelift.DeleteBuildInput, opts ...request.Option) (*gamelift.DeleteBuildOutput, error) {
	c.inc("DeleteBuild")
	return c.svc.DeleteBuildWithContext(ctx, input, opts...)
}

// DeleteFleetRequest is a passthrough to the underlying DeleteFleetRequest.
// It will increment the count of requests made to DeleteFleet.
func (c *GameLift) DeleteFleetRequest(input *gamelift.DeleteFleetInput) (req *request.Request, output *gamelift.DeleteFleetOutput) {
	c.inc("DeleteFleet")
	return c.svc.DeleteFleetRequest(input)
}

// DeleteFleet is a passthrough to the underlying DeleteFleet method.
// It will increment the count of requests made to DeleteFleet.
func (c *GameLift) DeleteFleet(input *gamelift.DeleteFleetInput) (*gamelift.DeleteFleetOutput, error) {
	c.inc("DeleteFleet")
	return c.svc.DeleteFleet(input)
}

// DeleteFleetWithContext is a passthrough to the underlying DeleteFleetWithContext method.
// It will increment the count of requests made to DeleteFleet.
func (c *GameLift) DeleteFleetWithContext(ctx aws.Context, input *gamelift.DeleteFleetInput, opts ...request.Option) (*gamelift.DeleteFleetOutput, error) {
	c.inc("DeleteFleet")
	return c.svc.DeleteFleetWithContext(ctx, input, opts...)
}

// DeleteGameSessionQueueRequest is a passthrough to the underlying DeleteGameSessionQueueRequest.
// It will increment the count of requests made to DeleteGameSessionQueue.
func (c *GameLift) DeleteGameSessionQueueRequest(input *gamelift.DeleteGameSessionQueueInput) (req *request.Request, output *gamelift.DeleteGameSessionQueueOutput) {
	c.inc("DeleteGameSessionQueue")
	return c.svc.DeleteGameSessionQueueRequest(input)
}

// DeleteGameSessionQueue is a passthrough to the underlying DeleteGameSessionQueue method.
// It will increment the count of requests made to DeleteGameSessionQueue.
func (c *GameLift) DeleteGameSessionQueue(input *gamelift.DeleteGameSessionQueueInput) (*gamelift.DeleteGameSessionQueueOutput, error) {
	c.inc("DeleteGameSessionQueue")
	return c.svc.DeleteGameSessionQueue(input)
}

// DeleteGameSessionQueueWithContext is a passthrough to the underlying DeleteGameSessionQueueWithContext method.
// It will increment the count of requests made to DeleteGameSessionQueue.
func (c *GameLift) DeleteGameSessionQueueWithContext(ctx aws.Context, input *gamelift.DeleteGameSessionQueueInput, opts ...request.Option) (*gamelift.DeleteGameSessionQueueOutput, error) {
	c.inc("DeleteGameSessionQueue")
	return c.svc.DeleteGameSessionQueueWithContext(ctx, input, opts...)
}

// DeleteMatchmakingConfigurationRequest is a passthrough to the underlying DeleteMatchmakingConfigurationRequest.
// It will increment the count of requests made to DeleteMatchmakingConfiguration.
func (c *GameLift) DeleteMatchmakingConfigurationRequest(input *gamelift.DeleteMatchmakingConfigurationInput) (req *request.Request, output *gamelift.DeleteMatchmakingConfigurationOutput) {
	c.inc("DeleteMatchmakingConfiguration")
	return c.svc.DeleteMatchmakingConfigurationRequest(input)
}

// DeleteMatchmakingConfiguration is a passthrough to the underlying DeleteMatchmakingConfiguration method.
// It will increment the count of requests made to DeleteMatchmakingConfiguration.
func (c *GameLift) DeleteMatchmakingConfiguration(input *gamelift.DeleteMatchmakingConfigurationInput) (*gamelift.DeleteMatchmakingConfigurationOutput, error) {
	c.inc("DeleteMatchmakingConfiguration")
	return c.svc.DeleteMatchmakingConfiguration(input)
}

// DeleteMatchmakingConfigurationWithContext is a passthrough to the underlying DeleteMatchmakingConfigurationWithContext method.
// It will increment the count of requests made to DeleteMatchmakingConfiguration.
func (c *GameLift) DeleteMatchmakingConfigurationWithContext(ctx aws.Context, input *gamelift.DeleteMatchmakingConfigurationInput, opts ...request.Option) (*gamelift.DeleteMatchmakingConfigurationOutput, error) {
	c.inc("DeleteMatchmakingConfiguration")
	return c.svc.DeleteMatchmakingConfigurationWithContext(ctx, input, opts...)
}

// DeleteScalingPolicyRequest is a passthrough to the underlying DeleteScalingPolicyRequest.
// It will increment the count of requests made to DeleteScalingPolicy.
func (c *GameLift) DeleteScalingPolicyRequest(input *gamelift.DeleteScalingPolicyInput) (req *request.Request, output *gamelift.DeleteScalingPolicyOutput) {
	c.inc("DeleteScalingPolicy")
	return c.svc.DeleteScalingPolicyRequest(input)
}

// DeleteScalingPolicy is a passthrough to the underlying DeleteScalingPolicy method.
// It will increment the count of requests made to DeleteScalingPolicy.
func (c *GameLift) DeleteScalingPolicy(input *gamelift.DeleteScalingPolicyInput) (*gamelift.DeleteScalingPolicyOutput, error) {
	c.inc("DeleteScalingPolicy")
	return c.svc.DeleteScalingPolicy(input)
}

// DeleteScalingPolicyWithContext is a passthrough to the underlying DeleteScalingPolicyWithContext method.
// It will increment the count of requests made to DeleteScalingPolicy.
func (c *GameLift) DeleteScalingPolicyWithContext(ctx aws.Context, input *gamelift.DeleteScalingPolicyInput, opts ...request.Option) (*gamelift.DeleteScalingPolicyOutput, error) {
	c.inc("DeleteScalingPolicy")
	return c.svc.DeleteScalingPolicyWithContext(ctx, input, opts...)
}

// DeleteVpcPeeringAuthorizationRequest is a passthrough to the underlying DeleteVpcPeeringAuthorizationRequest.
// It will increment the count of requests made to DeleteVpcPeeringAuthorization.
func (c *GameLift) DeleteVpcPeeringAuthorizationRequest(input *gamelift.DeleteVpcPeeringAuthorizationInput) (req *request.Request, output *gamelift.DeleteVpcPeeringAuthorizationOutput) {
	c.inc("DeleteVpcPeeringAuthorization")
	return c.svc.DeleteVpcPeeringAuthorizationRequest(input)
}

// DeleteVpcPeeringAuthorization is a passthrough to the underlying DeleteVpcPeeringAuthorization method.
// It will increment the count of requests made to DeleteVpcPeeringAuthorization.
func (c *GameLift) DeleteVpcPeeringAuthorization(input *gamelift.DeleteVpcPeeringAuthorizationInput) (*gamelift.DeleteVpcPeeringAuthorizationOutput, error) {
	c.inc("DeleteVpcPeeringAuthorization")
	return c.svc.DeleteVpcPeeringAuthorization(input)
}

// DeleteVpcPeeringAuthorizationWithContext is a passthrough to the underlying DeleteVpcPeeringAuthorizationWithContext method.
// It will increment the count of requests made to DeleteVpcPeeringAuthorization.
func (c *GameLift) DeleteVpcPeeringAuthorizationWithContext(ctx aws.Context, input *gamelift.DeleteVpcPeeringAuthorizationInput, opts ...request.Option) (*gamelift.DeleteVpcPeeringAuthorizationOutput, error) {
	c.inc("DeleteVpcPeeringAuthorization")
	return c.svc.DeleteVpcPeeringAuthorizationWithContext(ctx, input, opts...)
}

// DeleteVpcPeeringConnectionRequest is a passthrough to the underlying DeleteVpcPeeringConnectionRequest.
// It will increment the count of requests made to DeleteVpcPeeringConnection.
func (c *GameLift) DeleteVpcPeeringConnectionRequest(input *gamelift.DeleteVpcPeeringConnectionInput) (req *request.Request, output *gamelift.DeleteVpcPeeringConnectionOutput) {
	c.inc("DeleteVpcPeeringConnection")
	return c.svc.DeleteVpcPeeringConnectionRequest(input)
}

// DeleteVpcPeeringConnection is a passthrough to the underlying DeleteVpcPeeringConnection method.
// It will increment the count of requests made to DeleteVpcPeeringConnection.
func (c *GameLift) DeleteVpcPeeringConnection(input *gamelift.DeleteVpcPeeringConnectionInput) (*gamelift.DeleteVpcPeeringConnectionOutput, error) {
	c.inc("DeleteVpcPeeringConnection")
	return c.svc.DeleteVpcPeeringConnection(input)
}

// DeleteVpcPeeringConnectionWithContext is a passthrough to the underlying DeleteVpcPeeringConnectionWithContext method.
// It will increment the count of requests made to DeleteVpcPeeringConnection.
func (c *GameLift) DeleteVpcPeeringConnectionWithContext(ctx aws.Context, input *gamelift.DeleteVpcPeeringConnectionInput, opts ...request.Option) (*gamelift.DeleteVpcPeeringConnectionOutput, error) {
	c.inc("DeleteVpcPeeringConnection")
	return c.svc.DeleteVpcPeeringConnectionWithContext(ctx, input, opts...)
}

// DescribeAliasRequest is a passthrough to the underlying DescribeAliasRequest.
// It will increment the count of requests made to DescribeAlias.
func (c *GameLift) DescribeAliasRequest(input *gamelift.DescribeAliasInput) (req *request.Request, output *gamelift.DescribeAliasOutput) {
	c.inc("DescribeAlias")
	return c.svc.DescribeAliasRequest(input)
}

// DescribeAlias is a passthrough to the underlying DescribeAlias method.
// It will increment the count of requests made to DescribeAlias.
func (c *GameLift) DescribeAlias(input *gamelift.DescribeAliasInput) (*gamelift.DescribeAliasOutput, error) {
	c.inc("DescribeAlias")
	return c.svc.DescribeAlias(input)
}

// DescribeAliasWithContext is a passthrough to the underlying DescribeAliasWithContext method.
// It will increment the count of requests made to DescribeAlias.
func (c *GameLift) DescribeAliasWithContext(ctx aws.Context, input *gamelift.DescribeAliasInput, opts ...request.Option) (*gamelift.DescribeAliasOutput, error) {
	c.inc("DescribeAlias")
	return c.svc.DescribeAliasWithContext(ctx, input, opts...)
}

// DescribeBuildRequest is a passthrough to the underlying DescribeBuildRequest.
// It will increment the count of requests made to DescribeBuild.
func (c *GameLift) DescribeBuildRequest(input *gamelift.DescribeBuildInput) (req *request.Request, output *gamelift.DescribeBuildOutput) {
	c.inc("DescribeBuild")
	return c.svc.DescribeBuildRequest(input)
}

// DescribeBuild is a passthrough to the underlying DescribeBuild method.
// It will increment the count of requests made to DescribeBuild.
func (c *GameLift) DescribeBuild(input *gamelift.DescribeBuildInput) (*gamelift.DescribeBuildOutput, error) {
	c.inc("DescribeBuild")
	return c.svc.DescribeBuild(input)
}

// DescribeBuildWithContext is a passthrough to the underlying DescribeBuildWithContext method.
// It will increment the count of requests made to DescribeBuild.
func (c *GameLift) DescribeBuildWithContext(ctx aws.Context, input *gamelift.DescribeBuildInput, opts ...request.Option) (*gamelift.DescribeBuildOutput, error) {
	c.inc("DescribeBuild")
	return c.svc.DescribeBuildWithContext(ctx, input, opts...)
}

// DescribeEC2InstanceLimitsRequest is a passthrough to the underlying DescribeEC2InstanceLimitsRequest.
// It will increment the count of requests made to DescribeEC2InstanceLimits.
func (c *GameLift) DescribeEC2InstanceLimitsRequest(input *gamelift.DescribeEC2InstanceLimitsInput) (req *request.Request, output *gamelift.DescribeEC2InstanceLimitsOutput) {
	c.inc("DescribeEC2InstanceLimits")
	return c.svc.DescribeEC2InstanceLimitsRequest(input)
}

// DescribeEC2InstanceLimits is a passthrough to the underlying DescribeEC2InstanceLimits method.
// It will increment the count of requests made to DescribeEC2InstanceLimits.
func (c *GameLift) DescribeEC2InstanceLimits(input *gamelift.DescribeEC2InstanceLimitsInput) (*gamelift.DescribeEC2InstanceLimitsOutput, error) {
	c.inc("DescribeEC2InstanceLimits")
	return c.svc.DescribeEC2InstanceLimits(input)
}

// DescribeEC2InstanceLimitsWithContext is a passthrough to the underlying DescribeEC2InstanceLimitsWithContext method.
// It will increment the count of requests made to DescribeEC2InstanceLimits.
func (c *GameLift) DescribeEC2InstanceLimitsWithContext(ctx aws.Context, input *gamelift.DescribeEC2InstanceLimitsInput, opts ...request.Option) (*gamelift.DescribeEC2InstanceLimitsOutput, error) {
	c.inc("DescribeEC2InstanceLimits")
	return c.svc.DescribeEC2InstanceLimitsWithContext(ctx, input, opts...)
}

// DescribeFleetAttributesRequest is a passthrough to the underlying DescribeFleetAttributesRequest.
// It will increment the count of requests made to DescribeFleetAttributes.
func (c *GameLift) DescribeFleetAttributesRequest(input *gamelift.DescribeFleetAttributesInput) (req *request.Request, output *gamelift.DescribeFleetAttributesOutput) {
	c.inc("DescribeFleetAttributes")
	return c.svc.DescribeFleetAttributesRequest(input)
}

// DescribeFleetAttributes is a passthrough to the underlying DescribeFleetAttributes method.
// It will increment the count of requests made to DescribeFleetAttributes.
func (c *GameLift) DescribeFleetAttributes(input *gamelift.DescribeFleetAttributesInput) (*gamelift.DescribeFleetAttributesOutput, error) {
	c.inc("DescribeFleetAttributes")
	return c.svc.DescribeFleetAttributes(input)
}

// DescribeFleetAttributesWithContext is a passthrough to the underlying DescribeFleetAttributesWithContext method.
// It will increment the count of requests made to DescribeFleetAttributes.
func (c *GameLift) DescribeFleetAttributesWithContext(ctx aws.Context, input *gamelift.DescribeFleetAttributesInput, opts ...request.Option) (*gamelift.DescribeFleetAttributesOutput, error) {
	c.inc("DescribeFleetAttributes")
	return c.svc.DescribeFleetAttributesWithContext(ctx, input, opts...)
}

// DescribeFleetCapacityRequest is a passthrough to the underlying DescribeFleetCapacityRequest.
// It will increment the count of requests made to DescribeFleetCapacity.
func (c *GameLift) DescribeFleetCapacityRequest(input *gamelift.DescribeFleetCapacityInput) (req *request.Request, output *gamelift.DescribeFleetCapacityOutput) {
	c.inc("DescribeFleetCapacity")
	return c.svc.DescribeFleetCapacityRequest(input)
}

// DescribeFleetCapacity is a passthrough to the underlying DescribeFleetCapacity method.
// It will increment the count of requests made to DescribeFleetCapacity.
func (c *GameLift) DescribeFleetCapacity(input *gamelift.DescribeFleetCapacityInput) (*gamelift.DescribeFleetCapacityOutput, error) {
	c.inc("DescribeFleetCapacity")
	return c.svc.DescribeFleetCapacity(input)
}

// DescribeFleetCapacityWithContext is a passthrough to the underlying DescribeFleetCapacityWithContext method.
// It will increment the count of requests made to DescribeFleetCapacity.
func (c *GameLift) DescribeFleetCapacityWithContext(ctx aws.Context, input *gamelift.DescribeFleetCapacityInput, opts ...request.Option) (*gamelift.DescribeFleetCapacityOutput, error) {
	c.inc("DescribeFleetCapacity")
	return c.svc.DescribeFleetCapacityWithContext(ctx, input, opts...)
}

// DescribeFleetEventsRequest is a passthrough to the underlying DescribeFleetEventsRequest.
// It will increment the count of requests made to DescribeFleetEvents.
func (c *GameLift) DescribeFleetEventsRequest(input *gamelift.DescribeFleetEventsInput) (req *request.Request, output *gamelift.DescribeFleetEventsOutput) {
	c.inc("DescribeFleetEvents")
	return c.svc.DescribeFleetEventsRequest(input)
}

// DescribeFleetEvents is a passthrough to the underlying DescribeFleetEvents method.
// It will increment the count of requests made to DescribeFleetEvents.
func (c *GameLift) DescribeFleetEvents(input *gamelift.DescribeFleetEventsInput) (*gamelift.DescribeFleetEventsOutput, error) {
	c.inc("DescribeFleetEvents")
	return c.svc.DescribeFleetEvents(input)
}

// DescribeFleetEventsWithContext is a passthrough to the underlying DescribeFleetEventsWithContext method.
// It will increment the count of requests made to DescribeFleetEvents.
func (c *GameLift) DescribeFleetEventsWithContext(ctx aws.Context, input *gamelift.DescribeFleetEventsInput, opts ...request.Option) (*gamelift.DescribeFleetEventsOutput, error) {
	c.inc("DescribeFleetEvents")
	return c.svc.DescribeFleetEventsWithContext(ctx, input, opts...)
}

// DescribeFleetPortSettingsRequest is a passthrough to the underlying DescribeFleetPortSettingsRequest.
// It will increment the count of requests made to DescribeFleetPortSettings.
func (c *GameLift) DescribeFleetPortSettingsRequest(input *gamelift.DescribeFleetPortSettingsInput) (req *request.Request, output *gamelift.DescribeFleetPortSettingsOutput) {
	c.inc("DescribeFleetPortSettings")
	return c.svc.DescribeFleetPortSettingsRequest(input)
}

// DescribeFleetPortSettings is a passthrough to the underlying DescribeFleetPortSettings method.
// It will increment the count of requests made to DescribeFleetPortSettings.
func (c *GameLift) DescribeFleetPortSettings(input *gamelift.DescribeFleetPortSettingsInput) (*gamelift.DescribeFleetPortSettingsOutput, error) {
	c.inc("DescribeFleetPortSettings")
	return c.svc.DescribeFleetPortSettings(input)
}

// DescribeFleetPortSettingsWithContext is a passthrough to the underlying DescribeFleetPortSettingsWithContext method.
// It will increment the count of requests made to DescribeFleetPortSettings.
func (c *GameLift) DescribeFleetPortSettingsWithContext(ctx aws.Context, input *gamelift.DescribeFleetPortSettingsInput, opts ...request.Option) (*gamelift.DescribeFleetPortSettingsOutput, error) {
	c.inc("DescribeFleetPortSettings")
	return c.svc.DescribeFleetPortSettingsWithContext(ctx, input, opts...)
}

// DescribeFleetUtilizationRequest is a passthrough to the underlying DescribeFleetUtilizationRequest.
// It will increment the count of requests made to DescribeFleetUtilization.
func (c *GameLift) DescribeFleetUtilizationRequest(input *gamelift.DescribeFleetUtilizationInput) (req *request.Request, output *gamelift.DescribeFleetUtilizationOutput) {
	c.inc("DescribeFleetUtilization")
	return c.svc.DescribeFleetUtilizationRequest(input)
}

// DescribeFleetUtilization is a passthrough to the underlying DescribeFleetUtilization method.
// It will increment the count of requests made to DescribeFleetUtilization.
func (c *GameLift) DescribeFleetUtilization(input *gamelift.DescribeFleetUtilizationInput) (*gamelift.DescribeFleetUtilizationOutput, error) {
	c.inc("DescribeFleetUtilization")
	return c.svc.DescribeFleetUtilization(input)
}

// DescribeFleetUtilizationWithContext is a passthrough to the underlying DescribeFleetUtilizationWithContext method.
// It will increment the count of requests made to DescribeFleetUtilization.
func (c *GameLift) DescribeFleetUtilizationWithContext(ctx aws.Context, input *gamelift.DescribeFleetUtilizationInput, opts ...request.Option) (*gamelift.DescribeFleetUtilizationOutput, error) {
	c.inc("DescribeFleetUtilization")
	return c.svc.DescribeFleetUtilizationWithContext(ctx, input, opts...)
}

// DescribeGameSessionDetailsRequest is a passthrough to the underlying DescribeGameSessionDetailsRequest.
// It will increment the count of requests made to DescribeGameSessionDetails.
func (c *GameLift) DescribeGameSessionDetailsRequest(input *gamelift.DescribeGameSessionDetailsInput) (req *request.Request, output *gamelift.DescribeGameSessionDetailsOutput) {
	c.inc("DescribeGameSessionDetails")
	return c.svc.DescribeGameSessionDetailsRequest(input)
}

// DescribeGameSessionDetails is a passthrough to the underlying DescribeGameSessionDetails method.
// It will increment the count of requests made to DescribeGameSessionDetails.
func (c *GameLift) DescribeGameSessionDetails(input *gamelift.DescribeGameSessionDetailsInput) (*gamelift.DescribeGameSessionDetailsOutput, error) {
	c.inc("DescribeGameSessionDetails")
	return c.svc.DescribeGameSessionDetails(input)
}

// DescribeGameSessionDetailsWithContext is a passthrough to the underlying DescribeGameSessionDetailsWithContext method.
// It will increment the count of requests made to DescribeGameSessionDetails.
func (c *GameLift) DescribeGameSessionDetailsWithContext(ctx aws.Context, input *gamelift.DescribeGameSessionDetailsInput, opts ...request.Option) (*gamelift.DescribeGameSessionDetailsOutput, error) {
	c.inc("DescribeGameSessionDetails")
	return c.svc.DescribeGameSessionDetailsWithContext(ctx, input, opts...)
}

// DescribeGameSessionPlacementRequest is a passthrough to the underlying DescribeGameSessionPlacementRequest.
// It will increment the count of requests made to DescribeGameSessionPlacement.
func (c *GameLift) DescribeGameSessionPlacementRequest(input *gamelift.DescribeGameSessionPlacementInput) (req *request.Request, output *gamelift.DescribeGameSessionPlacementOutput) {
	c.inc("DescribeGameSessionPlacement")
	return c.svc.DescribeGameSessionPlacementRequest(input)
}

// DescribeGameSessionPlacement is a passthrough to the underlying DescribeGameSessionPlacement method.
// It will increment the count of requests made to DescribeGameSessionPlacement.
func (c *GameLift) DescribeGameSessionPlacement(input *gamelift.DescribeGameSessionPlacementInput) (*gamelift.DescribeGameSessionPlacementOutput, error) {
	c.inc("DescribeGameSessionPlacement")
	return c.svc.DescribeGameSessionPlacement(input)
}

// DescribeGameSessionPlacementWithContext is a passthrough to the underlying DescribeGameSessionPlacementWithContext method.
// It will increment the count of requests made to DescribeGameSessionPlacement.
func (c *GameLift) DescribeGameSessionPlacementWithContext(ctx aws.Context, input *gamelift.DescribeGameSessionPlacementInput, opts ...request.Option) (*gamelift.DescribeGameSessionPlacementOutput, error) {
	c.inc("DescribeGameSessionPlacement")
	return c.svc.DescribeGameSessionPlacementWithContext(ctx, input, opts...)
}

// DescribeGameSessionQueuesRequest is a passthrough to the underlying DescribeGameSessionQueuesRequest.
// It will increment the count of requests made to DescribeGameSessionQueues.
func (c *GameLift) DescribeGameSessionQueuesRequest(input *gamelift.DescribeGameSessionQueuesInput) (req *request.Request, output *gamelift.DescribeGameSessionQueuesOutput) {
	c.inc("DescribeGameSessionQueues")
	return c.svc.DescribeGameSessionQueuesRequest(input)
}

// DescribeGameSessionQueues is a passthrough to the underlying DescribeGameSessionQueues method.
// It will increment the count of requests made to DescribeGameSessionQueues.
func (c *GameLift) DescribeGameSessionQueues(input *gamelift.DescribeGameSessionQueuesInput) (*gamelift.DescribeGameSessionQueuesOutput, error) {
	c.inc("DescribeGameSessionQueues")
	return c.svc.DescribeGameSessionQueues(input)
}

// DescribeGameSessionQueuesWithContext is a passthrough to the underlying DescribeGameSessionQueuesWithContext method.
// It will increment the count of requests made to DescribeGameSessionQueues.
func (c *GameLift) DescribeGameSessionQueuesWithContext(ctx aws.Context, input *gamelift.DescribeGameSessionQueuesInput, opts ...request.Option) (*gamelift.DescribeGameSessionQueuesOutput, error) {
	c.inc("DescribeGameSessionQueues")
	return c.svc.DescribeGameSessionQueuesWithContext(ctx, input, opts...)
}

// DescribeGameSessionsRequest is a passthrough to the underlying DescribeGameSessionsRequest.
// It will increment the count of requests made to DescribeGameSessions.
func (c *GameLift) DescribeGameSessionsRequest(input *gamelift.DescribeGameSessionsInput) (req *request.Request, output *gamelift.DescribeGameSessionsOutput) {
	c.inc("DescribeGameSessions")
	return c.svc.DescribeGameSessionsRequest(input)
}

// DescribeGameSessions is a passthrough to the underlying DescribeGameSessions method.
// It will increment the count of requests made to DescribeGameSessions.
func (c *GameLift) DescribeGameSessions(input *gamelift.DescribeGameSessionsInput) (*gamelift.DescribeGameSessionsOutput, error) {
	c.inc("DescribeGameSessions")
	return c.svc.DescribeGameSessions(input)
}

// DescribeGameSessionsWithContext is a passthrough to the underlying DescribeGameSessionsWithContext method.
// It will increment the count of requests made to DescribeGameSessions.
func (c *GameLift) DescribeGameSessionsWithContext(ctx aws.Context, input *gamelift.DescribeGameSessionsInput, opts ...request.Option) (*gamelift.DescribeGameSessionsOutput, error) {
	c.inc("DescribeGameSessions")
	return c.svc.DescribeGameSessionsWithContext(ctx, input, opts...)
}

// DescribeInstancesRequest is a passthrough to the underlying DescribeInstancesRequest.
// It will increment the count of requests made to DescribeInstances.
func (c *GameLift) DescribeInstancesRequest(input *gamelift.DescribeInstancesInput) (req *request.Request, output *gamelift.DescribeInstancesOutput) {
	c.inc("DescribeInstances")
	return c.svc.DescribeInstancesRequest(input)
}

// DescribeInstances is a passthrough to the underlying DescribeInstances method.
// It will increment the count of requests made to DescribeInstances.
func (c *GameLift) DescribeInstances(input *gamelift.DescribeInstancesInput) (*gamelift.DescribeInstancesOutput, error) {
	c.inc("DescribeInstances")
	return c.svc.DescribeInstances(input)
}

// DescribeInstancesWithContext is a passthrough to the underlying DescribeInstancesWithContext method.
// It will increment the count of requests made to DescribeInstances.
func (c *GameLift) DescribeInstancesWithContext(ctx aws.Context, input *gamelift.DescribeInstancesInput, opts ...request.Option) (*gamelift.DescribeInstancesOutput, error) {
	c.inc("DescribeInstances")
	return c.svc.DescribeInstancesWithContext(ctx, input, opts...)
}

// DescribeMatchmakingRequest is a passthrough to the underlying DescribeMatchmakingRequest.
// It will increment the count of requests made to DescribeMatchmaking.
func (c *GameLift) DescribeMatchmakingRequest(input *gamelift.DescribeMatchmakingInput) (req *request.Request, output *gamelift.DescribeMatchmakingOutput) {
	c.inc("DescribeMatchmaking")
	return c.svc.DescribeMatchmakingRequest(input)
}

// DescribeMatchmaking is a passthrough to the underlying DescribeMatchmaking method.
// It will increment the count of requests made to DescribeMatchmaking.
func (c *GameLift) DescribeMatchmaking(input *gamelift.DescribeMatchmakingInput) (*gamelift.DescribeMatchmakingOutput, error) {
	c.inc("DescribeMatchmaking")
	return c.svc.DescribeMatchmaking(input)
}

// DescribeMatchmakingWithContext is a passthrough to the underlying DescribeMatchmakingWithContext method.
// It will increment the count of requests made to DescribeMatchmaking.
func (c *GameLift) DescribeMatchmakingWithContext(ctx aws.Context, input *gamelift.DescribeMatchmakingInput, opts ...request.Option) (*gamelift.DescribeMatchmakingOutput, error) {
	c.inc("DescribeMatchmaking")
	return c.svc.DescribeMatchmakingWithContext(ctx, input, opts...)
}

// DescribeMatchmakingConfigurationsRequest is a passthrough to the underlying DescribeMatchmakingConfigurationsRequest.
// It will increment the count of requests made to DescribeMatchmakingConfigurations.
func (c *GameLift) DescribeMatchmakingConfigurationsRequest(input *gamelift.DescribeMatchmakingConfigurationsInput) (req *request.Request, output *gamelift.DescribeMatchmakingConfigurationsOutput) {
	c.inc("DescribeMatchmakingConfigurations")
	return c.svc.DescribeMatchmakingConfigurationsRequest(input)
}

// DescribeMatchmakingConfigurations is a passthrough to the underlying DescribeMatchmakingConfigurations method.
// It will increment the count of requests made to DescribeMatchmakingConfigurations.
func (c *GameLift) DescribeMatchmakingConfigurations(input *gamelift.DescribeMatchmakingConfigurationsInput) (*gamelift.DescribeMatchmakingConfigurationsOutput, error) {
	c.inc("DescribeMatchmakingConfigurations")
	return c.svc.DescribeMatchmakingConfigurations(input)
}

// DescribeMatchmakingConfigurationsWithContext is a passthrough to the underlying DescribeMatchmakingConfigurationsWithContext method.
// It will increment the count of requests made to DescribeMatchmakingConfigurations.
func (c *GameLift) DescribeMatchmakingConfigurationsWithContext(ctx aws.Context, input *gamelift.DescribeMatchmakingConfigurationsInput, opts ...request.Option) (*gamelift.DescribeMatchmakingConfigurationsOutput, error) {
	c.inc("DescribeMatchmakingConfigurations")
	return c.svc.DescribeMatchmakingConfigurationsWithContext(ctx, input, opts...)
}

// DescribeMatchmakingRuleSetsRequest is a passthrough to the underlying DescribeMatchmakingRuleSetsRequest.
// It will increment the count of requests made to DescribeMatchmakingRuleSets.
func (c *GameLift) DescribeMatchmakingRuleSetsRequest(input *gamelift.DescribeMatchmakingRuleSetsInput) (req *request.Request, output *gamelift.DescribeMatchmakingRuleSetsOutput) {
	c.inc("DescribeMatchmakingRuleSets")
	return c.svc.DescribeMatchmakingRuleSetsRequest(input)
}

// DescribeMatchmakingRuleSets is a passthrough to the underlying DescribeMatchmakingRuleSets method.
// It will increment the count of requests made to DescribeMatchmakingRuleSets.
func (c *GameLift) DescribeMatchmakingRuleSets(input *gamelift.DescribeMatchmakingRuleSetsInput) (*gamelift.DescribeMatchmakingRuleSetsOutput, error) {
	c.inc("DescribeMatchmakingRuleSets")
	return c.svc.DescribeMatchmakingRuleSets(input)
}

// DescribeMatchmakingRuleSetsWithContext is a passthrough to the underlying DescribeMatchmakingRuleSetsWithContext method.
// It will increment the count of requests made to DescribeMatchmakingRuleSets.
func (c *GameLift) DescribeMatchmakingRuleSetsWithContext(ctx aws.Context, input *gamelift.DescribeMatchmakingRuleSetsInput, opts ...request.Option) (*gamelift.DescribeMatchmakingRuleSetsOutput, error) {
	c.inc("DescribeMatchmakingRuleSets")
	return c.svc.DescribeMatchmakingRuleSetsWithContext(ctx, input, opts...)
}

// DescribePlayerSessionsRequest is a passthrough to the underlying DescribePlayerSessionsRequest.
// It will increment the count of requests made to DescribePlayerSessions.
func (c *GameLift) DescribePlayerSessionsRequest(input *gamelift.DescribePlayerSessionsInput) (req *request.Request, output *gamelift.DescribePlayerSessionsOutput) {
	c.inc("DescribePlayerSessions")
	return c.svc.DescribePlayerSessionsRequest(input)
}

// DescribePlayerSessions is a passthrough to the underlying DescribePlayerSessions method.
// It will increment the count of requests made to DescribePlayerSessions.
func (c *GameLift) DescribePlayerSessions(input *gamelift.DescribePlayerSessionsInput) (*gamelift.DescribePlayerSessionsOutput, error) {
	c.inc("DescribePlayerSessions")
	return c.svc.DescribePlayerSessions(input)
}

// DescribePlayerSessionsWithContext is a passthrough to the underlying DescribePlayerSessionsWithContext method.
// It will increment the count of requests made to DescribePlayerSessions.
func (c *GameLift) DescribePlayerSessionsWithContext(ctx aws.Context, input *gamelift.DescribePlayerSessionsInput, opts ...request.Option) (*gamelift.DescribePlayerSessionsOutput, error) {
	c.inc("DescribePlayerSessions")
	return c.svc.DescribePlayerSessionsWithContext(ctx, input, opts...)
}

// DescribeRuntimeConfigurationRequest is a passthrough to the underlying DescribeRuntimeConfigurationRequest.
// It will increment the count of requests made to DescribeRuntimeConfiguration.
func (c *GameLift) DescribeRuntimeConfigurationRequest(input *gamelift.DescribeRuntimeConfigurationInput) (req *request.Request, output *gamelift.DescribeRuntimeConfigurationOutput) {
	c.inc("DescribeRuntimeConfiguration")
	return c.svc.DescribeRuntimeConfigurationRequest(input)
}

// DescribeRuntimeConfiguration is a passthrough to the underlying DescribeRuntimeConfiguration method.
// It will increment the count of requests made to DescribeRuntimeConfiguration.
func (c *GameLift) DescribeRuntimeConfiguration(input *gamelift.DescribeRuntimeConfigurationInput) (*gamelift.DescribeRuntimeConfigurationOutput, error) {
	c.inc("DescribeRuntimeConfiguration")
	return c.svc.DescribeRuntimeConfiguration(input)
}

// DescribeRuntimeConfigurationWithContext is a passthrough to the underlying DescribeRuntimeConfigurationWithContext method.
// It will increment the count of requests made to DescribeRuntimeConfiguration.
func (c *GameLift) DescribeRuntimeConfigurationWithContext(ctx aws.Context, input *gamelift.DescribeRuntimeConfigurationInput, opts ...request.Option) (*gamelift.DescribeRuntimeConfigurationOutput, error) {
	c.inc("DescribeRuntimeConfiguration")
	return c.svc.DescribeRuntimeConfigurationWithContext(ctx, input, opts...)
}

// DescribeScalingPoliciesRequest is a passthrough to the underlying DescribeScalingPoliciesRequest.
// It will increment the count of requests made to DescribeScalingPolicies.
func (c *GameLift) DescribeScalingPoliciesRequest(input *gamelift.DescribeScalingPoliciesInput) (req *request.Request, output *gamelift.DescribeScalingPoliciesOutput) {
	c.inc("DescribeScalingPolicies")
	return c.svc.DescribeScalingPoliciesRequest(input)
}

// DescribeScalingPolicies is a passthrough to the underlying DescribeScalingPolicies method.
// It will increment the count of requests made to DescribeScalingPolicies.
func (c *GameLift) DescribeScalingPolicies(input *gamelift.DescribeScalingPoliciesInput) (*gamelift.DescribeScalingPoliciesOutput, error) {
	c.inc("DescribeScalingPolicies")
	return c.svc.DescribeScalingPolicies(input)
}

// DescribeScalingPoliciesWithContext is a passthrough to the underlying DescribeScalingPoliciesWithContext method.
// It will increment the count of requests made to DescribeScalingPolicies.
func (c *GameLift) DescribeScalingPoliciesWithContext(ctx aws.Context, input *gamelift.DescribeScalingPoliciesInput, opts ...request.Option) (*gamelift.DescribeScalingPoliciesOutput, error) {
	c.inc("DescribeScalingPolicies")
	return c.svc.DescribeScalingPoliciesWithContext(ctx, input, opts...)
}

// DescribeVpcPeeringAuthorizationsRequest is a passthrough to the underlying DescribeVpcPeeringAuthorizationsRequest.
// It will increment the count of requests made to DescribeVpcPeeringAuthorizations.
func (c *GameLift) DescribeVpcPeeringAuthorizationsRequest(input *gamelift.DescribeVpcPeeringAuthorizationsInput) (req *request.Request, output *gamelift.DescribeVpcPeeringAuthorizationsOutput) {
	c.inc("DescribeVpcPeeringAuthorizations")
	return c.svc.DescribeVpcPeeringAuthorizationsRequest(input)
}

// DescribeVpcPeeringAuthorizations is a passthrough to the underlying DescribeVpcPeeringAuthorizations method.
// It will increment the count of requests made to DescribeVpcPeeringAuthorizations.
func (c *GameLift) DescribeVpcPeeringAuthorizations(input *gamelift.DescribeVpcPeeringAuthorizationsInput) (*gamelift.DescribeVpcPeeringAuthorizationsOutput, error) {
	c.inc("DescribeVpcPeeringAuthorizations")
	return c.svc.DescribeVpcPeeringAuthorizations(input)
}

// DescribeVpcPeeringAuthorizationsWithContext is a passthrough to the underlying DescribeVpcPeeringAuthorizationsWithContext method.
// It will increment the count of requests made to DescribeVpcPeeringAuthorizations.
func (c *GameLift) DescribeVpcPeeringAuthorizationsWithContext(ctx aws.Context, input *gamelift.DescribeVpcPeeringAuthorizationsInput, opts ...request.Option) (*gamelift.DescribeVpcPeeringAuthorizationsOutput, error) {
	c.inc("DescribeVpcPeeringAuthorizations")
	return c.svc.DescribeVpcPeeringAuthorizationsWithContext(ctx, input, opts...)
}

// DescribeVpcPeeringConnectionsRequest is a passthrough to the underlying DescribeVpcPeeringConnectionsRequest.
// It will increment the count of requests made to DescribeVpcPeeringConnections.
func (c *GameLift) DescribeVpcPeeringConnectionsRequest(input *gamelift.DescribeVpcPeeringConnectionsInput) (req *request.Request, output *gamelift.DescribeVpcPeeringConnectionsOutput) {
	c.inc("DescribeVpcPeeringConnections")
	return c.svc.DescribeVpcPeeringConnectionsRequest(input)
}

// DescribeVpcPeeringConnections is a passthrough to the underlying DescribeVpcPeeringConnections method.
// It will increment the count of requests made to DescribeVpcPeeringConnections.
func (c *GameLift) DescribeVpcPeeringConnections(input *gamelift.DescribeVpcPeeringConnectionsInput) (*gamelift.DescribeVpcPeeringConnectionsOutput, error) {
	c.inc("DescribeVpcPeeringConnections")
	return c.svc.DescribeVpcPeeringConnections(input)
}

// DescribeVpcPeeringConnectionsWithContext is a passthrough to the underlying DescribeVpcPeeringConnectionsWithContext method.
// It will increment the count of requests made to DescribeVpcPeeringConnections.
func (c *GameLift) DescribeVpcPeeringConnectionsWithContext(ctx aws.Context, input *gamelift.DescribeVpcPeeringConnectionsInput, opts ...request.Option) (*gamelift.DescribeVpcPeeringConnectionsOutput, error) {
	c.inc("DescribeVpcPeeringConnections")
	return c.svc.DescribeVpcPeeringConnectionsWithContext(ctx, input, opts...)
}

// GetGameSessionLogUrlRequest is a passthrough to the underlying GetGameSessionLogUrlRequest.
// It will increment the count of requests made to GetGameSessionLogUrl.
func (c *GameLift) GetGameSessionLogUrlRequest(input *gamelift.GetGameSessionLogUrlInput) (req *request.Request, output *gamelift.GetGameSessionLogUrlOutput) {
	c.inc("GetGameSessionLogUrl")
	return c.svc.GetGameSessionLogUrlRequest(input)
}

// GetGameSessionLogUrl is a passthrough to the underlying GetGameSessionLogUrl method.
// It will increment the count of requests made to GetGameSessionLogUrl.
func (c *GameLift) GetGameSessionLogUrl(input *gamelift.GetGameSessionLogUrlInput) (*gamelift.GetGameSessionLogUrlOutput, error) {
	c.inc("GetGameSessionLogUrl")
	return c.svc.GetGameSessionLogUrl(input)
}

// GetGameSessionLogUrlWithContext is a passthrough to the underlying GetGameSessionLogUrlWithContext method.
// It will increment the count of requests made to GetGameSessionLogUrl.
func (c *GameLift) GetGameSessionLogUrlWithContext(ctx aws.Context, input *gamelift.GetGameSessionLogUrlInput, opts ...request.Option) (*gamelift.GetGameSessionLogUrlOutput, error) {
	c.inc("GetGameSessionLogUrl")
	return c.svc.GetGameSessionLogUrlWithContext(ctx, input, opts...)
}

// GetInstanceAccessRequest is a passthrough to the underlying GetInstanceAccessRequest.
// It will increment the count of requests made to GetInstanceAccess.
func (c *GameLift) GetInstanceAccessRequest(input *gamelift.GetInstanceAccessInput) (req *request.Request, output *gamelift.GetInstanceAccessOutput) {
	c.inc("GetInstanceAccess")
	return c.svc.GetInstanceAccessRequest(input)
}

// GetInstanceAccess is a passthrough to the underlying GetInstanceAccess method.
// It will increment the count of requests made to GetInstanceAccess.
func (c *GameLift) GetInstanceAccess(input *gamelift.GetInstanceAccessInput) (*gamelift.GetInstanceAccessOutput, error) {
	c.inc("GetInstanceAccess")
	return c.svc.GetInstanceAccess(input)
}

// GetInstanceAccessWithContext is a passthrough to the underlying GetInstanceAccessWithContext method.
// It will increment the count of requests made to GetInstanceAccess.
func (c *GameLift) GetInstanceAccessWithContext(ctx aws.Context, input *gamelift.GetInstanceAccessInput, opts ...request.Option) (*gamelift.GetInstanceAccessOutput, error) {
	c.inc("GetInstanceAccess")
	return c.svc.GetInstanceAccessWithContext(ctx, input, opts...)
}

// ListAliasesRequest is a passthrough to the underlying ListAliasesRequest.
// It will increment the count of requests made to ListAliases.
func (c *GameLift) ListAliasesRequest(input *gamelift.ListAliasesInput) (req *request.Request, output *gamelift.ListAliasesOutput) {
	c.inc("ListAliases")
	return c.svc.ListAliasesRequest(input)
}

// ListAliases is a passthrough to the underlying ListAliases method.
// It will increment the count of requests made to ListAliases.
func (c *GameLift) ListAliases(input *gamelift.ListAliasesInput) (*gamelift.ListAliasesOutput, error) {
	c.inc("ListAliases")
	return c.svc.ListAliases(input)
}

// ListAliasesWithContext is a passthrough to the underlying ListAliasesWithContext method.
// It will increment the count of requests made to ListAliases.
func (c *GameLift) ListAliasesWithContext(ctx aws.Context, input *gamelift.ListAliasesInput, opts ...request.Option) (*gamelift.ListAliasesOutput, error) {
	c.inc("ListAliases")
	return c.svc.ListAliasesWithContext(ctx, input, opts...)
}

// ListBuildsRequest is a passthrough to the underlying ListBuildsRequest.
// It will increment the count of requests made to ListBuilds.
func (c *GameLift) ListBuildsRequest(input *gamelift.ListBuildsInput) (req *request.Request, output *gamelift.ListBuildsOutput) {
	c.inc("ListBuilds")
	return c.svc.ListBuildsRequest(input)
}

// ListBuilds is a passthrough to the underlying ListBuilds method.
// It will increment the count of requests made to ListBuilds.
func (c *GameLift) ListBuilds(input *gamelift.ListBuildsInput) (*gamelift.ListBuildsOutput, error) {
	c.inc("ListBuilds")
	return c.svc.ListBuilds(input)
}

// ListBuildsWithContext is a passthrough to the underlying ListBuildsWithContext method.
// It will increment the count of requests made to ListBuilds.
func (c *GameLift) ListBuildsWithContext(ctx aws.Context, input *gamelift.ListBuildsInput, opts ...request.Option) (*gamelift.ListBuildsOutput, error) {
	c.inc("ListBuilds")
	return c.svc.ListBuildsWithContext(ctx, input, opts...)
}

// ListFleetsRequest is a passthrough to the underlying ListFleetsRequest.
// It will increment the count of requests made to ListFleets.
func (c *GameLift) ListFleetsRequest(input *gamelift.ListFleetsInput) (req *request.Request, output *gamelift.ListFleetsOutput) {
	c.inc("ListFleets")
	return c.svc.ListFleetsRequest(input)
}

// ListFleets is a passthrough to the underlying ListFleets method.
// It will increment the count of requests made to ListFleets.
func (c *GameLift) ListFleets(input *gamelift.ListFleetsInput) (*gamelift.ListFleetsOutput, error) {
	c.inc("ListFleets")
	return c.svc.ListFleets(input)
}

// ListFleetsWithContext is a passthrough to the underlying ListFleetsWithContext method.
// It will increment the count of requests made to ListFleets.
func (c *GameLift) ListFleetsWithContext(ctx aws.Context, input *gamelift.ListFleetsInput, opts ...request.Option) (*gamelift.ListFleetsOutput, error) {
	c.inc("ListFleets")
	return c.svc.ListFleetsWithContext(ctx, input, opts...)
}

// PutScalingPolicyRequest is a passthrough to the underlying PutScalingPolicyRequest.
// It will increment the count of requests made to PutScalingPolicy.
func (c *GameLift) PutScalingPolicyRequest(input *gamelift.PutScalingPolicyInput) (req *request.Request, output *gamelift.PutScalingPolicyOutput) {
	c.inc("PutScalingPolicy")
	return c.svc.PutScalingPolicyRequest(input)
}

// PutScalingPolicy is a passthrough to the underlying PutScalingPolicy method.
// It will increment the count of requests made to PutScalingPolicy.
func (c *GameLift) PutScalingPolicy(input *gamelift.PutScalingPolicyInput) (*gamelift.PutScalingPolicyOutput, error) {
	c.inc("PutScalingPolicy")
	return c.svc.PutScalingPolicy(input)
}

// PutScalingPolicyWithContext is a passthrough to the underlying PutScalingPolicyWithContext method.
// It will increment the count of requests made to PutScalingPolicy.
func (c *GameLift) PutScalingPolicyWithContext(ctx aws.Context, input *gamelift.PutScalingPolicyInput, opts ...request.Option) (*gamelift.PutScalingPolicyOutput, error) {
	c.inc("PutScalingPolicy")
	return c.svc.PutScalingPolicyWithContext(ctx, input, opts...)
}

// RequestUploadCredentialsRequest is a passthrough to the underlying RequestUploadCredentialsRequest.
// It will increment the count of requests made to RequestUploadCredentials.
func (c *GameLift) RequestUploadCredentialsRequest(input *gamelift.RequestUploadCredentialsInput) (req *request.Request, output *gamelift.RequestUploadCredentialsOutput) {
	c.inc("RequestUploadCredentials")
	return c.svc.RequestUploadCredentialsRequest(input)
}

// RequestUploadCredentials is a passthrough to the underlying RequestUploadCredentials method.
// It will increment the count of requests made to RequestUploadCredentials.
func (c *GameLift) RequestUploadCredentials(input *gamelift.RequestUploadCredentialsInput) (*gamelift.RequestUploadCredentialsOutput, error) {
	c.inc("RequestUploadCredentials")
	return c.svc.RequestUploadCredentials(input)
}

// RequestUploadCredentialsWithContext is a passthrough to the underlying RequestUploadCredentialsWithContext method.
// It will increment the count of requests made to RequestUploadCredentials.
func (c *GameLift) RequestUploadCredentialsWithContext(ctx aws.Context, input *gamelift.RequestUploadCredentialsInput, opts ...request.Option) (*gamelift.RequestUploadCredentialsOutput, error) {
	c.inc("RequestUploadCredentials")
	return c.svc.RequestUploadCredentialsWithContext(ctx, input, opts...)
}

// ResolveAliasRequest is a passthrough to the underlying ResolveAliasRequest.
// It will increment the count of requests made to ResolveAlias.
func (c *GameLift) ResolveAliasRequest(input *gamelift.ResolveAliasInput) (req *request.Request, output *gamelift.ResolveAliasOutput) {
	c.inc("ResolveAlias")
	return c.svc.ResolveAliasRequest(input)
}

// ResolveAlias is a passthrough to the underlying ResolveAlias method.
// It will increment the count of requests made to ResolveAlias.
func (c *GameLift) ResolveAlias(input *gamelift.ResolveAliasInput) (*gamelift.ResolveAliasOutput, error) {
	c.inc("ResolveAlias")
	return c.svc.ResolveAlias(input)
}

// ResolveAliasWithContext is a passthrough to the underlying ResolveAliasWithContext method.
// It will increment the count of requests made to ResolveAlias.
func (c *GameLift) ResolveAliasWithContext(ctx aws.Context, input *gamelift.ResolveAliasInput, opts ...request.Option) (*gamelift.ResolveAliasOutput, error) {
	c.inc("ResolveAlias")
	return c.svc.ResolveAliasWithContext(ctx, input, opts...)
}

// SearchGameSessionsRequest is a passthrough to the underlying SearchGameSessionsRequest.
// It will increment the count of requests made to SearchGameSessions.
func (c *GameLift) SearchGameSessionsRequest(input *gamelift.SearchGameSessionsInput) (req *request.Request, output *gamelift.SearchGameSessionsOutput) {
	c.inc("SearchGameSessions")
	return c.svc.SearchGameSessionsRequest(input)
}

// SearchGameSessions is a passthrough to the underlying SearchGameSessions method.
// It will increment the count of requests made to SearchGameSessions.
func (c *GameLift) SearchGameSessions(input *gamelift.SearchGameSessionsInput) (*gamelift.SearchGameSessionsOutput, error) {
	c.inc("SearchGameSessions")
	return c.svc.SearchGameSessions(input)
}

// SearchGameSessionsWithContext is a passthrough to the underlying SearchGameSessionsWithContext method.
// It will increment the count of requests made to SearchGameSessions.
func (c *GameLift) SearchGameSessionsWithContext(ctx aws.Context, input *gamelift.SearchGameSessionsInput, opts ...request.Option) (*gamelift.SearchGameSessionsOutput, error) {
	c.inc("SearchGameSessions")
	return c.svc.SearchGameSessionsWithContext(ctx, input, opts...)
}

// StartGameSessionPlacementRequest is a passthrough to the underlying StartGameSessionPlacementRequest.
// It will increment the count of requests made to StartGameSessionPlacement.
func (c *GameLift) StartGameSessionPlacementRequest(input *gamelift.StartGameSessionPlacementInput) (req *request.Request, output *gamelift.StartGameSessionPlacementOutput) {
	c.inc("StartGameSessionPlacement")
	return c.svc.StartGameSessionPlacementRequest(input)
}

// StartGameSessionPlacement is a passthrough to the underlying StartGameSessionPlacement method.
// It will increment the count of requests made to StartGameSessionPlacement.
func (c *GameLift) StartGameSessionPlacement(input *gamelift.StartGameSessionPlacementInput) (*gamelift.StartGameSessionPlacementOutput, error) {
	c.inc("StartGameSessionPlacement")
	return c.svc.StartGameSessionPlacement(input)
}

// StartGameSessionPlacementWithContext is a passthrough to the underlying StartGameSessionPlacementWithContext method.
// It will increment the count of requests made to StartGameSessionPlacement.
func (c *GameLift) StartGameSessionPlacementWithContext(ctx aws.Context, input *gamelift.StartGameSessionPlacementInput, opts ...request.Option) (*gamelift.StartGameSessionPlacementOutput, error) {
	c.inc("StartGameSessionPlacement")
	return c.svc.StartGameSessionPlacementWithContext(ctx, input, opts...)
}

// StartMatchmakingRequest is a passthrough to the underlying StartMatchmakingRequest.
// It will increment the count of requests made to StartMatchmaking.
func (c *GameLift) StartMatchmakingRequest(input *gamelift.StartMatchmakingInput) (req *request.Request, output *gamelift.StartMatchmakingOutput) {
	c.inc("StartMatchmaking")
	return c.svc.StartMatchmakingRequest(input)
}

// StartMatchmaking is a passthrough to the underlying StartMatchmaking method.
// It will increment the count of requests made to StartMatchmaking.
func (c *GameLift) StartMatchmaking(input *gamelift.StartMatchmakingInput) (*gamelift.StartMatchmakingOutput, error) {
	c.inc("StartMatchmaking")
	return c.svc.StartMatchmaking(input)
}

// StartMatchmakingWithContext is a passthrough to the underlying StartMatchmakingWithContext method.
// It will increment the count of requests made to StartMatchmaking.
func (c *GameLift) StartMatchmakingWithContext(ctx aws.Context, input *gamelift.StartMatchmakingInput, opts ...request.Option) (*gamelift.StartMatchmakingOutput, error) {
	c.inc("StartMatchmaking")
	return c.svc.StartMatchmakingWithContext(ctx, input, opts...)
}

// StopGameSessionPlacementRequest is a passthrough to the underlying StopGameSessionPlacementRequest.
// It will increment the count of requests made to StopGameSessionPlacement.
func (c *GameLift) StopGameSessionPlacementRequest(input *gamelift.StopGameSessionPlacementInput) (req *request.Request, output *gamelift.StopGameSessionPlacementOutput) {
	c.inc("StopGameSessionPlacement")
	return c.svc.StopGameSessionPlacementRequest(input)
}

// StopGameSessionPlacement is a passthrough to the underlying StopGameSessionPlacement method.
// It will increment the count of requests made to StopGameSessionPlacement.
func (c *GameLift) StopGameSessionPlacement(input *gamelift.StopGameSessionPlacementInput) (*gamelift.StopGameSessionPlacementOutput, error) {
	c.inc("StopGameSessionPlacement")
	return c.svc.StopGameSessionPlacement(input)
}

// StopGameSessionPlacementWithContext is a passthrough to the underlying StopGameSessionPlacementWithContext method.
// It will increment the count of requests made to StopGameSessionPlacement.
func (c *GameLift) StopGameSessionPlacementWithContext(ctx aws.Context, input *gamelift.StopGameSessionPlacementInput, opts ...request.Option) (*gamelift.StopGameSessionPlacementOutput, error) {
	c.inc("StopGameSessionPlacement")
	return c.svc.StopGameSessionPlacementWithContext(ctx, input, opts...)
}

// StopMatchmakingRequest is a passthrough to the underlying StopMatchmakingRequest.
// It will increment the count of requests made to StopMatchmaking.
func (c *GameLift) StopMatchmakingRequest(input *gamelift.StopMatchmakingInput) (req *request.Request, output *gamelift.StopMatchmakingOutput) {
	c.inc("StopMatchmaking")
	return c.svc.StopMatchmakingRequest(input)
}

// StopMatchmaking is a passthrough to the underlying StopMatchmaking method.
// It will increment the count of requests made to StopMatchmaking.
func (c *GameLift) StopMatchmaking(input *gamelift.StopMatchmakingInput) (*gamelift.StopMatchmakingOutput, error) {
	c.inc("StopMatchmaking")
	return c.svc.StopMatchmaking(input)
}

// StopMatchmakingWithContext is a passthrough to the underlying StopMatchmakingWithContext method.
// It will increment the count of requests made to StopMatchmaking.
func (c *GameLift) StopMatchmakingWithContext(ctx aws.Context, input *gamelift.StopMatchmakingInput, opts ...request.Option) (*gamelift.StopMatchmakingOutput, error) {
	c.inc("StopMatchmaking")
	return c.svc.StopMatchmakingWithContext(ctx, input, opts...)
}

// UpdateAliasRequest is a passthrough to the underlying UpdateAliasRequest.
// It will increment the count of requests made to UpdateAlias.
func (c *GameLift) UpdateAliasRequest(input *gamelift.UpdateAliasInput) (req *request.Request, output *gamelift.UpdateAliasOutput) {
	c.inc("UpdateAlias")
	return c.svc.UpdateAliasRequest(input)
}

// UpdateAlias is a passthrough to the underlying UpdateAlias method.
// It will increment the count of requests made to UpdateAlias.
func (c *GameLift) UpdateAlias(input *gamelift.UpdateAliasInput) (*gamelift.UpdateAliasOutput, error) {
	c.inc("UpdateAlias")
	return c.svc.UpdateAlias(input)
}

// UpdateAliasWithContext is a passthrough to the underlying UpdateAliasWithContext method.
// It will increment the count of requests made to UpdateAlias.
func (c *GameLift) UpdateAliasWithContext(ctx aws.Context, input *gamelift.UpdateAliasInput, opts ...request.Option) (*gamelift.UpdateAliasOutput, error) {
	c.inc("UpdateAlias")
	return c.svc.UpdateAliasWithContext(ctx, input, opts...)
}

// UpdateBuildRequest is a passthrough to the underlying UpdateBuildRequest.
// It will increment the count of requests made to UpdateBuild.
func (c *GameLift) UpdateBuildRequest(input *gamelift.UpdateBuildInput) (req *request.Request, output *gamelift.UpdateBuildOutput) {
	c.inc("UpdateBuild")
	return c.svc.UpdateBuildRequest(input)
}

// UpdateBuild is a passthrough to the underlying UpdateBuild method.
// It will increment the count of requests made to UpdateBuild.
func (c *GameLift) UpdateBuild(input *gamelift.UpdateBuildInput) (*gamelift.UpdateBuildOutput, error) {
	c.inc("UpdateBuild")
	return c.svc.UpdateBuild(input)
}

// UpdateBuildWithContext is a passthrough to the underlying UpdateBuildWithContext method.
// It will increment the count of requests made to UpdateBuild.
func (c *GameLift) UpdateBuildWithContext(ctx aws.Context, input *gamelift.UpdateBuildInput, opts ...request.Option) (*gamelift.UpdateBuildOutput, error) {
	c.inc("UpdateBuild")
	return c.svc.UpdateBuildWithContext(ctx, input, opts...)
}

// UpdateFleetAttributesRequest is a passthrough to the underlying UpdateFleetAttributesRequest.
// It will increment the count of requests made to UpdateFleetAttributes.
func (c *GameLift) UpdateFleetAttributesRequest(input *gamelift.UpdateFleetAttributesInput) (req *request.Request, output *gamelift.UpdateFleetAttributesOutput) {
	c.inc("UpdateFleetAttributes")
	return c.svc.UpdateFleetAttributesRequest(input)
}

// UpdateFleetAttributes is a passthrough to the underlying UpdateFleetAttributes method.
// It will increment the count of requests made to UpdateFleetAttributes.
func (c *GameLift) UpdateFleetAttributes(input *gamelift.UpdateFleetAttributesInput) (*gamelift.UpdateFleetAttributesOutput, error) {
	c.inc("UpdateFleetAttributes")
	return c.svc.UpdateFleetAttributes(input)
}

// UpdateFleetAttributesWithContext is a passthrough to the underlying UpdateFleetAttributesWithContext method.
// It will increment the count of requests made to UpdateFleetAttributes.
func (c *GameLift) UpdateFleetAttributesWithContext(ctx aws.Context, input *gamelift.UpdateFleetAttributesInput, opts ...request.Option) (*gamelift.UpdateFleetAttributesOutput, error) {
	c.inc("UpdateFleetAttributes")
	return c.svc.UpdateFleetAttributesWithContext(ctx, input, opts...)
}

// UpdateFleetCapacityRequest is a passthrough to the underlying UpdateFleetCapacityRequest.
// It will increment the count of requests made to UpdateFleetCapacity.
func (c *GameLift) UpdateFleetCapacityRequest(input *gamelift.UpdateFleetCapacityInput) (req *request.Request, output *gamelift.UpdateFleetCapacityOutput) {
	c.inc("UpdateFleetCapacity")
	return c.svc.UpdateFleetCapacityRequest(input)
}

// UpdateFleetCapacity is a passthrough to the underlying UpdateFleetCapacity method.
// It will increment the count of requests made to UpdateFleetCapacity.
func (c *GameLift) UpdateFleetCapacity(input *gamelift.UpdateFleetCapacityInput) (*gamelift.UpdateFleetCapacityOutput, error) {
	c.inc("UpdateFleetCapacity")
	return c.svc.UpdateFleetCapacity(input)
}

// UpdateFleetCapacityWithContext is a passthrough to the underlying UpdateFleetCapacityWithContext method.
// It will increment the count of requests made to UpdateFleetCapacity.
func (c *GameLift) UpdateFleetCapacityWithContext(ctx aws.Context, input *gamelift.UpdateFleetCapacityInput, opts ...request.Option) (*gamelift.UpdateFleetCapacityOutput, error) {
	c.inc("UpdateFleetCapacity")
	return c.svc.UpdateFleetCapacityWithContext(ctx, input, opts...)
}

// UpdateFleetPortSettingsRequest is a passthrough to the underlying UpdateFleetPortSettingsRequest.
// It will increment the count of requests made to UpdateFleetPortSettings.
func (c *GameLift) UpdateFleetPortSettingsRequest(input *gamelift.UpdateFleetPortSettingsInput) (req *request.Request, output *gamelift.UpdateFleetPortSettingsOutput) {
	c.inc("UpdateFleetPortSettings")
	return c.svc.UpdateFleetPortSettingsRequest(input)
}

// UpdateFleetPortSettings is a passthrough to the underlying UpdateFleetPortSettings method.
// It will increment the count of requests made to UpdateFleetPortSettings.
func (c *GameLift) UpdateFleetPortSettings(input *gamelift.UpdateFleetPortSettingsInput) (*gamelift.UpdateFleetPortSettingsOutput, error) {
	c.inc("UpdateFleetPortSettings")
	return c.svc.UpdateFleetPortSettings(input)
}

// UpdateFleetPortSettingsWithContext is a passthrough to the underlying UpdateFleetPortSettingsWithContext method.
// It will increment the count of requests made to UpdateFleetPortSettings.
func (c *GameLift) UpdateFleetPortSettingsWithContext(ctx aws.Context, input *gamelift.UpdateFleetPortSettingsInput, opts ...request.Option) (*gamelift.UpdateFleetPortSettingsOutput, error) {
	c.inc("UpdateFleetPortSettings")
	return c.svc.UpdateFleetPortSettingsWithContext(ctx, input, opts...)
}

// UpdateGameSessionRequest is a passthrough to the underlying UpdateGameSessionRequest.
// It will increment the count of requests made to UpdateGameSession.
func (c *GameLift) UpdateGameSessionRequest(input *gamelift.UpdateGameSessionInput) (req *request.Request, output *gamelift.UpdateGameSessionOutput) {
	c.inc("UpdateGameSession")
	return c.svc.UpdateGameSessionRequest(input)
}

// UpdateGameSession is a passthrough to the underlying UpdateGameSession method.
// It will increment the count of requests made to UpdateGameSession.
func (c *GameLift) UpdateGameSession(input *gamelift.UpdateGameSessionInput) (*gamelift.UpdateGameSessionOutput, error) {
	c.inc("UpdateGameSession")
	return c.svc.UpdateGameSession(input)
}

// UpdateGameSessionWithContext is a passthrough to the underlying UpdateGameSessionWithContext method.
// It will increment the count of requests made to UpdateGameSession.
func (c *GameLift) UpdateGameSessionWithContext(ctx aws.Context, input *gamelift.UpdateGameSessionInput, opts ...request.Option) (*gamelift.UpdateGameSessionOutput, error) {
	c.inc("UpdateGameSession")
	return c.svc.UpdateGameSessionWithContext(ctx, input, opts...)
}

// UpdateGameSessionQueueRequest is a passthrough to the underlying UpdateGameSessionQueueRequest.
// It will increment the count of requests made to UpdateGameSessionQueue.
func (c *GameLift) UpdateGameSessionQueueRequest(input *gamelift.UpdateGameSessionQueueInput) (req *request.Request, output *gamelift.UpdateGameSessionQueueOutput) {
	c.inc("UpdateGameSessionQueue")
	return c.svc.UpdateGameSessionQueueRequest(input)
}

// UpdateGameSessionQueue is a passthrough to the underlying UpdateGameSessionQueue method.
// It will increment the count of requests made to UpdateGameSessionQueue.
func (c *GameLift) UpdateGameSessionQueue(input *gamelift.UpdateGameSessionQueueInput) (*gamelift.UpdateGameSessionQueueOutput, error) {
	c.inc("UpdateGameSessionQueue")
	return c.svc.UpdateGameSessionQueue(input)
}

// UpdateGameSessionQueueWithContext is a passthrough to the underlying UpdateGameSessionQueueWithContext method.
// It will increment the count of requests made to UpdateGameSessionQueue.
func (c *GameLift) UpdateGameSessionQueueWithContext(ctx aws.Context, input *gamelift.UpdateGameSessionQueueInput, opts ...request.Option) (*gamelift.UpdateGameSessionQueueOutput, error) {
	c.inc("UpdateGameSessionQueue")
	return c.svc.UpdateGameSessionQueueWithContext(ctx, input, opts...)
}

// UpdateMatchmakingConfigurationRequest is a passthrough to the underlying UpdateMatchmakingConfigurationRequest.
// It will increment the count of requests made to UpdateMatchmakingConfiguration.
func (c *GameLift) UpdateMatchmakingConfigurationRequest(input *gamelift.UpdateMatchmakingConfigurationInput) (req *request.Request, output *gamelift.UpdateMatchmakingConfigurationOutput) {
	c.inc("UpdateMatchmakingConfiguration")
	return c.svc.UpdateMatchmakingConfigurationRequest(input)
}

// UpdateMatchmakingConfiguration is a passthrough to the underlying UpdateMatchmakingConfiguration method.
// It will increment the count of requests made to UpdateMatchmakingConfiguration.
func (c *GameLift) UpdateMatchmakingConfiguration(input *gamelift.UpdateMatchmakingConfigurationInput) (*gamelift.UpdateMatchmakingConfigurationOutput, error) {
	c.inc("UpdateMatchmakingConfiguration")
	return c.svc.UpdateMatchmakingConfiguration(input)
}

// UpdateMatchmakingConfigurationWithContext is a passthrough to the underlying UpdateMatchmakingConfigurationWithContext method.
// It will increment the count of requests made to UpdateMatchmakingConfiguration.
func (c *GameLift) UpdateMatchmakingConfigurationWithContext(ctx aws.Context, input *gamelift.UpdateMatchmakingConfigurationInput, opts ...request.Option) (*gamelift.UpdateMatchmakingConfigurationOutput, error) {
	c.inc("UpdateMatchmakingConfiguration")
	return c.svc.UpdateMatchmakingConfigurationWithContext(ctx, input, opts...)
}

// UpdateRuntimeConfigurationRequest is a passthrough to the underlying UpdateRuntimeConfigurationRequest.
// It will increment the count of requests made to UpdateRuntimeConfiguration.
func (c *GameLift) UpdateRuntimeConfigurationRequest(input *gamelift.UpdateRuntimeConfigurationInput) (req *request.Request, output *gamelift.UpdateRuntimeConfigurationOutput) {
	c.inc("UpdateRuntimeConfiguration")
	return c.svc.UpdateRuntimeConfigurationRequest(input)
}

// UpdateRuntimeConfiguration is a passthrough to the underlying UpdateRuntimeConfiguration method.
// It will increment the count of requests made to UpdateRuntimeConfiguration.
func (c *GameLift) UpdateRuntimeConfiguration(input *gamelift.UpdateRuntimeConfigurationInput) (*gamelift.UpdateRuntimeConfigurationOutput, error) {
	c.inc("UpdateRuntimeConfiguration")
	return c.svc.UpdateRuntimeConfiguration(input)
}

// UpdateRuntimeConfigurationWithContext is a passthrough to the underlying UpdateRuntimeConfigurationWithContext method.
// It will increment the count of requests made to UpdateRuntimeConfiguration.
func (c *GameLift) UpdateRuntimeConfigurationWithContext(ctx aws.Context, input *gamelift.UpdateRuntimeConfigurationInput, opts ...request.Option) (*gamelift.UpdateRuntimeConfigurationOutput, error) {
	c.inc("UpdateRuntimeConfiguration")
	return c.svc.UpdateRuntimeConfigurationWithContext(ctx, input, opts...)
}

// ValidateMatchmakingRuleSetRequest is a passthrough to the underlying ValidateMatchmakingRuleSetRequest.
// It will increment the count of requests made to ValidateMatchmakingRuleSet.
func (c *GameLift) ValidateMatchmakingRuleSetRequest(input *gamelift.ValidateMatchmakingRuleSetInput) (req *request.Request, output *gamelift.ValidateMatchmakingRuleSetOutput) {
	c.inc("ValidateMatchmakingRuleSet")
	return c.svc.ValidateMatchmakingRuleSetRequest(input)
}

// ValidateMatchmakingRuleSet is a passthrough to the underlying ValidateMatchmakingRuleSet method.
// It will increment the count of requests made to ValidateMatchmakingRuleSet.
func (c *GameLift) ValidateMatchmakingRuleSet(input *gamelift.ValidateMatchmakingRuleSetInput) (*gamelift.ValidateMatchmakingRuleSetOutput, error) {
	c.inc("ValidateMatchmakingRuleSet")
	return c.svc.ValidateMatchmakingRuleSet(input)
}

// ValidateMatchmakingRuleSetWithContext is a passthrough to the underlying ValidateMatchmakingRuleSetWithContext method.
// It will increment the count of requests made to ValidateMatchmakingRuleSet.
func (c *GameLift) ValidateMatchmakingRuleSetWithContext(ctx aws.Context, input *gamelift.ValidateMatchmakingRuleSetInput, opts ...request.Option) (*gamelift.ValidateMatchmakingRuleSetOutput, error) {
	c.inc("ValidateMatchmakingRuleSet")
	return c.svc.ValidateMatchmakingRuleSetWithContext(ctx, input, opts...)
}
