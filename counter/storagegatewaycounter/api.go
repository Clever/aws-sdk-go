// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package storagegatewaycounter

import (
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/storagegateway"
)

// ActivateGatewayRequest is a passthrough to the underlying ActivateGatewayRequest.
// It will increment the count of requests made to ActivateGateway.
func (c *StorageGateway) ActivateGatewayRequest(input *storagegateway.ActivateGatewayInput) (req *request.Request, output *storagegateway.ActivateGatewayOutput) {
	c.inc("ActivateGateway")
	return c.svc.ActivateGatewayRequest(input)
}

// ActivateGateway is a passthrough to the underlying ActivateGateway method.
// It will increment the count of requests made to ActivateGateway.
func (c *StorageGateway) ActivateGateway(input *storagegateway.ActivateGatewayInput) (*storagegateway.ActivateGatewayOutput, error) {
	c.inc("ActivateGateway")
	return c.svc.ActivateGateway(input)
}

// ActivateGatewayWithContext is a passthrough to the underlying ActivateGatewayWithContext method.
// It will increment the count of requests made to ActivateGateway.
func (c *StorageGateway) ActivateGatewayWithContext(ctx aws.Context, input *storagegateway.ActivateGatewayInput, opts ...request.Option) (*storagegateway.ActivateGatewayOutput, error) {
	c.inc("ActivateGateway")
	return c.svc.ActivateGatewayWithContext(ctx, input, opts...)
}

// AddCacheRequest is a passthrough to the underlying AddCacheRequest.
// It will increment the count of requests made to AddCache.
func (c *StorageGateway) AddCacheRequest(input *storagegateway.AddCacheInput) (req *request.Request, output *storagegateway.AddCacheOutput) {
	c.inc("AddCache")
	return c.svc.AddCacheRequest(input)
}

// AddCache is a passthrough to the underlying AddCache method.
// It will increment the count of requests made to AddCache.
func (c *StorageGateway) AddCache(input *storagegateway.AddCacheInput) (*storagegateway.AddCacheOutput, error) {
	c.inc("AddCache")
	return c.svc.AddCache(input)
}

// AddCacheWithContext is a passthrough to the underlying AddCacheWithContext method.
// It will increment the count of requests made to AddCache.
func (c *StorageGateway) AddCacheWithContext(ctx aws.Context, input *storagegateway.AddCacheInput, opts ...request.Option) (*storagegateway.AddCacheOutput, error) {
	c.inc("AddCache")
	return c.svc.AddCacheWithContext(ctx, input, opts...)
}

// AddTagsToResourceRequest is a passthrough to the underlying AddTagsToResourceRequest.
// It will increment the count of requests made to AddTagsToResource.
func (c *StorageGateway) AddTagsToResourceRequest(input *storagegateway.AddTagsToResourceInput) (req *request.Request, output *storagegateway.AddTagsToResourceOutput) {
	c.inc("AddTagsToResource")
	return c.svc.AddTagsToResourceRequest(input)
}

// AddTagsToResource is a passthrough to the underlying AddTagsToResource method.
// It will increment the count of requests made to AddTagsToResource.
func (c *StorageGateway) AddTagsToResource(input *storagegateway.AddTagsToResourceInput) (*storagegateway.AddTagsToResourceOutput, error) {
	c.inc("AddTagsToResource")
	return c.svc.AddTagsToResource(input)
}

// AddTagsToResourceWithContext is a passthrough to the underlying AddTagsToResourceWithContext method.
// It will increment the count of requests made to AddTagsToResource.
func (c *StorageGateway) AddTagsToResourceWithContext(ctx aws.Context, input *storagegateway.AddTagsToResourceInput, opts ...request.Option) (*storagegateway.AddTagsToResourceOutput, error) {
	c.inc("AddTagsToResource")
	return c.svc.AddTagsToResourceWithContext(ctx, input, opts...)
}

// AddUploadBufferRequest is a passthrough to the underlying AddUploadBufferRequest.
// It will increment the count of requests made to AddUploadBuffer.
func (c *StorageGateway) AddUploadBufferRequest(input *storagegateway.AddUploadBufferInput) (req *request.Request, output *storagegateway.AddUploadBufferOutput) {
	c.inc("AddUploadBuffer")
	return c.svc.AddUploadBufferRequest(input)
}

// AddUploadBuffer is a passthrough to the underlying AddUploadBuffer method.
// It will increment the count of requests made to AddUploadBuffer.
func (c *StorageGateway) AddUploadBuffer(input *storagegateway.AddUploadBufferInput) (*storagegateway.AddUploadBufferOutput, error) {
	c.inc("AddUploadBuffer")
	return c.svc.AddUploadBuffer(input)
}

// AddUploadBufferWithContext is a passthrough to the underlying AddUploadBufferWithContext method.
// It will increment the count of requests made to AddUploadBuffer.
func (c *StorageGateway) AddUploadBufferWithContext(ctx aws.Context, input *storagegateway.AddUploadBufferInput, opts ...request.Option) (*storagegateway.AddUploadBufferOutput, error) {
	c.inc("AddUploadBuffer")
	return c.svc.AddUploadBufferWithContext(ctx, input, opts...)
}

// AddWorkingStorageRequest is a passthrough to the underlying AddWorkingStorageRequest.
// It will increment the count of requests made to AddWorkingStorage.
func (c *StorageGateway) AddWorkingStorageRequest(input *storagegateway.AddWorkingStorageInput) (req *request.Request, output *storagegateway.AddWorkingStorageOutput) {
	c.inc("AddWorkingStorage")
	return c.svc.AddWorkingStorageRequest(input)
}

// AddWorkingStorage is a passthrough to the underlying AddWorkingStorage method.
// It will increment the count of requests made to AddWorkingStorage.
func (c *StorageGateway) AddWorkingStorage(input *storagegateway.AddWorkingStorageInput) (*storagegateway.AddWorkingStorageOutput, error) {
	c.inc("AddWorkingStorage")
	return c.svc.AddWorkingStorage(input)
}

// AddWorkingStorageWithContext is a passthrough to the underlying AddWorkingStorageWithContext method.
// It will increment the count of requests made to AddWorkingStorage.
func (c *StorageGateway) AddWorkingStorageWithContext(ctx aws.Context, input *storagegateway.AddWorkingStorageInput, opts ...request.Option) (*storagegateway.AddWorkingStorageOutput, error) {
	c.inc("AddWorkingStorage")
	return c.svc.AddWorkingStorageWithContext(ctx, input, opts...)
}

// CancelArchivalRequest is a passthrough to the underlying CancelArchivalRequest.
// It will increment the count of requests made to CancelArchival.
func (c *StorageGateway) CancelArchivalRequest(input *storagegateway.CancelArchivalInput) (req *request.Request, output *storagegateway.CancelArchivalOutput) {
	c.inc("CancelArchival")
	return c.svc.CancelArchivalRequest(input)
}

// CancelArchival is a passthrough to the underlying CancelArchival method.
// It will increment the count of requests made to CancelArchival.
func (c *StorageGateway) CancelArchival(input *storagegateway.CancelArchivalInput) (*storagegateway.CancelArchivalOutput, error) {
	c.inc("CancelArchival")
	return c.svc.CancelArchival(input)
}

// CancelArchivalWithContext is a passthrough to the underlying CancelArchivalWithContext method.
// It will increment the count of requests made to CancelArchival.
func (c *StorageGateway) CancelArchivalWithContext(ctx aws.Context, input *storagegateway.CancelArchivalInput, opts ...request.Option) (*storagegateway.CancelArchivalOutput, error) {
	c.inc("CancelArchival")
	return c.svc.CancelArchivalWithContext(ctx, input, opts...)
}

// CancelRetrievalRequest is a passthrough to the underlying CancelRetrievalRequest.
// It will increment the count of requests made to CancelRetrieval.
func (c *StorageGateway) CancelRetrievalRequest(input *storagegateway.CancelRetrievalInput) (req *request.Request, output *storagegateway.CancelRetrievalOutput) {
	c.inc("CancelRetrieval")
	return c.svc.CancelRetrievalRequest(input)
}

// CancelRetrieval is a passthrough to the underlying CancelRetrieval method.
// It will increment the count of requests made to CancelRetrieval.
func (c *StorageGateway) CancelRetrieval(input *storagegateway.CancelRetrievalInput) (*storagegateway.CancelRetrievalOutput, error) {
	c.inc("CancelRetrieval")
	return c.svc.CancelRetrieval(input)
}

// CancelRetrievalWithContext is a passthrough to the underlying CancelRetrievalWithContext method.
// It will increment the count of requests made to CancelRetrieval.
func (c *StorageGateway) CancelRetrievalWithContext(ctx aws.Context, input *storagegateway.CancelRetrievalInput, opts ...request.Option) (*storagegateway.CancelRetrievalOutput, error) {
	c.inc("CancelRetrieval")
	return c.svc.CancelRetrievalWithContext(ctx, input, opts...)
}

// CreateCachediSCSIVolumeRequest is a passthrough to the underlying CreateCachediSCSIVolumeRequest.
// It will increment the count of requests made to CreateCachediSCSIVolume.
func (c *StorageGateway) CreateCachediSCSIVolumeRequest(input *storagegateway.CreateCachediSCSIVolumeInput) (req *request.Request, output *storagegateway.CreateCachediSCSIVolumeOutput) {
	c.inc("CreateCachediSCSIVolume")
	return c.svc.CreateCachediSCSIVolumeRequest(input)
}

// CreateCachediSCSIVolume is a passthrough to the underlying CreateCachediSCSIVolume method.
// It will increment the count of requests made to CreateCachediSCSIVolume.
func (c *StorageGateway) CreateCachediSCSIVolume(input *storagegateway.CreateCachediSCSIVolumeInput) (*storagegateway.CreateCachediSCSIVolumeOutput, error) {
	c.inc("CreateCachediSCSIVolume")
	return c.svc.CreateCachediSCSIVolume(input)
}

// CreateCachediSCSIVolumeWithContext is a passthrough to the underlying CreateCachediSCSIVolumeWithContext method.
// It will increment the count of requests made to CreateCachediSCSIVolume.
func (c *StorageGateway) CreateCachediSCSIVolumeWithContext(ctx aws.Context, input *storagegateway.CreateCachediSCSIVolumeInput, opts ...request.Option) (*storagegateway.CreateCachediSCSIVolumeOutput, error) {
	c.inc("CreateCachediSCSIVolume")
	return c.svc.CreateCachediSCSIVolumeWithContext(ctx, input, opts...)
}

// CreateNFSFileShareRequest is a passthrough to the underlying CreateNFSFileShareRequest.
// It will increment the count of requests made to CreateNFSFileShare.
func (c *StorageGateway) CreateNFSFileShareRequest(input *storagegateway.CreateNFSFileShareInput) (req *request.Request, output *storagegateway.CreateNFSFileShareOutput) {
	c.inc("CreateNFSFileShare")
	return c.svc.CreateNFSFileShareRequest(input)
}

// CreateNFSFileShare is a passthrough to the underlying CreateNFSFileShare method.
// It will increment the count of requests made to CreateNFSFileShare.
func (c *StorageGateway) CreateNFSFileShare(input *storagegateway.CreateNFSFileShareInput) (*storagegateway.CreateNFSFileShareOutput, error) {
	c.inc("CreateNFSFileShare")
	return c.svc.CreateNFSFileShare(input)
}

// CreateNFSFileShareWithContext is a passthrough to the underlying CreateNFSFileShareWithContext method.
// It will increment the count of requests made to CreateNFSFileShare.
func (c *StorageGateway) CreateNFSFileShareWithContext(ctx aws.Context, input *storagegateway.CreateNFSFileShareInput, opts ...request.Option) (*storagegateway.CreateNFSFileShareOutput, error) {
	c.inc("CreateNFSFileShare")
	return c.svc.CreateNFSFileShareWithContext(ctx, input, opts...)
}

// CreateSnapshotRequest is a passthrough to the underlying CreateSnapshotRequest.
// It will increment the count of requests made to CreateSnapshot.
func (c *StorageGateway) CreateSnapshotRequest(input *storagegateway.CreateSnapshotInput) (req *request.Request, output *storagegateway.CreateSnapshotOutput) {
	c.inc("CreateSnapshot")
	return c.svc.CreateSnapshotRequest(input)
}

// CreateSnapshot is a passthrough to the underlying CreateSnapshot method.
// It will increment the count of requests made to CreateSnapshot.
func (c *StorageGateway) CreateSnapshot(input *storagegateway.CreateSnapshotInput) (*storagegateway.CreateSnapshotOutput, error) {
	c.inc("CreateSnapshot")
	return c.svc.CreateSnapshot(input)
}

// CreateSnapshotWithContext is a passthrough to the underlying CreateSnapshotWithContext method.
// It will increment the count of requests made to CreateSnapshot.
func (c *StorageGateway) CreateSnapshotWithContext(ctx aws.Context, input *storagegateway.CreateSnapshotInput, opts ...request.Option) (*storagegateway.CreateSnapshotOutput, error) {
	c.inc("CreateSnapshot")
	return c.svc.CreateSnapshotWithContext(ctx, input, opts...)
}

// CreateSnapshotFromVolumeRecoveryPointRequest is a passthrough to the underlying CreateSnapshotFromVolumeRecoveryPointRequest.
// It will increment the count of requests made to CreateSnapshotFromVolumeRecoveryPoint.
func (c *StorageGateway) CreateSnapshotFromVolumeRecoveryPointRequest(input *storagegateway.CreateSnapshotFromVolumeRecoveryPointInput) (req *request.Request, output *storagegateway.CreateSnapshotFromVolumeRecoveryPointOutput) {
	c.inc("CreateSnapshotFromVolumeRecoveryPoint")
	return c.svc.CreateSnapshotFromVolumeRecoveryPointRequest(input)
}

// CreateSnapshotFromVolumeRecoveryPoint is a passthrough to the underlying CreateSnapshotFromVolumeRecoveryPoint method.
// It will increment the count of requests made to CreateSnapshotFromVolumeRecoveryPoint.
func (c *StorageGateway) CreateSnapshotFromVolumeRecoveryPoint(input *storagegateway.CreateSnapshotFromVolumeRecoveryPointInput) (*storagegateway.CreateSnapshotFromVolumeRecoveryPointOutput, error) {
	c.inc("CreateSnapshotFromVolumeRecoveryPoint")
	return c.svc.CreateSnapshotFromVolumeRecoveryPoint(input)
}

// CreateSnapshotFromVolumeRecoveryPointWithContext is a passthrough to the underlying CreateSnapshotFromVolumeRecoveryPointWithContext method.
// It will increment the count of requests made to CreateSnapshotFromVolumeRecoveryPoint.
func (c *StorageGateway) CreateSnapshotFromVolumeRecoveryPointWithContext(ctx aws.Context, input *storagegateway.CreateSnapshotFromVolumeRecoveryPointInput, opts ...request.Option) (*storagegateway.CreateSnapshotFromVolumeRecoveryPointOutput, error) {
	c.inc("CreateSnapshotFromVolumeRecoveryPoint")
	return c.svc.CreateSnapshotFromVolumeRecoveryPointWithContext(ctx, input, opts...)
}

// CreateStorediSCSIVolumeRequest is a passthrough to the underlying CreateStorediSCSIVolumeRequest.
// It will increment the count of requests made to CreateStorediSCSIVolume.
func (c *StorageGateway) CreateStorediSCSIVolumeRequest(input *storagegateway.CreateStorediSCSIVolumeInput) (req *request.Request, output *storagegateway.CreateStorediSCSIVolumeOutput) {
	c.inc("CreateStorediSCSIVolume")
	return c.svc.CreateStorediSCSIVolumeRequest(input)
}

// CreateStorediSCSIVolume is a passthrough to the underlying CreateStorediSCSIVolume method.
// It will increment the count of requests made to CreateStorediSCSIVolume.
func (c *StorageGateway) CreateStorediSCSIVolume(input *storagegateway.CreateStorediSCSIVolumeInput) (*storagegateway.CreateStorediSCSIVolumeOutput, error) {
	c.inc("CreateStorediSCSIVolume")
	return c.svc.CreateStorediSCSIVolume(input)
}

// CreateStorediSCSIVolumeWithContext is a passthrough to the underlying CreateStorediSCSIVolumeWithContext method.
// It will increment the count of requests made to CreateStorediSCSIVolume.
func (c *StorageGateway) CreateStorediSCSIVolumeWithContext(ctx aws.Context, input *storagegateway.CreateStorediSCSIVolumeInput, opts ...request.Option) (*storagegateway.CreateStorediSCSIVolumeOutput, error) {
	c.inc("CreateStorediSCSIVolume")
	return c.svc.CreateStorediSCSIVolumeWithContext(ctx, input, opts...)
}

// CreateTapeWithBarcodeRequest is a passthrough to the underlying CreateTapeWithBarcodeRequest.
// It will increment the count of requests made to CreateTapeWithBarcode.
func (c *StorageGateway) CreateTapeWithBarcodeRequest(input *storagegateway.CreateTapeWithBarcodeInput) (req *request.Request, output *storagegateway.CreateTapeWithBarcodeOutput) {
	c.inc("CreateTapeWithBarcode")
	return c.svc.CreateTapeWithBarcodeRequest(input)
}

// CreateTapeWithBarcode is a passthrough to the underlying CreateTapeWithBarcode method.
// It will increment the count of requests made to CreateTapeWithBarcode.
func (c *StorageGateway) CreateTapeWithBarcode(input *storagegateway.CreateTapeWithBarcodeInput) (*storagegateway.CreateTapeWithBarcodeOutput, error) {
	c.inc("CreateTapeWithBarcode")
	return c.svc.CreateTapeWithBarcode(input)
}

// CreateTapeWithBarcodeWithContext is a passthrough to the underlying CreateTapeWithBarcodeWithContext method.
// It will increment the count of requests made to CreateTapeWithBarcode.
func (c *StorageGateway) CreateTapeWithBarcodeWithContext(ctx aws.Context, input *storagegateway.CreateTapeWithBarcodeInput, opts ...request.Option) (*storagegateway.CreateTapeWithBarcodeOutput, error) {
	c.inc("CreateTapeWithBarcode")
	return c.svc.CreateTapeWithBarcodeWithContext(ctx, input, opts...)
}

// CreateTapesRequest is a passthrough to the underlying CreateTapesRequest.
// It will increment the count of requests made to CreateTapes.
func (c *StorageGateway) CreateTapesRequest(input *storagegateway.CreateTapesInput) (req *request.Request, output *storagegateway.CreateTapesOutput) {
	c.inc("CreateTapes")
	return c.svc.CreateTapesRequest(input)
}

// CreateTapes is a passthrough to the underlying CreateTapes method.
// It will increment the count of requests made to CreateTapes.
func (c *StorageGateway) CreateTapes(input *storagegateway.CreateTapesInput) (*storagegateway.CreateTapesOutput, error) {
	c.inc("CreateTapes")
	return c.svc.CreateTapes(input)
}

// CreateTapesWithContext is a passthrough to the underlying CreateTapesWithContext method.
// It will increment the count of requests made to CreateTapes.
func (c *StorageGateway) CreateTapesWithContext(ctx aws.Context, input *storagegateway.CreateTapesInput, opts ...request.Option) (*storagegateway.CreateTapesOutput, error) {
	c.inc("CreateTapes")
	return c.svc.CreateTapesWithContext(ctx, input, opts...)
}

// DeleteBandwidthRateLimitRequest is a passthrough to the underlying DeleteBandwidthRateLimitRequest.
// It will increment the count of requests made to DeleteBandwidthRateLimit.
func (c *StorageGateway) DeleteBandwidthRateLimitRequest(input *storagegateway.DeleteBandwidthRateLimitInput) (req *request.Request, output *storagegateway.DeleteBandwidthRateLimitOutput) {
	c.inc("DeleteBandwidthRateLimit")
	return c.svc.DeleteBandwidthRateLimitRequest(input)
}

// DeleteBandwidthRateLimit is a passthrough to the underlying DeleteBandwidthRateLimit method.
// It will increment the count of requests made to DeleteBandwidthRateLimit.
func (c *StorageGateway) DeleteBandwidthRateLimit(input *storagegateway.DeleteBandwidthRateLimitInput) (*storagegateway.DeleteBandwidthRateLimitOutput, error) {
	c.inc("DeleteBandwidthRateLimit")
	return c.svc.DeleteBandwidthRateLimit(input)
}

// DeleteBandwidthRateLimitWithContext is a passthrough to the underlying DeleteBandwidthRateLimitWithContext method.
// It will increment the count of requests made to DeleteBandwidthRateLimit.
func (c *StorageGateway) DeleteBandwidthRateLimitWithContext(ctx aws.Context, input *storagegateway.DeleteBandwidthRateLimitInput, opts ...request.Option) (*storagegateway.DeleteBandwidthRateLimitOutput, error) {
	c.inc("DeleteBandwidthRateLimit")
	return c.svc.DeleteBandwidthRateLimitWithContext(ctx, input, opts...)
}

// DeleteChapCredentialsRequest is a passthrough to the underlying DeleteChapCredentialsRequest.
// It will increment the count of requests made to DeleteChapCredentials.
func (c *StorageGateway) DeleteChapCredentialsRequest(input *storagegateway.DeleteChapCredentialsInput) (req *request.Request, output *storagegateway.DeleteChapCredentialsOutput) {
	c.inc("DeleteChapCredentials")
	return c.svc.DeleteChapCredentialsRequest(input)
}

// DeleteChapCredentials is a passthrough to the underlying DeleteChapCredentials method.
// It will increment the count of requests made to DeleteChapCredentials.
func (c *StorageGateway) DeleteChapCredentials(input *storagegateway.DeleteChapCredentialsInput) (*storagegateway.DeleteChapCredentialsOutput, error) {
	c.inc("DeleteChapCredentials")
	return c.svc.DeleteChapCredentials(input)
}

// DeleteChapCredentialsWithContext is a passthrough to the underlying DeleteChapCredentialsWithContext method.
// It will increment the count of requests made to DeleteChapCredentials.
func (c *StorageGateway) DeleteChapCredentialsWithContext(ctx aws.Context, input *storagegateway.DeleteChapCredentialsInput, opts ...request.Option) (*storagegateway.DeleteChapCredentialsOutput, error) {
	c.inc("DeleteChapCredentials")
	return c.svc.DeleteChapCredentialsWithContext(ctx, input, opts...)
}

// DeleteFileShareRequest is a passthrough to the underlying DeleteFileShareRequest.
// It will increment the count of requests made to DeleteFileShare.
func (c *StorageGateway) DeleteFileShareRequest(input *storagegateway.DeleteFileShareInput) (req *request.Request, output *storagegateway.DeleteFileShareOutput) {
	c.inc("DeleteFileShare")
	return c.svc.DeleteFileShareRequest(input)
}

// DeleteFileShare is a passthrough to the underlying DeleteFileShare method.
// It will increment the count of requests made to DeleteFileShare.
func (c *StorageGateway) DeleteFileShare(input *storagegateway.DeleteFileShareInput) (*storagegateway.DeleteFileShareOutput, error) {
	c.inc("DeleteFileShare")
	return c.svc.DeleteFileShare(input)
}

// DeleteFileShareWithContext is a passthrough to the underlying DeleteFileShareWithContext method.
// It will increment the count of requests made to DeleteFileShare.
func (c *StorageGateway) DeleteFileShareWithContext(ctx aws.Context, input *storagegateway.DeleteFileShareInput, opts ...request.Option) (*storagegateway.DeleteFileShareOutput, error) {
	c.inc("DeleteFileShare")
	return c.svc.DeleteFileShareWithContext(ctx, input, opts...)
}

// DeleteGatewayRequest is a passthrough to the underlying DeleteGatewayRequest.
// It will increment the count of requests made to DeleteGateway.
func (c *StorageGateway) DeleteGatewayRequest(input *storagegateway.DeleteGatewayInput) (req *request.Request, output *storagegateway.DeleteGatewayOutput) {
	c.inc("DeleteGateway")
	return c.svc.DeleteGatewayRequest(input)
}

// DeleteGateway is a passthrough to the underlying DeleteGateway method.
// It will increment the count of requests made to DeleteGateway.
func (c *StorageGateway) DeleteGateway(input *storagegateway.DeleteGatewayInput) (*storagegateway.DeleteGatewayOutput, error) {
	c.inc("DeleteGateway")
	return c.svc.DeleteGateway(input)
}

// DeleteGatewayWithContext is a passthrough to the underlying DeleteGatewayWithContext method.
// It will increment the count of requests made to DeleteGateway.
func (c *StorageGateway) DeleteGatewayWithContext(ctx aws.Context, input *storagegateway.DeleteGatewayInput, opts ...request.Option) (*storagegateway.DeleteGatewayOutput, error) {
	c.inc("DeleteGateway")
	return c.svc.DeleteGatewayWithContext(ctx, input, opts...)
}

// DeleteSnapshotScheduleRequest is a passthrough to the underlying DeleteSnapshotScheduleRequest.
// It will increment the count of requests made to DeleteSnapshotSchedule.
func (c *StorageGateway) DeleteSnapshotScheduleRequest(input *storagegateway.DeleteSnapshotScheduleInput) (req *request.Request, output *storagegateway.DeleteSnapshotScheduleOutput) {
	c.inc("DeleteSnapshotSchedule")
	return c.svc.DeleteSnapshotScheduleRequest(input)
}

// DeleteSnapshotSchedule is a passthrough to the underlying DeleteSnapshotSchedule method.
// It will increment the count of requests made to DeleteSnapshotSchedule.
func (c *StorageGateway) DeleteSnapshotSchedule(input *storagegateway.DeleteSnapshotScheduleInput) (*storagegateway.DeleteSnapshotScheduleOutput, error) {
	c.inc("DeleteSnapshotSchedule")
	return c.svc.DeleteSnapshotSchedule(input)
}

// DeleteSnapshotScheduleWithContext is a passthrough to the underlying DeleteSnapshotScheduleWithContext method.
// It will increment the count of requests made to DeleteSnapshotSchedule.
func (c *StorageGateway) DeleteSnapshotScheduleWithContext(ctx aws.Context, input *storagegateway.DeleteSnapshotScheduleInput, opts ...request.Option) (*storagegateway.DeleteSnapshotScheduleOutput, error) {
	c.inc("DeleteSnapshotSchedule")
	return c.svc.DeleteSnapshotScheduleWithContext(ctx, input, opts...)
}

// DeleteTapeRequest is a passthrough to the underlying DeleteTapeRequest.
// It will increment the count of requests made to DeleteTape.
func (c *StorageGateway) DeleteTapeRequest(input *storagegateway.DeleteTapeInput) (req *request.Request, output *storagegateway.DeleteTapeOutput) {
	c.inc("DeleteTape")
	return c.svc.DeleteTapeRequest(input)
}

// DeleteTape is a passthrough to the underlying DeleteTape method.
// It will increment the count of requests made to DeleteTape.
func (c *StorageGateway) DeleteTape(input *storagegateway.DeleteTapeInput) (*storagegateway.DeleteTapeOutput, error) {
	c.inc("DeleteTape")
	return c.svc.DeleteTape(input)
}

// DeleteTapeWithContext is a passthrough to the underlying DeleteTapeWithContext method.
// It will increment the count of requests made to DeleteTape.
func (c *StorageGateway) DeleteTapeWithContext(ctx aws.Context, input *storagegateway.DeleteTapeInput, opts ...request.Option) (*storagegateway.DeleteTapeOutput, error) {
	c.inc("DeleteTape")
	return c.svc.DeleteTapeWithContext(ctx, input, opts...)
}

// DeleteTapeArchiveRequest is a passthrough to the underlying DeleteTapeArchiveRequest.
// It will increment the count of requests made to DeleteTapeArchive.
func (c *StorageGateway) DeleteTapeArchiveRequest(input *storagegateway.DeleteTapeArchiveInput) (req *request.Request, output *storagegateway.DeleteTapeArchiveOutput) {
	c.inc("DeleteTapeArchive")
	return c.svc.DeleteTapeArchiveRequest(input)
}

// DeleteTapeArchive is a passthrough to the underlying DeleteTapeArchive method.
// It will increment the count of requests made to DeleteTapeArchive.
func (c *StorageGateway) DeleteTapeArchive(input *storagegateway.DeleteTapeArchiveInput) (*storagegateway.DeleteTapeArchiveOutput, error) {
	c.inc("DeleteTapeArchive")
	return c.svc.DeleteTapeArchive(input)
}

// DeleteTapeArchiveWithContext is a passthrough to the underlying DeleteTapeArchiveWithContext method.
// It will increment the count of requests made to DeleteTapeArchive.
func (c *StorageGateway) DeleteTapeArchiveWithContext(ctx aws.Context, input *storagegateway.DeleteTapeArchiveInput, opts ...request.Option) (*storagegateway.DeleteTapeArchiveOutput, error) {
	c.inc("DeleteTapeArchive")
	return c.svc.DeleteTapeArchiveWithContext(ctx, input, opts...)
}

// DeleteVolumeRequest is a passthrough to the underlying DeleteVolumeRequest.
// It will increment the count of requests made to DeleteVolume.
func (c *StorageGateway) DeleteVolumeRequest(input *storagegateway.DeleteVolumeInput) (req *request.Request, output *storagegateway.DeleteVolumeOutput) {
	c.inc("DeleteVolume")
	return c.svc.DeleteVolumeRequest(input)
}

// DeleteVolume is a passthrough to the underlying DeleteVolume method.
// It will increment the count of requests made to DeleteVolume.
func (c *StorageGateway) DeleteVolume(input *storagegateway.DeleteVolumeInput) (*storagegateway.DeleteVolumeOutput, error) {
	c.inc("DeleteVolume")
	return c.svc.DeleteVolume(input)
}

// DeleteVolumeWithContext is a passthrough to the underlying DeleteVolumeWithContext method.
// It will increment the count of requests made to DeleteVolume.
func (c *StorageGateway) DeleteVolumeWithContext(ctx aws.Context, input *storagegateway.DeleteVolumeInput, opts ...request.Option) (*storagegateway.DeleteVolumeOutput, error) {
	c.inc("DeleteVolume")
	return c.svc.DeleteVolumeWithContext(ctx, input, opts...)
}

// DescribeBandwidthRateLimitRequest is a passthrough to the underlying DescribeBandwidthRateLimitRequest.
// It will increment the count of requests made to DescribeBandwidthRateLimit.
func (c *StorageGateway) DescribeBandwidthRateLimitRequest(input *storagegateway.DescribeBandwidthRateLimitInput) (req *request.Request, output *storagegateway.DescribeBandwidthRateLimitOutput) {
	c.inc("DescribeBandwidthRateLimit")
	return c.svc.DescribeBandwidthRateLimitRequest(input)
}

// DescribeBandwidthRateLimit is a passthrough to the underlying DescribeBandwidthRateLimit method.
// It will increment the count of requests made to DescribeBandwidthRateLimit.
func (c *StorageGateway) DescribeBandwidthRateLimit(input *storagegateway.DescribeBandwidthRateLimitInput) (*storagegateway.DescribeBandwidthRateLimitOutput, error) {
	c.inc("DescribeBandwidthRateLimit")
	return c.svc.DescribeBandwidthRateLimit(input)
}

// DescribeBandwidthRateLimitWithContext is a passthrough to the underlying DescribeBandwidthRateLimitWithContext method.
// It will increment the count of requests made to DescribeBandwidthRateLimit.
func (c *StorageGateway) DescribeBandwidthRateLimitWithContext(ctx aws.Context, input *storagegateway.DescribeBandwidthRateLimitInput, opts ...request.Option) (*storagegateway.DescribeBandwidthRateLimitOutput, error) {
	c.inc("DescribeBandwidthRateLimit")
	return c.svc.DescribeBandwidthRateLimitWithContext(ctx, input, opts...)
}

// DescribeCacheRequest is a passthrough to the underlying DescribeCacheRequest.
// It will increment the count of requests made to DescribeCache.
func (c *StorageGateway) DescribeCacheRequest(input *storagegateway.DescribeCacheInput) (req *request.Request, output *storagegateway.DescribeCacheOutput) {
	c.inc("DescribeCache")
	return c.svc.DescribeCacheRequest(input)
}

// DescribeCache is a passthrough to the underlying DescribeCache method.
// It will increment the count of requests made to DescribeCache.
func (c *StorageGateway) DescribeCache(input *storagegateway.DescribeCacheInput) (*storagegateway.DescribeCacheOutput, error) {
	c.inc("DescribeCache")
	return c.svc.DescribeCache(input)
}

// DescribeCacheWithContext is a passthrough to the underlying DescribeCacheWithContext method.
// It will increment the count of requests made to DescribeCache.
func (c *StorageGateway) DescribeCacheWithContext(ctx aws.Context, input *storagegateway.DescribeCacheInput, opts ...request.Option) (*storagegateway.DescribeCacheOutput, error) {
	c.inc("DescribeCache")
	return c.svc.DescribeCacheWithContext(ctx, input, opts...)
}

// DescribeCachediSCSIVolumesRequest is a passthrough to the underlying DescribeCachediSCSIVolumesRequest.
// It will increment the count of requests made to DescribeCachediSCSIVolumes.
func (c *StorageGateway) DescribeCachediSCSIVolumesRequest(input *storagegateway.DescribeCachediSCSIVolumesInput) (req *request.Request, output *storagegateway.DescribeCachediSCSIVolumesOutput) {
	c.inc("DescribeCachediSCSIVolumes")
	return c.svc.DescribeCachediSCSIVolumesRequest(input)
}

// DescribeCachediSCSIVolumes is a passthrough to the underlying DescribeCachediSCSIVolumes method.
// It will increment the count of requests made to DescribeCachediSCSIVolumes.
func (c *StorageGateway) DescribeCachediSCSIVolumes(input *storagegateway.DescribeCachediSCSIVolumesInput) (*storagegateway.DescribeCachediSCSIVolumesOutput, error) {
	c.inc("DescribeCachediSCSIVolumes")
	return c.svc.DescribeCachediSCSIVolumes(input)
}

// DescribeCachediSCSIVolumesWithContext is a passthrough to the underlying DescribeCachediSCSIVolumesWithContext method.
// It will increment the count of requests made to DescribeCachediSCSIVolumes.
func (c *StorageGateway) DescribeCachediSCSIVolumesWithContext(ctx aws.Context, input *storagegateway.DescribeCachediSCSIVolumesInput, opts ...request.Option) (*storagegateway.DescribeCachediSCSIVolumesOutput, error) {
	c.inc("DescribeCachediSCSIVolumes")
	return c.svc.DescribeCachediSCSIVolumesWithContext(ctx, input, opts...)
}

// DescribeChapCredentialsRequest is a passthrough to the underlying DescribeChapCredentialsRequest.
// It will increment the count of requests made to DescribeChapCredentials.
func (c *StorageGateway) DescribeChapCredentialsRequest(input *storagegateway.DescribeChapCredentialsInput) (req *request.Request, output *storagegateway.DescribeChapCredentialsOutput) {
	c.inc("DescribeChapCredentials")
	return c.svc.DescribeChapCredentialsRequest(input)
}

// DescribeChapCredentials is a passthrough to the underlying DescribeChapCredentials method.
// It will increment the count of requests made to DescribeChapCredentials.
func (c *StorageGateway) DescribeChapCredentials(input *storagegateway.DescribeChapCredentialsInput) (*storagegateway.DescribeChapCredentialsOutput, error) {
	c.inc("DescribeChapCredentials")
	return c.svc.DescribeChapCredentials(input)
}

// DescribeChapCredentialsWithContext is a passthrough to the underlying DescribeChapCredentialsWithContext method.
// It will increment the count of requests made to DescribeChapCredentials.
func (c *StorageGateway) DescribeChapCredentialsWithContext(ctx aws.Context, input *storagegateway.DescribeChapCredentialsInput, opts ...request.Option) (*storagegateway.DescribeChapCredentialsOutput, error) {
	c.inc("DescribeChapCredentials")
	return c.svc.DescribeChapCredentialsWithContext(ctx, input, opts...)
}

// DescribeGatewayInformationRequest is a passthrough to the underlying DescribeGatewayInformationRequest.
// It will increment the count of requests made to DescribeGatewayInformation.
func (c *StorageGateway) DescribeGatewayInformationRequest(input *storagegateway.DescribeGatewayInformationInput) (req *request.Request, output *storagegateway.DescribeGatewayInformationOutput) {
	c.inc("DescribeGatewayInformation")
	return c.svc.DescribeGatewayInformationRequest(input)
}

// DescribeGatewayInformation is a passthrough to the underlying DescribeGatewayInformation method.
// It will increment the count of requests made to DescribeGatewayInformation.
func (c *StorageGateway) DescribeGatewayInformation(input *storagegateway.DescribeGatewayInformationInput) (*storagegateway.DescribeGatewayInformationOutput, error) {
	c.inc("DescribeGatewayInformation")
	return c.svc.DescribeGatewayInformation(input)
}

// DescribeGatewayInformationWithContext is a passthrough to the underlying DescribeGatewayInformationWithContext method.
// It will increment the count of requests made to DescribeGatewayInformation.
func (c *StorageGateway) DescribeGatewayInformationWithContext(ctx aws.Context, input *storagegateway.DescribeGatewayInformationInput, opts ...request.Option) (*storagegateway.DescribeGatewayInformationOutput, error) {
	c.inc("DescribeGatewayInformation")
	return c.svc.DescribeGatewayInformationWithContext(ctx, input, opts...)
}

// DescribeMaintenanceStartTimeRequest is a passthrough to the underlying DescribeMaintenanceStartTimeRequest.
// It will increment the count of requests made to DescribeMaintenanceStartTime.
func (c *StorageGateway) DescribeMaintenanceStartTimeRequest(input *storagegateway.DescribeMaintenanceStartTimeInput) (req *request.Request, output *storagegateway.DescribeMaintenanceStartTimeOutput) {
	c.inc("DescribeMaintenanceStartTime")
	return c.svc.DescribeMaintenanceStartTimeRequest(input)
}

// DescribeMaintenanceStartTime is a passthrough to the underlying DescribeMaintenanceStartTime method.
// It will increment the count of requests made to DescribeMaintenanceStartTime.
func (c *StorageGateway) DescribeMaintenanceStartTime(input *storagegateway.DescribeMaintenanceStartTimeInput) (*storagegateway.DescribeMaintenanceStartTimeOutput, error) {
	c.inc("DescribeMaintenanceStartTime")
	return c.svc.DescribeMaintenanceStartTime(input)
}

// DescribeMaintenanceStartTimeWithContext is a passthrough to the underlying DescribeMaintenanceStartTimeWithContext method.
// It will increment the count of requests made to DescribeMaintenanceStartTime.
func (c *StorageGateway) DescribeMaintenanceStartTimeWithContext(ctx aws.Context, input *storagegateway.DescribeMaintenanceStartTimeInput, opts ...request.Option) (*storagegateway.DescribeMaintenanceStartTimeOutput, error) {
	c.inc("DescribeMaintenanceStartTime")
	return c.svc.DescribeMaintenanceStartTimeWithContext(ctx, input, opts...)
}

// DescribeNFSFileSharesRequest is a passthrough to the underlying DescribeNFSFileSharesRequest.
// It will increment the count of requests made to DescribeNFSFileShares.
func (c *StorageGateway) DescribeNFSFileSharesRequest(input *storagegateway.DescribeNFSFileSharesInput) (req *request.Request, output *storagegateway.DescribeNFSFileSharesOutput) {
	c.inc("DescribeNFSFileShares")
	return c.svc.DescribeNFSFileSharesRequest(input)
}

// DescribeNFSFileShares is a passthrough to the underlying DescribeNFSFileShares method.
// It will increment the count of requests made to DescribeNFSFileShares.
func (c *StorageGateway) DescribeNFSFileShares(input *storagegateway.DescribeNFSFileSharesInput) (*storagegateway.DescribeNFSFileSharesOutput, error) {
	c.inc("DescribeNFSFileShares")
	return c.svc.DescribeNFSFileShares(input)
}

// DescribeNFSFileSharesWithContext is a passthrough to the underlying DescribeNFSFileSharesWithContext method.
// It will increment the count of requests made to DescribeNFSFileShares.
func (c *StorageGateway) DescribeNFSFileSharesWithContext(ctx aws.Context, input *storagegateway.DescribeNFSFileSharesInput, opts ...request.Option) (*storagegateway.DescribeNFSFileSharesOutput, error) {
	c.inc("DescribeNFSFileShares")
	return c.svc.DescribeNFSFileSharesWithContext(ctx, input, opts...)
}

// DescribeSnapshotScheduleRequest is a passthrough to the underlying DescribeSnapshotScheduleRequest.
// It will increment the count of requests made to DescribeSnapshotSchedule.
func (c *StorageGateway) DescribeSnapshotScheduleRequest(input *storagegateway.DescribeSnapshotScheduleInput) (req *request.Request, output *storagegateway.DescribeSnapshotScheduleOutput) {
	c.inc("DescribeSnapshotSchedule")
	return c.svc.DescribeSnapshotScheduleRequest(input)
}

// DescribeSnapshotSchedule is a passthrough to the underlying DescribeSnapshotSchedule method.
// It will increment the count of requests made to DescribeSnapshotSchedule.
func (c *StorageGateway) DescribeSnapshotSchedule(input *storagegateway.DescribeSnapshotScheduleInput) (*storagegateway.DescribeSnapshotScheduleOutput, error) {
	c.inc("DescribeSnapshotSchedule")
	return c.svc.DescribeSnapshotSchedule(input)
}

// DescribeSnapshotScheduleWithContext is a passthrough to the underlying DescribeSnapshotScheduleWithContext method.
// It will increment the count of requests made to DescribeSnapshotSchedule.
func (c *StorageGateway) DescribeSnapshotScheduleWithContext(ctx aws.Context, input *storagegateway.DescribeSnapshotScheduleInput, opts ...request.Option) (*storagegateway.DescribeSnapshotScheduleOutput, error) {
	c.inc("DescribeSnapshotSchedule")
	return c.svc.DescribeSnapshotScheduleWithContext(ctx, input, opts...)
}

// DescribeStorediSCSIVolumesRequest is a passthrough to the underlying DescribeStorediSCSIVolumesRequest.
// It will increment the count of requests made to DescribeStorediSCSIVolumes.
func (c *StorageGateway) DescribeStorediSCSIVolumesRequest(input *storagegateway.DescribeStorediSCSIVolumesInput) (req *request.Request, output *storagegateway.DescribeStorediSCSIVolumesOutput) {
	c.inc("DescribeStorediSCSIVolumes")
	return c.svc.DescribeStorediSCSIVolumesRequest(input)
}

// DescribeStorediSCSIVolumes is a passthrough to the underlying DescribeStorediSCSIVolumes method.
// It will increment the count of requests made to DescribeStorediSCSIVolumes.
func (c *StorageGateway) DescribeStorediSCSIVolumes(input *storagegateway.DescribeStorediSCSIVolumesInput) (*storagegateway.DescribeStorediSCSIVolumesOutput, error) {
	c.inc("DescribeStorediSCSIVolumes")
	return c.svc.DescribeStorediSCSIVolumes(input)
}

// DescribeStorediSCSIVolumesWithContext is a passthrough to the underlying DescribeStorediSCSIVolumesWithContext method.
// It will increment the count of requests made to DescribeStorediSCSIVolumes.
func (c *StorageGateway) DescribeStorediSCSIVolumesWithContext(ctx aws.Context, input *storagegateway.DescribeStorediSCSIVolumesInput, opts ...request.Option) (*storagegateway.DescribeStorediSCSIVolumesOutput, error) {
	c.inc("DescribeStorediSCSIVolumes")
	return c.svc.DescribeStorediSCSIVolumesWithContext(ctx, input, opts...)
}

// DescribeTapeArchivesRequest is a passthrough to the underlying DescribeTapeArchivesRequest.
// It will increment the count of requests made to DescribeTapeArchives.
func (c *StorageGateway) DescribeTapeArchivesRequest(input *storagegateway.DescribeTapeArchivesInput) (req *request.Request, output *storagegateway.DescribeTapeArchivesOutput) {
	c.inc("DescribeTapeArchives")
	return c.svc.DescribeTapeArchivesRequest(input)
}

// DescribeTapeArchives is a passthrough to the underlying DescribeTapeArchives method.
// It will increment the count of requests made to DescribeTapeArchives.
func (c *StorageGateway) DescribeTapeArchives(input *storagegateway.DescribeTapeArchivesInput) (*storagegateway.DescribeTapeArchivesOutput, error) {
	c.inc("DescribeTapeArchives")
	return c.svc.DescribeTapeArchives(input)
}

// DescribeTapeArchivesWithContext is a passthrough to the underlying DescribeTapeArchivesWithContext method.
// It will increment the count of requests made to DescribeTapeArchives.
func (c *StorageGateway) DescribeTapeArchivesWithContext(ctx aws.Context, input *storagegateway.DescribeTapeArchivesInput, opts ...request.Option) (*storagegateway.DescribeTapeArchivesOutput, error) {
	c.inc("DescribeTapeArchives")
	return c.svc.DescribeTapeArchivesWithContext(ctx, input, opts...)
}

// DescribeTapeArchivesPages is a passthrough to the underlying DescribeTapeArchivesPages method.
// It will increment the count of requests made to DescribeTapeArchives on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeTapeArchivesPagesWithContext to avoid this.
func (c *StorageGateway) DescribeTapeArchivesPages(input *storagegateway.DescribeTapeArchivesInput, fn func(*storagegateway.DescribeTapeArchivesOutput, bool) bool) error {
	wrappedFn := func(page *storagegateway.DescribeTapeArchivesOutput, lastPage bool) bool {
		c.inc("DescribeTapeArchives")
		return fn(page, lastPage)
	}
	return c.svc.DescribeTapeArchivesPages(input, wrappedFn)
}

// DescribeTapeArchivesPagesWithContext is a passthrough to the underlying DescribeTapeArchivesPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeTapeArchives when applied to the request.
func (c *StorageGateway) DescribeTapeArchivesPagesWithContext(ctx aws.Context, input *storagegateway.DescribeTapeArchivesInput, fn func(*storagegateway.DescribeTapeArchivesOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeTapeArchives"))
	return c.svc.DescribeTapeArchivesPagesWithContext(ctx, input, fn, opts...)
}

// DescribeTapeRecoveryPointsRequest is a passthrough to the underlying DescribeTapeRecoveryPointsRequest.
// It will increment the count of requests made to DescribeTapeRecoveryPoints.
func (c *StorageGateway) DescribeTapeRecoveryPointsRequest(input *storagegateway.DescribeTapeRecoveryPointsInput) (req *request.Request, output *storagegateway.DescribeTapeRecoveryPointsOutput) {
	c.inc("DescribeTapeRecoveryPoints")
	return c.svc.DescribeTapeRecoveryPointsRequest(input)
}

// DescribeTapeRecoveryPoints is a passthrough to the underlying DescribeTapeRecoveryPoints method.
// It will increment the count of requests made to DescribeTapeRecoveryPoints.
func (c *StorageGateway) DescribeTapeRecoveryPoints(input *storagegateway.DescribeTapeRecoveryPointsInput) (*storagegateway.DescribeTapeRecoveryPointsOutput, error) {
	c.inc("DescribeTapeRecoveryPoints")
	return c.svc.DescribeTapeRecoveryPoints(input)
}

// DescribeTapeRecoveryPointsWithContext is a passthrough to the underlying DescribeTapeRecoveryPointsWithContext method.
// It will increment the count of requests made to DescribeTapeRecoveryPoints.
func (c *StorageGateway) DescribeTapeRecoveryPointsWithContext(ctx aws.Context, input *storagegateway.DescribeTapeRecoveryPointsInput, opts ...request.Option) (*storagegateway.DescribeTapeRecoveryPointsOutput, error) {
	c.inc("DescribeTapeRecoveryPoints")
	return c.svc.DescribeTapeRecoveryPointsWithContext(ctx, input, opts...)
}

// DescribeTapeRecoveryPointsPages is a passthrough to the underlying DescribeTapeRecoveryPointsPages method.
// It will increment the count of requests made to DescribeTapeRecoveryPoints on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeTapeRecoveryPointsPagesWithContext to avoid this.
func (c *StorageGateway) DescribeTapeRecoveryPointsPages(input *storagegateway.DescribeTapeRecoveryPointsInput, fn func(*storagegateway.DescribeTapeRecoveryPointsOutput, bool) bool) error {
	wrappedFn := func(page *storagegateway.DescribeTapeRecoveryPointsOutput, lastPage bool) bool {
		c.inc("DescribeTapeRecoveryPoints")
		return fn(page, lastPage)
	}
	return c.svc.DescribeTapeRecoveryPointsPages(input, wrappedFn)
}

// DescribeTapeRecoveryPointsPagesWithContext is a passthrough to the underlying DescribeTapeRecoveryPointsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeTapeRecoveryPoints when applied to the request.
func (c *StorageGateway) DescribeTapeRecoveryPointsPagesWithContext(ctx aws.Context, input *storagegateway.DescribeTapeRecoveryPointsInput, fn func(*storagegateway.DescribeTapeRecoveryPointsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeTapeRecoveryPoints"))
	return c.svc.DescribeTapeRecoveryPointsPagesWithContext(ctx, input, fn, opts...)
}

// DescribeTapesRequest is a passthrough to the underlying DescribeTapesRequest.
// It will increment the count of requests made to DescribeTapes.
func (c *StorageGateway) DescribeTapesRequest(input *storagegateway.DescribeTapesInput) (req *request.Request, output *storagegateway.DescribeTapesOutput) {
	c.inc("DescribeTapes")
	return c.svc.DescribeTapesRequest(input)
}

// DescribeTapes is a passthrough to the underlying DescribeTapes method.
// It will increment the count of requests made to DescribeTapes.
func (c *StorageGateway) DescribeTapes(input *storagegateway.DescribeTapesInput) (*storagegateway.DescribeTapesOutput, error) {
	c.inc("DescribeTapes")
	return c.svc.DescribeTapes(input)
}

// DescribeTapesWithContext is a passthrough to the underlying DescribeTapesWithContext method.
// It will increment the count of requests made to DescribeTapes.
func (c *StorageGateway) DescribeTapesWithContext(ctx aws.Context, input *storagegateway.DescribeTapesInput, opts ...request.Option) (*storagegateway.DescribeTapesOutput, error) {
	c.inc("DescribeTapes")
	return c.svc.DescribeTapesWithContext(ctx, input, opts...)
}

// DescribeTapesPages is a passthrough to the underlying DescribeTapesPages method.
// It will increment the count of requests made to DescribeTapes on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeTapesPagesWithContext to avoid this.
func (c *StorageGateway) DescribeTapesPages(input *storagegateway.DescribeTapesInput, fn func(*storagegateway.DescribeTapesOutput, bool) bool) error {
	wrappedFn := func(page *storagegateway.DescribeTapesOutput, lastPage bool) bool {
		c.inc("DescribeTapes")
		return fn(page, lastPage)
	}
	return c.svc.DescribeTapesPages(input, wrappedFn)
}

// DescribeTapesPagesWithContext is a passthrough to the underlying DescribeTapesPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeTapes when applied to the request.
func (c *StorageGateway) DescribeTapesPagesWithContext(ctx aws.Context, input *storagegateway.DescribeTapesInput, fn func(*storagegateway.DescribeTapesOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeTapes"))
	return c.svc.DescribeTapesPagesWithContext(ctx, input, fn, opts...)
}

// DescribeUploadBufferRequest is a passthrough to the underlying DescribeUploadBufferRequest.
// It will increment the count of requests made to DescribeUploadBuffer.
func (c *StorageGateway) DescribeUploadBufferRequest(input *storagegateway.DescribeUploadBufferInput) (req *request.Request, output *storagegateway.DescribeUploadBufferOutput) {
	c.inc("DescribeUploadBuffer")
	return c.svc.DescribeUploadBufferRequest(input)
}

// DescribeUploadBuffer is a passthrough to the underlying DescribeUploadBuffer method.
// It will increment the count of requests made to DescribeUploadBuffer.
func (c *StorageGateway) DescribeUploadBuffer(input *storagegateway.DescribeUploadBufferInput) (*storagegateway.DescribeUploadBufferOutput, error) {
	c.inc("DescribeUploadBuffer")
	return c.svc.DescribeUploadBuffer(input)
}

// DescribeUploadBufferWithContext is a passthrough to the underlying DescribeUploadBufferWithContext method.
// It will increment the count of requests made to DescribeUploadBuffer.
func (c *StorageGateway) DescribeUploadBufferWithContext(ctx aws.Context, input *storagegateway.DescribeUploadBufferInput, opts ...request.Option) (*storagegateway.DescribeUploadBufferOutput, error) {
	c.inc("DescribeUploadBuffer")
	return c.svc.DescribeUploadBufferWithContext(ctx, input, opts...)
}

// DescribeVTLDevicesRequest is a passthrough to the underlying DescribeVTLDevicesRequest.
// It will increment the count of requests made to DescribeVTLDevices.
func (c *StorageGateway) DescribeVTLDevicesRequest(input *storagegateway.DescribeVTLDevicesInput) (req *request.Request, output *storagegateway.DescribeVTLDevicesOutput) {
	c.inc("DescribeVTLDevices")
	return c.svc.DescribeVTLDevicesRequest(input)
}

// DescribeVTLDevices is a passthrough to the underlying DescribeVTLDevices method.
// It will increment the count of requests made to DescribeVTLDevices.
func (c *StorageGateway) DescribeVTLDevices(input *storagegateway.DescribeVTLDevicesInput) (*storagegateway.DescribeVTLDevicesOutput, error) {
	c.inc("DescribeVTLDevices")
	return c.svc.DescribeVTLDevices(input)
}

// DescribeVTLDevicesWithContext is a passthrough to the underlying DescribeVTLDevicesWithContext method.
// It will increment the count of requests made to DescribeVTLDevices.
func (c *StorageGateway) DescribeVTLDevicesWithContext(ctx aws.Context, input *storagegateway.DescribeVTLDevicesInput, opts ...request.Option) (*storagegateway.DescribeVTLDevicesOutput, error) {
	c.inc("DescribeVTLDevices")
	return c.svc.DescribeVTLDevicesWithContext(ctx, input, opts...)
}

// DescribeVTLDevicesPages is a passthrough to the underlying DescribeVTLDevicesPages method.
// It will increment the count of requests made to DescribeVTLDevices on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use DescribeVTLDevicesPagesWithContext to avoid this.
func (c *StorageGateway) DescribeVTLDevicesPages(input *storagegateway.DescribeVTLDevicesInput, fn func(*storagegateway.DescribeVTLDevicesOutput, bool) bool) error {
	wrappedFn := func(page *storagegateway.DescribeVTLDevicesOutput, lastPage bool) bool {
		c.inc("DescribeVTLDevices")
		return fn(page, lastPage)
	}
	return c.svc.DescribeVTLDevicesPages(input, wrappedFn)
}

// DescribeVTLDevicesPagesWithContext is a passthrough to the underlying DescribeVTLDevicesPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to DescribeVTLDevices when applied to the request.
func (c *StorageGateway) DescribeVTLDevicesPagesWithContext(ctx aws.Context, input *storagegateway.DescribeVTLDevicesInput, fn func(*storagegateway.DescribeVTLDevicesOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("DescribeVTLDevices"))
	return c.svc.DescribeVTLDevicesPagesWithContext(ctx, input, fn, opts...)
}

// DescribeWorkingStorageRequest is a passthrough to the underlying DescribeWorkingStorageRequest.
// It will increment the count of requests made to DescribeWorkingStorage.
func (c *StorageGateway) DescribeWorkingStorageRequest(input *storagegateway.DescribeWorkingStorageInput) (req *request.Request, output *storagegateway.DescribeWorkingStorageOutput) {
	c.inc("DescribeWorkingStorage")
	return c.svc.DescribeWorkingStorageRequest(input)
}

// DescribeWorkingStorage is a passthrough to the underlying DescribeWorkingStorage method.
// It will increment the count of requests made to DescribeWorkingStorage.
func (c *StorageGateway) DescribeWorkingStorage(input *storagegateway.DescribeWorkingStorageInput) (*storagegateway.DescribeWorkingStorageOutput, error) {
	c.inc("DescribeWorkingStorage")
	return c.svc.DescribeWorkingStorage(input)
}

// DescribeWorkingStorageWithContext is a passthrough to the underlying DescribeWorkingStorageWithContext method.
// It will increment the count of requests made to DescribeWorkingStorage.
func (c *StorageGateway) DescribeWorkingStorageWithContext(ctx aws.Context, input *storagegateway.DescribeWorkingStorageInput, opts ...request.Option) (*storagegateway.DescribeWorkingStorageOutput, error) {
	c.inc("DescribeWorkingStorage")
	return c.svc.DescribeWorkingStorageWithContext(ctx, input, opts...)
}

// DisableGatewayRequest is a passthrough to the underlying DisableGatewayRequest.
// It will increment the count of requests made to DisableGateway.
func (c *StorageGateway) DisableGatewayRequest(input *storagegateway.DisableGatewayInput) (req *request.Request, output *storagegateway.DisableGatewayOutput) {
	c.inc("DisableGateway")
	return c.svc.DisableGatewayRequest(input)
}

// DisableGateway is a passthrough to the underlying DisableGateway method.
// It will increment the count of requests made to DisableGateway.
func (c *StorageGateway) DisableGateway(input *storagegateway.DisableGatewayInput) (*storagegateway.DisableGatewayOutput, error) {
	c.inc("DisableGateway")
	return c.svc.DisableGateway(input)
}

// DisableGatewayWithContext is a passthrough to the underlying DisableGatewayWithContext method.
// It will increment the count of requests made to DisableGateway.
func (c *StorageGateway) DisableGatewayWithContext(ctx aws.Context, input *storagegateway.DisableGatewayInput, opts ...request.Option) (*storagegateway.DisableGatewayOutput, error) {
	c.inc("DisableGateway")
	return c.svc.DisableGatewayWithContext(ctx, input, opts...)
}

// ListFileSharesRequest is a passthrough to the underlying ListFileSharesRequest.
// It will increment the count of requests made to ListFileShares.
func (c *StorageGateway) ListFileSharesRequest(input *storagegateway.ListFileSharesInput) (req *request.Request, output *storagegateway.ListFileSharesOutput) {
	c.inc("ListFileShares")
	return c.svc.ListFileSharesRequest(input)
}

// ListFileShares is a passthrough to the underlying ListFileShares method.
// It will increment the count of requests made to ListFileShares.
func (c *StorageGateway) ListFileShares(input *storagegateway.ListFileSharesInput) (*storagegateway.ListFileSharesOutput, error) {
	c.inc("ListFileShares")
	return c.svc.ListFileShares(input)
}

// ListFileSharesWithContext is a passthrough to the underlying ListFileSharesWithContext method.
// It will increment the count of requests made to ListFileShares.
func (c *StorageGateway) ListFileSharesWithContext(ctx aws.Context, input *storagegateway.ListFileSharesInput, opts ...request.Option) (*storagegateway.ListFileSharesOutput, error) {
	c.inc("ListFileShares")
	return c.svc.ListFileSharesWithContext(ctx, input, opts...)
}

// ListGatewaysRequest is a passthrough to the underlying ListGatewaysRequest.
// It will increment the count of requests made to ListGateways.
func (c *StorageGateway) ListGatewaysRequest(input *storagegateway.ListGatewaysInput) (req *request.Request, output *storagegateway.ListGatewaysOutput) {
	c.inc("ListGateways")
	return c.svc.ListGatewaysRequest(input)
}

// ListGateways is a passthrough to the underlying ListGateways method.
// It will increment the count of requests made to ListGateways.
func (c *StorageGateway) ListGateways(input *storagegateway.ListGatewaysInput) (*storagegateway.ListGatewaysOutput, error) {
	c.inc("ListGateways")
	return c.svc.ListGateways(input)
}

// ListGatewaysWithContext is a passthrough to the underlying ListGatewaysWithContext method.
// It will increment the count of requests made to ListGateways.
func (c *StorageGateway) ListGatewaysWithContext(ctx aws.Context, input *storagegateway.ListGatewaysInput, opts ...request.Option) (*storagegateway.ListGatewaysOutput, error) {
	c.inc("ListGateways")
	return c.svc.ListGatewaysWithContext(ctx, input, opts...)
}

// ListGatewaysPages is a passthrough to the underlying ListGatewaysPages method.
// It will increment the count of requests made to ListGateways on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListGatewaysPagesWithContext to avoid this.
func (c *StorageGateway) ListGatewaysPages(input *storagegateway.ListGatewaysInput, fn func(*storagegateway.ListGatewaysOutput, bool) bool) error {
	wrappedFn := func(page *storagegateway.ListGatewaysOutput, lastPage bool) bool {
		c.inc("ListGateways")
		return fn(page, lastPage)
	}
	return c.svc.ListGatewaysPages(input, wrappedFn)
}

// ListGatewaysPagesWithContext is a passthrough to the underlying ListGatewaysPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListGateways when applied to the request.
func (c *StorageGateway) ListGatewaysPagesWithContext(ctx aws.Context, input *storagegateway.ListGatewaysInput, fn func(*storagegateway.ListGatewaysOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListGateways"))
	return c.svc.ListGatewaysPagesWithContext(ctx, input, fn, opts...)
}

// ListLocalDisksRequest is a passthrough to the underlying ListLocalDisksRequest.
// It will increment the count of requests made to ListLocalDisks.
func (c *StorageGateway) ListLocalDisksRequest(input *storagegateway.ListLocalDisksInput) (req *request.Request, output *storagegateway.ListLocalDisksOutput) {
	c.inc("ListLocalDisks")
	return c.svc.ListLocalDisksRequest(input)
}

// ListLocalDisks is a passthrough to the underlying ListLocalDisks method.
// It will increment the count of requests made to ListLocalDisks.
func (c *StorageGateway) ListLocalDisks(input *storagegateway.ListLocalDisksInput) (*storagegateway.ListLocalDisksOutput, error) {
	c.inc("ListLocalDisks")
	return c.svc.ListLocalDisks(input)
}

// ListLocalDisksWithContext is a passthrough to the underlying ListLocalDisksWithContext method.
// It will increment the count of requests made to ListLocalDisks.
func (c *StorageGateway) ListLocalDisksWithContext(ctx aws.Context, input *storagegateway.ListLocalDisksInput, opts ...request.Option) (*storagegateway.ListLocalDisksOutput, error) {
	c.inc("ListLocalDisks")
	return c.svc.ListLocalDisksWithContext(ctx, input, opts...)
}

// ListTagsForResourceRequest is a passthrough to the underlying ListTagsForResourceRequest.
// It will increment the count of requests made to ListTagsForResource.
func (c *StorageGateway) ListTagsForResourceRequest(input *storagegateway.ListTagsForResourceInput) (req *request.Request, output *storagegateway.ListTagsForResourceOutput) {
	c.inc("ListTagsForResource")
	return c.svc.ListTagsForResourceRequest(input)
}

// ListTagsForResource is a passthrough to the underlying ListTagsForResource method.
// It will increment the count of requests made to ListTagsForResource.
func (c *StorageGateway) ListTagsForResource(input *storagegateway.ListTagsForResourceInput) (*storagegateway.ListTagsForResourceOutput, error) {
	c.inc("ListTagsForResource")
	return c.svc.ListTagsForResource(input)
}

// ListTagsForResourceWithContext is a passthrough to the underlying ListTagsForResourceWithContext method.
// It will increment the count of requests made to ListTagsForResource.
func (c *StorageGateway) ListTagsForResourceWithContext(ctx aws.Context, input *storagegateway.ListTagsForResourceInput, opts ...request.Option) (*storagegateway.ListTagsForResourceOutput, error) {
	c.inc("ListTagsForResource")
	return c.svc.ListTagsForResourceWithContext(ctx, input, opts...)
}

// ListTapesRequest is a passthrough to the underlying ListTapesRequest.
// It will increment the count of requests made to ListTapes.
func (c *StorageGateway) ListTapesRequest(input *storagegateway.ListTapesInput) (req *request.Request, output *storagegateway.ListTapesOutput) {
	c.inc("ListTapes")
	return c.svc.ListTapesRequest(input)
}

// ListTapes is a passthrough to the underlying ListTapes method.
// It will increment the count of requests made to ListTapes.
func (c *StorageGateway) ListTapes(input *storagegateway.ListTapesInput) (*storagegateway.ListTapesOutput, error) {
	c.inc("ListTapes")
	return c.svc.ListTapes(input)
}

// ListTapesWithContext is a passthrough to the underlying ListTapesWithContext method.
// It will increment the count of requests made to ListTapes.
func (c *StorageGateway) ListTapesWithContext(ctx aws.Context, input *storagegateway.ListTapesInput, opts ...request.Option) (*storagegateway.ListTapesOutput, error) {
	c.inc("ListTapes")
	return c.svc.ListTapesWithContext(ctx, input, opts...)
}

// ListVolumeInitiatorsRequest is a passthrough to the underlying ListVolumeInitiatorsRequest.
// It will increment the count of requests made to ListVolumeInitiators.
func (c *StorageGateway) ListVolumeInitiatorsRequest(input *storagegateway.ListVolumeInitiatorsInput) (req *request.Request, output *storagegateway.ListVolumeInitiatorsOutput) {
	c.inc("ListVolumeInitiators")
	return c.svc.ListVolumeInitiatorsRequest(input)
}

// ListVolumeInitiators is a passthrough to the underlying ListVolumeInitiators method.
// It will increment the count of requests made to ListVolumeInitiators.
func (c *StorageGateway) ListVolumeInitiators(input *storagegateway.ListVolumeInitiatorsInput) (*storagegateway.ListVolumeInitiatorsOutput, error) {
	c.inc("ListVolumeInitiators")
	return c.svc.ListVolumeInitiators(input)
}

// ListVolumeInitiatorsWithContext is a passthrough to the underlying ListVolumeInitiatorsWithContext method.
// It will increment the count of requests made to ListVolumeInitiators.
func (c *StorageGateway) ListVolumeInitiatorsWithContext(ctx aws.Context, input *storagegateway.ListVolumeInitiatorsInput, opts ...request.Option) (*storagegateway.ListVolumeInitiatorsOutput, error) {
	c.inc("ListVolumeInitiators")
	return c.svc.ListVolumeInitiatorsWithContext(ctx, input, opts...)
}

// ListVolumeRecoveryPointsRequest is a passthrough to the underlying ListVolumeRecoveryPointsRequest.
// It will increment the count of requests made to ListVolumeRecoveryPoints.
func (c *StorageGateway) ListVolumeRecoveryPointsRequest(input *storagegateway.ListVolumeRecoveryPointsInput) (req *request.Request, output *storagegateway.ListVolumeRecoveryPointsOutput) {
	c.inc("ListVolumeRecoveryPoints")
	return c.svc.ListVolumeRecoveryPointsRequest(input)
}

// ListVolumeRecoveryPoints is a passthrough to the underlying ListVolumeRecoveryPoints method.
// It will increment the count of requests made to ListVolumeRecoveryPoints.
func (c *StorageGateway) ListVolumeRecoveryPoints(input *storagegateway.ListVolumeRecoveryPointsInput) (*storagegateway.ListVolumeRecoveryPointsOutput, error) {
	c.inc("ListVolumeRecoveryPoints")
	return c.svc.ListVolumeRecoveryPoints(input)
}

// ListVolumeRecoveryPointsWithContext is a passthrough to the underlying ListVolumeRecoveryPointsWithContext method.
// It will increment the count of requests made to ListVolumeRecoveryPoints.
func (c *StorageGateway) ListVolumeRecoveryPointsWithContext(ctx aws.Context, input *storagegateway.ListVolumeRecoveryPointsInput, opts ...request.Option) (*storagegateway.ListVolumeRecoveryPointsOutput, error) {
	c.inc("ListVolumeRecoveryPoints")
	return c.svc.ListVolumeRecoveryPointsWithContext(ctx, input, opts...)
}

// ListVolumesRequest is a passthrough to the underlying ListVolumesRequest.
// It will increment the count of requests made to ListVolumes.
func (c *StorageGateway) ListVolumesRequest(input *storagegateway.ListVolumesInput) (req *request.Request, output *storagegateway.ListVolumesOutput) {
	c.inc("ListVolumes")
	return c.svc.ListVolumesRequest(input)
}

// ListVolumes is a passthrough to the underlying ListVolumes method.
// It will increment the count of requests made to ListVolumes.
func (c *StorageGateway) ListVolumes(input *storagegateway.ListVolumesInput) (*storagegateway.ListVolumesOutput, error) {
	c.inc("ListVolumes")
	return c.svc.ListVolumes(input)
}

// ListVolumesWithContext is a passthrough to the underlying ListVolumesWithContext method.
// It will increment the count of requests made to ListVolumes.
func (c *StorageGateway) ListVolumesWithContext(ctx aws.Context, input *storagegateway.ListVolumesInput, opts ...request.Option) (*storagegateway.ListVolumesOutput, error) {
	c.inc("ListVolumes")
	return c.svc.ListVolumesWithContext(ctx, input, opts...)
}

// ListVolumesPages is a passthrough to the underlying ListVolumesPages method.
// It will increment the count of requests made to ListVolumes on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use ListVolumesPagesWithContext to avoid this.
func (c *StorageGateway) ListVolumesPages(input *storagegateway.ListVolumesInput, fn func(*storagegateway.ListVolumesOutput, bool) bool) error {
	wrappedFn := func(page *storagegateway.ListVolumesOutput, lastPage bool) bool {
		c.inc("ListVolumes")
		return fn(page, lastPage)
	}
	return c.svc.ListVolumesPages(input, wrappedFn)
}

// ListVolumesPagesWithContext is a passthrough to the underlying ListVolumesPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to ListVolumes when applied to the request.
func (c *StorageGateway) ListVolumesPagesWithContext(ctx aws.Context, input *storagegateway.ListVolumesInput, fn func(*storagegateway.ListVolumesOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("ListVolumes"))
	return c.svc.ListVolumesPagesWithContext(ctx, input, fn, opts...)
}

// NotifyWhenUploadedRequest is a passthrough to the underlying NotifyWhenUploadedRequest.
// It will increment the count of requests made to NotifyWhenUploaded.
func (c *StorageGateway) NotifyWhenUploadedRequest(input *storagegateway.NotifyWhenUploadedInput) (req *request.Request, output *storagegateway.NotifyWhenUploadedOutput) {
	c.inc("NotifyWhenUploaded")
	return c.svc.NotifyWhenUploadedRequest(input)
}

// NotifyWhenUploaded is a passthrough to the underlying NotifyWhenUploaded method.
// It will increment the count of requests made to NotifyWhenUploaded.
func (c *StorageGateway) NotifyWhenUploaded(input *storagegateway.NotifyWhenUploadedInput) (*storagegateway.NotifyWhenUploadedOutput, error) {
	c.inc("NotifyWhenUploaded")
	return c.svc.NotifyWhenUploaded(input)
}

// NotifyWhenUploadedWithContext is a passthrough to the underlying NotifyWhenUploadedWithContext method.
// It will increment the count of requests made to NotifyWhenUploaded.
func (c *StorageGateway) NotifyWhenUploadedWithContext(ctx aws.Context, input *storagegateway.NotifyWhenUploadedInput, opts ...request.Option) (*storagegateway.NotifyWhenUploadedOutput, error) {
	c.inc("NotifyWhenUploaded")
	return c.svc.NotifyWhenUploadedWithContext(ctx, input, opts...)
}

// RefreshCacheRequest is a passthrough to the underlying RefreshCacheRequest.
// It will increment the count of requests made to RefreshCache.
func (c *StorageGateway) RefreshCacheRequest(input *storagegateway.RefreshCacheInput) (req *request.Request, output *storagegateway.RefreshCacheOutput) {
	c.inc("RefreshCache")
	return c.svc.RefreshCacheRequest(input)
}

// RefreshCache is a passthrough to the underlying RefreshCache method.
// It will increment the count of requests made to RefreshCache.
func (c *StorageGateway) RefreshCache(input *storagegateway.RefreshCacheInput) (*storagegateway.RefreshCacheOutput, error) {
	c.inc("RefreshCache")
	return c.svc.RefreshCache(input)
}

// RefreshCacheWithContext is a passthrough to the underlying RefreshCacheWithContext method.
// It will increment the count of requests made to RefreshCache.
func (c *StorageGateway) RefreshCacheWithContext(ctx aws.Context, input *storagegateway.RefreshCacheInput, opts ...request.Option) (*storagegateway.RefreshCacheOutput, error) {
	c.inc("RefreshCache")
	return c.svc.RefreshCacheWithContext(ctx, input, opts...)
}

// RemoveTagsFromResourceRequest is a passthrough to the underlying RemoveTagsFromResourceRequest.
// It will increment the count of requests made to RemoveTagsFromResource.
func (c *StorageGateway) RemoveTagsFromResourceRequest(input *storagegateway.RemoveTagsFromResourceInput) (req *request.Request, output *storagegateway.RemoveTagsFromResourceOutput) {
	c.inc("RemoveTagsFromResource")
	return c.svc.RemoveTagsFromResourceRequest(input)
}

// RemoveTagsFromResource is a passthrough to the underlying RemoveTagsFromResource method.
// It will increment the count of requests made to RemoveTagsFromResource.
func (c *StorageGateway) RemoveTagsFromResource(input *storagegateway.RemoveTagsFromResourceInput) (*storagegateway.RemoveTagsFromResourceOutput, error) {
	c.inc("RemoveTagsFromResource")
	return c.svc.RemoveTagsFromResource(input)
}

// RemoveTagsFromResourceWithContext is a passthrough to the underlying RemoveTagsFromResourceWithContext method.
// It will increment the count of requests made to RemoveTagsFromResource.
func (c *StorageGateway) RemoveTagsFromResourceWithContext(ctx aws.Context, input *storagegateway.RemoveTagsFromResourceInput, opts ...request.Option) (*storagegateway.RemoveTagsFromResourceOutput, error) {
	c.inc("RemoveTagsFromResource")
	return c.svc.RemoveTagsFromResourceWithContext(ctx, input, opts...)
}

// ResetCacheRequest is a passthrough to the underlying ResetCacheRequest.
// It will increment the count of requests made to ResetCache.
func (c *StorageGateway) ResetCacheRequest(input *storagegateway.ResetCacheInput) (req *request.Request, output *storagegateway.ResetCacheOutput) {
	c.inc("ResetCache")
	return c.svc.ResetCacheRequest(input)
}

// ResetCache is a passthrough to the underlying ResetCache method.
// It will increment the count of requests made to ResetCache.
func (c *StorageGateway) ResetCache(input *storagegateway.ResetCacheInput) (*storagegateway.ResetCacheOutput, error) {
	c.inc("ResetCache")
	return c.svc.ResetCache(input)
}

// ResetCacheWithContext is a passthrough to the underlying ResetCacheWithContext method.
// It will increment the count of requests made to ResetCache.
func (c *StorageGateway) ResetCacheWithContext(ctx aws.Context, input *storagegateway.ResetCacheInput, opts ...request.Option) (*storagegateway.ResetCacheOutput, error) {
	c.inc("ResetCache")
	return c.svc.ResetCacheWithContext(ctx, input, opts...)
}

// RetrieveTapeArchiveRequest is a passthrough to the underlying RetrieveTapeArchiveRequest.
// It will increment the count of requests made to RetrieveTapeArchive.
func (c *StorageGateway) RetrieveTapeArchiveRequest(input *storagegateway.RetrieveTapeArchiveInput) (req *request.Request, output *storagegateway.RetrieveTapeArchiveOutput) {
	c.inc("RetrieveTapeArchive")
	return c.svc.RetrieveTapeArchiveRequest(input)
}

// RetrieveTapeArchive is a passthrough to the underlying RetrieveTapeArchive method.
// It will increment the count of requests made to RetrieveTapeArchive.
func (c *StorageGateway) RetrieveTapeArchive(input *storagegateway.RetrieveTapeArchiveInput) (*storagegateway.RetrieveTapeArchiveOutput, error) {
	c.inc("RetrieveTapeArchive")
	return c.svc.RetrieveTapeArchive(input)
}

// RetrieveTapeArchiveWithContext is a passthrough to the underlying RetrieveTapeArchiveWithContext method.
// It will increment the count of requests made to RetrieveTapeArchive.
func (c *StorageGateway) RetrieveTapeArchiveWithContext(ctx aws.Context, input *storagegateway.RetrieveTapeArchiveInput, opts ...request.Option) (*storagegateway.RetrieveTapeArchiveOutput, error) {
	c.inc("RetrieveTapeArchive")
	return c.svc.RetrieveTapeArchiveWithContext(ctx, input, opts...)
}

// RetrieveTapeRecoveryPointRequest is a passthrough to the underlying RetrieveTapeRecoveryPointRequest.
// It will increment the count of requests made to RetrieveTapeRecoveryPoint.
func (c *StorageGateway) RetrieveTapeRecoveryPointRequest(input *storagegateway.RetrieveTapeRecoveryPointInput) (req *request.Request, output *storagegateway.RetrieveTapeRecoveryPointOutput) {
	c.inc("RetrieveTapeRecoveryPoint")
	return c.svc.RetrieveTapeRecoveryPointRequest(input)
}

// RetrieveTapeRecoveryPoint is a passthrough to the underlying RetrieveTapeRecoveryPoint method.
// It will increment the count of requests made to RetrieveTapeRecoveryPoint.
func (c *StorageGateway) RetrieveTapeRecoveryPoint(input *storagegateway.RetrieveTapeRecoveryPointInput) (*storagegateway.RetrieveTapeRecoveryPointOutput, error) {
	c.inc("RetrieveTapeRecoveryPoint")
	return c.svc.RetrieveTapeRecoveryPoint(input)
}

// RetrieveTapeRecoveryPointWithContext is a passthrough to the underlying RetrieveTapeRecoveryPointWithContext method.
// It will increment the count of requests made to RetrieveTapeRecoveryPoint.
func (c *StorageGateway) RetrieveTapeRecoveryPointWithContext(ctx aws.Context, input *storagegateway.RetrieveTapeRecoveryPointInput, opts ...request.Option) (*storagegateway.RetrieveTapeRecoveryPointOutput, error) {
	c.inc("RetrieveTapeRecoveryPoint")
	return c.svc.RetrieveTapeRecoveryPointWithContext(ctx, input, opts...)
}

// SetLocalConsolePasswordRequest is a passthrough to the underlying SetLocalConsolePasswordRequest.
// It will increment the count of requests made to SetLocalConsolePassword.
func (c *StorageGateway) SetLocalConsolePasswordRequest(input *storagegateway.SetLocalConsolePasswordInput) (req *request.Request, output *storagegateway.SetLocalConsolePasswordOutput) {
	c.inc("SetLocalConsolePassword")
	return c.svc.SetLocalConsolePasswordRequest(input)
}

// SetLocalConsolePassword is a passthrough to the underlying SetLocalConsolePassword method.
// It will increment the count of requests made to SetLocalConsolePassword.
func (c *StorageGateway) SetLocalConsolePassword(input *storagegateway.SetLocalConsolePasswordInput) (*storagegateway.SetLocalConsolePasswordOutput, error) {
	c.inc("SetLocalConsolePassword")
	return c.svc.SetLocalConsolePassword(input)
}

// SetLocalConsolePasswordWithContext is a passthrough to the underlying SetLocalConsolePasswordWithContext method.
// It will increment the count of requests made to SetLocalConsolePassword.
func (c *StorageGateway) SetLocalConsolePasswordWithContext(ctx aws.Context, input *storagegateway.SetLocalConsolePasswordInput, opts ...request.Option) (*storagegateway.SetLocalConsolePasswordOutput, error) {
	c.inc("SetLocalConsolePassword")
	return c.svc.SetLocalConsolePasswordWithContext(ctx, input, opts...)
}

// ShutdownGatewayRequest is a passthrough to the underlying ShutdownGatewayRequest.
// It will increment the count of requests made to ShutdownGateway.
func (c *StorageGateway) ShutdownGatewayRequest(input *storagegateway.ShutdownGatewayInput) (req *request.Request, output *storagegateway.ShutdownGatewayOutput) {
	c.inc("ShutdownGateway")
	return c.svc.ShutdownGatewayRequest(input)
}

// ShutdownGateway is a passthrough to the underlying ShutdownGateway method.
// It will increment the count of requests made to ShutdownGateway.
func (c *StorageGateway) ShutdownGateway(input *storagegateway.ShutdownGatewayInput) (*storagegateway.ShutdownGatewayOutput, error) {
	c.inc("ShutdownGateway")
	return c.svc.ShutdownGateway(input)
}

// ShutdownGatewayWithContext is a passthrough to the underlying ShutdownGatewayWithContext method.
// It will increment the count of requests made to ShutdownGateway.
func (c *StorageGateway) ShutdownGatewayWithContext(ctx aws.Context, input *storagegateway.ShutdownGatewayInput, opts ...request.Option) (*storagegateway.ShutdownGatewayOutput, error) {
	c.inc("ShutdownGateway")
	return c.svc.ShutdownGatewayWithContext(ctx, input, opts...)
}

// StartGatewayRequest is a passthrough to the underlying StartGatewayRequest.
// It will increment the count of requests made to StartGateway.
func (c *StorageGateway) StartGatewayRequest(input *storagegateway.StartGatewayInput) (req *request.Request, output *storagegateway.StartGatewayOutput) {
	c.inc("StartGateway")
	return c.svc.StartGatewayRequest(input)
}

// StartGateway is a passthrough to the underlying StartGateway method.
// It will increment the count of requests made to StartGateway.
func (c *StorageGateway) StartGateway(input *storagegateway.StartGatewayInput) (*storagegateway.StartGatewayOutput, error) {
	c.inc("StartGateway")
	return c.svc.StartGateway(input)
}

// StartGatewayWithContext is a passthrough to the underlying StartGatewayWithContext method.
// It will increment the count of requests made to StartGateway.
func (c *StorageGateway) StartGatewayWithContext(ctx aws.Context, input *storagegateway.StartGatewayInput, opts ...request.Option) (*storagegateway.StartGatewayOutput, error) {
	c.inc("StartGateway")
	return c.svc.StartGatewayWithContext(ctx, input, opts...)
}

// UpdateBandwidthRateLimitRequest is a passthrough to the underlying UpdateBandwidthRateLimitRequest.
// It will increment the count of requests made to UpdateBandwidthRateLimit.
func (c *StorageGateway) UpdateBandwidthRateLimitRequest(input *storagegateway.UpdateBandwidthRateLimitInput) (req *request.Request, output *storagegateway.UpdateBandwidthRateLimitOutput) {
	c.inc("UpdateBandwidthRateLimit")
	return c.svc.UpdateBandwidthRateLimitRequest(input)
}

// UpdateBandwidthRateLimit is a passthrough to the underlying UpdateBandwidthRateLimit method.
// It will increment the count of requests made to UpdateBandwidthRateLimit.
func (c *StorageGateway) UpdateBandwidthRateLimit(input *storagegateway.UpdateBandwidthRateLimitInput) (*storagegateway.UpdateBandwidthRateLimitOutput, error) {
	c.inc("UpdateBandwidthRateLimit")
	return c.svc.UpdateBandwidthRateLimit(input)
}

// UpdateBandwidthRateLimitWithContext is a passthrough to the underlying UpdateBandwidthRateLimitWithContext method.
// It will increment the count of requests made to UpdateBandwidthRateLimit.
func (c *StorageGateway) UpdateBandwidthRateLimitWithContext(ctx aws.Context, input *storagegateway.UpdateBandwidthRateLimitInput, opts ...request.Option) (*storagegateway.UpdateBandwidthRateLimitOutput, error) {
	c.inc("UpdateBandwidthRateLimit")
	return c.svc.UpdateBandwidthRateLimitWithContext(ctx, input, opts...)
}

// UpdateChapCredentialsRequest is a passthrough to the underlying UpdateChapCredentialsRequest.
// It will increment the count of requests made to UpdateChapCredentials.
func (c *StorageGateway) UpdateChapCredentialsRequest(input *storagegateway.UpdateChapCredentialsInput) (req *request.Request, output *storagegateway.UpdateChapCredentialsOutput) {
	c.inc("UpdateChapCredentials")
	return c.svc.UpdateChapCredentialsRequest(input)
}

// UpdateChapCredentials is a passthrough to the underlying UpdateChapCredentials method.
// It will increment the count of requests made to UpdateChapCredentials.
func (c *StorageGateway) UpdateChapCredentials(input *storagegateway.UpdateChapCredentialsInput) (*storagegateway.UpdateChapCredentialsOutput, error) {
	c.inc("UpdateChapCredentials")
	return c.svc.UpdateChapCredentials(input)
}

// UpdateChapCredentialsWithContext is a passthrough to the underlying UpdateChapCredentialsWithContext method.
// It will increment the count of requests made to UpdateChapCredentials.
func (c *StorageGateway) UpdateChapCredentialsWithContext(ctx aws.Context, input *storagegateway.UpdateChapCredentialsInput, opts ...request.Option) (*storagegateway.UpdateChapCredentialsOutput, error) {
	c.inc("UpdateChapCredentials")
	return c.svc.UpdateChapCredentialsWithContext(ctx, input, opts...)
}

// UpdateGatewayInformationRequest is a passthrough to the underlying UpdateGatewayInformationRequest.
// It will increment the count of requests made to UpdateGatewayInformation.
func (c *StorageGateway) UpdateGatewayInformationRequest(input *storagegateway.UpdateGatewayInformationInput) (req *request.Request, output *storagegateway.UpdateGatewayInformationOutput) {
	c.inc("UpdateGatewayInformation")
	return c.svc.UpdateGatewayInformationRequest(input)
}

// UpdateGatewayInformation is a passthrough to the underlying UpdateGatewayInformation method.
// It will increment the count of requests made to UpdateGatewayInformation.
func (c *StorageGateway) UpdateGatewayInformation(input *storagegateway.UpdateGatewayInformationInput) (*storagegateway.UpdateGatewayInformationOutput, error) {
	c.inc("UpdateGatewayInformation")
	return c.svc.UpdateGatewayInformation(input)
}

// UpdateGatewayInformationWithContext is a passthrough to the underlying UpdateGatewayInformationWithContext method.
// It will increment the count of requests made to UpdateGatewayInformation.
func (c *StorageGateway) UpdateGatewayInformationWithContext(ctx aws.Context, input *storagegateway.UpdateGatewayInformationInput, opts ...request.Option) (*storagegateway.UpdateGatewayInformationOutput, error) {
	c.inc("UpdateGatewayInformation")
	return c.svc.UpdateGatewayInformationWithContext(ctx, input, opts...)
}

// UpdateGatewaySoftwareNowRequest is a passthrough to the underlying UpdateGatewaySoftwareNowRequest.
// It will increment the count of requests made to UpdateGatewaySoftwareNow.
func (c *StorageGateway) UpdateGatewaySoftwareNowRequest(input *storagegateway.UpdateGatewaySoftwareNowInput) (req *request.Request, output *storagegateway.UpdateGatewaySoftwareNowOutput) {
	c.inc("UpdateGatewaySoftwareNow")
	return c.svc.UpdateGatewaySoftwareNowRequest(input)
}

// UpdateGatewaySoftwareNow is a passthrough to the underlying UpdateGatewaySoftwareNow method.
// It will increment the count of requests made to UpdateGatewaySoftwareNow.
func (c *StorageGateway) UpdateGatewaySoftwareNow(input *storagegateway.UpdateGatewaySoftwareNowInput) (*storagegateway.UpdateGatewaySoftwareNowOutput, error) {
	c.inc("UpdateGatewaySoftwareNow")
	return c.svc.UpdateGatewaySoftwareNow(input)
}

// UpdateGatewaySoftwareNowWithContext is a passthrough to the underlying UpdateGatewaySoftwareNowWithContext method.
// It will increment the count of requests made to UpdateGatewaySoftwareNow.
func (c *StorageGateway) UpdateGatewaySoftwareNowWithContext(ctx aws.Context, input *storagegateway.UpdateGatewaySoftwareNowInput, opts ...request.Option) (*storagegateway.UpdateGatewaySoftwareNowOutput, error) {
	c.inc("UpdateGatewaySoftwareNow")
	return c.svc.UpdateGatewaySoftwareNowWithContext(ctx, input, opts...)
}

// UpdateMaintenanceStartTimeRequest is a passthrough to the underlying UpdateMaintenanceStartTimeRequest.
// It will increment the count of requests made to UpdateMaintenanceStartTime.
func (c *StorageGateway) UpdateMaintenanceStartTimeRequest(input *storagegateway.UpdateMaintenanceStartTimeInput) (req *request.Request, output *storagegateway.UpdateMaintenanceStartTimeOutput) {
	c.inc("UpdateMaintenanceStartTime")
	return c.svc.UpdateMaintenanceStartTimeRequest(input)
}

// UpdateMaintenanceStartTime is a passthrough to the underlying UpdateMaintenanceStartTime method.
// It will increment the count of requests made to UpdateMaintenanceStartTime.
func (c *StorageGateway) UpdateMaintenanceStartTime(input *storagegateway.UpdateMaintenanceStartTimeInput) (*storagegateway.UpdateMaintenanceStartTimeOutput, error) {
	c.inc("UpdateMaintenanceStartTime")
	return c.svc.UpdateMaintenanceStartTime(input)
}

// UpdateMaintenanceStartTimeWithContext is a passthrough to the underlying UpdateMaintenanceStartTimeWithContext method.
// It will increment the count of requests made to UpdateMaintenanceStartTime.
func (c *StorageGateway) UpdateMaintenanceStartTimeWithContext(ctx aws.Context, input *storagegateway.UpdateMaintenanceStartTimeInput, opts ...request.Option) (*storagegateway.UpdateMaintenanceStartTimeOutput, error) {
	c.inc("UpdateMaintenanceStartTime")
	return c.svc.UpdateMaintenanceStartTimeWithContext(ctx, input, opts...)
}

// UpdateNFSFileShareRequest is a passthrough to the underlying UpdateNFSFileShareRequest.
// It will increment the count of requests made to UpdateNFSFileShare.
func (c *StorageGateway) UpdateNFSFileShareRequest(input *storagegateway.UpdateNFSFileShareInput) (req *request.Request, output *storagegateway.UpdateNFSFileShareOutput) {
	c.inc("UpdateNFSFileShare")
	return c.svc.UpdateNFSFileShareRequest(input)
}

// UpdateNFSFileShare is a passthrough to the underlying UpdateNFSFileShare method.
// It will increment the count of requests made to UpdateNFSFileShare.
func (c *StorageGateway) UpdateNFSFileShare(input *storagegateway.UpdateNFSFileShareInput) (*storagegateway.UpdateNFSFileShareOutput, error) {
	c.inc("UpdateNFSFileShare")
	return c.svc.UpdateNFSFileShare(input)
}

// UpdateNFSFileShareWithContext is a passthrough to the underlying UpdateNFSFileShareWithContext method.
// It will increment the count of requests made to UpdateNFSFileShare.
func (c *StorageGateway) UpdateNFSFileShareWithContext(ctx aws.Context, input *storagegateway.UpdateNFSFileShareInput, opts ...request.Option) (*storagegateway.UpdateNFSFileShareOutput, error) {
	c.inc("UpdateNFSFileShare")
	return c.svc.UpdateNFSFileShareWithContext(ctx, input, opts...)
}

// UpdateSnapshotScheduleRequest is a passthrough to the underlying UpdateSnapshotScheduleRequest.
// It will increment the count of requests made to UpdateSnapshotSchedule.
func (c *StorageGateway) UpdateSnapshotScheduleRequest(input *storagegateway.UpdateSnapshotScheduleInput) (req *request.Request, output *storagegateway.UpdateSnapshotScheduleOutput) {
	c.inc("UpdateSnapshotSchedule")
	return c.svc.UpdateSnapshotScheduleRequest(input)
}

// UpdateSnapshotSchedule is a passthrough to the underlying UpdateSnapshotSchedule method.
// It will increment the count of requests made to UpdateSnapshotSchedule.
func (c *StorageGateway) UpdateSnapshotSchedule(input *storagegateway.UpdateSnapshotScheduleInput) (*storagegateway.UpdateSnapshotScheduleOutput, error) {
	c.inc("UpdateSnapshotSchedule")
	return c.svc.UpdateSnapshotSchedule(input)
}

// UpdateSnapshotScheduleWithContext is a passthrough to the underlying UpdateSnapshotScheduleWithContext method.
// It will increment the count of requests made to UpdateSnapshotSchedule.
func (c *StorageGateway) UpdateSnapshotScheduleWithContext(ctx aws.Context, input *storagegateway.UpdateSnapshotScheduleInput, opts ...request.Option) (*storagegateway.UpdateSnapshotScheduleOutput, error) {
	c.inc("UpdateSnapshotSchedule")
	return c.svc.UpdateSnapshotScheduleWithContext(ctx, input, opts...)
}

// UpdateVTLDeviceTypeRequest is a passthrough to the underlying UpdateVTLDeviceTypeRequest.
// It will increment the count of requests made to UpdateVTLDeviceType.
func (c *StorageGateway) UpdateVTLDeviceTypeRequest(input *storagegateway.UpdateVTLDeviceTypeInput) (req *request.Request, output *storagegateway.UpdateVTLDeviceTypeOutput) {
	c.inc("UpdateVTLDeviceType")
	return c.svc.UpdateVTLDeviceTypeRequest(input)
}

// UpdateVTLDeviceType is a passthrough to the underlying UpdateVTLDeviceType method.
// It will increment the count of requests made to UpdateVTLDeviceType.
func (c *StorageGateway) UpdateVTLDeviceType(input *storagegateway.UpdateVTLDeviceTypeInput) (*storagegateway.UpdateVTLDeviceTypeOutput, error) {
	c.inc("UpdateVTLDeviceType")
	return c.svc.UpdateVTLDeviceType(input)
}

// UpdateVTLDeviceTypeWithContext is a passthrough to the underlying UpdateVTLDeviceTypeWithContext method.
// It will increment the count of requests made to UpdateVTLDeviceType.
func (c *StorageGateway) UpdateVTLDeviceTypeWithContext(ctx aws.Context, input *storagegateway.UpdateVTLDeviceTypeInput, opts ...request.Option) (*storagegateway.UpdateVTLDeviceTypeOutput, error) {
	c.inc("UpdateVTLDeviceType")
	return c.svc.UpdateVTLDeviceTypeWithContext(ctx, input, opts...)
}
