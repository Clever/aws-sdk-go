// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package cloudtrailcounter

import (
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/cloudtrail"
)

// AddTagsRequest is a passthrough to the underlying AddTagsRequest.
// It will increment the count of requests made to AddTags.
func (c *CloudTrail) AddTagsRequest(input *cloudtrail.AddTagsInput) (req *request.Request, output *cloudtrail.AddTagsOutput) {
	c.inc("AddTags")
	return c.svc.AddTagsRequest(input)
}

// AddTags is a passthrough to the underlying AddTags method.
// It will increment the count of requests made to AddTags.
func (c *CloudTrail) AddTags(input *cloudtrail.AddTagsInput) (*cloudtrail.AddTagsOutput, error) {
	c.inc("AddTags")
	return c.svc.AddTags(input)
}

// AddTagsWithContext is a passthrough to the underlying AddTagsWithContext method.
// It will increment the count of requests made to AddTags.
func (c *CloudTrail) AddTagsWithContext(ctx aws.Context, input *cloudtrail.AddTagsInput, opts ...request.Option) (*cloudtrail.AddTagsOutput, error) {
	c.inc("AddTags")
	return c.svc.AddTagsWithContext(ctx, input, opts...)
}

// CreateTrailRequest is a passthrough to the underlying CreateTrailRequest.
// It will increment the count of requests made to CreateTrail.
func (c *CloudTrail) CreateTrailRequest(input *cloudtrail.CreateTrailInput) (req *request.Request, output *cloudtrail.CreateTrailOutput) {
	c.inc("CreateTrail")
	return c.svc.CreateTrailRequest(input)
}

// CreateTrail is a passthrough to the underlying CreateTrail method.
// It will increment the count of requests made to CreateTrail.
func (c *CloudTrail) CreateTrail(input *cloudtrail.CreateTrailInput) (*cloudtrail.CreateTrailOutput, error) {
	c.inc("CreateTrail")
	return c.svc.CreateTrail(input)
}

// CreateTrailWithContext is a passthrough to the underlying CreateTrailWithContext method.
// It will increment the count of requests made to CreateTrail.
func (c *CloudTrail) CreateTrailWithContext(ctx aws.Context, input *cloudtrail.CreateTrailInput, opts ...request.Option) (*cloudtrail.CreateTrailOutput, error) {
	c.inc("CreateTrail")
	return c.svc.CreateTrailWithContext(ctx, input, opts...)
}

// DeleteTrailRequest is a passthrough to the underlying DeleteTrailRequest.
// It will increment the count of requests made to DeleteTrail.
func (c *CloudTrail) DeleteTrailRequest(input *cloudtrail.DeleteTrailInput) (req *request.Request, output *cloudtrail.DeleteTrailOutput) {
	c.inc("DeleteTrail")
	return c.svc.DeleteTrailRequest(input)
}

// DeleteTrail is a passthrough to the underlying DeleteTrail method.
// It will increment the count of requests made to DeleteTrail.
func (c *CloudTrail) DeleteTrail(input *cloudtrail.DeleteTrailInput) (*cloudtrail.DeleteTrailOutput, error) {
	c.inc("DeleteTrail")
	return c.svc.DeleteTrail(input)
}

// DeleteTrailWithContext is a passthrough to the underlying DeleteTrailWithContext method.
// It will increment the count of requests made to DeleteTrail.
func (c *CloudTrail) DeleteTrailWithContext(ctx aws.Context, input *cloudtrail.DeleteTrailInput, opts ...request.Option) (*cloudtrail.DeleteTrailOutput, error) {
	c.inc("DeleteTrail")
	return c.svc.DeleteTrailWithContext(ctx, input, opts...)
}

// DescribeTrailsRequest is a passthrough to the underlying DescribeTrailsRequest.
// It will increment the count of requests made to DescribeTrails.
func (c *CloudTrail) DescribeTrailsRequest(input *cloudtrail.DescribeTrailsInput) (req *request.Request, output *cloudtrail.DescribeTrailsOutput) {
	c.inc("DescribeTrails")
	return c.svc.DescribeTrailsRequest(input)
}

// DescribeTrails is a passthrough to the underlying DescribeTrails method.
// It will increment the count of requests made to DescribeTrails.
func (c *CloudTrail) DescribeTrails(input *cloudtrail.DescribeTrailsInput) (*cloudtrail.DescribeTrailsOutput, error) {
	c.inc("DescribeTrails")
	return c.svc.DescribeTrails(input)
}

// DescribeTrailsWithContext is a passthrough to the underlying DescribeTrailsWithContext method.
// It will increment the count of requests made to DescribeTrails.
func (c *CloudTrail) DescribeTrailsWithContext(ctx aws.Context, input *cloudtrail.DescribeTrailsInput, opts ...request.Option) (*cloudtrail.DescribeTrailsOutput, error) {
	c.inc("DescribeTrails")
	return c.svc.DescribeTrailsWithContext(ctx, input, opts...)
}

// GetEventSelectorsRequest is a passthrough to the underlying GetEventSelectorsRequest.
// It will increment the count of requests made to GetEventSelectors.
func (c *CloudTrail) GetEventSelectorsRequest(input *cloudtrail.GetEventSelectorsInput) (req *request.Request, output *cloudtrail.GetEventSelectorsOutput) {
	c.inc("GetEventSelectors")
	return c.svc.GetEventSelectorsRequest(input)
}

// GetEventSelectors is a passthrough to the underlying GetEventSelectors method.
// It will increment the count of requests made to GetEventSelectors.
func (c *CloudTrail) GetEventSelectors(input *cloudtrail.GetEventSelectorsInput) (*cloudtrail.GetEventSelectorsOutput, error) {
	c.inc("GetEventSelectors")
	return c.svc.GetEventSelectors(input)
}

// GetEventSelectorsWithContext is a passthrough to the underlying GetEventSelectorsWithContext method.
// It will increment the count of requests made to GetEventSelectors.
func (c *CloudTrail) GetEventSelectorsWithContext(ctx aws.Context, input *cloudtrail.GetEventSelectorsInput, opts ...request.Option) (*cloudtrail.GetEventSelectorsOutput, error) {
	c.inc("GetEventSelectors")
	return c.svc.GetEventSelectorsWithContext(ctx, input, opts...)
}

// GetTrailStatusRequest is a passthrough to the underlying GetTrailStatusRequest.
// It will increment the count of requests made to GetTrailStatus.
func (c *CloudTrail) GetTrailStatusRequest(input *cloudtrail.GetTrailStatusInput) (req *request.Request, output *cloudtrail.GetTrailStatusOutput) {
	c.inc("GetTrailStatus")
	return c.svc.GetTrailStatusRequest(input)
}

// GetTrailStatus is a passthrough to the underlying GetTrailStatus method.
// It will increment the count of requests made to GetTrailStatus.
func (c *CloudTrail) GetTrailStatus(input *cloudtrail.GetTrailStatusInput) (*cloudtrail.GetTrailStatusOutput, error) {
	c.inc("GetTrailStatus")
	return c.svc.GetTrailStatus(input)
}

// GetTrailStatusWithContext is a passthrough to the underlying GetTrailStatusWithContext method.
// It will increment the count of requests made to GetTrailStatus.
func (c *CloudTrail) GetTrailStatusWithContext(ctx aws.Context, input *cloudtrail.GetTrailStatusInput, opts ...request.Option) (*cloudtrail.GetTrailStatusOutput, error) {
	c.inc("GetTrailStatus")
	return c.svc.GetTrailStatusWithContext(ctx, input, opts...)
}

// ListPublicKeysRequest is a passthrough to the underlying ListPublicKeysRequest.
// It will increment the count of requests made to ListPublicKeys.
func (c *CloudTrail) ListPublicKeysRequest(input *cloudtrail.ListPublicKeysInput) (req *request.Request, output *cloudtrail.ListPublicKeysOutput) {
	c.inc("ListPublicKeys")
	return c.svc.ListPublicKeysRequest(input)
}

// ListPublicKeys is a passthrough to the underlying ListPublicKeys method.
// It will increment the count of requests made to ListPublicKeys.
func (c *CloudTrail) ListPublicKeys(input *cloudtrail.ListPublicKeysInput) (*cloudtrail.ListPublicKeysOutput, error) {
	c.inc("ListPublicKeys")
	return c.svc.ListPublicKeys(input)
}

// ListPublicKeysWithContext is a passthrough to the underlying ListPublicKeysWithContext method.
// It will increment the count of requests made to ListPublicKeys.
func (c *CloudTrail) ListPublicKeysWithContext(ctx aws.Context, input *cloudtrail.ListPublicKeysInput, opts ...request.Option) (*cloudtrail.ListPublicKeysOutput, error) {
	c.inc("ListPublicKeys")
	return c.svc.ListPublicKeysWithContext(ctx, input, opts...)
}

// ListTagsRequest is a passthrough to the underlying ListTagsRequest.
// It will increment the count of requests made to ListTags.
func (c *CloudTrail) ListTagsRequest(input *cloudtrail.ListTagsInput) (req *request.Request, output *cloudtrail.ListTagsOutput) {
	c.inc("ListTags")
	return c.svc.ListTagsRequest(input)
}

// ListTags is a passthrough to the underlying ListTags method.
// It will increment the count of requests made to ListTags.
func (c *CloudTrail) ListTags(input *cloudtrail.ListTagsInput) (*cloudtrail.ListTagsOutput, error) {
	c.inc("ListTags")
	return c.svc.ListTags(input)
}

// ListTagsWithContext is a passthrough to the underlying ListTagsWithContext method.
// It will increment the count of requests made to ListTags.
func (c *CloudTrail) ListTagsWithContext(ctx aws.Context, input *cloudtrail.ListTagsInput, opts ...request.Option) (*cloudtrail.ListTagsOutput, error) {
	c.inc("ListTags")
	return c.svc.ListTagsWithContext(ctx, input, opts...)
}

// LookupEventsRequest is a passthrough to the underlying LookupEventsRequest.
// It will increment the count of requests made to LookupEvents.
func (c *CloudTrail) LookupEventsRequest(input *cloudtrail.LookupEventsInput) (req *request.Request, output *cloudtrail.LookupEventsOutput) {
	c.inc("LookupEvents")
	return c.svc.LookupEventsRequest(input)
}

// LookupEvents is a passthrough to the underlying LookupEvents method.
// It will increment the count of requests made to LookupEvents.
func (c *CloudTrail) LookupEvents(input *cloudtrail.LookupEventsInput) (*cloudtrail.LookupEventsOutput, error) {
	c.inc("LookupEvents")
	return c.svc.LookupEvents(input)
}

// LookupEventsWithContext is a passthrough to the underlying LookupEventsWithContext method.
// It will increment the count of requests made to LookupEvents.
func (c *CloudTrail) LookupEventsWithContext(ctx aws.Context, input *cloudtrail.LookupEventsInput, opts ...request.Option) (*cloudtrail.LookupEventsOutput, error) {
	c.inc("LookupEvents")
	return c.svc.LookupEventsWithContext(ctx, input, opts...)
}

// LookupEventsPages is a passthrough to the underlying LookupEventsPages method.
// It will increment the count of requests made to LookupEvents on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use LookupEventsPagesWithContext to avoid this.
func (c *CloudTrail) LookupEventsPages(input *cloudtrail.LookupEventsInput, fn func(*cloudtrail.LookupEventsOutput, bool) bool) error {
	wrappedFn := func(page *cloudtrail.LookupEventsOutput, lastPage bool) bool {
		c.inc("LookupEvents")
		return fn(page, lastPage)
	}
	return c.svc.LookupEventsPages(input, wrappedFn)
}

// LookupEventsPagesWithContext is a passthrough to the underlying LookupEventsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to LookupEvents when applied to the request.
func (c *CloudTrail) LookupEventsPagesWithContext(ctx aws.Context, input *cloudtrail.LookupEventsInput, fn func(*cloudtrail.LookupEventsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("LookupEvents"))
	return c.svc.LookupEventsPagesWithContext(ctx, input, fn, opts...)
}

// PutEventSelectorsRequest is a passthrough to the underlying PutEventSelectorsRequest.
// It will increment the count of requests made to PutEventSelectors.
func (c *CloudTrail) PutEventSelectorsRequest(input *cloudtrail.PutEventSelectorsInput) (req *request.Request, output *cloudtrail.PutEventSelectorsOutput) {
	c.inc("PutEventSelectors")
	return c.svc.PutEventSelectorsRequest(input)
}

// PutEventSelectors is a passthrough to the underlying PutEventSelectors method.
// It will increment the count of requests made to PutEventSelectors.
func (c *CloudTrail) PutEventSelectors(input *cloudtrail.PutEventSelectorsInput) (*cloudtrail.PutEventSelectorsOutput, error) {
	c.inc("PutEventSelectors")
	return c.svc.PutEventSelectors(input)
}

// PutEventSelectorsWithContext is a passthrough to the underlying PutEventSelectorsWithContext method.
// It will increment the count of requests made to PutEventSelectors.
func (c *CloudTrail) PutEventSelectorsWithContext(ctx aws.Context, input *cloudtrail.PutEventSelectorsInput, opts ...request.Option) (*cloudtrail.PutEventSelectorsOutput, error) {
	c.inc("PutEventSelectors")
	return c.svc.PutEventSelectorsWithContext(ctx, input, opts...)
}

// RemoveTagsRequest is a passthrough to the underlying RemoveTagsRequest.
// It will increment the count of requests made to RemoveTags.
func (c *CloudTrail) RemoveTagsRequest(input *cloudtrail.RemoveTagsInput) (req *request.Request, output *cloudtrail.RemoveTagsOutput) {
	c.inc("RemoveTags")
	return c.svc.RemoveTagsRequest(input)
}

// RemoveTags is a passthrough to the underlying RemoveTags method.
// It will increment the count of requests made to RemoveTags.
func (c *CloudTrail) RemoveTags(input *cloudtrail.RemoveTagsInput) (*cloudtrail.RemoveTagsOutput, error) {
	c.inc("RemoveTags")
	return c.svc.RemoveTags(input)
}

// RemoveTagsWithContext is a passthrough to the underlying RemoveTagsWithContext method.
// It will increment the count of requests made to RemoveTags.
func (c *CloudTrail) RemoveTagsWithContext(ctx aws.Context, input *cloudtrail.RemoveTagsInput, opts ...request.Option) (*cloudtrail.RemoveTagsOutput, error) {
	c.inc("RemoveTags")
	return c.svc.RemoveTagsWithContext(ctx, input, opts...)
}

// StartLoggingRequest is a passthrough to the underlying StartLoggingRequest.
// It will increment the count of requests made to StartLogging.
func (c *CloudTrail) StartLoggingRequest(input *cloudtrail.StartLoggingInput) (req *request.Request, output *cloudtrail.StartLoggingOutput) {
	c.inc("StartLogging")
	return c.svc.StartLoggingRequest(input)
}

// StartLogging is a passthrough to the underlying StartLogging method.
// It will increment the count of requests made to StartLogging.
func (c *CloudTrail) StartLogging(input *cloudtrail.StartLoggingInput) (*cloudtrail.StartLoggingOutput, error) {
	c.inc("StartLogging")
	return c.svc.StartLogging(input)
}

// StartLoggingWithContext is a passthrough to the underlying StartLoggingWithContext method.
// It will increment the count of requests made to StartLogging.
func (c *CloudTrail) StartLoggingWithContext(ctx aws.Context, input *cloudtrail.StartLoggingInput, opts ...request.Option) (*cloudtrail.StartLoggingOutput, error) {
	c.inc("StartLogging")
	return c.svc.StartLoggingWithContext(ctx, input, opts...)
}

// StopLoggingRequest is a passthrough to the underlying StopLoggingRequest.
// It will increment the count of requests made to StopLogging.
func (c *CloudTrail) StopLoggingRequest(input *cloudtrail.StopLoggingInput) (req *request.Request, output *cloudtrail.StopLoggingOutput) {
	c.inc("StopLogging")
	return c.svc.StopLoggingRequest(input)
}

// StopLogging is a passthrough to the underlying StopLogging method.
// It will increment the count of requests made to StopLogging.
func (c *CloudTrail) StopLogging(input *cloudtrail.StopLoggingInput) (*cloudtrail.StopLoggingOutput, error) {
	c.inc("StopLogging")
	return c.svc.StopLogging(input)
}

// StopLoggingWithContext is a passthrough to the underlying StopLoggingWithContext method.
// It will increment the count of requests made to StopLogging.
func (c *CloudTrail) StopLoggingWithContext(ctx aws.Context, input *cloudtrail.StopLoggingInput, opts ...request.Option) (*cloudtrail.StopLoggingOutput, error) {
	c.inc("StopLogging")
	return c.svc.StopLoggingWithContext(ctx, input, opts...)
}

// UpdateTrailRequest is a passthrough to the underlying UpdateTrailRequest.
// It will increment the count of requests made to UpdateTrail.
func (c *CloudTrail) UpdateTrailRequest(input *cloudtrail.UpdateTrailInput) (req *request.Request, output *cloudtrail.UpdateTrailOutput) {
	c.inc("UpdateTrail")
	return c.svc.UpdateTrailRequest(input)
}

// UpdateTrail is a passthrough to the underlying UpdateTrail method.
// It will increment the count of requests made to UpdateTrail.
func (c *CloudTrail) UpdateTrail(input *cloudtrail.UpdateTrailInput) (*cloudtrail.UpdateTrailOutput, error) {
	c.inc("UpdateTrail")
	return c.svc.UpdateTrail(input)
}

// UpdateTrailWithContext is a passthrough to the underlying UpdateTrailWithContext method.
// It will increment the count of requests made to UpdateTrail.
func (c *CloudTrail) UpdateTrailWithContext(ctx aws.Context, input *cloudtrail.UpdateTrailInput, opts ...request.Option) (*cloudtrail.UpdateTrailOutput, error) {
	c.inc("UpdateTrail")
	return c.svc.UpdateTrailWithContext(ctx, input, opts...)
}
