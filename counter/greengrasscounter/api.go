// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package greengrasscounter

import (
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/greengrass"
)

// AssociateRoleToGroupRequest is a passthrough to the underlying AssociateRoleToGroupRequest.
// It will increment the count of requests made to AssociateRoleToGroup.
func (c *Greengrass) AssociateRoleToGroupRequest(input *greengrass.AssociateRoleToGroupInput) (req *request.Request, output *greengrass.AssociateRoleToGroupOutput) {
	c.inc("AssociateRoleToGroup")
	return c.svc.AssociateRoleToGroupRequest(input)
}

// AssociateRoleToGroup is a passthrough to the underlying AssociateRoleToGroup method.
// It will increment the count of requests made to AssociateRoleToGroup.
func (c *Greengrass) AssociateRoleToGroup(input *greengrass.AssociateRoleToGroupInput) (*greengrass.AssociateRoleToGroupOutput, error) {
	c.inc("AssociateRoleToGroup")
	return c.svc.AssociateRoleToGroup(input)
}

// AssociateRoleToGroupWithContext is a passthrough to the underlying AssociateRoleToGroupWithContext method.
// It will increment the count of requests made to AssociateRoleToGroup.
func (c *Greengrass) AssociateRoleToGroupWithContext(ctx aws.Context, input *greengrass.AssociateRoleToGroupInput, opts ...request.Option) (*greengrass.AssociateRoleToGroupOutput, error) {
	c.inc("AssociateRoleToGroup")
	return c.svc.AssociateRoleToGroupWithContext(ctx, input, opts...)
}

// AssociateServiceRoleToAccountRequest is a passthrough to the underlying AssociateServiceRoleToAccountRequest.
// It will increment the count of requests made to AssociateServiceRoleToAccount.
func (c *Greengrass) AssociateServiceRoleToAccountRequest(input *greengrass.AssociateServiceRoleToAccountInput) (req *request.Request, output *greengrass.AssociateServiceRoleToAccountOutput) {
	c.inc("AssociateServiceRoleToAccount")
	return c.svc.AssociateServiceRoleToAccountRequest(input)
}

// AssociateServiceRoleToAccount is a passthrough to the underlying AssociateServiceRoleToAccount method.
// It will increment the count of requests made to AssociateServiceRoleToAccount.
func (c *Greengrass) AssociateServiceRoleToAccount(input *greengrass.AssociateServiceRoleToAccountInput) (*greengrass.AssociateServiceRoleToAccountOutput, error) {
	c.inc("AssociateServiceRoleToAccount")
	return c.svc.AssociateServiceRoleToAccount(input)
}

// AssociateServiceRoleToAccountWithContext is a passthrough to the underlying AssociateServiceRoleToAccountWithContext method.
// It will increment the count of requests made to AssociateServiceRoleToAccount.
func (c *Greengrass) AssociateServiceRoleToAccountWithContext(ctx aws.Context, input *greengrass.AssociateServiceRoleToAccountInput, opts ...request.Option) (*greengrass.AssociateServiceRoleToAccountOutput, error) {
	c.inc("AssociateServiceRoleToAccount")
	return c.svc.AssociateServiceRoleToAccountWithContext(ctx, input, opts...)
}

// CreateCoreDefinitionRequest is a passthrough to the underlying CreateCoreDefinitionRequest.
// It will increment the count of requests made to CreateCoreDefinition.
func (c *Greengrass) CreateCoreDefinitionRequest(input *greengrass.CreateCoreDefinitionInput) (req *request.Request, output *greengrass.CreateCoreDefinitionOutput) {
	c.inc("CreateCoreDefinition")
	return c.svc.CreateCoreDefinitionRequest(input)
}

// CreateCoreDefinition is a passthrough to the underlying CreateCoreDefinition method.
// It will increment the count of requests made to CreateCoreDefinition.
func (c *Greengrass) CreateCoreDefinition(input *greengrass.CreateCoreDefinitionInput) (*greengrass.CreateCoreDefinitionOutput, error) {
	c.inc("CreateCoreDefinition")
	return c.svc.CreateCoreDefinition(input)
}

// CreateCoreDefinitionWithContext is a passthrough to the underlying CreateCoreDefinitionWithContext method.
// It will increment the count of requests made to CreateCoreDefinition.
func (c *Greengrass) CreateCoreDefinitionWithContext(ctx aws.Context, input *greengrass.CreateCoreDefinitionInput, opts ...request.Option) (*greengrass.CreateCoreDefinitionOutput, error) {
	c.inc("CreateCoreDefinition")
	return c.svc.CreateCoreDefinitionWithContext(ctx, input, opts...)
}

// CreateCoreDefinitionVersionRequest is a passthrough to the underlying CreateCoreDefinitionVersionRequest.
// It will increment the count of requests made to CreateCoreDefinitionVersion.
func (c *Greengrass) CreateCoreDefinitionVersionRequest(input *greengrass.CreateCoreDefinitionVersionInput) (req *request.Request, output *greengrass.CreateCoreDefinitionVersionOutput) {
	c.inc("CreateCoreDefinitionVersion")
	return c.svc.CreateCoreDefinitionVersionRequest(input)
}

// CreateCoreDefinitionVersion is a passthrough to the underlying CreateCoreDefinitionVersion method.
// It will increment the count of requests made to CreateCoreDefinitionVersion.
func (c *Greengrass) CreateCoreDefinitionVersion(input *greengrass.CreateCoreDefinitionVersionInput) (*greengrass.CreateCoreDefinitionVersionOutput, error) {
	c.inc("CreateCoreDefinitionVersion")
	return c.svc.CreateCoreDefinitionVersion(input)
}

// CreateCoreDefinitionVersionWithContext is a passthrough to the underlying CreateCoreDefinitionVersionWithContext method.
// It will increment the count of requests made to CreateCoreDefinitionVersion.
func (c *Greengrass) CreateCoreDefinitionVersionWithContext(ctx aws.Context, input *greengrass.CreateCoreDefinitionVersionInput, opts ...request.Option) (*greengrass.CreateCoreDefinitionVersionOutput, error) {
	c.inc("CreateCoreDefinitionVersion")
	return c.svc.CreateCoreDefinitionVersionWithContext(ctx, input, opts...)
}

// CreateDeploymentRequest is a passthrough to the underlying CreateDeploymentRequest.
// It will increment the count of requests made to CreateDeployment.
func (c *Greengrass) CreateDeploymentRequest(input *greengrass.CreateDeploymentInput) (req *request.Request, output *greengrass.CreateDeploymentOutput) {
	c.inc("CreateDeployment")
	return c.svc.CreateDeploymentRequest(input)
}

// CreateDeployment is a passthrough to the underlying CreateDeployment method.
// It will increment the count of requests made to CreateDeployment.
func (c *Greengrass) CreateDeployment(input *greengrass.CreateDeploymentInput) (*greengrass.CreateDeploymentOutput, error) {
	c.inc("CreateDeployment")
	return c.svc.CreateDeployment(input)
}

// CreateDeploymentWithContext is a passthrough to the underlying CreateDeploymentWithContext method.
// It will increment the count of requests made to CreateDeployment.
func (c *Greengrass) CreateDeploymentWithContext(ctx aws.Context, input *greengrass.CreateDeploymentInput, opts ...request.Option) (*greengrass.CreateDeploymentOutput, error) {
	c.inc("CreateDeployment")
	return c.svc.CreateDeploymentWithContext(ctx, input, opts...)
}

// CreateDeviceDefinitionRequest is a passthrough to the underlying CreateDeviceDefinitionRequest.
// It will increment the count of requests made to CreateDeviceDefinition.
func (c *Greengrass) CreateDeviceDefinitionRequest(input *greengrass.CreateDeviceDefinitionInput) (req *request.Request, output *greengrass.CreateDeviceDefinitionOutput) {
	c.inc("CreateDeviceDefinition")
	return c.svc.CreateDeviceDefinitionRequest(input)
}

// CreateDeviceDefinition is a passthrough to the underlying CreateDeviceDefinition method.
// It will increment the count of requests made to CreateDeviceDefinition.
func (c *Greengrass) CreateDeviceDefinition(input *greengrass.CreateDeviceDefinitionInput) (*greengrass.CreateDeviceDefinitionOutput, error) {
	c.inc("CreateDeviceDefinition")
	return c.svc.CreateDeviceDefinition(input)
}

// CreateDeviceDefinitionWithContext is a passthrough to the underlying CreateDeviceDefinitionWithContext method.
// It will increment the count of requests made to CreateDeviceDefinition.
func (c *Greengrass) CreateDeviceDefinitionWithContext(ctx aws.Context, input *greengrass.CreateDeviceDefinitionInput, opts ...request.Option) (*greengrass.CreateDeviceDefinitionOutput, error) {
	c.inc("CreateDeviceDefinition")
	return c.svc.CreateDeviceDefinitionWithContext(ctx, input, opts...)
}

// CreateDeviceDefinitionVersionRequest is a passthrough to the underlying CreateDeviceDefinitionVersionRequest.
// It will increment the count of requests made to CreateDeviceDefinitionVersion.
func (c *Greengrass) CreateDeviceDefinitionVersionRequest(input *greengrass.CreateDeviceDefinitionVersionInput) (req *request.Request, output *greengrass.CreateDeviceDefinitionVersionOutput) {
	c.inc("CreateDeviceDefinitionVersion")
	return c.svc.CreateDeviceDefinitionVersionRequest(input)
}

// CreateDeviceDefinitionVersion is a passthrough to the underlying CreateDeviceDefinitionVersion method.
// It will increment the count of requests made to CreateDeviceDefinitionVersion.
func (c *Greengrass) CreateDeviceDefinitionVersion(input *greengrass.CreateDeviceDefinitionVersionInput) (*greengrass.CreateDeviceDefinitionVersionOutput, error) {
	c.inc("CreateDeviceDefinitionVersion")
	return c.svc.CreateDeviceDefinitionVersion(input)
}

// CreateDeviceDefinitionVersionWithContext is a passthrough to the underlying CreateDeviceDefinitionVersionWithContext method.
// It will increment the count of requests made to CreateDeviceDefinitionVersion.
func (c *Greengrass) CreateDeviceDefinitionVersionWithContext(ctx aws.Context, input *greengrass.CreateDeviceDefinitionVersionInput, opts ...request.Option) (*greengrass.CreateDeviceDefinitionVersionOutput, error) {
	c.inc("CreateDeviceDefinitionVersion")
	return c.svc.CreateDeviceDefinitionVersionWithContext(ctx, input, opts...)
}

// CreateFunctionDefinitionRequest is a passthrough to the underlying CreateFunctionDefinitionRequest.
// It will increment the count of requests made to CreateFunctionDefinition.
func (c *Greengrass) CreateFunctionDefinitionRequest(input *greengrass.CreateFunctionDefinitionInput) (req *request.Request, output *greengrass.CreateFunctionDefinitionOutput) {
	c.inc("CreateFunctionDefinition")
	return c.svc.CreateFunctionDefinitionRequest(input)
}

// CreateFunctionDefinition is a passthrough to the underlying CreateFunctionDefinition method.
// It will increment the count of requests made to CreateFunctionDefinition.
func (c *Greengrass) CreateFunctionDefinition(input *greengrass.CreateFunctionDefinitionInput) (*greengrass.CreateFunctionDefinitionOutput, error) {
	c.inc("CreateFunctionDefinition")
	return c.svc.CreateFunctionDefinition(input)
}

// CreateFunctionDefinitionWithContext is a passthrough to the underlying CreateFunctionDefinitionWithContext method.
// It will increment the count of requests made to CreateFunctionDefinition.
func (c *Greengrass) CreateFunctionDefinitionWithContext(ctx aws.Context, input *greengrass.CreateFunctionDefinitionInput, opts ...request.Option) (*greengrass.CreateFunctionDefinitionOutput, error) {
	c.inc("CreateFunctionDefinition")
	return c.svc.CreateFunctionDefinitionWithContext(ctx, input, opts...)
}

// CreateFunctionDefinitionVersionRequest is a passthrough to the underlying CreateFunctionDefinitionVersionRequest.
// It will increment the count of requests made to CreateFunctionDefinitionVersion.
func (c *Greengrass) CreateFunctionDefinitionVersionRequest(input *greengrass.CreateFunctionDefinitionVersionInput) (req *request.Request, output *greengrass.CreateFunctionDefinitionVersionOutput) {
	c.inc("CreateFunctionDefinitionVersion")
	return c.svc.CreateFunctionDefinitionVersionRequest(input)
}

// CreateFunctionDefinitionVersion is a passthrough to the underlying CreateFunctionDefinitionVersion method.
// It will increment the count of requests made to CreateFunctionDefinitionVersion.
func (c *Greengrass) CreateFunctionDefinitionVersion(input *greengrass.CreateFunctionDefinitionVersionInput) (*greengrass.CreateFunctionDefinitionVersionOutput, error) {
	c.inc("CreateFunctionDefinitionVersion")
	return c.svc.CreateFunctionDefinitionVersion(input)
}

// CreateFunctionDefinitionVersionWithContext is a passthrough to the underlying CreateFunctionDefinitionVersionWithContext method.
// It will increment the count of requests made to CreateFunctionDefinitionVersion.
func (c *Greengrass) CreateFunctionDefinitionVersionWithContext(ctx aws.Context, input *greengrass.CreateFunctionDefinitionVersionInput, opts ...request.Option) (*greengrass.CreateFunctionDefinitionVersionOutput, error) {
	c.inc("CreateFunctionDefinitionVersion")
	return c.svc.CreateFunctionDefinitionVersionWithContext(ctx, input, opts...)
}

// CreateGroupRequest is a passthrough to the underlying CreateGroupRequest.
// It will increment the count of requests made to CreateGroup.
func (c *Greengrass) CreateGroupRequest(input *greengrass.CreateGroupInput) (req *request.Request, output *greengrass.CreateGroupOutput) {
	c.inc("CreateGroup")
	return c.svc.CreateGroupRequest(input)
}

// CreateGroup is a passthrough to the underlying CreateGroup method.
// It will increment the count of requests made to CreateGroup.
func (c *Greengrass) CreateGroup(input *greengrass.CreateGroupInput) (*greengrass.CreateGroupOutput, error) {
	c.inc("CreateGroup")
	return c.svc.CreateGroup(input)
}

// CreateGroupWithContext is a passthrough to the underlying CreateGroupWithContext method.
// It will increment the count of requests made to CreateGroup.
func (c *Greengrass) CreateGroupWithContext(ctx aws.Context, input *greengrass.CreateGroupInput, opts ...request.Option) (*greengrass.CreateGroupOutput, error) {
	c.inc("CreateGroup")
	return c.svc.CreateGroupWithContext(ctx, input, opts...)
}

// CreateGroupCertificateAuthorityRequest is a passthrough to the underlying CreateGroupCertificateAuthorityRequest.
// It will increment the count of requests made to CreateGroupCertificateAuthority.
func (c *Greengrass) CreateGroupCertificateAuthorityRequest(input *greengrass.CreateGroupCertificateAuthorityInput) (req *request.Request, output *greengrass.CreateGroupCertificateAuthorityOutput) {
	c.inc("CreateGroupCertificateAuthority")
	return c.svc.CreateGroupCertificateAuthorityRequest(input)
}

// CreateGroupCertificateAuthority is a passthrough to the underlying CreateGroupCertificateAuthority method.
// It will increment the count of requests made to CreateGroupCertificateAuthority.
func (c *Greengrass) CreateGroupCertificateAuthority(input *greengrass.CreateGroupCertificateAuthorityInput) (*greengrass.CreateGroupCertificateAuthorityOutput, error) {
	c.inc("CreateGroupCertificateAuthority")
	return c.svc.CreateGroupCertificateAuthority(input)
}

// CreateGroupCertificateAuthorityWithContext is a passthrough to the underlying CreateGroupCertificateAuthorityWithContext method.
// It will increment the count of requests made to CreateGroupCertificateAuthority.
func (c *Greengrass) CreateGroupCertificateAuthorityWithContext(ctx aws.Context, input *greengrass.CreateGroupCertificateAuthorityInput, opts ...request.Option) (*greengrass.CreateGroupCertificateAuthorityOutput, error) {
	c.inc("CreateGroupCertificateAuthority")
	return c.svc.CreateGroupCertificateAuthorityWithContext(ctx, input, opts...)
}

// CreateGroupVersionRequest is a passthrough to the underlying CreateGroupVersionRequest.
// It will increment the count of requests made to CreateGroupVersion.
func (c *Greengrass) CreateGroupVersionRequest(input *greengrass.CreateGroupVersionInput) (req *request.Request, output *greengrass.CreateGroupVersionOutput) {
	c.inc("CreateGroupVersion")
	return c.svc.CreateGroupVersionRequest(input)
}

// CreateGroupVersion is a passthrough to the underlying CreateGroupVersion method.
// It will increment the count of requests made to CreateGroupVersion.
func (c *Greengrass) CreateGroupVersion(input *greengrass.CreateGroupVersionInput) (*greengrass.CreateGroupVersionOutput, error) {
	c.inc("CreateGroupVersion")
	return c.svc.CreateGroupVersion(input)
}

// CreateGroupVersionWithContext is a passthrough to the underlying CreateGroupVersionWithContext method.
// It will increment the count of requests made to CreateGroupVersion.
func (c *Greengrass) CreateGroupVersionWithContext(ctx aws.Context, input *greengrass.CreateGroupVersionInput, opts ...request.Option) (*greengrass.CreateGroupVersionOutput, error) {
	c.inc("CreateGroupVersion")
	return c.svc.CreateGroupVersionWithContext(ctx, input, opts...)
}

// CreateLoggerDefinitionRequest is a passthrough to the underlying CreateLoggerDefinitionRequest.
// It will increment the count of requests made to CreateLoggerDefinition.
func (c *Greengrass) CreateLoggerDefinitionRequest(input *greengrass.CreateLoggerDefinitionInput) (req *request.Request, output *greengrass.CreateLoggerDefinitionOutput) {
	c.inc("CreateLoggerDefinition")
	return c.svc.CreateLoggerDefinitionRequest(input)
}

// CreateLoggerDefinition is a passthrough to the underlying CreateLoggerDefinition method.
// It will increment the count of requests made to CreateLoggerDefinition.
func (c *Greengrass) CreateLoggerDefinition(input *greengrass.CreateLoggerDefinitionInput) (*greengrass.CreateLoggerDefinitionOutput, error) {
	c.inc("CreateLoggerDefinition")
	return c.svc.CreateLoggerDefinition(input)
}

// CreateLoggerDefinitionWithContext is a passthrough to the underlying CreateLoggerDefinitionWithContext method.
// It will increment the count of requests made to CreateLoggerDefinition.
func (c *Greengrass) CreateLoggerDefinitionWithContext(ctx aws.Context, input *greengrass.CreateLoggerDefinitionInput, opts ...request.Option) (*greengrass.CreateLoggerDefinitionOutput, error) {
	c.inc("CreateLoggerDefinition")
	return c.svc.CreateLoggerDefinitionWithContext(ctx, input, opts...)
}

// CreateLoggerDefinitionVersionRequest is a passthrough to the underlying CreateLoggerDefinitionVersionRequest.
// It will increment the count of requests made to CreateLoggerDefinitionVersion.
func (c *Greengrass) CreateLoggerDefinitionVersionRequest(input *greengrass.CreateLoggerDefinitionVersionInput) (req *request.Request, output *greengrass.CreateLoggerDefinitionVersionOutput) {
	c.inc("CreateLoggerDefinitionVersion")
	return c.svc.CreateLoggerDefinitionVersionRequest(input)
}

// CreateLoggerDefinitionVersion is a passthrough to the underlying CreateLoggerDefinitionVersion method.
// It will increment the count of requests made to CreateLoggerDefinitionVersion.
func (c *Greengrass) CreateLoggerDefinitionVersion(input *greengrass.CreateLoggerDefinitionVersionInput) (*greengrass.CreateLoggerDefinitionVersionOutput, error) {
	c.inc("CreateLoggerDefinitionVersion")
	return c.svc.CreateLoggerDefinitionVersion(input)
}

// CreateLoggerDefinitionVersionWithContext is a passthrough to the underlying CreateLoggerDefinitionVersionWithContext method.
// It will increment the count of requests made to CreateLoggerDefinitionVersion.
func (c *Greengrass) CreateLoggerDefinitionVersionWithContext(ctx aws.Context, input *greengrass.CreateLoggerDefinitionVersionInput, opts ...request.Option) (*greengrass.CreateLoggerDefinitionVersionOutput, error) {
	c.inc("CreateLoggerDefinitionVersion")
	return c.svc.CreateLoggerDefinitionVersionWithContext(ctx, input, opts...)
}

// CreateSubscriptionDefinitionRequest is a passthrough to the underlying CreateSubscriptionDefinitionRequest.
// It will increment the count of requests made to CreateSubscriptionDefinition.
func (c *Greengrass) CreateSubscriptionDefinitionRequest(input *greengrass.CreateSubscriptionDefinitionInput) (req *request.Request, output *greengrass.CreateSubscriptionDefinitionOutput) {
	c.inc("CreateSubscriptionDefinition")
	return c.svc.CreateSubscriptionDefinitionRequest(input)
}

// CreateSubscriptionDefinition is a passthrough to the underlying CreateSubscriptionDefinition method.
// It will increment the count of requests made to CreateSubscriptionDefinition.
func (c *Greengrass) CreateSubscriptionDefinition(input *greengrass.CreateSubscriptionDefinitionInput) (*greengrass.CreateSubscriptionDefinitionOutput, error) {
	c.inc("CreateSubscriptionDefinition")
	return c.svc.CreateSubscriptionDefinition(input)
}

// CreateSubscriptionDefinitionWithContext is a passthrough to the underlying CreateSubscriptionDefinitionWithContext method.
// It will increment the count of requests made to CreateSubscriptionDefinition.
func (c *Greengrass) CreateSubscriptionDefinitionWithContext(ctx aws.Context, input *greengrass.CreateSubscriptionDefinitionInput, opts ...request.Option) (*greengrass.CreateSubscriptionDefinitionOutput, error) {
	c.inc("CreateSubscriptionDefinition")
	return c.svc.CreateSubscriptionDefinitionWithContext(ctx, input, opts...)
}

// CreateSubscriptionDefinitionVersionRequest is a passthrough to the underlying CreateSubscriptionDefinitionVersionRequest.
// It will increment the count of requests made to CreateSubscriptionDefinitionVersion.
func (c *Greengrass) CreateSubscriptionDefinitionVersionRequest(input *greengrass.CreateSubscriptionDefinitionVersionInput) (req *request.Request, output *greengrass.CreateSubscriptionDefinitionVersionOutput) {
	c.inc("CreateSubscriptionDefinitionVersion")
	return c.svc.CreateSubscriptionDefinitionVersionRequest(input)
}

// CreateSubscriptionDefinitionVersion is a passthrough to the underlying CreateSubscriptionDefinitionVersion method.
// It will increment the count of requests made to CreateSubscriptionDefinitionVersion.
func (c *Greengrass) CreateSubscriptionDefinitionVersion(input *greengrass.CreateSubscriptionDefinitionVersionInput) (*greengrass.CreateSubscriptionDefinitionVersionOutput, error) {
	c.inc("CreateSubscriptionDefinitionVersion")
	return c.svc.CreateSubscriptionDefinitionVersion(input)
}

// CreateSubscriptionDefinitionVersionWithContext is a passthrough to the underlying CreateSubscriptionDefinitionVersionWithContext method.
// It will increment the count of requests made to CreateSubscriptionDefinitionVersion.
func (c *Greengrass) CreateSubscriptionDefinitionVersionWithContext(ctx aws.Context, input *greengrass.CreateSubscriptionDefinitionVersionInput, opts ...request.Option) (*greengrass.CreateSubscriptionDefinitionVersionOutput, error) {
	c.inc("CreateSubscriptionDefinitionVersion")
	return c.svc.CreateSubscriptionDefinitionVersionWithContext(ctx, input, opts...)
}

// DeleteCoreDefinitionRequest is a passthrough to the underlying DeleteCoreDefinitionRequest.
// It will increment the count of requests made to DeleteCoreDefinition.
func (c *Greengrass) DeleteCoreDefinitionRequest(input *greengrass.DeleteCoreDefinitionInput) (req *request.Request, output *greengrass.DeleteCoreDefinitionOutput) {
	c.inc("DeleteCoreDefinition")
	return c.svc.DeleteCoreDefinitionRequest(input)
}

// DeleteCoreDefinition is a passthrough to the underlying DeleteCoreDefinition method.
// It will increment the count of requests made to DeleteCoreDefinition.
func (c *Greengrass) DeleteCoreDefinition(input *greengrass.DeleteCoreDefinitionInput) (*greengrass.DeleteCoreDefinitionOutput, error) {
	c.inc("DeleteCoreDefinition")
	return c.svc.DeleteCoreDefinition(input)
}

// DeleteCoreDefinitionWithContext is a passthrough to the underlying DeleteCoreDefinitionWithContext method.
// It will increment the count of requests made to DeleteCoreDefinition.
func (c *Greengrass) DeleteCoreDefinitionWithContext(ctx aws.Context, input *greengrass.DeleteCoreDefinitionInput, opts ...request.Option) (*greengrass.DeleteCoreDefinitionOutput, error) {
	c.inc("DeleteCoreDefinition")
	return c.svc.DeleteCoreDefinitionWithContext(ctx, input, opts...)
}

// DeleteDeviceDefinitionRequest is a passthrough to the underlying DeleteDeviceDefinitionRequest.
// It will increment the count of requests made to DeleteDeviceDefinition.
func (c *Greengrass) DeleteDeviceDefinitionRequest(input *greengrass.DeleteDeviceDefinitionInput) (req *request.Request, output *greengrass.DeleteDeviceDefinitionOutput) {
	c.inc("DeleteDeviceDefinition")
	return c.svc.DeleteDeviceDefinitionRequest(input)
}

// DeleteDeviceDefinition is a passthrough to the underlying DeleteDeviceDefinition method.
// It will increment the count of requests made to DeleteDeviceDefinition.
func (c *Greengrass) DeleteDeviceDefinition(input *greengrass.DeleteDeviceDefinitionInput) (*greengrass.DeleteDeviceDefinitionOutput, error) {
	c.inc("DeleteDeviceDefinition")
	return c.svc.DeleteDeviceDefinition(input)
}

// DeleteDeviceDefinitionWithContext is a passthrough to the underlying DeleteDeviceDefinitionWithContext method.
// It will increment the count of requests made to DeleteDeviceDefinition.
func (c *Greengrass) DeleteDeviceDefinitionWithContext(ctx aws.Context, input *greengrass.DeleteDeviceDefinitionInput, opts ...request.Option) (*greengrass.DeleteDeviceDefinitionOutput, error) {
	c.inc("DeleteDeviceDefinition")
	return c.svc.DeleteDeviceDefinitionWithContext(ctx, input, opts...)
}

// DeleteFunctionDefinitionRequest is a passthrough to the underlying DeleteFunctionDefinitionRequest.
// It will increment the count of requests made to DeleteFunctionDefinition.
func (c *Greengrass) DeleteFunctionDefinitionRequest(input *greengrass.DeleteFunctionDefinitionInput) (req *request.Request, output *greengrass.DeleteFunctionDefinitionOutput) {
	c.inc("DeleteFunctionDefinition")
	return c.svc.DeleteFunctionDefinitionRequest(input)
}

// DeleteFunctionDefinition is a passthrough to the underlying DeleteFunctionDefinition method.
// It will increment the count of requests made to DeleteFunctionDefinition.
func (c *Greengrass) DeleteFunctionDefinition(input *greengrass.DeleteFunctionDefinitionInput) (*greengrass.DeleteFunctionDefinitionOutput, error) {
	c.inc("DeleteFunctionDefinition")
	return c.svc.DeleteFunctionDefinition(input)
}

// DeleteFunctionDefinitionWithContext is a passthrough to the underlying DeleteFunctionDefinitionWithContext method.
// It will increment the count of requests made to DeleteFunctionDefinition.
func (c *Greengrass) DeleteFunctionDefinitionWithContext(ctx aws.Context, input *greengrass.DeleteFunctionDefinitionInput, opts ...request.Option) (*greengrass.DeleteFunctionDefinitionOutput, error) {
	c.inc("DeleteFunctionDefinition")
	return c.svc.DeleteFunctionDefinitionWithContext(ctx, input, opts...)
}

// DeleteGroupRequest is a passthrough to the underlying DeleteGroupRequest.
// It will increment the count of requests made to DeleteGroup.
func (c *Greengrass) DeleteGroupRequest(input *greengrass.DeleteGroupInput) (req *request.Request, output *greengrass.DeleteGroupOutput) {
	c.inc("DeleteGroup")
	return c.svc.DeleteGroupRequest(input)
}

// DeleteGroup is a passthrough to the underlying DeleteGroup method.
// It will increment the count of requests made to DeleteGroup.
func (c *Greengrass) DeleteGroup(input *greengrass.DeleteGroupInput) (*greengrass.DeleteGroupOutput, error) {
	c.inc("DeleteGroup")
	return c.svc.DeleteGroup(input)
}

// DeleteGroupWithContext is a passthrough to the underlying DeleteGroupWithContext method.
// It will increment the count of requests made to DeleteGroup.
func (c *Greengrass) DeleteGroupWithContext(ctx aws.Context, input *greengrass.DeleteGroupInput, opts ...request.Option) (*greengrass.DeleteGroupOutput, error) {
	c.inc("DeleteGroup")
	return c.svc.DeleteGroupWithContext(ctx, input, opts...)
}

// DeleteLoggerDefinitionRequest is a passthrough to the underlying DeleteLoggerDefinitionRequest.
// It will increment the count of requests made to DeleteLoggerDefinition.
func (c *Greengrass) DeleteLoggerDefinitionRequest(input *greengrass.DeleteLoggerDefinitionInput) (req *request.Request, output *greengrass.DeleteLoggerDefinitionOutput) {
	c.inc("DeleteLoggerDefinition")
	return c.svc.DeleteLoggerDefinitionRequest(input)
}

// DeleteLoggerDefinition is a passthrough to the underlying DeleteLoggerDefinition method.
// It will increment the count of requests made to DeleteLoggerDefinition.
func (c *Greengrass) DeleteLoggerDefinition(input *greengrass.DeleteLoggerDefinitionInput) (*greengrass.DeleteLoggerDefinitionOutput, error) {
	c.inc("DeleteLoggerDefinition")
	return c.svc.DeleteLoggerDefinition(input)
}

// DeleteLoggerDefinitionWithContext is a passthrough to the underlying DeleteLoggerDefinitionWithContext method.
// It will increment the count of requests made to DeleteLoggerDefinition.
func (c *Greengrass) DeleteLoggerDefinitionWithContext(ctx aws.Context, input *greengrass.DeleteLoggerDefinitionInput, opts ...request.Option) (*greengrass.DeleteLoggerDefinitionOutput, error) {
	c.inc("DeleteLoggerDefinition")
	return c.svc.DeleteLoggerDefinitionWithContext(ctx, input, opts...)
}

// DeleteSubscriptionDefinitionRequest is a passthrough to the underlying DeleteSubscriptionDefinitionRequest.
// It will increment the count of requests made to DeleteSubscriptionDefinition.
func (c *Greengrass) DeleteSubscriptionDefinitionRequest(input *greengrass.DeleteSubscriptionDefinitionInput) (req *request.Request, output *greengrass.DeleteSubscriptionDefinitionOutput) {
	c.inc("DeleteSubscriptionDefinition")
	return c.svc.DeleteSubscriptionDefinitionRequest(input)
}

// DeleteSubscriptionDefinition is a passthrough to the underlying DeleteSubscriptionDefinition method.
// It will increment the count of requests made to DeleteSubscriptionDefinition.
func (c *Greengrass) DeleteSubscriptionDefinition(input *greengrass.DeleteSubscriptionDefinitionInput) (*greengrass.DeleteSubscriptionDefinitionOutput, error) {
	c.inc("DeleteSubscriptionDefinition")
	return c.svc.DeleteSubscriptionDefinition(input)
}

// DeleteSubscriptionDefinitionWithContext is a passthrough to the underlying DeleteSubscriptionDefinitionWithContext method.
// It will increment the count of requests made to DeleteSubscriptionDefinition.
func (c *Greengrass) DeleteSubscriptionDefinitionWithContext(ctx aws.Context, input *greengrass.DeleteSubscriptionDefinitionInput, opts ...request.Option) (*greengrass.DeleteSubscriptionDefinitionOutput, error) {
	c.inc("DeleteSubscriptionDefinition")
	return c.svc.DeleteSubscriptionDefinitionWithContext(ctx, input, opts...)
}

// DisassociateRoleFromGroupRequest is a passthrough to the underlying DisassociateRoleFromGroupRequest.
// It will increment the count of requests made to DisassociateRoleFromGroup.
func (c *Greengrass) DisassociateRoleFromGroupRequest(input *greengrass.DisassociateRoleFromGroupInput) (req *request.Request, output *greengrass.DisassociateRoleFromGroupOutput) {
	c.inc("DisassociateRoleFromGroup")
	return c.svc.DisassociateRoleFromGroupRequest(input)
}

// DisassociateRoleFromGroup is a passthrough to the underlying DisassociateRoleFromGroup method.
// It will increment the count of requests made to DisassociateRoleFromGroup.
func (c *Greengrass) DisassociateRoleFromGroup(input *greengrass.DisassociateRoleFromGroupInput) (*greengrass.DisassociateRoleFromGroupOutput, error) {
	c.inc("DisassociateRoleFromGroup")
	return c.svc.DisassociateRoleFromGroup(input)
}

// DisassociateRoleFromGroupWithContext is a passthrough to the underlying DisassociateRoleFromGroupWithContext method.
// It will increment the count of requests made to DisassociateRoleFromGroup.
func (c *Greengrass) DisassociateRoleFromGroupWithContext(ctx aws.Context, input *greengrass.DisassociateRoleFromGroupInput, opts ...request.Option) (*greengrass.DisassociateRoleFromGroupOutput, error) {
	c.inc("DisassociateRoleFromGroup")
	return c.svc.DisassociateRoleFromGroupWithContext(ctx, input, opts...)
}

// DisassociateServiceRoleFromAccountRequest is a passthrough to the underlying DisassociateServiceRoleFromAccountRequest.
// It will increment the count of requests made to DisassociateServiceRoleFromAccount.
func (c *Greengrass) DisassociateServiceRoleFromAccountRequest(input *greengrass.DisassociateServiceRoleFromAccountInput) (req *request.Request, output *greengrass.DisassociateServiceRoleFromAccountOutput) {
	c.inc("DisassociateServiceRoleFromAccount")
	return c.svc.DisassociateServiceRoleFromAccountRequest(input)
}

// DisassociateServiceRoleFromAccount is a passthrough to the underlying DisassociateServiceRoleFromAccount method.
// It will increment the count of requests made to DisassociateServiceRoleFromAccount.
func (c *Greengrass) DisassociateServiceRoleFromAccount(input *greengrass.DisassociateServiceRoleFromAccountInput) (*greengrass.DisassociateServiceRoleFromAccountOutput, error) {
	c.inc("DisassociateServiceRoleFromAccount")
	return c.svc.DisassociateServiceRoleFromAccount(input)
}

// DisassociateServiceRoleFromAccountWithContext is a passthrough to the underlying DisassociateServiceRoleFromAccountWithContext method.
// It will increment the count of requests made to DisassociateServiceRoleFromAccount.
func (c *Greengrass) DisassociateServiceRoleFromAccountWithContext(ctx aws.Context, input *greengrass.DisassociateServiceRoleFromAccountInput, opts ...request.Option) (*greengrass.DisassociateServiceRoleFromAccountOutput, error) {
	c.inc("DisassociateServiceRoleFromAccount")
	return c.svc.DisassociateServiceRoleFromAccountWithContext(ctx, input, opts...)
}

// GetAssociatedRoleRequest is a passthrough to the underlying GetAssociatedRoleRequest.
// It will increment the count of requests made to GetAssociatedRole.
func (c *Greengrass) GetAssociatedRoleRequest(input *greengrass.GetAssociatedRoleInput) (req *request.Request, output *greengrass.GetAssociatedRoleOutput) {
	c.inc("GetAssociatedRole")
	return c.svc.GetAssociatedRoleRequest(input)
}

// GetAssociatedRole is a passthrough to the underlying GetAssociatedRole method.
// It will increment the count of requests made to GetAssociatedRole.
func (c *Greengrass) GetAssociatedRole(input *greengrass.GetAssociatedRoleInput) (*greengrass.GetAssociatedRoleOutput, error) {
	c.inc("GetAssociatedRole")
	return c.svc.GetAssociatedRole(input)
}

// GetAssociatedRoleWithContext is a passthrough to the underlying GetAssociatedRoleWithContext method.
// It will increment the count of requests made to GetAssociatedRole.
func (c *Greengrass) GetAssociatedRoleWithContext(ctx aws.Context, input *greengrass.GetAssociatedRoleInput, opts ...request.Option) (*greengrass.GetAssociatedRoleOutput, error) {
	c.inc("GetAssociatedRole")
	return c.svc.GetAssociatedRoleWithContext(ctx, input, opts...)
}

// GetConnectivityInfoRequest is a passthrough to the underlying GetConnectivityInfoRequest.
// It will increment the count of requests made to GetConnectivityInfo.
func (c *Greengrass) GetConnectivityInfoRequest(input *greengrass.GetConnectivityInfoInput) (req *request.Request, output *greengrass.GetConnectivityInfoOutput) {
	c.inc("GetConnectivityInfo")
	return c.svc.GetConnectivityInfoRequest(input)
}

// GetConnectivityInfo is a passthrough to the underlying GetConnectivityInfo method.
// It will increment the count of requests made to GetConnectivityInfo.
func (c *Greengrass) GetConnectivityInfo(input *greengrass.GetConnectivityInfoInput) (*greengrass.GetConnectivityInfoOutput, error) {
	c.inc("GetConnectivityInfo")
	return c.svc.GetConnectivityInfo(input)
}

// GetConnectivityInfoWithContext is a passthrough to the underlying GetConnectivityInfoWithContext method.
// It will increment the count of requests made to GetConnectivityInfo.
func (c *Greengrass) GetConnectivityInfoWithContext(ctx aws.Context, input *greengrass.GetConnectivityInfoInput, opts ...request.Option) (*greengrass.GetConnectivityInfoOutput, error) {
	c.inc("GetConnectivityInfo")
	return c.svc.GetConnectivityInfoWithContext(ctx, input, opts...)
}

// GetCoreDefinitionRequest is a passthrough to the underlying GetCoreDefinitionRequest.
// It will increment the count of requests made to GetCoreDefinition.
func (c *Greengrass) GetCoreDefinitionRequest(input *greengrass.GetCoreDefinitionInput) (req *request.Request, output *greengrass.GetCoreDefinitionOutput) {
	c.inc("GetCoreDefinition")
	return c.svc.GetCoreDefinitionRequest(input)
}

// GetCoreDefinition is a passthrough to the underlying GetCoreDefinition method.
// It will increment the count of requests made to GetCoreDefinition.
func (c *Greengrass) GetCoreDefinition(input *greengrass.GetCoreDefinitionInput) (*greengrass.GetCoreDefinitionOutput, error) {
	c.inc("GetCoreDefinition")
	return c.svc.GetCoreDefinition(input)
}

// GetCoreDefinitionWithContext is a passthrough to the underlying GetCoreDefinitionWithContext method.
// It will increment the count of requests made to GetCoreDefinition.
func (c *Greengrass) GetCoreDefinitionWithContext(ctx aws.Context, input *greengrass.GetCoreDefinitionInput, opts ...request.Option) (*greengrass.GetCoreDefinitionOutput, error) {
	c.inc("GetCoreDefinition")
	return c.svc.GetCoreDefinitionWithContext(ctx, input, opts...)
}

// GetCoreDefinitionVersionRequest is a passthrough to the underlying GetCoreDefinitionVersionRequest.
// It will increment the count of requests made to GetCoreDefinitionVersion.
func (c *Greengrass) GetCoreDefinitionVersionRequest(input *greengrass.GetCoreDefinitionVersionInput) (req *request.Request, output *greengrass.GetCoreDefinitionVersionOutput) {
	c.inc("GetCoreDefinitionVersion")
	return c.svc.GetCoreDefinitionVersionRequest(input)
}

// GetCoreDefinitionVersion is a passthrough to the underlying GetCoreDefinitionVersion method.
// It will increment the count of requests made to GetCoreDefinitionVersion.
func (c *Greengrass) GetCoreDefinitionVersion(input *greengrass.GetCoreDefinitionVersionInput) (*greengrass.GetCoreDefinitionVersionOutput, error) {
	c.inc("GetCoreDefinitionVersion")
	return c.svc.GetCoreDefinitionVersion(input)
}

// GetCoreDefinitionVersionWithContext is a passthrough to the underlying GetCoreDefinitionVersionWithContext method.
// It will increment the count of requests made to GetCoreDefinitionVersion.
func (c *Greengrass) GetCoreDefinitionVersionWithContext(ctx aws.Context, input *greengrass.GetCoreDefinitionVersionInput, opts ...request.Option) (*greengrass.GetCoreDefinitionVersionOutput, error) {
	c.inc("GetCoreDefinitionVersion")
	return c.svc.GetCoreDefinitionVersionWithContext(ctx, input, opts...)
}

// GetDeploymentStatusRequest is a passthrough to the underlying GetDeploymentStatusRequest.
// It will increment the count of requests made to GetDeploymentStatus.
func (c *Greengrass) GetDeploymentStatusRequest(input *greengrass.GetDeploymentStatusInput) (req *request.Request, output *greengrass.GetDeploymentStatusOutput) {
	c.inc("GetDeploymentStatus")
	return c.svc.GetDeploymentStatusRequest(input)
}

// GetDeploymentStatus is a passthrough to the underlying GetDeploymentStatus method.
// It will increment the count of requests made to GetDeploymentStatus.
func (c *Greengrass) GetDeploymentStatus(input *greengrass.GetDeploymentStatusInput) (*greengrass.GetDeploymentStatusOutput, error) {
	c.inc("GetDeploymentStatus")
	return c.svc.GetDeploymentStatus(input)
}

// GetDeploymentStatusWithContext is a passthrough to the underlying GetDeploymentStatusWithContext method.
// It will increment the count of requests made to GetDeploymentStatus.
func (c *Greengrass) GetDeploymentStatusWithContext(ctx aws.Context, input *greengrass.GetDeploymentStatusInput, opts ...request.Option) (*greengrass.GetDeploymentStatusOutput, error) {
	c.inc("GetDeploymentStatus")
	return c.svc.GetDeploymentStatusWithContext(ctx, input, opts...)
}

// GetDeviceDefinitionRequest is a passthrough to the underlying GetDeviceDefinitionRequest.
// It will increment the count of requests made to GetDeviceDefinition.
func (c *Greengrass) GetDeviceDefinitionRequest(input *greengrass.GetDeviceDefinitionInput) (req *request.Request, output *greengrass.GetDeviceDefinitionOutput) {
	c.inc("GetDeviceDefinition")
	return c.svc.GetDeviceDefinitionRequest(input)
}

// GetDeviceDefinition is a passthrough to the underlying GetDeviceDefinition method.
// It will increment the count of requests made to GetDeviceDefinition.
func (c *Greengrass) GetDeviceDefinition(input *greengrass.GetDeviceDefinitionInput) (*greengrass.GetDeviceDefinitionOutput, error) {
	c.inc("GetDeviceDefinition")
	return c.svc.GetDeviceDefinition(input)
}

// GetDeviceDefinitionWithContext is a passthrough to the underlying GetDeviceDefinitionWithContext method.
// It will increment the count of requests made to GetDeviceDefinition.
func (c *Greengrass) GetDeviceDefinitionWithContext(ctx aws.Context, input *greengrass.GetDeviceDefinitionInput, opts ...request.Option) (*greengrass.GetDeviceDefinitionOutput, error) {
	c.inc("GetDeviceDefinition")
	return c.svc.GetDeviceDefinitionWithContext(ctx, input, opts...)
}

// GetDeviceDefinitionVersionRequest is a passthrough to the underlying GetDeviceDefinitionVersionRequest.
// It will increment the count of requests made to GetDeviceDefinitionVersion.
func (c *Greengrass) GetDeviceDefinitionVersionRequest(input *greengrass.GetDeviceDefinitionVersionInput) (req *request.Request, output *greengrass.GetDeviceDefinitionVersionOutput) {
	c.inc("GetDeviceDefinitionVersion")
	return c.svc.GetDeviceDefinitionVersionRequest(input)
}

// GetDeviceDefinitionVersion is a passthrough to the underlying GetDeviceDefinitionVersion method.
// It will increment the count of requests made to GetDeviceDefinitionVersion.
func (c *Greengrass) GetDeviceDefinitionVersion(input *greengrass.GetDeviceDefinitionVersionInput) (*greengrass.GetDeviceDefinitionVersionOutput, error) {
	c.inc("GetDeviceDefinitionVersion")
	return c.svc.GetDeviceDefinitionVersion(input)
}

// GetDeviceDefinitionVersionWithContext is a passthrough to the underlying GetDeviceDefinitionVersionWithContext method.
// It will increment the count of requests made to GetDeviceDefinitionVersion.
func (c *Greengrass) GetDeviceDefinitionVersionWithContext(ctx aws.Context, input *greengrass.GetDeviceDefinitionVersionInput, opts ...request.Option) (*greengrass.GetDeviceDefinitionVersionOutput, error) {
	c.inc("GetDeviceDefinitionVersion")
	return c.svc.GetDeviceDefinitionVersionWithContext(ctx, input, opts...)
}

// GetFunctionDefinitionRequest is a passthrough to the underlying GetFunctionDefinitionRequest.
// It will increment the count of requests made to GetFunctionDefinition.
func (c *Greengrass) GetFunctionDefinitionRequest(input *greengrass.GetFunctionDefinitionInput) (req *request.Request, output *greengrass.GetFunctionDefinitionOutput) {
	c.inc("GetFunctionDefinition")
	return c.svc.GetFunctionDefinitionRequest(input)
}

// GetFunctionDefinition is a passthrough to the underlying GetFunctionDefinition method.
// It will increment the count of requests made to GetFunctionDefinition.
func (c *Greengrass) GetFunctionDefinition(input *greengrass.GetFunctionDefinitionInput) (*greengrass.GetFunctionDefinitionOutput, error) {
	c.inc("GetFunctionDefinition")
	return c.svc.GetFunctionDefinition(input)
}

// GetFunctionDefinitionWithContext is a passthrough to the underlying GetFunctionDefinitionWithContext method.
// It will increment the count of requests made to GetFunctionDefinition.
func (c *Greengrass) GetFunctionDefinitionWithContext(ctx aws.Context, input *greengrass.GetFunctionDefinitionInput, opts ...request.Option) (*greengrass.GetFunctionDefinitionOutput, error) {
	c.inc("GetFunctionDefinition")
	return c.svc.GetFunctionDefinitionWithContext(ctx, input, opts...)
}

// GetFunctionDefinitionVersionRequest is a passthrough to the underlying GetFunctionDefinitionVersionRequest.
// It will increment the count of requests made to GetFunctionDefinitionVersion.
func (c *Greengrass) GetFunctionDefinitionVersionRequest(input *greengrass.GetFunctionDefinitionVersionInput) (req *request.Request, output *greengrass.GetFunctionDefinitionVersionOutput) {
	c.inc("GetFunctionDefinitionVersion")
	return c.svc.GetFunctionDefinitionVersionRequest(input)
}

// GetFunctionDefinitionVersion is a passthrough to the underlying GetFunctionDefinitionVersion method.
// It will increment the count of requests made to GetFunctionDefinitionVersion.
func (c *Greengrass) GetFunctionDefinitionVersion(input *greengrass.GetFunctionDefinitionVersionInput) (*greengrass.GetFunctionDefinitionVersionOutput, error) {
	c.inc("GetFunctionDefinitionVersion")
	return c.svc.GetFunctionDefinitionVersion(input)
}

// GetFunctionDefinitionVersionWithContext is a passthrough to the underlying GetFunctionDefinitionVersionWithContext method.
// It will increment the count of requests made to GetFunctionDefinitionVersion.
func (c *Greengrass) GetFunctionDefinitionVersionWithContext(ctx aws.Context, input *greengrass.GetFunctionDefinitionVersionInput, opts ...request.Option) (*greengrass.GetFunctionDefinitionVersionOutput, error) {
	c.inc("GetFunctionDefinitionVersion")
	return c.svc.GetFunctionDefinitionVersionWithContext(ctx, input, opts...)
}

// GetGroupRequest is a passthrough to the underlying GetGroupRequest.
// It will increment the count of requests made to GetGroup.
func (c *Greengrass) GetGroupRequest(input *greengrass.GetGroupInput) (req *request.Request, output *greengrass.GetGroupOutput) {
	c.inc("GetGroup")
	return c.svc.GetGroupRequest(input)
}

// GetGroup is a passthrough to the underlying GetGroup method.
// It will increment the count of requests made to GetGroup.
func (c *Greengrass) GetGroup(input *greengrass.GetGroupInput) (*greengrass.GetGroupOutput, error) {
	c.inc("GetGroup")
	return c.svc.GetGroup(input)
}

// GetGroupWithContext is a passthrough to the underlying GetGroupWithContext method.
// It will increment the count of requests made to GetGroup.
func (c *Greengrass) GetGroupWithContext(ctx aws.Context, input *greengrass.GetGroupInput, opts ...request.Option) (*greengrass.GetGroupOutput, error) {
	c.inc("GetGroup")
	return c.svc.GetGroupWithContext(ctx, input, opts...)
}

// GetGroupCertificateAuthorityRequest is a passthrough to the underlying GetGroupCertificateAuthorityRequest.
// It will increment the count of requests made to GetGroupCertificateAuthority.
func (c *Greengrass) GetGroupCertificateAuthorityRequest(input *greengrass.GetGroupCertificateAuthorityInput) (req *request.Request, output *greengrass.GetGroupCertificateAuthorityOutput) {
	c.inc("GetGroupCertificateAuthority")
	return c.svc.GetGroupCertificateAuthorityRequest(input)
}

// GetGroupCertificateAuthority is a passthrough to the underlying GetGroupCertificateAuthority method.
// It will increment the count of requests made to GetGroupCertificateAuthority.
func (c *Greengrass) GetGroupCertificateAuthority(input *greengrass.GetGroupCertificateAuthorityInput) (*greengrass.GetGroupCertificateAuthorityOutput, error) {
	c.inc("GetGroupCertificateAuthority")
	return c.svc.GetGroupCertificateAuthority(input)
}

// GetGroupCertificateAuthorityWithContext is a passthrough to the underlying GetGroupCertificateAuthorityWithContext method.
// It will increment the count of requests made to GetGroupCertificateAuthority.
func (c *Greengrass) GetGroupCertificateAuthorityWithContext(ctx aws.Context, input *greengrass.GetGroupCertificateAuthorityInput, opts ...request.Option) (*greengrass.GetGroupCertificateAuthorityOutput, error) {
	c.inc("GetGroupCertificateAuthority")
	return c.svc.GetGroupCertificateAuthorityWithContext(ctx, input, opts...)
}

// GetGroupCertificateConfigurationRequest is a passthrough to the underlying GetGroupCertificateConfigurationRequest.
// It will increment the count of requests made to GetGroupCertificateConfiguration.
func (c *Greengrass) GetGroupCertificateConfigurationRequest(input *greengrass.GetGroupCertificateConfigurationInput) (req *request.Request, output *greengrass.GetGroupCertificateConfigurationOutput) {
	c.inc("GetGroupCertificateConfiguration")
	return c.svc.GetGroupCertificateConfigurationRequest(input)
}

// GetGroupCertificateConfiguration is a passthrough to the underlying GetGroupCertificateConfiguration method.
// It will increment the count of requests made to GetGroupCertificateConfiguration.
func (c *Greengrass) GetGroupCertificateConfiguration(input *greengrass.GetGroupCertificateConfigurationInput) (*greengrass.GetGroupCertificateConfigurationOutput, error) {
	c.inc("GetGroupCertificateConfiguration")
	return c.svc.GetGroupCertificateConfiguration(input)
}

// GetGroupCertificateConfigurationWithContext is a passthrough to the underlying GetGroupCertificateConfigurationWithContext method.
// It will increment the count of requests made to GetGroupCertificateConfiguration.
func (c *Greengrass) GetGroupCertificateConfigurationWithContext(ctx aws.Context, input *greengrass.GetGroupCertificateConfigurationInput, opts ...request.Option) (*greengrass.GetGroupCertificateConfigurationOutput, error) {
	c.inc("GetGroupCertificateConfiguration")
	return c.svc.GetGroupCertificateConfigurationWithContext(ctx, input, opts...)
}

// GetGroupVersionRequest is a passthrough to the underlying GetGroupVersionRequest.
// It will increment the count of requests made to GetGroupVersion.
func (c *Greengrass) GetGroupVersionRequest(input *greengrass.GetGroupVersionInput) (req *request.Request, output *greengrass.GetGroupVersionOutput) {
	c.inc("GetGroupVersion")
	return c.svc.GetGroupVersionRequest(input)
}

// GetGroupVersion is a passthrough to the underlying GetGroupVersion method.
// It will increment the count of requests made to GetGroupVersion.
func (c *Greengrass) GetGroupVersion(input *greengrass.GetGroupVersionInput) (*greengrass.GetGroupVersionOutput, error) {
	c.inc("GetGroupVersion")
	return c.svc.GetGroupVersion(input)
}

// GetGroupVersionWithContext is a passthrough to the underlying GetGroupVersionWithContext method.
// It will increment the count of requests made to GetGroupVersion.
func (c *Greengrass) GetGroupVersionWithContext(ctx aws.Context, input *greengrass.GetGroupVersionInput, opts ...request.Option) (*greengrass.GetGroupVersionOutput, error) {
	c.inc("GetGroupVersion")
	return c.svc.GetGroupVersionWithContext(ctx, input, opts...)
}

// GetLoggerDefinitionRequest is a passthrough to the underlying GetLoggerDefinitionRequest.
// It will increment the count of requests made to GetLoggerDefinition.
func (c *Greengrass) GetLoggerDefinitionRequest(input *greengrass.GetLoggerDefinitionInput) (req *request.Request, output *greengrass.GetLoggerDefinitionOutput) {
	c.inc("GetLoggerDefinition")
	return c.svc.GetLoggerDefinitionRequest(input)
}

// GetLoggerDefinition is a passthrough to the underlying GetLoggerDefinition method.
// It will increment the count of requests made to GetLoggerDefinition.
func (c *Greengrass) GetLoggerDefinition(input *greengrass.GetLoggerDefinitionInput) (*greengrass.GetLoggerDefinitionOutput, error) {
	c.inc("GetLoggerDefinition")
	return c.svc.GetLoggerDefinition(input)
}

// GetLoggerDefinitionWithContext is a passthrough to the underlying GetLoggerDefinitionWithContext method.
// It will increment the count of requests made to GetLoggerDefinition.
func (c *Greengrass) GetLoggerDefinitionWithContext(ctx aws.Context, input *greengrass.GetLoggerDefinitionInput, opts ...request.Option) (*greengrass.GetLoggerDefinitionOutput, error) {
	c.inc("GetLoggerDefinition")
	return c.svc.GetLoggerDefinitionWithContext(ctx, input, opts...)
}

// GetLoggerDefinitionVersionRequest is a passthrough to the underlying GetLoggerDefinitionVersionRequest.
// It will increment the count of requests made to GetLoggerDefinitionVersion.
func (c *Greengrass) GetLoggerDefinitionVersionRequest(input *greengrass.GetLoggerDefinitionVersionInput) (req *request.Request, output *greengrass.GetLoggerDefinitionVersionOutput) {
	c.inc("GetLoggerDefinitionVersion")
	return c.svc.GetLoggerDefinitionVersionRequest(input)
}

// GetLoggerDefinitionVersion is a passthrough to the underlying GetLoggerDefinitionVersion method.
// It will increment the count of requests made to GetLoggerDefinitionVersion.
func (c *Greengrass) GetLoggerDefinitionVersion(input *greengrass.GetLoggerDefinitionVersionInput) (*greengrass.GetLoggerDefinitionVersionOutput, error) {
	c.inc("GetLoggerDefinitionVersion")
	return c.svc.GetLoggerDefinitionVersion(input)
}

// GetLoggerDefinitionVersionWithContext is a passthrough to the underlying GetLoggerDefinitionVersionWithContext method.
// It will increment the count of requests made to GetLoggerDefinitionVersion.
func (c *Greengrass) GetLoggerDefinitionVersionWithContext(ctx aws.Context, input *greengrass.GetLoggerDefinitionVersionInput, opts ...request.Option) (*greengrass.GetLoggerDefinitionVersionOutput, error) {
	c.inc("GetLoggerDefinitionVersion")
	return c.svc.GetLoggerDefinitionVersionWithContext(ctx, input, opts...)
}

// GetServiceRoleForAccountRequest is a passthrough to the underlying GetServiceRoleForAccountRequest.
// It will increment the count of requests made to GetServiceRoleForAccount.
func (c *Greengrass) GetServiceRoleForAccountRequest(input *greengrass.GetServiceRoleForAccountInput) (req *request.Request, output *greengrass.GetServiceRoleForAccountOutput) {
	c.inc("GetServiceRoleForAccount")
	return c.svc.GetServiceRoleForAccountRequest(input)
}

// GetServiceRoleForAccount is a passthrough to the underlying GetServiceRoleForAccount method.
// It will increment the count of requests made to GetServiceRoleForAccount.
func (c *Greengrass) GetServiceRoleForAccount(input *greengrass.GetServiceRoleForAccountInput) (*greengrass.GetServiceRoleForAccountOutput, error) {
	c.inc("GetServiceRoleForAccount")
	return c.svc.GetServiceRoleForAccount(input)
}

// GetServiceRoleForAccountWithContext is a passthrough to the underlying GetServiceRoleForAccountWithContext method.
// It will increment the count of requests made to GetServiceRoleForAccount.
func (c *Greengrass) GetServiceRoleForAccountWithContext(ctx aws.Context, input *greengrass.GetServiceRoleForAccountInput, opts ...request.Option) (*greengrass.GetServiceRoleForAccountOutput, error) {
	c.inc("GetServiceRoleForAccount")
	return c.svc.GetServiceRoleForAccountWithContext(ctx, input, opts...)
}

// GetSubscriptionDefinitionRequest is a passthrough to the underlying GetSubscriptionDefinitionRequest.
// It will increment the count of requests made to GetSubscriptionDefinition.
func (c *Greengrass) GetSubscriptionDefinitionRequest(input *greengrass.GetSubscriptionDefinitionInput) (req *request.Request, output *greengrass.GetSubscriptionDefinitionOutput) {
	c.inc("GetSubscriptionDefinition")
	return c.svc.GetSubscriptionDefinitionRequest(input)
}

// GetSubscriptionDefinition is a passthrough to the underlying GetSubscriptionDefinition method.
// It will increment the count of requests made to GetSubscriptionDefinition.
func (c *Greengrass) GetSubscriptionDefinition(input *greengrass.GetSubscriptionDefinitionInput) (*greengrass.GetSubscriptionDefinitionOutput, error) {
	c.inc("GetSubscriptionDefinition")
	return c.svc.GetSubscriptionDefinition(input)
}

// GetSubscriptionDefinitionWithContext is a passthrough to the underlying GetSubscriptionDefinitionWithContext method.
// It will increment the count of requests made to GetSubscriptionDefinition.
func (c *Greengrass) GetSubscriptionDefinitionWithContext(ctx aws.Context, input *greengrass.GetSubscriptionDefinitionInput, opts ...request.Option) (*greengrass.GetSubscriptionDefinitionOutput, error) {
	c.inc("GetSubscriptionDefinition")
	return c.svc.GetSubscriptionDefinitionWithContext(ctx, input, opts...)
}

// GetSubscriptionDefinitionVersionRequest is a passthrough to the underlying GetSubscriptionDefinitionVersionRequest.
// It will increment the count of requests made to GetSubscriptionDefinitionVersion.
func (c *Greengrass) GetSubscriptionDefinitionVersionRequest(input *greengrass.GetSubscriptionDefinitionVersionInput) (req *request.Request, output *greengrass.GetSubscriptionDefinitionVersionOutput) {
	c.inc("GetSubscriptionDefinitionVersion")
	return c.svc.GetSubscriptionDefinitionVersionRequest(input)
}

// GetSubscriptionDefinitionVersion is a passthrough to the underlying GetSubscriptionDefinitionVersion method.
// It will increment the count of requests made to GetSubscriptionDefinitionVersion.
func (c *Greengrass) GetSubscriptionDefinitionVersion(input *greengrass.GetSubscriptionDefinitionVersionInput) (*greengrass.GetSubscriptionDefinitionVersionOutput, error) {
	c.inc("GetSubscriptionDefinitionVersion")
	return c.svc.GetSubscriptionDefinitionVersion(input)
}

// GetSubscriptionDefinitionVersionWithContext is a passthrough to the underlying GetSubscriptionDefinitionVersionWithContext method.
// It will increment the count of requests made to GetSubscriptionDefinitionVersion.
func (c *Greengrass) GetSubscriptionDefinitionVersionWithContext(ctx aws.Context, input *greengrass.GetSubscriptionDefinitionVersionInput, opts ...request.Option) (*greengrass.GetSubscriptionDefinitionVersionOutput, error) {
	c.inc("GetSubscriptionDefinitionVersion")
	return c.svc.GetSubscriptionDefinitionVersionWithContext(ctx, input, opts...)
}

// ListCoreDefinitionVersionsRequest is a passthrough to the underlying ListCoreDefinitionVersionsRequest.
// It will increment the count of requests made to ListCoreDefinitionVersions.
func (c *Greengrass) ListCoreDefinitionVersionsRequest(input *greengrass.ListCoreDefinitionVersionsInput) (req *request.Request, output *greengrass.ListCoreDefinitionVersionsOutput) {
	c.inc("ListCoreDefinitionVersions")
	return c.svc.ListCoreDefinitionVersionsRequest(input)
}

// ListCoreDefinitionVersions is a passthrough to the underlying ListCoreDefinitionVersions method.
// It will increment the count of requests made to ListCoreDefinitionVersions.
func (c *Greengrass) ListCoreDefinitionVersions(input *greengrass.ListCoreDefinitionVersionsInput) (*greengrass.ListCoreDefinitionVersionsOutput, error) {
	c.inc("ListCoreDefinitionVersions")
	return c.svc.ListCoreDefinitionVersions(input)
}

// ListCoreDefinitionVersionsWithContext is a passthrough to the underlying ListCoreDefinitionVersionsWithContext method.
// It will increment the count of requests made to ListCoreDefinitionVersions.
func (c *Greengrass) ListCoreDefinitionVersionsWithContext(ctx aws.Context, input *greengrass.ListCoreDefinitionVersionsInput, opts ...request.Option) (*greengrass.ListCoreDefinitionVersionsOutput, error) {
	c.inc("ListCoreDefinitionVersions")
	return c.svc.ListCoreDefinitionVersionsWithContext(ctx, input, opts...)
}

// ListCoreDefinitionsRequest is a passthrough to the underlying ListCoreDefinitionsRequest.
// It will increment the count of requests made to ListCoreDefinitions.
func (c *Greengrass) ListCoreDefinitionsRequest(input *greengrass.ListCoreDefinitionsInput) (req *request.Request, output *greengrass.ListCoreDefinitionsOutput) {
	c.inc("ListCoreDefinitions")
	return c.svc.ListCoreDefinitionsRequest(input)
}

// ListCoreDefinitions is a passthrough to the underlying ListCoreDefinitions method.
// It will increment the count of requests made to ListCoreDefinitions.
func (c *Greengrass) ListCoreDefinitions(input *greengrass.ListCoreDefinitionsInput) (*greengrass.ListCoreDefinitionsOutput, error) {
	c.inc("ListCoreDefinitions")
	return c.svc.ListCoreDefinitions(input)
}

// ListCoreDefinitionsWithContext is a passthrough to the underlying ListCoreDefinitionsWithContext method.
// It will increment the count of requests made to ListCoreDefinitions.
func (c *Greengrass) ListCoreDefinitionsWithContext(ctx aws.Context, input *greengrass.ListCoreDefinitionsInput, opts ...request.Option) (*greengrass.ListCoreDefinitionsOutput, error) {
	c.inc("ListCoreDefinitions")
	return c.svc.ListCoreDefinitionsWithContext(ctx, input, opts...)
}

// ListDeploymentsRequest is a passthrough to the underlying ListDeploymentsRequest.
// It will increment the count of requests made to ListDeployments.
func (c *Greengrass) ListDeploymentsRequest(input *greengrass.ListDeploymentsInput) (req *request.Request, output *greengrass.ListDeploymentsOutput) {
	c.inc("ListDeployments")
	return c.svc.ListDeploymentsRequest(input)
}

// ListDeployments is a passthrough to the underlying ListDeployments method.
// It will increment the count of requests made to ListDeployments.
func (c *Greengrass) ListDeployments(input *greengrass.ListDeploymentsInput) (*greengrass.ListDeploymentsOutput, error) {
	c.inc("ListDeployments")
	return c.svc.ListDeployments(input)
}

// ListDeploymentsWithContext is a passthrough to the underlying ListDeploymentsWithContext method.
// It will increment the count of requests made to ListDeployments.
func (c *Greengrass) ListDeploymentsWithContext(ctx aws.Context, input *greengrass.ListDeploymentsInput, opts ...request.Option) (*greengrass.ListDeploymentsOutput, error) {
	c.inc("ListDeployments")
	return c.svc.ListDeploymentsWithContext(ctx, input, opts...)
}

// ListDeviceDefinitionVersionsRequest is a passthrough to the underlying ListDeviceDefinitionVersionsRequest.
// It will increment the count of requests made to ListDeviceDefinitionVersions.
func (c *Greengrass) ListDeviceDefinitionVersionsRequest(input *greengrass.ListDeviceDefinitionVersionsInput) (req *request.Request, output *greengrass.ListDeviceDefinitionVersionsOutput) {
	c.inc("ListDeviceDefinitionVersions")
	return c.svc.ListDeviceDefinitionVersionsRequest(input)
}

// ListDeviceDefinitionVersions is a passthrough to the underlying ListDeviceDefinitionVersions method.
// It will increment the count of requests made to ListDeviceDefinitionVersions.
func (c *Greengrass) ListDeviceDefinitionVersions(input *greengrass.ListDeviceDefinitionVersionsInput) (*greengrass.ListDeviceDefinitionVersionsOutput, error) {
	c.inc("ListDeviceDefinitionVersions")
	return c.svc.ListDeviceDefinitionVersions(input)
}

// ListDeviceDefinitionVersionsWithContext is a passthrough to the underlying ListDeviceDefinitionVersionsWithContext method.
// It will increment the count of requests made to ListDeviceDefinitionVersions.
func (c *Greengrass) ListDeviceDefinitionVersionsWithContext(ctx aws.Context, input *greengrass.ListDeviceDefinitionVersionsInput, opts ...request.Option) (*greengrass.ListDeviceDefinitionVersionsOutput, error) {
	c.inc("ListDeviceDefinitionVersions")
	return c.svc.ListDeviceDefinitionVersionsWithContext(ctx, input, opts...)
}

// ListDeviceDefinitionsRequest is a passthrough to the underlying ListDeviceDefinitionsRequest.
// It will increment the count of requests made to ListDeviceDefinitions.
func (c *Greengrass) ListDeviceDefinitionsRequest(input *greengrass.ListDeviceDefinitionsInput) (req *request.Request, output *greengrass.ListDeviceDefinitionsOutput) {
	c.inc("ListDeviceDefinitions")
	return c.svc.ListDeviceDefinitionsRequest(input)
}

// ListDeviceDefinitions is a passthrough to the underlying ListDeviceDefinitions method.
// It will increment the count of requests made to ListDeviceDefinitions.
func (c *Greengrass) ListDeviceDefinitions(input *greengrass.ListDeviceDefinitionsInput) (*greengrass.ListDeviceDefinitionsOutput, error) {
	c.inc("ListDeviceDefinitions")
	return c.svc.ListDeviceDefinitions(input)
}

// ListDeviceDefinitionsWithContext is a passthrough to the underlying ListDeviceDefinitionsWithContext method.
// It will increment the count of requests made to ListDeviceDefinitions.
func (c *Greengrass) ListDeviceDefinitionsWithContext(ctx aws.Context, input *greengrass.ListDeviceDefinitionsInput, opts ...request.Option) (*greengrass.ListDeviceDefinitionsOutput, error) {
	c.inc("ListDeviceDefinitions")
	return c.svc.ListDeviceDefinitionsWithContext(ctx, input, opts...)
}

// ListFunctionDefinitionVersionsRequest is a passthrough to the underlying ListFunctionDefinitionVersionsRequest.
// It will increment the count of requests made to ListFunctionDefinitionVersions.
func (c *Greengrass) ListFunctionDefinitionVersionsRequest(input *greengrass.ListFunctionDefinitionVersionsInput) (req *request.Request, output *greengrass.ListFunctionDefinitionVersionsOutput) {
	c.inc("ListFunctionDefinitionVersions")
	return c.svc.ListFunctionDefinitionVersionsRequest(input)
}

// ListFunctionDefinitionVersions is a passthrough to the underlying ListFunctionDefinitionVersions method.
// It will increment the count of requests made to ListFunctionDefinitionVersions.
func (c *Greengrass) ListFunctionDefinitionVersions(input *greengrass.ListFunctionDefinitionVersionsInput) (*greengrass.ListFunctionDefinitionVersionsOutput, error) {
	c.inc("ListFunctionDefinitionVersions")
	return c.svc.ListFunctionDefinitionVersions(input)
}

// ListFunctionDefinitionVersionsWithContext is a passthrough to the underlying ListFunctionDefinitionVersionsWithContext method.
// It will increment the count of requests made to ListFunctionDefinitionVersions.
func (c *Greengrass) ListFunctionDefinitionVersionsWithContext(ctx aws.Context, input *greengrass.ListFunctionDefinitionVersionsInput, opts ...request.Option) (*greengrass.ListFunctionDefinitionVersionsOutput, error) {
	c.inc("ListFunctionDefinitionVersions")
	return c.svc.ListFunctionDefinitionVersionsWithContext(ctx, input, opts...)
}

// ListFunctionDefinitionsRequest is a passthrough to the underlying ListFunctionDefinitionsRequest.
// It will increment the count of requests made to ListFunctionDefinitions.
func (c *Greengrass) ListFunctionDefinitionsRequest(input *greengrass.ListFunctionDefinitionsInput) (req *request.Request, output *greengrass.ListFunctionDefinitionsOutput) {
	c.inc("ListFunctionDefinitions")
	return c.svc.ListFunctionDefinitionsRequest(input)
}

// ListFunctionDefinitions is a passthrough to the underlying ListFunctionDefinitions method.
// It will increment the count of requests made to ListFunctionDefinitions.
func (c *Greengrass) ListFunctionDefinitions(input *greengrass.ListFunctionDefinitionsInput) (*greengrass.ListFunctionDefinitionsOutput, error) {
	c.inc("ListFunctionDefinitions")
	return c.svc.ListFunctionDefinitions(input)
}

// ListFunctionDefinitionsWithContext is a passthrough to the underlying ListFunctionDefinitionsWithContext method.
// It will increment the count of requests made to ListFunctionDefinitions.
func (c *Greengrass) ListFunctionDefinitionsWithContext(ctx aws.Context, input *greengrass.ListFunctionDefinitionsInput, opts ...request.Option) (*greengrass.ListFunctionDefinitionsOutput, error) {
	c.inc("ListFunctionDefinitions")
	return c.svc.ListFunctionDefinitionsWithContext(ctx, input, opts...)
}

// ListGroupCertificateAuthoritiesRequest is a passthrough to the underlying ListGroupCertificateAuthoritiesRequest.
// It will increment the count of requests made to ListGroupCertificateAuthorities.
func (c *Greengrass) ListGroupCertificateAuthoritiesRequest(input *greengrass.ListGroupCertificateAuthoritiesInput) (req *request.Request, output *greengrass.ListGroupCertificateAuthoritiesOutput) {
	c.inc("ListGroupCertificateAuthorities")
	return c.svc.ListGroupCertificateAuthoritiesRequest(input)
}

// ListGroupCertificateAuthorities is a passthrough to the underlying ListGroupCertificateAuthorities method.
// It will increment the count of requests made to ListGroupCertificateAuthorities.
func (c *Greengrass) ListGroupCertificateAuthorities(input *greengrass.ListGroupCertificateAuthoritiesInput) (*greengrass.ListGroupCertificateAuthoritiesOutput, error) {
	c.inc("ListGroupCertificateAuthorities")
	return c.svc.ListGroupCertificateAuthorities(input)
}

// ListGroupCertificateAuthoritiesWithContext is a passthrough to the underlying ListGroupCertificateAuthoritiesWithContext method.
// It will increment the count of requests made to ListGroupCertificateAuthorities.
func (c *Greengrass) ListGroupCertificateAuthoritiesWithContext(ctx aws.Context, input *greengrass.ListGroupCertificateAuthoritiesInput, opts ...request.Option) (*greengrass.ListGroupCertificateAuthoritiesOutput, error) {
	c.inc("ListGroupCertificateAuthorities")
	return c.svc.ListGroupCertificateAuthoritiesWithContext(ctx, input, opts...)
}

// ListGroupVersionsRequest is a passthrough to the underlying ListGroupVersionsRequest.
// It will increment the count of requests made to ListGroupVersions.
func (c *Greengrass) ListGroupVersionsRequest(input *greengrass.ListGroupVersionsInput) (req *request.Request, output *greengrass.ListGroupVersionsOutput) {
	c.inc("ListGroupVersions")
	return c.svc.ListGroupVersionsRequest(input)
}

// ListGroupVersions is a passthrough to the underlying ListGroupVersions method.
// It will increment the count of requests made to ListGroupVersions.
func (c *Greengrass) ListGroupVersions(input *greengrass.ListGroupVersionsInput) (*greengrass.ListGroupVersionsOutput, error) {
	c.inc("ListGroupVersions")
	return c.svc.ListGroupVersions(input)
}

// ListGroupVersionsWithContext is a passthrough to the underlying ListGroupVersionsWithContext method.
// It will increment the count of requests made to ListGroupVersions.
func (c *Greengrass) ListGroupVersionsWithContext(ctx aws.Context, input *greengrass.ListGroupVersionsInput, opts ...request.Option) (*greengrass.ListGroupVersionsOutput, error) {
	c.inc("ListGroupVersions")
	return c.svc.ListGroupVersionsWithContext(ctx, input, opts...)
}

// ListGroupsRequest is a passthrough to the underlying ListGroupsRequest.
// It will increment the count of requests made to ListGroups.
func (c *Greengrass) ListGroupsRequest(input *greengrass.ListGroupsInput) (req *request.Request, output *greengrass.ListGroupsOutput) {
	c.inc("ListGroups")
	return c.svc.ListGroupsRequest(input)
}

// ListGroups is a passthrough to the underlying ListGroups method.
// It will increment the count of requests made to ListGroups.
func (c *Greengrass) ListGroups(input *greengrass.ListGroupsInput) (*greengrass.ListGroupsOutput, error) {
	c.inc("ListGroups")
	return c.svc.ListGroups(input)
}

// ListGroupsWithContext is a passthrough to the underlying ListGroupsWithContext method.
// It will increment the count of requests made to ListGroups.
func (c *Greengrass) ListGroupsWithContext(ctx aws.Context, input *greengrass.ListGroupsInput, opts ...request.Option) (*greengrass.ListGroupsOutput, error) {
	c.inc("ListGroups")
	return c.svc.ListGroupsWithContext(ctx, input, opts...)
}

// ListLoggerDefinitionVersionsRequest is a passthrough to the underlying ListLoggerDefinitionVersionsRequest.
// It will increment the count of requests made to ListLoggerDefinitionVersions.
func (c *Greengrass) ListLoggerDefinitionVersionsRequest(input *greengrass.ListLoggerDefinitionVersionsInput) (req *request.Request, output *greengrass.ListLoggerDefinitionVersionsOutput) {
	c.inc("ListLoggerDefinitionVersions")
	return c.svc.ListLoggerDefinitionVersionsRequest(input)
}

// ListLoggerDefinitionVersions is a passthrough to the underlying ListLoggerDefinitionVersions method.
// It will increment the count of requests made to ListLoggerDefinitionVersions.
func (c *Greengrass) ListLoggerDefinitionVersions(input *greengrass.ListLoggerDefinitionVersionsInput) (*greengrass.ListLoggerDefinitionVersionsOutput, error) {
	c.inc("ListLoggerDefinitionVersions")
	return c.svc.ListLoggerDefinitionVersions(input)
}

// ListLoggerDefinitionVersionsWithContext is a passthrough to the underlying ListLoggerDefinitionVersionsWithContext method.
// It will increment the count of requests made to ListLoggerDefinitionVersions.
func (c *Greengrass) ListLoggerDefinitionVersionsWithContext(ctx aws.Context, input *greengrass.ListLoggerDefinitionVersionsInput, opts ...request.Option) (*greengrass.ListLoggerDefinitionVersionsOutput, error) {
	c.inc("ListLoggerDefinitionVersions")
	return c.svc.ListLoggerDefinitionVersionsWithContext(ctx, input, opts...)
}

// ListLoggerDefinitionsRequest is a passthrough to the underlying ListLoggerDefinitionsRequest.
// It will increment the count of requests made to ListLoggerDefinitions.
func (c *Greengrass) ListLoggerDefinitionsRequest(input *greengrass.ListLoggerDefinitionsInput) (req *request.Request, output *greengrass.ListLoggerDefinitionsOutput) {
	c.inc("ListLoggerDefinitions")
	return c.svc.ListLoggerDefinitionsRequest(input)
}

// ListLoggerDefinitions is a passthrough to the underlying ListLoggerDefinitions method.
// It will increment the count of requests made to ListLoggerDefinitions.
func (c *Greengrass) ListLoggerDefinitions(input *greengrass.ListLoggerDefinitionsInput) (*greengrass.ListLoggerDefinitionsOutput, error) {
	c.inc("ListLoggerDefinitions")
	return c.svc.ListLoggerDefinitions(input)
}

// ListLoggerDefinitionsWithContext is a passthrough to the underlying ListLoggerDefinitionsWithContext method.
// It will increment the count of requests made to ListLoggerDefinitions.
func (c *Greengrass) ListLoggerDefinitionsWithContext(ctx aws.Context, input *greengrass.ListLoggerDefinitionsInput, opts ...request.Option) (*greengrass.ListLoggerDefinitionsOutput, error) {
	c.inc("ListLoggerDefinitions")
	return c.svc.ListLoggerDefinitionsWithContext(ctx, input, opts...)
}

// ListSubscriptionDefinitionVersionsRequest is a passthrough to the underlying ListSubscriptionDefinitionVersionsRequest.
// It will increment the count of requests made to ListSubscriptionDefinitionVersions.
func (c *Greengrass) ListSubscriptionDefinitionVersionsRequest(input *greengrass.ListSubscriptionDefinitionVersionsInput) (req *request.Request, output *greengrass.ListSubscriptionDefinitionVersionsOutput) {
	c.inc("ListSubscriptionDefinitionVersions")
	return c.svc.ListSubscriptionDefinitionVersionsRequest(input)
}

// ListSubscriptionDefinitionVersions is a passthrough to the underlying ListSubscriptionDefinitionVersions method.
// It will increment the count of requests made to ListSubscriptionDefinitionVersions.
func (c *Greengrass) ListSubscriptionDefinitionVersions(input *greengrass.ListSubscriptionDefinitionVersionsInput) (*greengrass.ListSubscriptionDefinitionVersionsOutput, error) {
	c.inc("ListSubscriptionDefinitionVersions")
	return c.svc.ListSubscriptionDefinitionVersions(input)
}

// ListSubscriptionDefinitionVersionsWithContext is a passthrough to the underlying ListSubscriptionDefinitionVersionsWithContext method.
// It will increment the count of requests made to ListSubscriptionDefinitionVersions.
func (c *Greengrass) ListSubscriptionDefinitionVersionsWithContext(ctx aws.Context, input *greengrass.ListSubscriptionDefinitionVersionsInput, opts ...request.Option) (*greengrass.ListSubscriptionDefinitionVersionsOutput, error) {
	c.inc("ListSubscriptionDefinitionVersions")
	return c.svc.ListSubscriptionDefinitionVersionsWithContext(ctx, input, opts...)
}

// ListSubscriptionDefinitionsRequest is a passthrough to the underlying ListSubscriptionDefinitionsRequest.
// It will increment the count of requests made to ListSubscriptionDefinitions.
func (c *Greengrass) ListSubscriptionDefinitionsRequest(input *greengrass.ListSubscriptionDefinitionsInput) (req *request.Request, output *greengrass.ListSubscriptionDefinitionsOutput) {
	c.inc("ListSubscriptionDefinitions")
	return c.svc.ListSubscriptionDefinitionsRequest(input)
}

// ListSubscriptionDefinitions is a passthrough to the underlying ListSubscriptionDefinitions method.
// It will increment the count of requests made to ListSubscriptionDefinitions.
func (c *Greengrass) ListSubscriptionDefinitions(input *greengrass.ListSubscriptionDefinitionsInput) (*greengrass.ListSubscriptionDefinitionsOutput, error) {
	c.inc("ListSubscriptionDefinitions")
	return c.svc.ListSubscriptionDefinitions(input)
}

// ListSubscriptionDefinitionsWithContext is a passthrough to the underlying ListSubscriptionDefinitionsWithContext method.
// It will increment the count of requests made to ListSubscriptionDefinitions.
func (c *Greengrass) ListSubscriptionDefinitionsWithContext(ctx aws.Context, input *greengrass.ListSubscriptionDefinitionsInput, opts ...request.Option) (*greengrass.ListSubscriptionDefinitionsOutput, error) {
	c.inc("ListSubscriptionDefinitions")
	return c.svc.ListSubscriptionDefinitionsWithContext(ctx, input, opts...)
}

// ResetDeploymentsRequest is a passthrough to the underlying ResetDeploymentsRequest.
// It will increment the count of requests made to ResetDeployments.
func (c *Greengrass) ResetDeploymentsRequest(input *greengrass.ResetDeploymentsInput) (req *request.Request, output *greengrass.ResetDeploymentsOutput) {
	c.inc("ResetDeployments")
	return c.svc.ResetDeploymentsRequest(input)
}

// ResetDeployments is a passthrough to the underlying ResetDeployments method.
// It will increment the count of requests made to ResetDeployments.
func (c *Greengrass) ResetDeployments(input *greengrass.ResetDeploymentsInput) (*greengrass.ResetDeploymentsOutput, error) {
	c.inc("ResetDeployments")
	return c.svc.ResetDeployments(input)
}

// ResetDeploymentsWithContext is a passthrough to the underlying ResetDeploymentsWithContext method.
// It will increment the count of requests made to ResetDeployments.
func (c *Greengrass) ResetDeploymentsWithContext(ctx aws.Context, input *greengrass.ResetDeploymentsInput, opts ...request.Option) (*greengrass.ResetDeploymentsOutput, error) {
	c.inc("ResetDeployments")
	return c.svc.ResetDeploymentsWithContext(ctx, input, opts...)
}

// UpdateConnectivityInfoRequest is a passthrough to the underlying UpdateConnectivityInfoRequest.
// It will increment the count of requests made to UpdateConnectivityInfo.
func (c *Greengrass) UpdateConnectivityInfoRequest(input *greengrass.UpdateConnectivityInfoInput) (req *request.Request, output *greengrass.UpdateConnectivityInfoOutput) {
	c.inc("UpdateConnectivityInfo")
	return c.svc.UpdateConnectivityInfoRequest(input)
}

// UpdateConnectivityInfo is a passthrough to the underlying UpdateConnectivityInfo method.
// It will increment the count of requests made to UpdateConnectivityInfo.
func (c *Greengrass) UpdateConnectivityInfo(input *greengrass.UpdateConnectivityInfoInput) (*greengrass.UpdateConnectivityInfoOutput, error) {
	c.inc("UpdateConnectivityInfo")
	return c.svc.UpdateConnectivityInfo(input)
}

// UpdateConnectivityInfoWithContext is a passthrough to the underlying UpdateConnectivityInfoWithContext method.
// It will increment the count of requests made to UpdateConnectivityInfo.
func (c *Greengrass) UpdateConnectivityInfoWithContext(ctx aws.Context, input *greengrass.UpdateConnectivityInfoInput, opts ...request.Option) (*greengrass.UpdateConnectivityInfoOutput, error) {
	c.inc("UpdateConnectivityInfo")
	return c.svc.UpdateConnectivityInfoWithContext(ctx, input, opts...)
}

// UpdateCoreDefinitionRequest is a passthrough to the underlying UpdateCoreDefinitionRequest.
// It will increment the count of requests made to UpdateCoreDefinition.
func (c *Greengrass) UpdateCoreDefinitionRequest(input *greengrass.UpdateCoreDefinitionInput) (req *request.Request, output *greengrass.UpdateCoreDefinitionOutput) {
	c.inc("UpdateCoreDefinition")
	return c.svc.UpdateCoreDefinitionRequest(input)
}

// UpdateCoreDefinition is a passthrough to the underlying UpdateCoreDefinition method.
// It will increment the count of requests made to UpdateCoreDefinition.
func (c *Greengrass) UpdateCoreDefinition(input *greengrass.UpdateCoreDefinitionInput) (*greengrass.UpdateCoreDefinitionOutput, error) {
	c.inc("UpdateCoreDefinition")
	return c.svc.UpdateCoreDefinition(input)
}

// UpdateCoreDefinitionWithContext is a passthrough to the underlying UpdateCoreDefinitionWithContext method.
// It will increment the count of requests made to UpdateCoreDefinition.
func (c *Greengrass) UpdateCoreDefinitionWithContext(ctx aws.Context, input *greengrass.UpdateCoreDefinitionInput, opts ...request.Option) (*greengrass.UpdateCoreDefinitionOutput, error) {
	c.inc("UpdateCoreDefinition")
	return c.svc.UpdateCoreDefinitionWithContext(ctx, input, opts...)
}

// UpdateDeviceDefinitionRequest is a passthrough to the underlying UpdateDeviceDefinitionRequest.
// It will increment the count of requests made to UpdateDeviceDefinition.
func (c *Greengrass) UpdateDeviceDefinitionRequest(input *greengrass.UpdateDeviceDefinitionInput) (req *request.Request, output *greengrass.UpdateDeviceDefinitionOutput) {
	c.inc("UpdateDeviceDefinition")
	return c.svc.UpdateDeviceDefinitionRequest(input)
}

// UpdateDeviceDefinition is a passthrough to the underlying UpdateDeviceDefinition method.
// It will increment the count of requests made to UpdateDeviceDefinition.
func (c *Greengrass) UpdateDeviceDefinition(input *greengrass.UpdateDeviceDefinitionInput) (*greengrass.UpdateDeviceDefinitionOutput, error) {
	c.inc("UpdateDeviceDefinition")
	return c.svc.UpdateDeviceDefinition(input)
}

// UpdateDeviceDefinitionWithContext is a passthrough to the underlying UpdateDeviceDefinitionWithContext method.
// It will increment the count of requests made to UpdateDeviceDefinition.
func (c *Greengrass) UpdateDeviceDefinitionWithContext(ctx aws.Context, input *greengrass.UpdateDeviceDefinitionInput, opts ...request.Option) (*greengrass.UpdateDeviceDefinitionOutput, error) {
	c.inc("UpdateDeviceDefinition")
	return c.svc.UpdateDeviceDefinitionWithContext(ctx, input, opts...)
}

// UpdateFunctionDefinitionRequest is a passthrough to the underlying UpdateFunctionDefinitionRequest.
// It will increment the count of requests made to UpdateFunctionDefinition.
func (c *Greengrass) UpdateFunctionDefinitionRequest(input *greengrass.UpdateFunctionDefinitionInput) (req *request.Request, output *greengrass.UpdateFunctionDefinitionOutput) {
	c.inc("UpdateFunctionDefinition")
	return c.svc.UpdateFunctionDefinitionRequest(input)
}

// UpdateFunctionDefinition is a passthrough to the underlying UpdateFunctionDefinition method.
// It will increment the count of requests made to UpdateFunctionDefinition.
func (c *Greengrass) UpdateFunctionDefinition(input *greengrass.UpdateFunctionDefinitionInput) (*greengrass.UpdateFunctionDefinitionOutput, error) {
	c.inc("UpdateFunctionDefinition")
	return c.svc.UpdateFunctionDefinition(input)
}

// UpdateFunctionDefinitionWithContext is a passthrough to the underlying UpdateFunctionDefinitionWithContext method.
// It will increment the count of requests made to UpdateFunctionDefinition.
func (c *Greengrass) UpdateFunctionDefinitionWithContext(ctx aws.Context, input *greengrass.UpdateFunctionDefinitionInput, opts ...request.Option) (*greengrass.UpdateFunctionDefinitionOutput, error) {
	c.inc("UpdateFunctionDefinition")
	return c.svc.UpdateFunctionDefinitionWithContext(ctx, input, opts...)
}

// UpdateGroupRequest is a passthrough to the underlying UpdateGroupRequest.
// It will increment the count of requests made to UpdateGroup.
func (c *Greengrass) UpdateGroupRequest(input *greengrass.UpdateGroupInput) (req *request.Request, output *greengrass.UpdateGroupOutput) {
	c.inc("UpdateGroup")
	return c.svc.UpdateGroupRequest(input)
}

// UpdateGroup is a passthrough to the underlying UpdateGroup method.
// It will increment the count of requests made to UpdateGroup.
func (c *Greengrass) UpdateGroup(input *greengrass.UpdateGroupInput) (*greengrass.UpdateGroupOutput, error) {
	c.inc("UpdateGroup")
	return c.svc.UpdateGroup(input)
}

// UpdateGroupWithContext is a passthrough to the underlying UpdateGroupWithContext method.
// It will increment the count of requests made to UpdateGroup.
func (c *Greengrass) UpdateGroupWithContext(ctx aws.Context, input *greengrass.UpdateGroupInput, opts ...request.Option) (*greengrass.UpdateGroupOutput, error) {
	c.inc("UpdateGroup")
	return c.svc.UpdateGroupWithContext(ctx, input, opts...)
}

// UpdateGroupCertificateConfigurationRequest is a passthrough to the underlying UpdateGroupCertificateConfigurationRequest.
// It will increment the count of requests made to UpdateGroupCertificateConfiguration.
func (c *Greengrass) UpdateGroupCertificateConfigurationRequest(input *greengrass.UpdateGroupCertificateConfigurationInput) (req *request.Request, output *greengrass.UpdateGroupCertificateConfigurationOutput) {
	c.inc("UpdateGroupCertificateConfiguration")
	return c.svc.UpdateGroupCertificateConfigurationRequest(input)
}

// UpdateGroupCertificateConfiguration is a passthrough to the underlying UpdateGroupCertificateConfiguration method.
// It will increment the count of requests made to UpdateGroupCertificateConfiguration.
func (c *Greengrass) UpdateGroupCertificateConfiguration(input *greengrass.UpdateGroupCertificateConfigurationInput) (*greengrass.UpdateGroupCertificateConfigurationOutput, error) {
	c.inc("UpdateGroupCertificateConfiguration")
	return c.svc.UpdateGroupCertificateConfiguration(input)
}

// UpdateGroupCertificateConfigurationWithContext is a passthrough to the underlying UpdateGroupCertificateConfigurationWithContext method.
// It will increment the count of requests made to UpdateGroupCertificateConfiguration.
func (c *Greengrass) UpdateGroupCertificateConfigurationWithContext(ctx aws.Context, input *greengrass.UpdateGroupCertificateConfigurationInput, opts ...request.Option) (*greengrass.UpdateGroupCertificateConfigurationOutput, error) {
	c.inc("UpdateGroupCertificateConfiguration")
	return c.svc.UpdateGroupCertificateConfigurationWithContext(ctx, input, opts...)
}

// UpdateLoggerDefinitionRequest is a passthrough to the underlying UpdateLoggerDefinitionRequest.
// It will increment the count of requests made to UpdateLoggerDefinition.
func (c *Greengrass) UpdateLoggerDefinitionRequest(input *greengrass.UpdateLoggerDefinitionInput) (req *request.Request, output *greengrass.UpdateLoggerDefinitionOutput) {
	c.inc("UpdateLoggerDefinition")
	return c.svc.UpdateLoggerDefinitionRequest(input)
}

// UpdateLoggerDefinition is a passthrough to the underlying UpdateLoggerDefinition method.
// It will increment the count of requests made to UpdateLoggerDefinition.
func (c *Greengrass) UpdateLoggerDefinition(input *greengrass.UpdateLoggerDefinitionInput) (*greengrass.UpdateLoggerDefinitionOutput, error) {
	c.inc("UpdateLoggerDefinition")
	return c.svc.UpdateLoggerDefinition(input)
}

// UpdateLoggerDefinitionWithContext is a passthrough to the underlying UpdateLoggerDefinitionWithContext method.
// It will increment the count of requests made to UpdateLoggerDefinition.
func (c *Greengrass) UpdateLoggerDefinitionWithContext(ctx aws.Context, input *greengrass.UpdateLoggerDefinitionInput, opts ...request.Option) (*greengrass.UpdateLoggerDefinitionOutput, error) {
	c.inc("UpdateLoggerDefinition")
	return c.svc.UpdateLoggerDefinitionWithContext(ctx, input, opts...)
}

// UpdateSubscriptionDefinitionRequest is a passthrough to the underlying UpdateSubscriptionDefinitionRequest.
// It will increment the count of requests made to UpdateSubscriptionDefinition.
func (c *Greengrass) UpdateSubscriptionDefinitionRequest(input *greengrass.UpdateSubscriptionDefinitionInput) (req *request.Request, output *greengrass.UpdateSubscriptionDefinitionOutput) {
	c.inc("UpdateSubscriptionDefinition")
	return c.svc.UpdateSubscriptionDefinitionRequest(input)
}

// UpdateSubscriptionDefinition is a passthrough to the underlying UpdateSubscriptionDefinition method.
// It will increment the count of requests made to UpdateSubscriptionDefinition.
func (c *Greengrass) UpdateSubscriptionDefinition(input *greengrass.UpdateSubscriptionDefinitionInput) (*greengrass.UpdateSubscriptionDefinitionOutput, error) {
	c.inc("UpdateSubscriptionDefinition")
	return c.svc.UpdateSubscriptionDefinition(input)
}

// UpdateSubscriptionDefinitionWithContext is a passthrough to the underlying UpdateSubscriptionDefinitionWithContext method.
// It will increment the count of requests made to UpdateSubscriptionDefinition.
func (c *Greengrass) UpdateSubscriptionDefinitionWithContext(ctx aws.Context, input *greengrass.UpdateSubscriptionDefinitionInput, opts ...request.Option) (*greengrass.UpdateSubscriptionDefinitionOutput, error) {
	c.inc("UpdateSubscriptionDefinition")
	return c.svc.UpdateSubscriptionDefinitionWithContext(ctx, input, opts...)
}
