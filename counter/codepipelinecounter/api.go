// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package codepipelinecounter

import (
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/codepipeline"
)

// AcknowledgeJobRequest is a passthrough to the underlying AcknowledgeJobRequest.
// It will increment the count of requests made to AcknowledgeJob.
func (c *CodePipeline) AcknowledgeJobRequest(input *codepipeline.AcknowledgeJobInput) (req *request.Request, output *codepipeline.AcknowledgeJobOutput) {
	c.inc("AcknowledgeJob")
	return c.svc.AcknowledgeJobRequest(input)
}

// AcknowledgeJob is a passthrough to the underlying AcknowledgeJob method.
// It will increment the count of requests made to AcknowledgeJob.
func (c *CodePipeline) AcknowledgeJob(input *codepipeline.AcknowledgeJobInput) (*codepipeline.AcknowledgeJobOutput, error) {
	c.inc("AcknowledgeJob")
	return c.svc.AcknowledgeJob(input)
}

// AcknowledgeJobWithContext is a passthrough to the underlying AcknowledgeJobWithContext method.
// It will increment the count of requests made to AcknowledgeJob.
func (c *CodePipeline) AcknowledgeJobWithContext(ctx aws.Context, input *codepipeline.AcknowledgeJobInput, opts ...request.Option) (*codepipeline.AcknowledgeJobOutput, error) {
	c.inc("AcknowledgeJob")
	return c.svc.AcknowledgeJobWithContext(ctx, input, opts...)
}

// AcknowledgeThirdPartyJobRequest is a passthrough to the underlying AcknowledgeThirdPartyJobRequest.
// It will increment the count of requests made to AcknowledgeThirdPartyJob.
func (c *CodePipeline) AcknowledgeThirdPartyJobRequest(input *codepipeline.AcknowledgeThirdPartyJobInput) (req *request.Request, output *codepipeline.AcknowledgeThirdPartyJobOutput) {
	c.inc("AcknowledgeThirdPartyJob")
	return c.svc.AcknowledgeThirdPartyJobRequest(input)
}

// AcknowledgeThirdPartyJob is a passthrough to the underlying AcknowledgeThirdPartyJob method.
// It will increment the count of requests made to AcknowledgeThirdPartyJob.
func (c *CodePipeline) AcknowledgeThirdPartyJob(input *codepipeline.AcknowledgeThirdPartyJobInput) (*codepipeline.AcknowledgeThirdPartyJobOutput, error) {
	c.inc("AcknowledgeThirdPartyJob")
	return c.svc.AcknowledgeThirdPartyJob(input)
}

// AcknowledgeThirdPartyJobWithContext is a passthrough to the underlying AcknowledgeThirdPartyJobWithContext method.
// It will increment the count of requests made to AcknowledgeThirdPartyJob.
func (c *CodePipeline) AcknowledgeThirdPartyJobWithContext(ctx aws.Context, input *codepipeline.AcknowledgeThirdPartyJobInput, opts ...request.Option) (*codepipeline.AcknowledgeThirdPartyJobOutput, error) {
	c.inc("AcknowledgeThirdPartyJob")
	return c.svc.AcknowledgeThirdPartyJobWithContext(ctx, input, opts...)
}

// CreateCustomActionTypeRequest is a passthrough to the underlying CreateCustomActionTypeRequest.
// It will increment the count of requests made to CreateCustomActionType.
func (c *CodePipeline) CreateCustomActionTypeRequest(input *codepipeline.CreateCustomActionTypeInput) (req *request.Request, output *codepipeline.CreateCustomActionTypeOutput) {
	c.inc("CreateCustomActionType")
	return c.svc.CreateCustomActionTypeRequest(input)
}

// CreateCustomActionType is a passthrough to the underlying CreateCustomActionType method.
// It will increment the count of requests made to CreateCustomActionType.
func (c *CodePipeline) CreateCustomActionType(input *codepipeline.CreateCustomActionTypeInput) (*codepipeline.CreateCustomActionTypeOutput, error) {
	c.inc("CreateCustomActionType")
	return c.svc.CreateCustomActionType(input)
}

// CreateCustomActionTypeWithContext is a passthrough to the underlying CreateCustomActionTypeWithContext method.
// It will increment the count of requests made to CreateCustomActionType.
func (c *CodePipeline) CreateCustomActionTypeWithContext(ctx aws.Context, input *codepipeline.CreateCustomActionTypeInput, opts ...request.Option) (*codepipeline.CreateCustomActionTypeOutput, error) {
	c.inc("CreateCustomActionType")
	return c.svc.CreateCustomActionTypeWithContext(ctx, input, opts...)
}

// CreatePipelineRequest is a passthrough to the underlying CreatePipelineRequest.
// It will increment the count of requests made to CreatePipeline.
func (c *CodePipeline) CreatePipelineRequest(input *codepipeline.CreatePipelineInput) (req *request.Request, output *codepipeline.CreatePipelineOutput) {
	c.inc("CreatePipeline")
	return c.svc.CreatePipelineRequest(input)
}

// CreatePipeline is a passthrough to the underlying CreatePipeline method.
// It will increment the count of requests made to CreatePipeline.
func (c *CodePipeline) CreatePipeline(input *codepipeline.CreatePipelineInput) (*codepipeline.CreatePipelineOutput, error) {
	c.inc("CreatePipeline")
	return c.svc.CreatePipeline(input)
}

// CreatePipelineWithContext is a passthrough to the underlying CreatePipelineWithContext method.
// It will increment the count of requests made to CreatePipeline.
func (c *CodePipeline) CreatePipelineWithContext(ctx aws.Context, input *codepipeline.CreatePipelineInput, opts ...request.Option) (*codepipeline.CreatePipelineOutput, error) {
	c.inc("CreatePipeline")
	return c.svc.CreatePipelineWithContext(ctx, input, opts...)
}

// DeleteCustomActionTypeRequest is a passthrough to the underlying DeleteCustomActionTypeRequest.
// It will increment the count of requests made to DeleteCustomActionType.
func (c *CodePipeline) DeleteCustomActionTypeRequest(input *codepipeline.DeleteCustomActionTypeInput) (req *request.Request, output *codepipeline.DeleteCustomActionTypeOutput) {
	c.inc("DeleteCustomActionType")
	return c.svc.DeleteCustomActionTypeRequest(input)
}

// DeleteCustomActionType is a passthrough to the underlying DeleteCustomActionType method.
// It will increment the count of requests made to DeleteCustomActionType.
func (c *CodePipeline) DeleteCustomActionType(input *codepipeline.DeleteCustomActionTypeInput) (*codepipeline.DeleteCustomActionTypeOutput, error) {
	c.inc("DeleteCustomActionType")
	return c.svc.DeleteCustomActionType(input)
}

// DeleteCustomActionTypeWithContext is a passthrough to the underlying DeleteCustomActionTypeWithContext method.
// It will increment the count of requests made to DeleteCustomActionType.
func (c *CodePipeline) DeleteCustomActionTypeWithContext(ctx aws.Context, input *codepipeline.DeleteCustomActionTypeInput, opts ...request.Option) (*codepipeline.DeleteCustomActionTypeOutput, error) {
	c.inc("DeleteCustomActionType")
	return c.svc.DeleteCustomActionTypeWithContext(ctx, input, opts...)
}

// DeletePipelineRequest is a passthrough to the underlying DeletePipelineRequest.
// It will increment the count of requests made to DeletePipeline.
func (c *CodePipeline) DeletePipelineRequest(input *codepipeline.DeletePipelineInput) (req *request.Request, output *codepipeline.DeletePipelineOutput) {
	c.inc("DeletePipeline")
	return c.svc.DeletePipelineRequest(input)
}

// DeletePipeline is a passthrough to the underlying DeletePipeline method.
// It will increment the count of requests made to DeletePipeline.
func (c *CodePipeline) DeletePipeline(input *codepipeline.DeletePipelineInput) (*codepipeline.DeletePipelineOutput, error) {
	c.inc("DeletePipeline")
	return c.svc.DeletePipeline(input)
}

// DeletePipelineWithContext is a passthrough to the underlying DeletePipelineWithContext method.
// It will increment the count of requests made to DeletePipeline.
func (c *CodePipeline) DeletePipelineWithContext(ctx aws.Context, input *codepipeline.DeletePipelineInput, opts ...request.Option) (*codepipeline.DeletePipelineOutput, error) {
	c.inc("DeletePipeline")
	return c.svc.DeletePipelineWithContext(ctx, input, opts...)
}

// DisableStageTransitionRequest is a passthrough to the underlying DisableStageTransitionRequest.
// It will increment the count of requests made to DisableStageTransition.
func (c *CodePipeline) DisableStageTransitionRequest(input *codepipeline.DisableStageTransitionInput) (req *request.Request, output *codepipeline.DisableStageTransitionOutput) {
	c.inc("DisableStageTransition")
	return c.svc.DisableStageTransitionRequest(input)
}

// DisableStageTransition is a passthrough to the underlying DisableStageTransition method.
// It will increment the count of requests made to DisableStageTransition.
func (c *CodePipeline) DisableStageTransition(input *codepipeline.DisableStageTransitionInput) (*codepipeline.DisableStageTransitionOutput, error) {
	c.inc("DisableStageTransition")
	return c.svc.DisableStageTransition(input)
}

// DisableStageTransitionWithContext is a passthrough to the underlying DisableStageTransitionWithContext method.
// It will increment the count of requests made to DisableStageTransition.
func (c *CodePipeline) DisableStageTransitionWithContext(ctx aws.Context, input *codepipeline.DisableStageTransitionInput, opts ...request.Option) (*codepipeline.DisableStageTransitionOutput, error) {
	c.inc("DisableStageTransition")
	return c.svc.DisableStageTransitionWithContext(ctx, input, opts...)
}

// EnableStageTransitionRequest is a passthrough to the underlying EnableStageTransitionRequest.
// It will increment the count of requests made to EnableStageTransition.
func (c *CodePipeline) EnableStageTransitionRequest(input *codepipeline.EnableStageTransitionInput) (req *request.Request, output *codepipeline.EnableStageTransitionOutput) {
	c.inc("EnableStageTransition")
	return c.svc.EnableStageTransitionRequest(input)
}

// EnableStageTransition is a passthrough to the underlying EnableStageTransition method.
// It will increment the count of requests made to EnableStageTransition.
func (c *CodePipeline) EnableStageTransition(input *codepipeline.EnableStageTransitionInput) (*codepipeline.EnableStageTransitionOutput, error) {
	c.inc("EnableStageTransition")
	return c.svc.EnableStageTransition(input)
}

// EnableStageTransitionWithContext is a passthrough to the underlying EnableStageTransitionWithContext method.
// It will increment the count of requests made to EnableStageTransition.
func (c *CodePipeline) EnableStageTransitionWithContext(ctx aws.Context, input *codepipeline.EnableStageTransitionInput, opts ...request.Option) (*codepipeline.EnableStageTransitionOutput, error) {
	c.inc("EnableStageTransition")
	return c.svc.EnableStageTransitionWithContext(ctx, input, opts...)
}

// GetJobDetailsRequest is a passthrough to the underlying GetJobDetailsRequest.
// It will increment the count of requests made to GetJobDetails.
func (c *CodePipeline) GetJobDetailsRequest(input *codepipeline.GetJobDetailsInput) (req *request.Request, output *codepipeline.GetJobDetailsOutput) {
	c.inc("GetJobDetails")
	return c.svc.GetJobDetailsRequest(input)
}

// GetJobDetails is a passthrough to the underlying GetJobDetails method.
// It will increment the count of requests made to GetJobDetails.
func (c *CodePipeline) GetJobDetails(input *codepipeline.GetJobDetailsInput) (*codepipeline.GetJobDetailsOutput, error) {
	c.inc("GetJobDetails")
	return c.svc.GetJobDetails(input)
}

// GetJobDetailsWithContext is a passthrough to the underlying GetJobDetailsWithContext method.
// It will increment the count of requests made to GetJobDetails.
func (c *CodePipeline) GetJobDetailsWithContext(ctx aws.Context, input *codepipeline.GetJobDetailsInput, opts ...request.Option) (*codepipeline.GetJobDetailsOutput, error) {
	c.inc("GetJobDetails")
	return c.svc.GetJobDetailsWithContext(ctx, input, opts...)
}

// GetPipelineRequest is a passthrough to the underlying GetPipelineRequest.
// It will increment the count of requests made to GetPipeline.
func (c *CodePipeline) GetPipelineRequest(input *codepipeline.GetPipelineInput) (req *request.Request, output *codepipeline.GetPipelineOutput) {
	c.inc("GetPipeline")
	return c.svc.GetPipelineRequest(input)
}

// GetPipeline is a passthrough to the underlying GetPipeline method.
// It will increment the count of requests made to GetPipeline.
func (c *CodePipeline) GetPipeline(input *codepipeline.GetPipelineInput) (*codepipeline.GetPipelineOutput, error) {
	c.inc("GetPipeline")
	return c.svc.GetPipeline(input)
}

// GetPipelineWithContext is a passthrough to the underlying GetPipelineWithContext method.
// It will increment the count of requests made to GetPipeline.
func (c *CodePipeline) GetPipelineWithContext(ctx aws.Context, input *codepipeline.GetPipelineInput, opts ...request.Option) (*codepipeline.GetPipelineOutput, error) {
	c.inc("GetPipeline")
	return c.svc.GetPipelineWithContext(ctx, input, opts...)
}

// GetPipelineExecutionRequest is a passthrough to the underlying GetPipelineExecutionRequest.
// It will increment the count of requests made to GetPipelineExecution.
func (c *CodePipeline) GetPipelineExecutionRequest(input *codepipeline.GetPipelineExecutionInput) (req *request.Request, output *codepipeline.GetPipelineExecutionOutput) {
	c.inc("GetPipelineExecution")
	return c.svc.GetPipelineExecutionRequest(input)
}

// GetPipelineExecution is a passthrough to the underlying GetPipelineExecution method.
// It will increment the count of requests made to GetPipelineExecution.
func (c *CodePipeline) GetPipelineExecution(input *codepipeline.GetPipelineExecutionInput) (*codepipeline.GetPipelineExecutionOutput, error) {
	c.inc("GetPipelineExecution")
	return c.svc.GetPipelineExecution(input)
}

// GetPipelineExecutionWithContext is a passthrough to the underlying GetPipelineExecutionWithContext method.
// It will increment the count of requests made to GetPipelineExecution.
func (c *CodePipeline) GetPipelineExecutionWithContext(ctx aws.Context, input *codepipeline.GetPipelineExecutionInput, opts ...request.Option) (*codepipeline.GetPipelineExecutionOutput, error) {
	c.inc("GetPipelineExecution")
	return c.svc.GetPipelineExecutionWithContext(ctx, input, opts...)
}

// GetPipelineStateRequest is a passthrough to the underlying GetPipelineStateRequest.
// It will increment the count of requests made to GetPipelineState.
func (c *CodePipeline) GetPipelineStateRequest(input *codepipeline.GetPipelineStateInput) (req *request.Request, output *codepipeline.GetPipelineStateOutput) {
	c.inc("GetPipelineState")
	return c.svc.GetPipelineStateRequest(input)
}

// GetPipelineState is a passthrough to the underlying GetPipelineState method.
// It will increment the count of requests made to GetPipelineState.
func (c *CodePipeline) GetPipelineState(input *codepipeline.GetPipelineStateInput) (*codepipeline.GetPipelineStateOutput, error) {
	c.inc("GetPipelineState")
	return c.svc.GetPipelineState(input)
}

// GetPipelineStateWithContext is a passthrough to the underlying GetPipelineStateWithContext method.
// It will increment the count of requests made to GetPipelineState.
func (c *CodePipeline) GetPipelineStateWithContext(ctx aws.Context, input *codepipeline.GetPipelineStateInput, opts ...request.Option) (*codepipeline.GetPipelineStateOutput, error) {
	c.inc("GetPipelineState")
	return c.svc.GetPipelineStateWithContext(ctx, input, opts...)
}

// GetThirdPartyJobDetailsRequest is a passthrough to the underlying GetThirdPartyJobDetailsRequest.
// It will increment the count of requests made to GetThirdPartyJobDetails.
func (c *CodePipeline) GetThirdPartyJobDetailsRequest(input *codepipeline.GetThirdPartyJobDetailsInput) (req *request.Request, output *codepipeline.GetThirdPartyJobDetailsOutput) {
	c.inc("GetThirdPartyJobDetails")
	return c.svc.GetThirdPartyJobDetailsRequest(input)
}

// GetThirdPartyJobDetails is a passthrough to the underlying GetThirdPartyJobDetails method.
// It will increment the count of requests made to GetThirdPartyJobDetails.
func (c *CodePipeline) GetThirdPartyJobDetails(input *codepipeline.GetThirdPartyJobDetailsInput) (*codepipeline.GetThirdPartyJobDetailsOutput, error) {
	c.inc("GetThirdPartyJobDetails")
	return c.svc.GetThirdPartyJobDetails(input)
}

// GetThirdPartyJobDetailsWithContext is a passthrough to the underlying GetThirdPartyJobDetailsWithContext method.
// It will increment the count of requests made to GetThirdPartyJobDetails.
func (c *CodePipeline) GetThirdPartyJobDetailsWithContext(ctx aws.Context, input *codepipeline.GetThirdPartyJobDetailsInput, opts ...request.Option) (*codepipeline.GetThirdPartyJobDetailsOutput, error) {
	c.inc("GetThirdPartyJobDetails")
	return c.svc.GetThirdPartyJobDetailsWithContext(ctx, input, opts...)
}

// ListActionTypesRequest is a passthrough to the underlying ListActionTypesRequest.
// It will increment the count of requests made to ListActionTypes.
func (c *CodePipeline) ListActionTypesRequest(input *codepipeline.ListActionTypesInput) (req *request.Request, output *codepipeline.ListActionTypesOutput) {
	c.inc("ListActionTypes")
	return c.svc.ListActionTypesRequest(input)
}

// ListActionTypes is a passthrough to the underlying ListActionTypes method.
// It will increment the count of requests made to ListActionTypes.
func (c *CodePipeline) ListActionTypes(input *codepipeline.ListActionTypesInput) (*codepipeline.ListActionTypesOutput, error) {
	c.inc("ListActionTypes")
	return c.svc.ListActionTypes(input)
}

// ListActionTypesWithContext is a passthrough to the underlying ListActionTypesWithContext method.
// It will increment the count of requests made to ListActionTypes.
func (c *CodePipeline) ListActionTypesWithContext(ctx aws.Context, input *codepipeline.ListActionTypesInput, opts ...request.Option) (*codepipeline.ListActionTypesOutput, error) {
	c.inc("ListActionTypes")
	return c.svc.ListActionTypesWithContext(ctx, input, opts...)
}

// ListPipelineExecutionsRequest is a passthrough to the underlying ListPipelineExecutionsRequest.
// It will increment the count of requests made to ListPipelineExecutions.
func (c *CodePipeline) ListPipelineExecutionsRequest(input *codepipeline.ListPipelineExecutionsInput) (req *request.Request, output *codepipeline.ListPipelineExecutionsOutput) {
	c.inc("ListPipelineExecutions")
	return c.svc.ListPipelineExecutionsRequest(input)
}

// ListPipelineExecutions is a passthrough to the underlying ListPipelineExecutions method.
// It will increment the count of requests made to ListPipelineExecutions.
func (c *CodePipeline) ListPipelineExecutions(input *codepipeline.ListPipelineExecutionsInput) (*codepipeline.ListPipelineExecutionsOutput, error) {
	c.inc("ListPipelineExecutions")
	return c.svc.ListPipelineExecutions(input)
}

// ListPipelineExecutionsWithContext is a passthrough to the underlying ListPipelineExecutionsWithContext method.
// It will increment the count of requests made to ListPipelineExecutions.
func (c *CodePipeline) ListPipelineExecutionsWithContext(ctx aws.Context, input *codepipeline.ListPipelineExecutionsInput, opts ...request.Option) (*codepipeline.ListPipelineExecutionsOutput, error) {
	c.inc("ListPipelineExecutions")
	return c.svc.ListPipelineExecutionsWithContext(ctx, input, opts...)
}

// ListPipelinesRequest is a passthrough to the underlying ListPipelinesRequest.
// It will increment the count of requests made to ListPipelines.
func (c *CodePipeline) ListPipelinesRequest(input *codepipeline.ListPipelinesInput) (req *request.Request, output *codepipeline.ListPipelinesOutput) {
	c.inc("ListPipelines")
	return c.svc.ListPipelinesRequest(input)
}

// ListPipelines is a passthrough to the underlying ListPipelines method.
// It will increment the count of requests made to ListPipelines.
func (c *CodePipeline) ListPipelines(input *codepipeline.ListPipelinesInput) (*codepipeline.ListPipelinesOutput, error) {
	c.inc("ListPipelines")
	return c.svc.ListPipelines(input)
}

// ListPipelinesWithContext is a passthrough to the underlying ListPipelinesWithContext method.
// It will increment the count of requests made to ListPipelines.
func (c *CodePipeline) ListPipelinesWithContext(ctx aws.Context, input *codepipeline.ListPipelinesInput, opts ...request.Option) (*codepipeline.ListPipelinesOutput, error) {
	c.inc("ListPipelines")
	return c.svc.ListPipelinesWithContext(ctx, input, opts...)
}

// PollForJobsRequest is a passthrough to the underlying PollForJobsRequest.
// It will increment the count of requests made to PollForJobs.
func (c *CodePipeline) PollForJobsRequest(input *codepipeline.PollForJobsInput) (req *request.Request, output *codepipeline.PollForJobsOutput) {
	c.inc("PollForJobs")
	return c.svc.PollForJobsRequest(input)
}

// PollForJobs is a passthrough to the underlying PollForJobs method.
// It will increment the count of requests made to PollForJobs.
func (c *CodePipeline) PollForJobs(input *codepipeline.PollForJobsInput) (*codepipeline.PollForJobsOutput, error) {
	c.inc("PollForJobs")
	return c.svc.PollForJobs(input)
}

// PollForJobsWithContext is a passthrough to the underlying PollForJobsWithContext method.
// It will increment the count of requests made to PollForJobs.
func (c *CodePipeline) PollForJobsWithContext(ctx aws.Context, input *codepipeline.PollForJobsInput, opts ...request.Option) (*codepipeline.PollForJobsOutput, error) {
	c.inc("PollForJobs")
	return c.svc.PollForJobsWithContext(ctx, input, opts...)
}

// PollForThirdPartyJobsRequest is a passthrough to the underlying PollForThirdPartyJobsRequest.
// It will increment the count of requests made to PollForThirdPartyJobs.
func (c *CodePipeline) PollForThirdPartyJobsRequest(input *codepipeline.PollForThirdPartyJobsInput) (req *request.Request, output *codepipeline.PollForThirdPartyJobsOutput) {
	c.inc("PollForThirdPartyJobs")
	return c.svc.PollForThirdPartyJobsRequest(input)
}

// PollForThirdPartyJobs is a passthrough to the underlying PollForThirdPartyJobs method.
// It will increment the count of requests made to PollForThirdPartyJobs.
func (c *CodePipeline) PollForThirdPartyJobs(input *codepipeline.PollForThirdPartyJobsInput) (*codepipeline.PollForThirdPartyJobsOutput, error) {
	c.inc("PollForThirdPartyJobs")
	return c.svc.PollForThirdPartyJobs(input)
}

// PollForThirdPartyJobsWithContext is a passthrough to the underlying PollForThirdPartyJobsWithContext method.
// It will increment the count of requests made to PollForThirdPartyJobs.
func (c *CodePipeline) PollForThirdPartyJobsWithContext(ctx aws.Context, input *codepipeline.PollForThirdPartyJobsInput, opts ...request.Option) (*codepipeline.PollForThirdPartyJobsOutput, error) {
	c.inc("PollForThirdPartyJobs")
	return c.svc.PollForThirdPartyJobsWithContext(ctx, input, opts...)
}

// PutActionRevisionRequest is a passthrough to the underlying PutActionRevisionRequest.
// It will increment the count of requests made to PutActionRevision.
func (c *CodePipeline) PutActionRevisionRequest(input *codepipeline.PutActionRevisionInput) (req *request.Request, output *codepipeline.PutActionRevisionOutput) {
	c.inc("PutActionRevision")
	return c.svc.PutActionRevisionRequest(input)
}

// PutActionRevision is a passthrough to the underlying PutActionRevision method.
// It will increment the count of requests made to PutActionRevision.
func (c *CodePipeline) PutActionRevision(input *codepipeline.PutActionRevisionInput) (*codepipeline.PutActionRevisionOutput, error) {
	c.inc("PutActionRevision")
	return c.svc.PutActionRevision(input)
}

// PutActionRevisionWithContext is a passthrough to the underlying PutActionRevisionWithContext method.
// It will increment the count of requests made to PutActionRevision.
func (c *CodePipeline) PutActionRevisionWithContext(ctx aws.Context, input *codepipeline.PutActionRevisionInput, opts ...request.Option) (*codepipeline.PutActionRevisionOutput, error) {
	c.inc("PutActionRevision")
	return c.svc.PutActionRevisionWithContext(ctx, input, opts...)
}

// PutApprovalResultRequest is a passthrough to the underlying PutApprovalResultRequest.
// It will increment the count of requests made to PutApprovalResult.
func (c *CodePipeline) PutApprovalResultRequest(input *codepipeline.PutApprovalResultInput) (req *request.Request, output *codepipeline.PutApprovalResultOutput) {
	c.inc("PutApprovalResult")
	return c.svc.PutApprovalResultRequest(input)
}

// PutApprovalResult is a passthrough to the underlying PutApprovalResult method.
// It will increment the count of requests made to PutApprovalResult.
func (c *CodePipeline) PutApprovalResult(input *codepipeline.PutApprovalResultInput) (*codepipeline.PutApprovalResultOutput, error) {
	c.inc("PutApprovalResult")
	return c.svc.PutApprovalResult(input)
}

// PutApprovalResultWithContext is a passthrough to the underlying PutApprovalResultWithContext method.
// It will increment the count of requests made to PutApprovalResult.
func (c *CodePipeline) PutApprovalResultWithContext(ctx aws.Context, input *codepipeline.PutApprovalResultInput, opts ...request.Option) (*codepipeline.PutApprovalResultOutput, error) {
	c.inc("PutApprovalResult")
	return c.svc.PutApprovalResultWithContext(ctx, input, opts...)
}

// PutJobFailureResultRequest is a passthrough to the underlying PutJobFailureResultRequest.
// It will increment the count of requests made to PutJobFailureResult.
func (c *CodePipeline) PutJobFailureResultRequest(input *codepipeline.PutJobFailureResultInput) (req *request.Request, output *codepipeline.PutJobFailureResultOutput) {
	c.inc("PutJobFailureResult")
	return c.svc.PutJobFailureResultRequest(input)
}

// PutJobFailureResult is a passthrough to the underlying PutJobFailureResult method.
// It will increment the count of requests made to PutJobFailureResult.
func (c *CodePipeline) PutJobFailureResult(input *codepipeline.PutJobFailureResultInput) (*codepipeline.PutJobFailureResultOutput, error) {
	c.inc("PutJobFailureResult")
	return c.svc.PutJobFailureResult(input)
}

// PutJobFailureResultWithContext is a passthrough to the underlying PutJobFailureResultWithContext method.
// It will increment the count of requests made to PutJobFailureResult.
func (c *CodePipeline) PutJobFailureResultWithContext(ctx aws.Context, input *codepipeline.PutJobFailureResultInput, opts ...request.Option) (*codepipeline.PutJobFailureResultOutput, error) {
	c.inc("PutJobFailureResult")
	return c.svc.PutJobFailureResultWithContext(ctx, input, opts...)
}

// PutJobSuccessResultRequest is a passthrough to the underlying PutJobSuccessResultRequest.
// It will increment the count of requests made to PutJobSuccessResult.
func (c *CodePipeline) PutJobSuccessResultRequest(input *codepipeline.PutJobSuccessResultInput) (req *request.Request, output *codepipeline.PutJobSuccessResultOutput) {
	c.inc("PutJobSuccessResult")
	return c.svc.PutJobSuccessResultRequest(input)
}

// PutJobSuccessResult is a passthrough to the underlying PutJobSuccessResult method.
// It will increment the count of requests made to PutJobSuccessResult.
func (c *CodePipeline) PutJobSuccessResult(input *codepipeline.PutJobSuccessResultInput) (*codepipeline.PutJobSuccessResultOutput, error) {
	c.inc("PutJobSuccessResult")
	return c.svc.PutJobSuccessResult(input)
}

// PutJobSuccessResultWithContext is a passthrough to the underlying PutJobSuccessResultWithContext method.
// It will increment the count of requests made to PutJobSuccessResult.
func (c *CodePipeline) PutJobSuccessResultWithContext(ctx aws.Context, input *codepipeline.PutJobSuccessResultInput, opts ...request.Option) (*codepipeline.PutJobSuccessResultOutput, error) {
	c.inc("PutJobSuccessResult")
	return c.svc.PutJobSuccessResultWithContext(ctx, input, opts...)
}

// PutThirdPartyJobFailureResultRequest is a passthrough to the underlying PutThirdPartyJobFailureResultRequest.
// It will increment the count of requests made to PutThirdPartyJobFailureResult.
func (c *CodePipeline) PutThirdPartyJobFailureResultRequest(input *codepipeline.PutThirdPartyJobFailureResultInput) (req *request.Request, output *codepipeline.PutThirdPartyJobFailureResultOutput) {
	c.inc("PutThirdPartyJobFailureResult")
	return c.svc.PutThirdPartyJobFailureResultRequest(input)
}

// PutThirdPartyJobFailureResult is a passthrough to the underlying PutThirdPartyJobFailureResult method.
// It will increment the count of requests made to PutThirdPartyJobFailureResult.
func (c *CodePipeline) PutThirdPartyJobFailureResult(input *codepipeline.PutThirdPartyJobFailureResultInput) (*codepipeline.PutThirdPartyJobFailureResultOutput, error) {
	c.inc("PutThirdPartyJobFailureResult")
	return c.svc.PutThirdPartyJobFailureResult(input)
}

// PutThirdPartyJobFailureResultWithContext is a passthrough to the underlying PutThirdPartyJobFailureResultWithContext method.
// It will increment the count of requests made to PutThirdPartyJobFailureResult.
func (c *CodePipeline) PutThirdPartyJobFailureResultWithContext(ctx aws.Context, input *codepipeline.PutThirdPartyJobFailureResultInput, opts ...request.Option) (*codepipeline.PutThirdPartyJobFailureResultOutput, error) {
	c.inc("PutThirdPartyJobFailureResult")
	return c.svc.PutThirdPartyJobFailureResultWithContext(ctx, input, opts...)
}

// PutThirdPartyJobSuccessResultRequest is a passthrough to the underlying PutThirdPartyJobSuccessResultRequest.
// It will increment the count of requests made to PutThirdPartyJobSuccessResult.
func (c *CodePipeline) PutThirdPartyJobSuccessResultRequest(input *codepipeline.PutThirdPartyJobSuccessResultInput) (req *request.Request, output *codepipeline.PutThirdPartyJobSuccessResultOutput) {
	c.inc("PutThirdPartyJobSuccessResult")
	return c.svc.PutThirdPartyJobSuccessResultRequest(input)
}

// PutThirdPartyJobSuccessResult is a passthrough to the underlying PutThirdPartyJobSuccessResult method.
// It will increment the count of requests made to PutThirdPartyJobSuccessResult.
func (c *CodePipeline) PutThirdPartyJobSuccessResult(input *codepipeline.PutThirdPartyJobSuccessResultInput) (*codepipeline.PutThirdPartyJobSuccessResultOutput, error) {
	c.inc("PutThirdPartyJobSuccessResult")
	return c.svc.PutThirdPartyJobSuccessResult(input)
}

// PutThirdPartyJobSuccessResultWithContext is a passthrough to the underlying PutThirdPartyJobSuccessResultWithContext method.
// It will increment the count of requests made to PutThirdPartyJobSuccessResult.
func (c *CodePipeline) PutThirdPartyJobSuccessResultWithContext(ctx aws.Context, input *codepipeline.PutThirdPartyJobSuccessResultInput, opts ...request.Option) (*codepipeline.PutThirdPartyJobSuccessResultOutput, error) {
	c.inc("PutThirdPartyJobSuccessResult")
	return c.svc.PutThirdPartyJobSuccessResultWithContext(ctx, input, opts...)
}

// RetryStageExecutionRequest is a passthrough to the underlying RetryStageExecutionRequest.
// It will increment the count of requests made to RetryStageExecution.
func (c *CodePipeline) RetryStageExecutionRequest(input *codepipeline.RetryStageExecutionInput) (req *request.Request, output *codepipeline.RetryStageExecutionOutput) {
	c.inc("RetryStageExecution")
	return c.svc.RetryStageExecutionRequest(input)
}

// RetryStageExecution is a passthrough to the underlying RetryStageExecution method.
// It will increment the count of requests made to RetryStageExecution.
func (c *CodePipeline) RetryStageExecution(input *codepipeline.RetryStageExecutionInput) (*codepipeline.RetryStageExecutionOutput, error) {
	c.inc("RetryStageExecution")
	return c.svc.RetryStageExecution(input)
}

// RetryStageExecutionWithContext is a passthrough to the underlying RetryStageExecutionWithContext method.
// It will increment the count of requests made to RetryStageExecution.
func (c *CodePipeline) RetryStageExecutionWithContext(ctx aws.Context, input *codepipeline.RetryStageExecutionInput, opts ...request.Option) (*codepipeline.RetryStageExecutionOutput, error) {
	c.inc("RetryStageExecution")
	return c.svc.RetryStageExecutionWithContext(ctx, input, opts...)
}

// StartPipelineExecutionRequest is a passthrough to the underlying StartPipelineExecutionRequest.
// It will increment the count of requests made to StartPipelineExecution.
func (c *CodePipeline) StartPipelineExecutionRequest(input *codepipeline.StartPipelineExecutionInput) (req *request.Request, output *codepipeline.StartPipelineExecutionOutput) {
	c.inc("StartPipelineExecution")
	return c.svc.StartPipelineExecutionRequest(input)
}

// StartPipelineExecution is a passthrough to the underlying StartPipelineExecution method.
// It will increment the count of requests made to StartPipelineExecution.
func (c *CodePipeline) StartPipelineExecution(input *codepipeline.StartPipelineExecutionInput) (*codepipeline.StartPipelineExecutionOutput, error) {
	c.inc("StartPipelineExecution")
	return c.svc.StartPipelineExecution(input)
}

// StartPipelineExecutionWithContext is a passthrough to the underlying StartPipelineExecutionWithContext method.
// It will increment the count of requests made to StartPipelineExecution.
func (c *CodePipeline) StartPipelineExecutionWithContext(ctx aws.Context, input *codepipeline.StartPipelineExecutionInput, opts ...request.Option) (*codepipeline.StartPipelineExecutionOutput, error) {
	c.inc("StartPipelineExecution")
	return c.svc.StartPipelineExecutionWithContext(ctx, input, opts...)
}

// UpdatePipelineRequest is a passthrough to the underlying UpdatePipelineRequest.
// It will increment the count of requests made to UpdatePipeline.
func (c *CodePipeline) UpdatePipelineRequest(input *codepipeline.UpdatePipelineInput) (req *request.Request, output *codepipeline.UpdatePipelineOutput) {
	c.inc("UpdatePipeline")
	return c.svc.UpdatePipelineRequest(input)
}

// UpdatePipeline is a passthrough to the underlying UpdatePipeline method.
// It will increment the count of requests made to UpdatePipeline.
func (c *CodePipeline) UpdatePipeline(input *codepipeline.UpdatePipelineInput) (*codepipeline.UpdatePipelineOutput, error) {
	c.inc("UpdatePipeline")
	return c.svc.UpdatePipeline(input)
}

// UpdatePipelineWithContext is a passthrough to the underlying UpdatePipelineWithContext method.
// It will increment the count of requests made to UpdatePipeline.
func (c *CodePipeline) UpdatePipelineWithContext(ctx aws.Context, input *codepipeline.UpdatePipelineInput, opts ...request.Option) (*codepipeline.UpdatePipelineOutput, error) {
	c.inc("UpdatePipeline")
	return c.svc.UpdatePipelineWithContext(ctx, input, opts...)
}
