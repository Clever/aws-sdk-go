// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package apigatewaycounter

import (
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/service/apigateway"
)

// CreateApiKeyRequest is a passthrough to the underlying CreateApiKeyRequest.
// It will increment the count of requests made to CreateApiKey.
func (c *APIGateway) CreateApiKeyRequest(input *apigateway.CreateApiKeyInput) (req *request.Request, output *apigateway.ApiKey) {
	c.inc("CreateApiKey")
	return c.svc.CreateApiKeyRequest(input)
}

// CreateApiKey is a passthrough to the underlying CreateApiKey method.
// It will increment the count of requests made to CreateApiKey.
func (c *APIGateway) CreateApiKey(input *apigateway.CreateApiKeyInput) (*apigateway.ApiKey, error) {
	c.inc("CreateApiKey")
	return c.svc.CreateApiKey(input)
}

// CreateApiKeyWithContext is a passthrough to the underlying CreateApiKeyWithContext method.
// It will increment the count of requests made to CreateApiKey.
func (c *APIGateway) CreateApiKeyWithContext(ctx aws.Context, input *apigateway.CreateApiKeyInput, opts ...request.Option) (*apigateway.ApiKey, error) {
	c.inc("CreateApiKey")
	return c.svc.CreateApiKeyWithContext(ctx, input, opts...)
}

// CreateAuthorizerRequest is a passthrough to the underlying CreateAuthorizerRequest.
// It will increment the count of requests made to CreateAuthorizer.
func (c *APIGateway) CreateAuthorizerRequest(input *apigateway.CreateAuthorizerInput) (req *request.Request, output *apigateway.Authorizer) {
	c.inc("CreateAuthorizer")
	return c.svc.CreateAuthorizerRequest(input)
}

// CreateAuthorizer is a passthrough to the underlying CreateAuthorizer method.
// It will increment the count of requests made to CreateAuthorizer.
func (c *APIGateway) CreateAuthorizer(input *apigateway.CreateAuthorizerInput) (*apigateway.Authorizer, error) {
	c.inc("CreateAuthorizer")
	return c.svc.CreateAuthorizer(input)
}

// CreateAuthorizerWithContext is a passthrough to the underlying CreateAuthorizerWithContext method.
// It will increment the count of requests made to CreateAuthorizer.
func (c *APIGateway) CreateAuthorizerWithContext(ctx aws.Context, input *apigateway.CreateAuthorizerInput, opts ...request.Option) (*apigateway.Authorizer, error) {
	c.inc("CreateAuthorizer")
	return c.svc.CreateAuthorizerWithContext(ctx, input, opts...)
}

// CreateBasePathMappingRequest is a passthrough to the underlying CreateBasePathMappingRequest.
// It will increment the count of requests made to CreateBasePathMapping.
func (c *APIGateway) CreateBasePathMappingRequest(input *apigateway.CreateBasePathMappingInput) (req *request.Request, output *apigateway.BasePathMapping) {
	c.inc("CreateBasePathMapping")
	return c.svc.CreateBasePathMappingRequest(input)
}

// CreateBasePathMapping is a passthrough to the underlying CreateBasePathMapping method.
// It will increment the count of requests made to CreateBasePathMapping.
func (c *APIGateway) CreateBasePathMapping(input *apigateway.CreateBasePathMappingInput) (*apigateway.BasePathMapping, error) {
	c.inc("CreateBasePathMapping")
	return c.svc.CreateBasePathMapping(input)
}

// CreateBasePathMappingWithContext is a passthrough to the underlying CreateBasePathMappingWithContext method.
// It will increment the count of requests made to CreateBasePathMapping.
func (c *APIGateway) CreateBasePathMappingWithContext(ctx aws.Context, input *apigateway.CreateBasePathMappingInput, opts ...request.Option) (*apigateway.BasePathMapping, error) {
	c.inc("CreateBasePathMapping")
	return c.svc.CreateBasePathMappingWithContext(ctx, input, opts...)
}

// CreateDeploymentRequest is a passthrough to the underlying CreateDeploymentRequest.
// It will increment the count of requests made to CreateDeployment.
func (c *APIGateway) CreateDeploymentRequest(input *apigateway.CreateDeploymentInput) (req *request.Request, output *apigateway.Deployment) {
	c.inc("CreateDeployment")
	return c.svc.CreateDeploymentRequest(input)
}

// CreateDeployment is a passthrough to the underlying CreateDeployment method.
// It will increment the count of requests made to CreateDeployment.
func (c *APIGateway) CreateDeployment(input *apigateway.CreateDeploymentInput) (*apigateway.Deployment, error) {
	c.inc("CreateDeployment")
	return c.svc.CreateDeployment(input)
}

// CreateDeploymentWithContext is a passthrough to the underlying CreateDeploymentWithContext method.
// It will increment the count of requests made to CreateDeployment.
func (c *APIGateway) CreateDeploymentWithContext(ctx aws.Context, input *apigateway.CreateDeploymentInput, opts ...request.Option) (*apigateway.Deployment, error) {
	c.inc("CreateDeployment")
	return c.svc.CreateDeploymentWithContext(ctx, input, opts...)
}

// CreateDocumentationPartRequest is a passthrough to the underlying CreateDocumentationPartRequest.
// It will increment the count of requests made to CreateDocumentationPart.
func (c *APIGateway) CreateDocumentationPartRequest(input *apigateway.CreateDocumentationPartInput) (req *request.Request, output *apigateway.DocumentationPart) {
	c.inc("CreateDocumentationPart")
	return c.svc.CreateDocumentationPartRequest(input)
}

// CreateDocumentationPart is a passthrough to the underlying CreateDocumentationPart method.
// It will increment the count of requests made to CreateDocumentationPart.
func (c *APIGateway) CreateDocumentationPart(input *apigateway.CreateDocumentationPartInput) (*apigateway.DocumentationPart, error) {
	c.inc("CreateDocumentationPart")
	return c.svc.CreateDocumentationPart(input)
}

// CreateDocumentationPartWithContext is a passthrough to the underlying CreateDocumentationPartWithContext method.
// It will increment the count of requests made to CreateDocumentationPart.
func (c *APIGateway) CreateDocumentationPartWithContext(ctx aws.Context, input *apigateway.CreateDocumentationPartInput, opts ...request.Option) (*apigateway.DocumentationPart, error) {
	c.inc("CreateDocumentationPart")
	return c.svc.CreateDocumentationPartWithContext(ctx, input, opts...)
}

// CreateDocumentationVersionRequest is a passthrough to the underlying CreateDocumentationVersionRequest.
// It will increment the count of requests made to CreateDocumentationVersion.
func (c *APIGateway) CreateDocumentationVersionRequest(input *apigateway.CreateDocumentationVersionInput) (req *request.Request, output *apigateway.DocumentationVersion) {
	c.inc("CreateDocumentationVersion")
	return c.svc.CreateDocumentationVersionRequest(input)
}

// CreateDocumentationVersion is a passthrough to the underlying CreateDocumentationVersion method.
// It will increment the count of requests made to CreateDocumentationVersion.
func (c *APIGateway) CreateDocumentationVersion(input *apigateway.CreateDocumentationVersionInput) (*apigateway.DocumentationVersion, error) {
	c.inc("CreateDocumentationVersion")
	return c.svc.CreateDocumentationVersion(input)
}

// CreateDocumentationVersionWithContext is a passthrough to the underlying CreateDocumentationVersionWithContext method.
// It will increment the count of requests made to CreateDocumentationVersion.
func (c *APIGateway) CreateDocumentationVersionWithContext(ctx aws.Context, input *apigateway.CreateDocumentationVersionInput, opts ...request.Option) (*apigateway.DocumentationVersion, error) {
	c.inc("CreateDocumentationVersion")
	return c.svc.CreateDocumentationVersionWithContext(ctx, input, opts...)
}

// CreateDomainNameRequest is a passthrough to the underlying CreateDomainNameRequest.
// It will increment the count of requests made to CreateDomainName.
func (c *APIGateway) CreateDomainNameRequest(input *apigateway.CreateDomainNameInput) (req *request.Request, output *apigateway.DomainName) {
	c.inc("CreateDomainName")
	return c.svc.CreateDomainNameRequest(input)
}

// CreateDomainName is a passthrough to the underlying CreateDomainName method.
// It will increment the count of requests made to CreateDomainName.
func (c *APIGateway) CreateDomainName(input *apigateway.CreateDomainNameInput) (*apigateway.DomainName, error) {
	c.inc("CreateDomainName")
	return c.svc.CreateDomainName(input)
}

// CreateDomainNameWithContext is a passthrough to the underlying CreateDomainNameWithContext method.
// It will increment the count of requests made to CreateDomainName.
func (c *APIGateway) CreateDomainNameWithContext(ctx aws.Context, input *apigateway.CreateDomainNameInput, opts ...request.Option) (*apigateway.DomainName, error) {
	c.inc("CreateDomainName")
	return c.svc.CreateDomainNameWithContext(ctx, input, opts...)
}

// CreateModelRequest is a passthrough to the underlying CreateModelRequest.
// It will increment the count of requests made to CreateModel.
func (c *APIGateway) CreateModelRequest(input *apigateway.CreateModelInput) (req *request.Request, output *apigateway.Model) {
	c.inc("CreateModel")
	return c.svc.CreateModelRequest(input)
}

// CreateModel is a passthrough to the underlying CreateModel method.
// It will increment the count of requests made to CreateModel.
func (c *APIGateway) CreateModel(input *apigateway.CreateModelInput) (*apigateway.Model, error) {
	c.inc("CreateModel")
	return c.svc.CreateModel(input)
}

// CreateModelWithContext is a passthrough to the underlying CreateModelWithContext method.
// It will increment the count of requests made to CreateModel.
func (c *APIGateway) CreateModelWithContext(ctx aws.Context, input *apigateway.CreateModelInput, opts ...request.Option) (*apigateway.Model, error) {
	c.inc("CreateModel")
	return c.svc.CreateModelWithContext(ctx, input, opts...)
}

// CreateRequestValidatorRequest is a passthrough to the underlying CreateRequestValidatorRequest.
// It will increment the count of requests made to CreateRequestValidator.
func (c *APIGateway) CreateRequestValidatorRequest(input *apigateway.CreateRequestValidatorInput) (req *request.Request, output *apigateway.UpdateRequestValidatorOutput) {
	c.inc("CreateRequestValidator")
	return c.svc.CreateRequestValidatorRequest(input)
}

// CreateRequestValidator is a passthrough to the underlying CreateRequestValidator method.
// It will increment the count of requests made to CreateRequestValidator.
func (c *APIGateway) CreateRequestValidator(input *apigateway.CreateRequestValidatorInput) (*apigateway.UpdateRequestValidatorOutput, error) {
	c.inc("CreateRequestValidator")
	return c.svc.CreateRequestValidator(input)
}

// CreateRequestValidatorWithContext is a passthrough to the underlying CreateRequestValidatorWithContext method.
// It will increment the count of requests made to CreateRequestValidator.
func (c *APIGateway) CreateRequestValidatorWithContext(ctx aws.Context, input *apigateway.CreateRequestValidatorInput, opts ...request.Option) (*apigateway.UpdateRequestValidatorOutput, error) {
	c.inc("CreateRequestValidator")
	return c.svc.CreateRequestValidatorWithContext(ctx, input, opts...)
}

// CreateResourceRequest is a passthrough to the underlying CreateResourceRequest.
// It will increment the count of requests made to CreateResource.
func (c *APIGateway) CreateResourceRequest(input *apigateway.CreateResourceInput) (req *request.Request, output *apigateway.Resource) {
	c.inc("CreateResource")
	return c.svc.CreateResourceRequest(input)
}

// CreateResource is a passthrough to the underlying CreateResource method.
// It will increment the count of requests made to CreateResource.
func (c *APIGateway) CreateResource(input *apigateway.CreateResourceInput) (*apigateway.Resource, error) {
	c.inc("CreateResource")
	return c.svc.CreateResource(input)
}

// CreateResourceWithContext is a passthrough to the underlying CreateResourceWithContext method.
// It will increment the count of requests made to CreateResource.
func (c *APIGateway) CreateResourceWithContext(ctx aws.Context, input *apigateway.CreateResourceInput, opts ...request.Option) (*apigateway.Resource, error) {
	c.inc("CreateResource")
	return c.svc.CreateResourceWithContext(ctx, input, opts...)
}

// CreateRestApiRequest is a passthrough to the underlying CreateRestApiRequest.
// It will increment the count of requests made to CreateRestApi.
func (c *APIGateway) CreateRestApiRequest(input *apigateway.CreateRestApiInput) (req *request.Request, output *apigateway.RestApi) {
	c.inc("CreateRestApi")
	return c.svc.CreateRestApiRequest(input)
}

// CreateRestApi is a passthrough to the underlying CreateRestApi method.
// It will increment the count of requests made to CreateRestApi.
func (c *APIGateway) CreateRestApi(input *apigateway.CreateRestApiInput) (*apigateway.RestApi, error) {
	c.inc("CreateRestApi")
	return c.svc.CreateRestApi(input)
}

// CreateRestApiWithContext is a passthrough to the underlying CreateRestApiWithContext method.
// It will increment the count of requests made to CreateRestApi.
func (c *APIGateway) CreateRestApiWithContext(ctx aws.Context, input *apigateway.CreateRestApiInput, opts ...request.Option) (*apigateway.RestApi, error) {
	c.inc("CreateRestApi")
	return c.svc.CreateRestApiWithContext(ctx, input, opts...)
}

// CreateStageRequest is a passthrough to the underlying CreateStageRequest.
// It will increment the count of requests made to CreateStage.
func (c *APIGateway) CreateStageRequest(input *apigateway.CreateStageInput) (req *request.Request, output *apigateway.Stage) {
	c.inc("CreateStage")
	return c.svc.CreateStageRequest(input)
}

// CreateStage is a passthrough to the underlying CreateStage method.
// It will increment the count of requests made to CreateStage.
func (c *APIGateway) CreateStage(input *apigateway.CreateStageInput) (*apigateway.Stage, error) {
	c.inc("CreateStage")
	return c.svc.CreateStage(input)
}

// CreateStageWithContext is a passthrough to the underlying CreateStageWithContext method.
// It will increment the count of requests made to CreateStage.
func (c *APIGateway) CreateStageWithContext(ctx aws.Context, input *apigateway.CreateStageInput, opts ...request.Option) (*apigateway.Stage, error) {
	c.inc("CreateStage")
	return c.svc.CreateStageWithContext(ctx, input, opts...)
}

// CreateUsagePlanRequest is a passthrough to the underlying CreateUsagePlanRequest.
// It will increment the count of requests made to CreateUsagePlan.
func (c *APIGateway) CreateUsagePlanRequest(input *apigateway.CreateUsagePlanInput) (req *request.Request, output *apigateway.UsagePlan) {
	c.inc("CreateUsagePlan")
	return c.svc.CreateUsagePlanRequest(input)
}

// CreateUsagePlan is a passthrough to the underlying CreateUsagePlan method.
// It will increment the count of requests made to CreateUsagePlan.
func (c *APIGateway) CreateUsagePlan(input *apigateway.CreateUsagePlanInput) (*apigateway.UsagePlan, error) {
	c.inc("CreateUsagePlan")
	return c.svc.CreateUsagePlan(input)
}

// CreateUsagePlanWithContext is a passthrough to the underlying CreateUsagePlanWithContext method.
// It will increment the count of requests made to CreateUsagePlan.
func (c *APIGateway) CreateUsagePlanWithContext(ctx aws.Context, input *apigateway.CreateUsagePlanInput, opts ...request.Option) (*apigateway.UsagePlan, error) {
	c.inc("CreateUsagePlan")
	return c.svc.CreateUsagePlanWithContext(ctx, input, opts...)
}

// CreateUsagePlanKeyRequest is a passthrough to the underlying CreateUsagePlanKeyRequest.
// It will increment the count of requests made to CreateUsagePlanKey.
func (c *APIGateway) CreateUsagePlanKeyRequest(input *apigateway.CreateUsagePlanKeyInput) (req *request.Request, output *apigateway.UsagePlanKey) {
	c.inc("CreateUsagePlanKey")
	return c.svc.CreateUsagePlanKeyRequest(input)
}

// CreateUsagePlanKey is a passthrough to the underlying CreateUsagePlanKey method.
// It will increment the count of requests made to CreateUsagePlanKey.
func (c *APIGateway) CreateUsagePlanKey(input *apigateway.CreateUsagePlanKeyInput) (*apigateway.UsagePlanKey, error) {
	c.inc("CreateUsagePlanKey")
	return c.svc.CreateUsagePlanKey(input)
}

// CreateUsagePlanKeyWithContext is a passthrough to the underlying CreateUsagePlanKeyWithContext method.
// It will increment the count of requests made to CreateUsagePlanKey.
func (c *APIGateway) CreateUsagePlanKeyWithContext(ctx aws.Context, input *apigateway.CreateUsagePlanKeyInput, opts ...request.Option) (*apigateway.UsagePlanKey, error) {
	c.inc("CreateUsagePlanKey")
	return c.svc.CreateUsagePlanKeyWithContext(ctx, input, opts...)
}

// DeleteApiKeyRequest is a passthrough to the underlying DeleteApiKeyRequest.
// It will increment the count of requests made to DeleteApiKey.
func (c *APIGateway) DeleteApiKeyRequest(input *apigateway.DeleteApiKeyInput) (req *request.Request, output *apigateway.DeleteApiKeyOutput) {
	c.inc("DeleteApiKey")
	return c.svc.DeleteApiKeyRequest(input)
}

// DeleteApiKey is a passthrough to the underlying DeleteApiKey method.
// It will increment the count of requests made to DeleteApiKey.
func (c *APIGateway) DeleteApiKey(input *apigateway.DeleteApiKeyInput) (*apigateway.DeleteApiKeyOutput, error) {
	c.inc("DeleteApiKey")
	return c.svc.DeleteApiKey(input)
}

// DeleteApiKeyWithContext is a passthrough to the underlying DeleteApiKeyWithContext method.
// It will increment the count of requests made to DeleteApiKey.
func (c *APIGateway) DeleteApiKeyWithContext(ctx aws.Context, input *apigateway.DeleteApiKeyInput, opts ...request.Option) (*apigateway.DeleteApiKeyOutput, error) {
	c.inc("DeleteApiKey")
	return c.svc.DeleteApiKeyWithContext(ctx, input, opts...)
}

// DeleteAuthorizerRequest is a passthrough to the underlying DeleteAuthorizerRequest.
// It will increment the count of requests made to DeleteAuthorizer.
func (c *APIGateway) DeleteAuthorizerRequest(input *apigateway.DeleteAuthorizerInput) (req *request.Request, output *apigateway.DeleteAuthorizerOutput) {
	c.inc("DeleteAuthorizer")
	return c.svc.DeleteAuthorizerRequest(input)
}

// DeleteAuthorizer is a passthrough to the underlying DeleteAuthorizer method.
// It will increment the count of requests made to DeleteAuthorizer.
func (c *APIGateway) DeleteAuthorizer(input *apigateway.DeleteAuthorizerInput) (*apigateway.DeleteAuthorizerOutput, error) {
	c.inc("DeleteAuthorizer")
	return c.svc.DeleteAuthorizer(input)
}

// DeleteAuthorizerWithContext is a passthrough to the underlying DeleteAuthorizerWithContext method.
// It will increment the count of requests made to DeleteAuthorizer.
func (c *APIGateway) DeleteAuthorizerWithContext(ctx aws.Context, input *apigateway.DeleteAuthorizerInput, opts ...request.Option) (*apigateway.DeleteAuthorizerOutput, error) {
	c.inc("DeleteAuthorizer")
	return c.svc.DeleteAuthorizerWithContext(ctx, input, opts...)
}

// DeleteBasePathMappingRequest is a passthrough to the underlying DeleteBasePathMappingRequest.
// It will increment the count of requests made to DeleteBasePathMapping.
func (c *APIGateway) DeleteBasePathMappingRequest(input *apigateway.DeleteBasePathMappingInput) (req *request.Request, output *apigateway.DeleteBasePathMappingOutput) {
	c.inc("DeleteBasePathMapping")
	return c.svc.DeleteBasePathMappingRequest(input)
}

// DeleteBasePathMapping is a passthrough to the underlying DeleteBasePathMapping method.
// It will increment the count of requests made to DeleteBasePathMapping.
func (c *APIGateway) DeleteBasePathMapping(input *apigateway.DeleteBasePathMappingInput) (*apigateway.DeleteBasePathMappingOutput, error) {
	c.inc("DeleteBasePathMapping")
	return c.svc.DeleteBasePathMapping(input)
}

// DeleteBasePathMappingWithContext is a passthrough to the underlying DeleteBasePathMappingWithContext method.
// It will increment the count of requests made to DeleteBasePathMapping.
func (c *APIGateway) DeleteBasePathMappingWithContext(ctx aws.Context, input *apigateway.DeleteBasePathMappingInput, opts ...request.Option) (*apigateway.DeleteBasePathMappingOutput, error) {
	c.inc("DeleteBasePathMapping")
	return c.svc.DeleteBasePathMappingWithContext(ctx, input, opts...)
}

// DeleteClientCertificateRequest is a passthrough to the underlying DeleteClientCertificateRequest.
// It will increment the count of requests made to DeleteClientCertificate.
func (c *APIGateway) DeleteClientCertificateRequest(input *apigateway.DeleteClientCertificateInput) (req *request.Request, output *apigateway.DeleteClientCertificateOutput) {
	c.inc("DeleteClientCertificate")
	return c.svc.DeleteClientCertificateRequest(input)
}

// DeleteClientCertificate is a passthrough to the underlying DeleteClientCertificate method.
// It will increment the count of requests made to DeleteClientCertificate.
func (c *APIGateway) DeleteClientCertificate(input *apigateway.DeleteClientCertificateInput) (*apigateway.DeleteClientCertificateOutput, error) {
	c.inc("DeleteClientCertificate")
	return c.svc.DeleteClientCertificate(input)
}

// DeleteClientCertificateWithContext is a passthrough to the underlying DeleteClientCertificateWithContext method.
// It will increment the count of requests made to DeleteClientCertificate.
func (c *APIGateway) DeleteClientCertificateWithContext(ctx aws.Context, input *apigateway.DeleteClientCertificateInput, opts ...request.Option) (*apigateway.DeleteClientCertificateOutput, error) {
	c.inc("DeleteClientCertificate")
	return c.svc.DeleteClientCertificateWithContext(ctx, input, opts...)
}

// DeleteDeploymentRequest is a passthrough to the underlying DeleteDeploymentRequest.
// It will increment the count of requests made to DeleteDeployment.
func (c *APIGateway) DeleteDeploymentRequest(input *apigateway.DeleteDeploymentInput) (req *request.Request, output *apigateway.DeleteDeploymentOutput) {
	c.inc("DeleteDeployment")
	return c.svc.DeleteDeploymentRequest(input)
}

// DeleteDeployment is a passthrough to the underlying DeleteDeployment method.
// It will increment the count of requests made to DeleteDeployment.
func (c *APIGateway) DeleteDeployment(input *apigateway.DeleteDeploymentInput) (*apigateway.DeleteDeploymentOutput, error) {
	c.inc("DeleteDeployment")
	return c.svc.DeleteDeployment(input)
}

// DeleteDeploymentWithContext is a passthrough to the underlying DeleteDeploymentWithContext method.
// It will increment the count of requests made to DeleteDeployment.
func (c *APIGateway) DeleteDeploymentWithContext(ctx aws.Context, input *apigateway.DeleteDeploymentInput, opts ...request.Option) (*apigateway.DeleteDeploymentOutput, error) {
	c.inc("DeleteDeployment")
	return c.svc.DeleteDeploymentWithContext(ctx, input, opts...)
}

// DeleteDocumentationPartRequest is a passthrough to the underlying DeleteDocumentationPartRequest.
// It will increment the count of requests made to DeleteDocumentationPart.
func (c *APIGateway) DeleteDocumentationPartRequest(input *apigateway.DeleteDocumentationPartInput) (req *request.Request, output *apigateway.DeleteDocumentationPartOutput) {
	c.inc("DeleteDocumentationPart")
	return c.svc.DeleteDocumentationPartRequest(input)
}

// DeleteDocumentationPart is a passthrough to the underlying DeleteDocumentationPart method.
// It will increment the count of requests made to DeleteDocumentationPart.
func (c *APIGateway) DeleteDocumentationPart(input *apigateway.DeleteDocumentationPartInput) (*apigateway.DeleteDocumentationPartOutput, error) {
	c.inc("DeleteDocumentationPart")
	return c.svc.DeleteDocumentationPart(input)
}

// DeleteDocumentationPartWithContext is a passthrough to the underlying DeleteDocumentationPartWithContext method.
// It will increment the count of requests made to DeleteDocumentationPart.
func (c *APIGateway) DeleteDocumentationPartWithContext(ctx aws.Context, input *apigateway.DeleteDocumentationPartInput, opts ...request.Option) (*apigateway.DeleteDocumentationPartOutput, error) {
	c.inc("DeleteDocumentationPart")
	return c.svc.DeleteDocumentationPartWithContext(ctx, input, opts...)
}

// DeleteDocumentationVersionRequest is a passthrough to the underlying DeleteDocumentationVersionRequest.
// It will increment the count of requests made to DeleteDocumentationVersion.
func (c *APIGateway) DeleteDocumentationVersionRequest(input *apigateway.DeleteDocumentationVersionInput) (req *request.Request, output *apigateway.DeleteDocumentationVersionOutput) {
	c.inc("DeleteDocumentationVersion")
	return c.svc.DeleteDocumentationVersionRequest(input)
}

// DeleteDocumentationVersion is a passthrough to the underlying DeleteDocumentationVersion method.
// It will increment the count of requests made to DeleteDocumentationVersion.
func (c *APIGateway) DeleteDocumentationVersion(input *apigateway.DeleteDocumentationVersionInput) (*apigateway.DeleteDocumentationVersionOutput, error) {
	c.inc("DeleteDocumentationVersion")
	return c.svc.DeleteDocumentationVersion(input)
}

// DeleteDocumentationVersionWithContext is a passthrough to the underlying DeleteDocumentationVersionWithContext method.
// It will increment the count of requests made to DeleteDocumentationVersion.
func (c *APIGateway) DeleteDocumentationVersionWithContext(ctx aws.Context, input *apigateway.DeleteDocumentationVersionInput, opts ...request.Option) (*apigateway.DeleteDocumentationVersionOutput, error) {
	c.inc("DeleteDocumentationVersion")
	return c.svc.DeleteDocumentationVersionWithContext(ctx, input, opts...)
}

// DeleteDomainNameRequest is a passthrough to the underlying DeleteDomainNameRequest.
// It will increment the count of requests made to DeleteDomainName.
func (c *APIGateway) DeleteDomainNameRequest(input *apigateway.DeleteDomainNameInput) (req *request.Request, output *apigateway.DeleteDomainNameOutput) {
	c.inc("DeleteDomainName")
	return c.svc.DeleteDomainNameRequest(input)
}

// DeleteDomainName is a passthrough to the underlying DeleteDomainName method.
// It will increment the count of requests made to DeleteDomainName.
func (c *APIGateway) DeleteDomainName(input *apigateway.DeleteDomainNameInput) (*apigateway.DeleteDomainNameOutput, error) {
	c.inc("DeleteDomainName")
	return c.svc.DeleteDomainName(input)
}

// DeleteDomainNameWithContext is a passthrough to the underlying DeleteDomainNameWithContext method.
// It will increment the count of requests made to DeleteDomainName.
func (c *APIGateway) DeleteDomainNameWithContext(ctx aws.Context, input *apigateway.DeleteDomainNameInput, opts ...request.Option) (*apigateway.DeleteDomainNameOutput, error) {
	c.inc("DeleteDomainName")
	return c.svc.DeleteDomainNameWithContext(ctx, input, opts...)
}

// DeleteGatewayResponseRequest is a passthrough to the underlying DeleteGatewayResponseRequest.
// It will increment the count of requests made to DeleteGatewayResponse.
func (c *APIGateway) DeleteGatewayResponseRequest(input *apigateway.DeleteGatewayResponseInput) (req *request.Request, output *apigateway.DeleteGatewayResponseOutput) {
	c.inc("DeleteGatewayResponse")
	return c.svc.DeleteGatewayResponseRequest(input)
}

// DeleteGatewayResponse is a passthrough to the underlying DeleteGatewayResponse method.
// It will increment the count of requests made to DeleteGatewayResponse.
func (c *APIGateway) DeleteGatewayResponse(input *apigateway.DeleteGatewayResponseInput) (*apigateway.DeleteGatewayResponseOutput, error) {
	c.inc("DeleteGatewayResponse")
	return c.svc.DeleteGatewayResponse(input)
}

// DeleteGatewayResponseWithContext is a passthrough to the underlying DeleteGatewayResponseWithContext method.
// It will increment the count of requests made to DeleteGatewayResponse.
func (c *APIGateway) DeleteGatewayResponseWithContext(ctx aws.Context, input *apigateway.DeleteGatewayResponseInput, opts ...request.Option) (*apigateway.DeleteGatewayResponseOutput, error) {
	c.inc("DeleteGatewayResponse")
	return c.svc.DeleteGatewayResponseWithContext(ctx, input, opts...)
}

// DeleteIntegrationRequest is a passthrough to the underlying DeleteIntegrationRequest.
// It will increment the count of requests made to DeleteIntegration.
func (c *APIGateway) DeleteIntegrationRequest(input *apigateway.DeleteIntegrationInput) (req *request.Request, output *apigateway.DeleteIntegrationOutput) {
	c.inc("DeleteIntegration")
	return c.svc.DeleteIntegrationRequest(input)
}

// DeleteIntegration is a passthrough to the underlying DeleteIntegration method.
// It will increment the count of requests made to DeleteIntegration.
func (c *APIGateway) DeleteIntegration(input *apigateway.DeleteIntegrationInput) (*apigateway.DeleteIntegrationOutput, error) {
	c.inc("DeleteIntegration")
	return c.svc.DeleteIntegration(input)
}

// DeleteIntegrationWithContext is a passthrough to the underlying DeleteIntegrationWithContext method.
// It will increment the count of requests made to DeleteIntegration.
func (c *APIGateway) DeleteIntegrationWithContext(ctx aws.Context, input *apigateway.DeleteIntegrationInput, opts ...request.Option) (*apigateway.DeleteIntegrationOutput, error) {
	c.inc("DeleteIntegration")
	return c.svc.DeleteIntegrationWithContext(ctx, input, opts...)
}

// DeleteIntegrationResponseRequest is a passthrough to the underlying DeleteIntegrationResponseRequest.
// It will increment the count of requests made to DeleteIntegrationResponse.
func (c *APIGateway) DeleteIntegrationResponseRequest(input *apigateway.DeleteIntegrationResponseInput) (req *request.Request, output *apigateway.DeleteIntegrationResponseOutput) {
	c.inc("DeleteIntegrationResponse")
	return c.svc.DeleteIntegrationResponseRequest(input)
}

// DeleteIntegrationResponse is a passthrough to the underlying DeleteIntegrationResponse method.
// It will increment the count of requests made to DeleteIntegrationResponse.
func (c *APIGateway) DeleteIntegrationResponse(input *apigateway.DeleteIntegrationResponseInput) (*apigateway.DeleteIntegrationResponseOutput, error) {
	c.inc("DeleteIntegrationResponse")
	return c.svc.DeleteIntegrationResponse(input)
}

// DeleteIntegrationResponseWithContext is a passthrough to the underlying DeleteIntegrationResponseWithContext method.
// It will increment the count of requests made to DeleteIntegrationResponse.
func (c *APIGateway) DeleteIntegrationResponseWithContext(ctx aws.Context, input *apigateway.DeleteIntegrationResponseInput, opts ...request.Option) (*apigateway.DeleteIntegrationResponseOutput, error) {
	c.inc("DeleteIntegrationResponse")
	return c.svc.DeleteIntegrationResponseWithContext(ctx, input, opts...)
}

// DeleteMethodRequest is a passthrough to the underlying DeleteMethodRequest.
// It will increment the count of requests made to DeleteMethod.
func (c *APIGateway) DeleteMethodRequest(input *apigateway.DeleteMethodInput) (req *request.Request, output *apigateway.DeleteMethodOutput) {
	c.inc("DeleteMethod")
	return c.svc.DeleteMethodRequest(input)
}

// DeleteMethod is a passthrough to the underlying DeleteMethod method.
// It will increment the count of requests made to DeleteMethod.
func (c *APIGateway) DeleteMethod(input *apigateway.DeleteMethodInput) (*apigateway.DeleteMethodOutput, error) {
	c.inc("DeleteMethod")
	return c.svc.DeleteMethod(input)
}

// DeleteMethodWithContext is a passthrough to the underlying DeleteMethodWithContext method.
// It will increment the count of requests made to DeleteMethod.
func (c *APIGateway) DeleteMethodWithContext(ctx aws.Context, input *apigateway.DeleteMethodInput, opts ...request.Option) (*apigateway.DeleteMethodOutput, error) {
	c.inc("DeleteMethod")
	return c.svc.DeleteMethodWithContext(ctx, input, opts...)
}

// DeleteMethodResponseRequest is a passthrough to the underlying DeleteMethodResponseRequest.
// It will increment the count of requests made to DeleteMethodResponse.
func (c *APIGateway) DeleteMethodResponseRequest(input *apigateway.DeleteMethodResponseInput) (req *request.Request, output *apigateway.DeleteMethodResponseOutput) {
	c.inc("DeleteMethodResponse")
	return c.svc.DeleteMethodResponseRequest(input)
}

// DeleteMethodResponse is a passthrough to the underlying DeleteMethodResponse method.
// It will increment the count of requests made to DeleteMethodResponse.
func (c *APIGateway) DeleteMethodResponse(input *apigateway.DeleteMethodResponseInput) (*apigateway.DeleteMethodResponseOutput, error) {
	c.inc("DeleteMethodResponse")
	return c.svc.DeleteMethodResponse(input)
}

// DeleteMethodResponseWithContext is a passthrough to the underlying DeleteMethodResponseWithContext method.
// It will increment the count of requests made to DeleteMethodResponse.
func (c *APIGateway) DeleteMethodResponseWithContext(ctx aws.Context, input *apigateway.DeleteMethodResponseInput, opts ...request.Option) (*apigateway.DeleteMethodResponseOutput, error) {
	c.inc("DeleteMethodResponse")
	return c.svc.DeleteMethodResponseWithContext(ctx, input, opts...)
}

// DeleteModelRequest is a passthrough to the underlying DeleteModelRequest.
// It will increment the count of requests made to DeleteModel.
func (c *APIGateway) DeleteModelRequest(input *apigateway.DeleteModelInput) (req *request.Request, output *apigateway.DeleteModelOutput) {
	c.inc("DeleteModel")
	return c.svc.DeleteModelRequest(input)
}

// DeleteModel is a passthrough to the underlying DeleteModel method.
// It will increment the count of requests made to DeleteModel.
func (c *APIGateway) DeleteModel(input *apigateway.DeleteModelInput) (*apigateway.DeleteModelOutput, error) {
	c.inc("DeleteModel")
	return c.svc.DeleteModel(input)
}

// DeleteModelWithContext is a passthrough to the underlying DeleteModelWithContext method.
// It will increment the count of requests made to DeleteModel.
func (c *APIGateway) DeleteModelWithContext(ctx aws.Context, input *apigateway.DeleteModelInput, opts ...request.Option) (*apigateway.DeleteModelOutput, error) {
	c.inc("DeleteModel")
	return c.svc.DeleteModelWithContext(ctx, input, opts...)
}

// DeleteRequestValidatorRequest is a passthrough to the underlying DeleteRequestValidatorRequest.
// It will increment the count of requests made to DeleteRequestValidator.
func (c *APIGateway) DeleteRequestValidatorRequest(input *apigateway.DeleteRequestValidatorInput) (req *request.Request, output *apigateway.DeleteRequestValidatorOutput) {
	c.inc("DeleteRequestValidator")
	return c.svc.DeleteRequestValidatorRequest(input)
}

// DeleteRequestValidator is a passthrough to the underlying DeleteRequestValidator method.
// It will increment the count of requests made to DeleteRequestValidator.
func (c *APIGateway) DeleteRequestValidator(input *apigateway.DeleteRequestValidatorInput) (*apigateway.DeleteRequestValidatorOutput, error) {
	c.inc("DeleteRequestValidator")
	return c.svc.DeleteRequestValidator(input)
}

// DeleteRequestValidatorWithContext is a passthrough to the underlying DeleteRequestValidatorWithContext method.
// It will increment the count of requests made to DeleteRequestValidator.
func (c *APIGateway) DeleteRequestValidatorWithContext(ctx aws.Context, input *apigateway.DeleteRequestValidatorInput, opts ...request.Option) (*apigateway.DeleteRequestValidatorOutput, error) {
	c.inc("DeleteRequestValidator")
	return c.svc.DeleteRequestValidatorWithContext(ctx, input, opts...)
}

// DeleteResourceRequest is a passthrough to the underlying DeleteResourceRequest.
// It will increment the count of requests made to DeleteResource.
func (c *APIGateway) DeleteResourceRequest(input *apigateway.DeleteResourceInput) (req *request.Request, output *apigateway.DeleteResourceOutput) {
	c.inc("DeleteResource")
	return c.svc.DeleteResourceRequest(input)
}

// DeleteResource is a passthrough to the underlying DeleteResource method.
// It will increment the count of requests made to DeleteResource.
func (c *APIGateway) DeleteResource(input *apigateway.DeleteResourceInput) (*apigateway.DeleteResourceOutput, error) {
	c.inc("DeleteResource")
	return c.svc.DeleteResource(input)
}

// DeleteResourceWithContext is a passthrough to the underlying DeleteResourceWithContext method.
// It will increment the count of requests made to DeleteResource.
func (c *APIGateway) DeleteResourceWithContext(ctx aws.Context, input *apigateway.DeleteResourceInput, opts ...request.Option) (*apigateway.DeleteResourceOutput, error) {
	c.inc("DeleteResource")
	return c.svc.DeleteResourceWithContext(ctx, input, opts...)
}

// DeleteRestApiRequest is a passthrough to the underlying DeleteRestApiRequest.
// It will increment the count of requests made to DeleteRestApi.
func (c *APIGateway) DeleteRestApiRequest(input *apigateway.DeleteRestApiInput) (req *request.Request, output *apigateway.DeleteRestApiOutput) {
	c.inc("DeleteRestApi")
	return c.svc.DeleteRestApiRequest(input)
}

// DeleteRestApi is a passthrough to the underlying DeleteRestApi method.
// It will increment the count of requests made to DeleteRestApi.
func (c *APIGateway) DeleteRestApi(input *apigateway.DeleteRestApiInput) (*apigateway.DeleteRestApiOutput, error) {
	c.inc("DeleteRestApi")
	return c.svc.DeleteRestApi(input)
}

// DeleteRestApiWithContext is a passthrough to the underlying DeleteRestApiWithContext method.
// It will increment the count of requests made to DeleteRestApi.
func (c *APIGateway) DeleteRestApiWithContext(ctx aws.Context, input *apigateway.DeleteRestApiInput, opts ...request.Option) (*apigateway.DeleteRestApiOutput, error) {
	c.inc("DeleteRestApi")
	return c.svc.DeleteRestApiWithContext(ctx, input, opts...)
}

// DeleteStageRequest is a passthrough to the underlying DeleteStageRequest.
// It will increment the count of requests made to DeleteStage.
func (c *APIGateway) DeleteStageRequest(input *apigateway.DeleteStageInput) (req *request.Request, output *apigateway.DeleteStageOutput) {
	c.inc("DeleteStage")
	return c.svc.DeleteStageRequest(input)
}

// DeleteStage is a passthrough to the underlying DeleteStage method.
// It will increment the count of requests made to DeleteStage.
func (c *APIGateway) DeleteStage(input *apigateway.DeleteStageInput) (*apigateway.DeleteStageOutput, error) {
	c.inc("DeleteStage")
	return c.svc.DeleteStage(input)
}

// DeleteStageWithContext is a passthrough to the underlying DeleteStageWithContext method.
// It will increment the count of requests made to DeleteStage.
func (c *APIGateway) DeleteStageWithContext(ctx aws.Context, input *apigateway.DeleteStageInput, opts ...request.Option) (*apigateway.DeleteStageOutput, error) {
	c.inc("DeleteStage")
	return c.svc.DeleteStageWithContext(ctx, input, opts...)
}

// DeleteUsagePlanRequest is a passthrough to the underlying DeleteUsagePlanRequest.
// It will increment the count of requests made to DeleteUsagePlan.
func (c *APIGateway) DeleteUsagePlanRequest(input *apigateway.DeleteUsagePlanInput) (req *request.Request, output *apigateway.DeleteUsagePlanOutput) {
	c.inc("DeleteUsagePlan")
	return c.svc.DeleteUsagePlanRequest(input)
}

// DeleteUsagePlan is a passthrough to the underlying DeleteUsagePlan method.
// It will increment the count of requests made to DeleteUsagePlan.
func (c *APIGateway) DeleteUsagePlan(input *apigateway.DeleteUsagePlanInput) (*apigateway.DeleteUsagePlanOutput, error) {
	c.inc("DeleteUsagePlan")
	return c.svc.DeleteUsagePlan(input)
}

// DeleteUsagePlanWithContext is a passthrough to the underlying DeleteUsagePlanWithContext method.
// It will increment the count of requests made to DeleteUsagePlan.
func (c *APIGateway) DeleteUsagePlanWithContext(ctx aws.Context, input *apigateway.DeleteUsagePlanInput, opts ...request.Option) (*apigateway.DeleteUsagePlanOutput, error) {
	c.inc("DeleteUsagePlan")
	return c.svc.DeleteUsagePlanWithContext(ctx, input, opts...)
}

// DeleteUsagePlanKeyRequest is a passthrough to the underlying DeleteUsagePlanKeyRequest.
// It will increment the count of requests made to DeleteUsagePlanKey.
func (c *APIGateway) DeleteUsagePlanKeyRequest(input *apigateway.DeleteUsagePlanKeyInput) (req *request.Request, output *apigateway.DeleteUsagePlanKeyOutput) {
	c.inc("DeleteUsagePlanKey")
	return c.svc.DeleteUsagePlanKeyRequest(input)
}

// DeleteUsagePlanKey is a passthrough to the underlying DeleteUsagePlanKey method.
// It will increment the count of requests made to DeleteUsagePlanKey.
func (c *APIGateway) DeleteUsagePlanKey(input *apigateway.DeleteUsagePlanKeyInput) (*apigateway.DeleteUsagePlanKeyOutput, error) {
	c.inc("DeleteUsagePlanKey")
	return c.svc.DeleteUsagePlanKey(input)
}

// DeleteUsagePlanKeyWithContext is a passthrough to the underlying DeleteUsagePlanKeyWithContext method.
// It will increment the count of requests made to DeleteUsagePlanKey.
func (c *APIGateway) DeleteUsagePlanKeyWithContext(ctx aws.Context, input *apigateway.DeleteUsagePlanKeyInput, opts ...request.Option) (*apigateway.DeleteUsagePlanKeyOutput, error) {
	c.inc("DeleteUsagePlanKey")
	return c.svc.DeleteUsagePlanKeyWithContext(ctx, input, opts...)
}

// FlushStageAuthorizersCacheRequest is a passthrough to the underlying FlushStageAuthorizersCacheRequest.
// It will increment the count of requests made to FlushStageAuthorizersCache.
func (c *APIGateway) FlushStageAuthorizersCacheRequest(input *apigateway.FlushStageAuthorizersCacheInput) (req *request.Request, output *apigateway.FlushStageAuthorizersCacheOutput) {
	c.inc("FlushStageAuthorizersCache")
	return c.svc.FlushStageAuthorizersCacheRequest(input)
}

// FlushStageAuthorizersCache is a passthrough to the underlying FlushStageAuthorizersCache method.
// It will increment the count of requests made to FlushStageAuthorizersCache.
func (c *APIGateway) FlushStageAuthorizersCache(input *apigateway.FlushStageAuthorizersCacheInput) (*apigateway.FlushStageAuthorizersCacheOutput, error) {
	c.inc("FlushStageAuthorizersCache")
	return c.svc.FlushStageAuthorizersCache(input)
}

// FlushStageAuthorizersCacheWithContext is a passthrough to the underlying FlushStageAuthorizersCacheWithContext method.
// It will increment the count of requests made to FlushStageAuthorizersCache.
func (c *APIGateway) FlushStageAuthorizersCacheWithContext(ctx aws.Context, input *apigateway.FlushStageAuthorizersCacheInput, opts ...request.Option) (*apigateway.FlushStageAuthorizersCacheOutput, error) {
	c.inc("FlushStageAuthorizersCache")
	return c.svc.FlushStageAuthorizersCacheWithContext(ctx, input, opts...)
}

// FlushStageCacheRequest is a passthrough to the underlying FlushStageCacheRequest.
// It will increment the count of requests made to FlushStageCache.
func (c *APIGateway) FlushStageCacheRequest(input *apigateway.FlushStageCacheInput) (req *request.Request, output *apigateway.FlushStageCacheOutput) {
	c.inc("FlushStageCache")
	return c.svc.FlushStageCacheRequest(input)
}

// FlushStageCache is a passthrough to the underlying FlushStageCache method.
// It will increment the count of requests made to FlushStageCache.
func (c *APIGateway) FlushStageCache(input *apigateway.FlushStageCacheInput) (*apigateway.FlushStageCacheOutput, error) {
	c.inc("FlushStageCache")
	return c.svc.FlushStageCache(input)
}

// FlushStageCacheWithContext is a passthrough to the underlying FlushStageCacheWithContext method.
// It will increment the count of requests made to FlushStageCache.
func (c *APIGateway) FlushStageCacheWithContext(ctx aws.Context, input *apigateway.FlushStageCacheInput, opts ...request.Option) (*apigateway.FlushStageCacheOutput, error) {
	c.inc("FlushStageCache")
	return c.svc.FlushStageCacheWithContext(ctx, input, opts...)
}

// GenerateClientCertificateRequest is a passthrough to the underlying GenerateClientCertificateRequest.
// It will increment the count of requests made to GenerateClientCertificate.
func (c *APIGateway) GenerateClientCertificateRequest(input *apigateway.GenerateClientCertificateInput) (req *request.Request, output *apigateway.ClientCertificate) {
	c.inc("GenerateClientCertificate")
	return c.svc.GenerateClientCertificateRequest(input)
}

// GenerateClientCertificate is a passthrough to the underlying GenerateClientCertificate method.
// It will increment the count of requests made to GenerateClientCertificate.
func (c *APIGateway) GenerateClientCertificate(input *apigateway.GenerateClientCertificateInput) (*apigateway.ClientCertificate, error) {
	c.inc("GenerateClientCertificate")
	return c.svc.GenerateClientCertificate(input)
}

// GenerateClientCertificateWithContext is a passthrough to the underlying GenerateClientCertificateWithContext method.
// It will increment the count of requests made to GenerateClientCertificate.
func (c *APIGateway) GenerateClientCertificateWithContext(ctx aws.Context, input *apigateway.GenerateClientCertificateInput, opts ...request.Option) (*apigateway.ClientCertificate, error) {
	c.inc("GenerateClientCertificate")
	return c.svc.GenerateClientCertificateWithContext(ctx, input, opts...)
}

// GetAccountRequest is a passthrough to the underlying GetAccountRequest.
// It will increment the count of requests made to GetAccount.
func (c *APIGateway) GetAccountRequest(input *apigateway.GetAccountInput) (req *request.Request, output *apigateway.Account) {
	c.inc("GetAccount")
	return c.svc.GetAccountRequest(input)
}

// GetAccount is a passthrough to the underlying GetAccount method.
// It will increment the count of requests made to GetAccount.
func (c *APIGateway) GetAccount(input *apigateway.GetAccountInput) (*apigateway.Account, error) {
	c.inc("GetAccount")
	return c.svc.GetAccount(input)
}

// GetAccountWithContext is a passthrough to the underlying GetAccountWithContext method.
// It will increment the count of requests made to GetAccount.
func (c *APIGateway) GetAccountWithContext(ctx aws.Context, input *apigateway.GetAccountInput, opts ...request.Option) (*apigateway.Account, error) {
	c.inc("GetAccount")
	return c.svc.GetAccountWithContext(ctx, input, opts...)
}

// GetApiKeyRequest is a passthrough to the underlying GetApiKeyRequest.
// It will increment the count of requests made to GetApiKey.
func (c *APIGateway) GetApiKeyRequest(input *apigateway.GetApiKeyInput) (req *request.Request, output *apigateway.ApiKey) {
	c.inc("GetApiKey")
	return c.svc.GetApiKeyRequest(input)
}

// GetApiKey is a passthrough to the underlying GetApiKey method.
// It will increment the count of requests made to GetApiKey.
func (c *APIGateway) GetApiKey(input *apigateway.GetApiKeyInput) (*apigateway.ApiKey, error) {
	c.inc("GetApiKey")
	return c.svc.GetApiKey(input)
}

// GetApiKeyWithContext is a passthrough to the underlying GetApiKeyWithContext method.
// It will increment the count of requests made to GetApiKey.
func (c *APIGateway) GetApiKeyWithContext(ctx aws.Context, input *apigateway.GetApiKeyInput, opts ...request.Option) (*apigateway.ApiKey, error) {
	c.inc("GetApiKey")
	return c.svc.GetApiKeyWithContext(ctx, input, opts...)
}

// GetApiKeysRequest is a passthrough to the underlying GetApiKeysRequest.
// It will increment the count of requests made to GetApiKeys.
func (c *APIGateway) GetApiKeysRequest(input *apigateway.GetApiKeysInput) (req *request.Request, output *apigateway.GetApiKeysOutput) {
	c.inc("GetApiKeys")
	return c.svc.GetApiKeysRequest(input)
}

// GetApiKeys is a passthrough to the underlying GetApiKeys method.
// It will increment the count of requests made to GetApiKeys.
func (c *APIGateway) GetApiKeys(input *apigateway.GetApiKeysInput) (*apigateway.GetApiKeysOutput, error) {
	c.inc("GetApiKeys")
	return c.svc.GetApiKeys(input)
}

// GetApiKeysWithContext is a passthrough to the underlying GetApiKeysWithContext method.
// It will increment the count of requests made to GetApiKeys.
func (c *APIGateway) GetApiKeysWithContext(ctx aws.Context, input *apigateway.GetApiKeysInput, opts ...request.Option) (*apigateway.GetApiKeysOutput, error) {
	c.inc("GetApiKeys")
	return c.svc.GetApiKeysWithContext(ctx, input, opts...)
}

// GetApiKeysPages is a passthrough to the underlying GetApiKeysPages method.
// It will increment the count of requests made to GetApiKeys on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use GetApiKeysPagesWithContext to avoid this.
func (c *APIGateway) GetApiKeysPages(input *apigateway.GetApiKeysInput, fn func(*apigateway.GetApiKeysOutput, bool) bool) error {
	wrappedFn := func(page *apigateway.GetApiKeysOutput, lastPage bool) bool {
		c.inc("GetApiKeys")
		return fn(page, lastPage)
	}
	return c.svc.GetApiKeysPages(input, wrappedFn)
}

// GetApiKeysPagesWithContext is a passthrough to the underlying GetApiKeysPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to GetApiKeys when applied to the request.
func (c *APIGateway) GetApiKeysPagesWithContext(ctx aws.Context, input *apigateway.GetApiKeysInput, fn func(*apigateway.GetApiKeysOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("GetApiKeys"))
	return c.svc.GetApiKeysPagesWithContext(ctx, input, fn, opts...)
}

// GetAuthorizerRequest is a passthrough to the underlying GetAuthorizerRequest.
// It will increment the count of requests made to GetAuthorizer.
func (c *APIGateway) GetAuthorizerRequest(input *apigateway.GetAuthorizerInput) (req *request.Request, output *apigateway.Authorizer) {
	c.inc("GetAuthorizer")
	return c.svc.GetAuthorizerRequest(input)
}

// GetAuthorizer is a passthrough to the underlying GetAuthorizer method.
// It will increment the count of requests made to GetAuthorizer.
func (c *APIGateway) GetAuthorizer(input *apigateway.GetAuthorizerInput) (*apigateway.Authorizer, error) {
	c.inc("GetAuthorizer")
	return c.svc.GetAuthorizer(input)
}

// GetAuthorizerWithContext is a passthrough to the underlying GetAuthorizerWithContext method.
// It will increment the count of requests made to GetAuthorizer.
func (c *APIGateway) GetAuthorizerWithContext(ctx aws.Context, input *apigateway.GetAuthorizerInput, opts ...request.Option) (*apigateway.Authorizer, error) {
	c.inc("GetAuthorizer")
	return c.svc.GetAuthorizerWithContext(ctx, input, opts...)
}

// GetAuthorizersRequest is a passthrough to the underlying GetAuthorizersRequest.
// It will increment the count of requests made to GetAuthorizers.
func (c *APIGateway) GetAuthorizersRequest(input *apigateway.GetAuthorizersInput) (req *request.Request, output *apigateway.GetAuthorizersOutput) {
	c.inc("GetAuthorizers")
	return c.svc.GetAuthorizersRequest(input)
}

// GetAuthorizers is a passthrough to the underlying GetAuthorizers method.
// It will increment the count of requests made to GetAuthorizers.
func (c *APIGateway) GetAuthorizers(input *apigateway.GetAuthorizersInput) (*apigateway.GetAuthorizersOutput, error) {
	c.inc("GetAuthorizers")
	return c.svc.GetAuthorizers(input)
}

// GetAuthorizersWithContext is a passthrough to the underlying GetAuthorizersWithContext method.
// It will increment the count of requests made to GetAuthorizers.
func (c *APIGateway) GetAuthorizersWithContext(ctx aws.Context, input *apigateway.GetAuthorizersInput, opts ...request.Option) (*apigateway.GetAuthorizersOutput, error) {
	c.inc("GetAuthorizers")
	return c.svc.GetAuthorizersWithContext(ctx, input, opts...)
}

// GetBasePathMappingRequest is a passthrough to the underlying GetBasePathMappingRequest.
// It will increment the count of requests made to GetBasePathMapping.
func (c *APIGateway) GetBasePathMappingRequest(input *apigateway.GetBasePathMappingInput) (req *request.Request, output *apigateway.BasePathMapping) {
	c.inc("GetBasePathMapping")
	return c.svc.GetBasePathMappingRequest(input)
}

// GetBasePathMapping is a passthrough to the underlying GetBasePathMapping method.
// It will increment the count of requests made to GetBasePathMapping.
func (c *APIGateway) GetBasePathMapping(input *apigateway.GetBasePathMappingInput) (*apigateway.BasePathMapping, error) {
	c.inc("GetBasePathMapping")
	return c.svc.GetBasePathMapping(input)
}

// GetBasePathMappingWithContext is a passthrough to the underlying GetBasePathMappingWithContext method.
// It will increment the count of requests made to GetBasePathMapping.
func (c *APIGateway) GetBasePathMappingWithContext(ctx aws.Context, input *apigateway.GetBasePathMappingInput, opts ...request.Option) (*apigateway.BasePathMapping, error) {
	c.inc("GetBasePathMapping")
	return c.svc.GetBasePathMappingWithContext(ctx, input, opts...)
}

// GetBasePathMappingsRequest is a passthrough to the underlying GetBasePathMappingsRequest.
// It will increment the count of requests made to GetBasePathMappings.
func (c *APIGateway) GetBasePathMappingsRequest(input *apigateway.GetBasePathMappingsInput) (req *request.Request, output *apigateway.GetBasePathMappingsOutput) {
	c.inc("GetBasePathMappings")
	return c.svc.GetBasePathMappingsRequest(input)
}

// GetBasePathMappings is a passthrough to the underlying GetBasePathMappings method.
// It will increment the count of requests made to GetBasePathMappings.
func (c *APIGateway) GetBasePathMappings(input *apigateway.GetBasePathMappingsInput) (*apigateway.GetBasePathMappingsOutput, error) {
	c.inc("GetBasePathMappings")
	return c.svc.GetBasePathMappings(input)
}

// GetBasePathMappingsWithContext is a passthrough to the underlying GetBasePathMappingsWithContext method.
// It will increment the count of requests made to GetBasePathMappings.
func (c *APIGateway) GetBasePathMappingsWithContext(ctx aws.Context, input *apigateway.GetBasePathMappingsInput, opts ...request.Option) (*apigateway.GetBasePathMappingsOutput, error) {
	c.inc("GetBasePathMappings")
	return c.svc.GetBasePathMappingsWithContext(ctx, input, opts...)
}

// GetBasePathMappingsPages is a passthrough to the underlying GetBasePathMappingsPages method.
// It will increment the count of requests made to GetBasePathMappings on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use GetBasePathMappingsPagesWithContext to avoid this.
func (c *APIGateway) GetBasePathMappingsPages(input *apigateway.GetBasePathMappingsInput, fn func(*apigateway.GetBasePathMappingsOutput, bool) bool) error {
	wrappedFn := func(page *apigateway.GetBasePathMappingsOutput, lastPage bool) bool {
		c.inc("GetBasePathMappings")
		return fn(page, lastPage)
	}
	return c.svc.GetBasePathMappingsPages(input, wrappedFn)
}

// GetBasePathMappingsPagesWithContext is a passthrough to the underlying GetBasePathMappingsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to GetBasePathMappings when applied to the request.
func (c *APIGateway) GetBasePathMappingsPagesWithContext(ctx aws.Context, input *apigateway.GetBasePathMappingsInput, fn func(*apigateway.GetBasePathMappingsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("GetBasePathMappings"))
	return c.svc.GetBasePathMappingsPagesWithContext(ctx, input, fn, opts...)
}

// GetClientCertificateRequest is a passthrough to the underlying GetClientCertificateRequest.
// It will increment the count of requests made to GetClientCertificate.
func (c *APIGateway) GetClientCertificateRequest(input *apigateway.GetClientCertificateInput) (req *request.Request, output *apigateway.ClientCertificate) {
	c.inc("GetClientCertificate")
	return c.svc.GetClientCertificateRequest(input)
}

// GetClientCertificate is a passthrough to the underlying GetClientCertificate method.
// It will increment the count of requests made to GetClientCertificate.
func (c *APIGateway) GetClientCertificate(input *apigateway.GetClientCertificateInput) (*apigateway.ClientCertificate, error) {
	c.inc("GetClientCertificate")
	return c.svc.GetClientCertificate(input)
}

// GetClientCertificateWithContext is a passthrough to the underlying GetClientCertificateWithContext method.
// It will increment the count of requests made to GetClientCertificate.
func (c *APIGateway) GetClientCertificateWithContext(ctx aws.Context, input *apigateway.GetClientCertificateInput, opts ...request.Option) (*apigateway.ClientCertificate, error) {
	c.inc("GetClientCertificate")
	return c.svc.GetClientCertificateWithContext(ctx, input, opts...)
}

// GetClientCertificatesRequest is a passthrough to the underlying GetClientCertificatesRequest.
// It will increment the count of requests made to GetClientCertificates.
func (c *APIGateway) GetClientCertificatesRequest(input *apigateway.GetClientCertificatesInput) (req *request.Request, output *apigateway.GetClientCertificatesOutput) {
	c.inc("GetClientCertificates")
	return c.svc.GetClientCertificatesRequest(input)
}

// GetClientCertificates is a passthrough to the underlying GetClientCertificates method.
// It will increment the count of requests made to GetClientCertificates.
func (c *APIGateway) GetClientCertificates(input *apigateway.GetClientCertificatesInput) (*apigateway.GetClientCertificatesOutput, error) {
	c.inc("GetClientCertificates")
	return c.svc.GetClientCertificates(input)
}

// GetClientCertificatesWithContext is a passthrough to the underlying GetClientCertificatesWithContext method.
// It will increment the count of requests made to GetClientCertificates.
func (c *APIGateway) GetClientCertificatesWithContext(ctx aws.Context, input *apigateway.GetClientCertificatesInput, opts ...request.Option) (*apigateway.GetClientCertificatesOutput, error) {
	c.inc("GetClientCertificates")
	return c.svc.GetClientCertificatesWithContext(ctx, input, opts...)
}

// GetClientCertificatesPages is a passthrough to the underlying GetClientCertificatesPages method.
// It will increment the count of requests made to GetClientCertificates on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use GetClientCertificatesPagesWithContext to avoid this.
func (c *APIGateway) GetClientCertificatesPages(input *apigateway.GetClientCertificatesInput, fn func(*apigateway.GetClientCertificatesOutput, bool) bool) error {
	wrappedFn := func(page *apigateway.GetClientCertificatesOutput, lastPage bool) bool {
		c.inc("GetClientCertificates")
		return fn(page, lastPage)
	}
	return c.svc.GetClientCertificatesPages(input, wrappedFn)
}

// GetClientCertificatesPagesWithContext is a passthrough to the underlying GetClientCertificatesPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to GetClientCertificates when applied to the request.
func (c *APIGateway) GetClientCertificatesPagesWithContext(ctx aws.Context, input *apigateway.GetClientCertificatesInput, fn func(*apigateway.GetClientCertificatesOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("GetClientCertificates"))
	return c.svc.GetClientCertificatesPagesWithContext(ctx, input, fn, opts...)
}

// GetDeploymentRequest is a passthrough to the underlying GetDeploymentRequest.
// It will increment the count of requests made to GetDeployment.
func (c *APIGateway) GetDeploymentRequest(input *apigateway.GetDeploymentInput) (req *request.Request, output *apigateway.Deployment) {
	c.inc("GetDeployment")
	return c.svc.GetDeploymentRequest(input)
}

// GetDeployment is a passthrough to the underlying GetDeployment method.
// It will increment the count of requests made to GetDeployment.
func (c *APIGateway) GetDeployment(input *apigateway.GetDeploymentInput) (*apigateway.Deployment, error) {
	c.inc("GetDeployment")
	return c.svc.GetDeployment(input)
}

// GetDeploymentWithContext is a passthrough to the underlying GetDeploymentWithContext method.
// It will increment the count of requests made to GetDeployment.
func (c *APIGateway) GetDeploymentWithContext(ctx aws.Context, input *apigateway.GetDeploymentInput, opts ...request.Option) (*apigateway.Deployment, error) {
	c.inc("GetDeployment")
	return c.svc.GetDeploymentWithContext(ctx, input, opts...)
}

// GetDeploymentsRequest is a passthrough to the underlying GetDeploymentsRequest.
// It will increment the count of requests made to GetDeployments.
func (c *APIGateway) GetDeploymentsRequest(input *apigateway.GetDeploymentsInput) (req *request.Request, output *apigateway.GetDeploymentsOutput) {
	c.inc("GetDeployments")
	return c.svc.GetDeploymentsRequest(input)
}

// GetDeployments is a passthrough to the underlying GetDeployments method.
// It will increment the count of requests made to GetDeployments.
func (c *APIGateway) GetDeployments(input *apigateway.GetDeploymentsInput) (*apigateway.GetDeploymentsOutput, error) {
	c.inc("GetDeployments")
	return c.svc.GetDeployments(input)
}

// GetDeploymentsWithContext is a passthrough to the underlying GetDeploymentsWithContext method.
// It will increment the count of requests made to GetDeployments.
func (c *APIGateway) GetDeploymentsWithContext(ctx aws.Context, input *apigateway.GetDeploymentsInput, opts ...request.Option) (*apigateway.GetDeploymentsOutput, error) {
	c.inc("GetDeployments")
	return c.svc.GetDeploymentsWithContext(ctx, input, opts...)
}

// GetDeploymentsPages is a passthrough to the underlying GetDeploymentsPages method.
// It will increment the count of requests made to GetDeployments on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use GetDeploymentsPagesWithContext to avoid this.
func (c *APIGateway) GetDeploymentsPages(input *apigateway.GetDeploymentsInput, fn func(*apigateway.GetDeploymentsOutput, bool) bool) error {
	wrappedFn := func(page *apigateway.GetDeploymentsOutput, lastPage bool) bool {
		c.inc("GetDeployments")
		return fn(page, lastPage)
	}
	return c.svc.GetDeploymentsPages(input, wrappedFn)
}

// GetDeploymentsPagesWithContext is a passthrough to the underlying GetDeploymentsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to GetDeployments when applied to the request.
func (c *APIGateway) GetDeploymentsPagesWithContext(ctx aws.Context, input *apigateway.GetDeploymentsInput, fn func(*apigateway.GetDeploymentsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("GetDeployments"))
	return c.svc.GetDeploymentsPagesWithContext(ctx, input, fn, opts...)
}

// GetDocumentationPartRequest is a passthrough to the underlying GetDocumentationPartRequest.
// It will increment the count of requests made to GetDocumentationPart.
func (c *APIGateway) GetDocumentationPartRequest(input *apigateway.GetDocumentationPartInput) (req *request.Request, output *apigateway.DocumentationPart) {
	c.inc("GetDocumentationPart")
	return c.svc.GetDocumentationPartRequest(input)
}

// GetDocumentationPart is a passthrough to the underlying GetDocumentationPart method.
// It will increment the count of requests made to GetDocumentationPart.
func (c *APIGateway) GetDocumentationPart(input *apigateway.GetDocumentationPartInput) (*apigateway.DocumentationPart, error) {
	c.inc("GetDocumentationPart")
	return c.svc.GetDocumentationPart(input)
}

// GetDocumentationPartWithContext is a passthrough to the underlying GetDocumentationPartWithContext method.
// It will increment the count of requests made to GetDocumentationPart.
func (c *APIGateway) GetDocumentationPartWithContext(ctx aws.Context, input *apigateway.GetDocumentationPartInput, opts ...request.Option) (*apigateway.DocumentationPart, error) {
	c.inc("GetDocumentationPart")
	return c.svc.GetDocumentationPartWithContext(ctx, input, opts...)
}

// GetDocumentationPartsRequest is a passthrough to the underlying GetDocumentationPartsRequest.
// It will increment the count of requests made to GetDocumentationParts.
func (c *APIGateway) GetDocumentationPartsRequest(input *apigateway.GetDocumentationPartsInput) (req *request.Request, output *apigateway.GetDocumentationPartsOutput) {
	c.inc("GetDocumentationParts")
	return c.svc.GetDocumentationPartsRequest(input)
}

// GetDocumentationParts is a passthrough to the underlying GetDocumentationParts method.
// It will increment the count of requests made to GetDocumentationParts.
func (c *APIGateway) GetDocumentationParts(input *apigateway.GetDocumentationPartsInput) (*apigateway.GetDocumentationPartsOutput, error) {
	c.inc("GetDocumentationParts")
	return c.svc.GetDocumentationParts(input)
}

// GetDocumentationPartsWithContext is a passthrough to the underlying GetDocumentationPartsWithContext method.
// It will increment the count of requests made to GetDocumentationParts.
func (c *APIGateway) GetDocumentationPartsWithContext(ctx aws.Context, input *apigateway.GetDocumentationPartsInput, opts ...request.Option) (*apigateway.GetDocumentationPartsOutput, error) {
	c.inc("GetDocumentationParts")
	return c.svc.GetDocumentationPartsWithContext(ctx, input, opts...)
}

// GetDocumentationVersionRequest is a passthrough to the underlying GetDocumentationVersionRequest.
// It will increment the count of requests made to GetDocumentationVersion.
func (c *APIGateway) GetDocumentationVersionRequest(input *apigateway.GetDocumentationVersionInput) (req *request.Request, output *apigateway.DocumentationVersion) {
	c.inc("GetDocumentationVersion")
	return c.svc.GetDocumentationVersionRequest(input)
}

// GetDocumentationVersion is a passthrough to the underlying GetDocumentationVersion method.
// It will increment the count of requests made to GetDocumentationVersion.
func (c *APIGateway) GetDocumentationVersion(input *apigateway.GetDocumentationVersionInput) (*apigateway.DocumentationVersion, error) {
	c.inc("GetDocumentationVersion")
	return c.svc.GetDocumentationVersion(input)
}

// GetDocumentationVersionWithContext is a passthrough to the underlying GetDocumentationVersionWithContext method.
// It will increment the count of requests made to GetDocumentationVersion.
func (c *APIGateway) GetDocumentationVersionWithContext(ctx aws.Context, input *apigateway.GetDocumentationVersionInput, opts ...request.Option) (*apigateway.DocumentationVersion, error) {
	c.inc("GetDocumentationVersion")
	return c.svc.GetDocumentationVersionWithContext(ctx, input, opts...)
}

// GetDocumentationVersionsRequest is a passthrough to the underlying GetDocumentationVersionsRequest.
// It will increment the count of requests made to GetDocumentationVersions.
func (c *APIGateway) GetDocumentationVersionsRequest(input *apigateway.GetDocumentationVersionsInput) (req *request.Request, output *apigateway.GetDocumentationVersionsOutput) {
	c.inc("GetDocumentationVersions")
	return c.svc.GetDocumentationVersionsRequest(input)
}

// GetDocumentationVersions is a passthrough to the underlying GetDocumentationVersions method.
// It will increment the count of requests made to GetDocumentationVersions.
func (c *APIGateway) GetDocumentationVersions(input *apigateway.GetDocumentationVersionsInput) (*apigateway.GetDocumentationVersionsOutput, error) {
	c.inc("GetDocumentationVersions")
	return c.svc.GetDocumentationVersions(input)
}

// GetDocumentationVersionsWithContext is a passthrough to the underlying GetDocumentationVersionsWithContext method.
// It will increment the count of requests made to GetDocumentationVersions.
func (c *APIGateway) GetDocumentationVersionsWithContext(ctx aws.Context, input *apigateway.GetDocumentationVersionsInput, opts ...request.Option) (*apigateway.GetDocumentationVersionsOutput, error) {
	c.inc("GetDocumentationVersions")
	return c.svc.GetDocumentationVersionsWithContext(ctx, input, opts...)
}

// GetDomainNameRequest is a passthrough to the underlying GetDomainNameRequest.
// It will increment the count of requests made to GetDomainName.
func (c *APIGateway) GetDomainNameRequest(input *apigateway.GetDomainNameInput) (req *request.Request, output *apigateway.DomainName) {
	c.inc("GetDomainName")
	return c.svc.GetDomainNameRequest(input)
}

// GetDomainName is a passthrough to the underlying GetDomainName method.
// It will increment the count of requests made to GetDomainName.
func (c *APIGateway) GetDomainName(input *apigateway.GetDomainNameInput) (*apigateway.DomainName, error) {
	c.inc("GetDomainName")
	return c.svc.GetDomainName(input)
}

// GetDomainNameWithContext is a passthrough to the underlying GetDomainNameWithContext method.
// It will increment the count of requests made to GetDomainName.
func (c *APIGateway) GetDomainNameWithContext(ctx aws.Context, input *apigateway.GetDomainNameInput, opts ...request.Option) (*apigateway.DomainName, error) {
	c.inc("GetDomainName")
	return c.svc.GetDomainNameWithContext(ctx, input, opts...)
}

// GetDomainNamesRequest is a passthrough to the underlying GetDomainNamesRequest.
// It will increment the count of requests made to GetDomainNames.
func (c *APIGateway) GetDomainNamesRequest(input *apigateway.GetDomainNamesInput) (req *request.Request, output *apigateway.GetDomainNamesOutput) {
	c.inc("GetDomainNames")
	return c.svc.GetDomainNamesRequest(input)
}

// GetDomainNames is a passthrough to the underlying GetDomainNames method.
// It will increment the count of requests made to GetDomainNames.
func (c *APIGateway) GetDomainNames(input *apigateway.GetDomainNamesInput) (*apigateway.GetDomainNamesOutput, error) {
	c.inc("GetDomainNames")
	return c.svc.GetDomainNames(input)
}

// GetDomainNamesWithContext is a passthrough to the underlying GetDomainNamesWithContext method.
// It will increment the count of requests made to GetDomainNames.
func (c *APIGateway) GetDomainNamesWithContext(ctx aws.Context, input *apigateway.GetDomainNamesInput, opts ...request.Option) (*apigateway.GetDomainNamesOutput, error) {
	c.inc("GetDomainNames")
	return c.svc.GetDomainNamesWithContext(ctx, input, opts...)
}

// GetDomainNamesPages is a passthrough to the underlying GetDomainNamesPages method.
// It will increment the count of requests made to GetDomainNames on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use GetDomainNamesPagesWithContext to avoid this.
func (c *APIGateway) GetDomainNamesPages(input *apigateway.GetDomainNamesInput, fn func(*apigateway.GetDomainNamesOutput, bool) bool) error {
	wrappedFn := func(page *apigateway.GetDomainNamesOutput, lastPage bool) bool {
		c.inc("GetDomainNames")
		return fn(page, lastPage)
	}
	return c.svc.GetDomainNamesPages(input, wrappedFn)
}

// GetDomainNamesPagesWithContext is a passthrough to the underlying GetDomainNamesPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to GetDomainNames when applied to the request.
func (c *APIGateway) GetDomainNamesPagesWithContext(ctx aws.Context, input *apigateway.GetDomainNamesInput, fn func(*apigateway.GetDomainNamesOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("GetDomainNames"))
	return c.svc.GetDomainNamesPagesWithContext(ctx, input, fn, opts...)
}

// GetExportRequest is a passthrough to the underlying GetExportRequest.
// It will increment the count of requests made to GetExport.
func (c *APIGateway) GetExportRequest(input *apigateway.GetExportInput) (req *request.Request, output *apigateway.GetExportOutput) {
	c.inc("GetExport")
	return c.svc.GetExportRequest(input)
}

// GetExport is a passthrough to the underlying GetExport method.
// It will increment the count of requests made to GetExport.
func (c *APIGateway) GetExport(input *apigateway.GetExportInput) (*apigateway.GetExportOutput, error) {
	c.inc("GetExport")
	return c.svc.GetExport(input)
}

// GetExportWithContext is a passthrough to the underlying GetExportWithContext method.
// It will increment the count of requests made to GetExport.
func (c *APIGateway) GetExportWithContext(ctx aws.Context, input *apigateway.GetExportInput, opts ...request.Option) (*apigateway.GetExportOutput, error) {
	c.inc("GetExport")
	return c.svc.GetExportWithContext(ctx, input, opts...)
}

// GetGatewayResponseRequest is a passthrough to the underlying GetGatewayResponseRequest.
// It will increment the count of requests made to GetGatewayResponse.
func (c *APIGateway) GetGatewayResponseRequest(input *apigateway.GetGatewayResponseInput) (req *request.Request, output *apigateway.UpdateGatewayResponseOutput) {
	c.inc("GetGatewayResponse")
	return c.svc.GetGatewayResponseRequest(input)
}

// GetGatewayResponse is a passthrough to the underlying GetGatewayResponse method.
// It will increment the count of requests made to GetGatewayResponse.
func (c *APIGateway) GetGatewayResponse(input *apigateway.GetGatewayResponseInput) (*apigateway.UpdateGatewayResponseOutput, error) {
	c.inc("GetGatewayResponse")
	return c.svc.GetGatewayResponse(input)
}

// GetGatewayResponseWithContext is a passthrough to the underlying GetGatewayResponseWithContext method.
// It will increment the count of requests made to GetGatewayResponse.
func (c *APIGateway) GetGatewayResponseWithContext(ctx aws.Context, input *apigateway.GetGatewayResponseInput, opts ...request.Option) (*apigateway.UpdateGatewayResponseOutput, error) {
	c.inc("GetGatewayResponse")
	return c.svc.GetGatewayResponseWithContext(ctx, input, opts...)
}

// GetGatewayResponsesRequest is a passthrough to the underlying GetGatewayResponsesRequest.
// It will increment the count of requests made to GetGatewayResponses.
func (c *APIGateway) GetGatewayResponsesRequest(input *apigateway.GetGatewayResponsesInput) (req *request.Request, output *apigateway.GetGatewayResponsesOutput) {
	c.inc("GetGatewayResponses")
	return c.svc.GetGatewayResponsesRequest(input)
}

// GetGatewayResponses is a passthrough to the underlying GetGatewayResponses method.
// It will increment the count of requests made to GetGatewayResponses.
func (c *APIGateway) GetGatewayResponses(input *apigateway.GetGatewayResponsesInput) (*apigateway.GetGatewayResponsesOutput, error) {
	c.inc("GetGatewayResponses")
	return c.svc.GetGatewayResponses(input)
}

// GetGatewayResponsesWithContext is a passthrough to the underlying GetGatewayResponsesWithContext method.
// It will increment the count of requests made to GetGatewayResponses.
func (c *APIGateway) GetGatewayResponsesWithContext(ctx aws.Context, input *apigateway.GetGatewayResponsesInput, opts ...request.Option) (*apigateway.GetGatewayResponsesOutput, error) {
	c.inc("GetGatewayResponses")
	return c.svc.GetGatewayResponsesWithContext(ctx, input, opts...)
}

// GetIntegrationRequest is a passthrough to the underlying GetIntegrationRequest.
// It will increment the count of requests made to GetIntegration.
func (c *APIGateway) GetIntegrationRequest(input *apigateway.GetIntegrationInput) (req *request.Request, output *apigateway.Integration) {
	c.inc("GetIntegration")
	return c.svc.GetIntegrationRequest(input)
}

// GetIntegration is a passthrough to the underlying GetIntegration method.
// It will increment the count of requests made to GetIntegration.
func (c *APIGateway) GetIntegration(input *apigateway.GetIntegrationInput) (*apigateway.Integration, error) {
	c.inc("GetIntegration")
	return c.svc.GetIntegration(input)
}

// GetIntegrationWithContext is a passthrough to the underlying GetIntegrationWithContext method.
// It will increment the count of requests made to GetIntegration.
func (c *APIGateway) GetIntegrationWithContext(ctx aws.Context, input *apigateway.GetIntegrationInput, opts ...request.Option) (*apigateway.Integration, error) {
	c.inc("GetIntegration")
	return c.svc.GetIntegrationWithContext(ctx, input, opts...)
}

// GetIntegrationResponseRequest is a passthrough to the underlying GetIntegrationResponseRequest.
// It will increment the count of requests made to GetIntegrationResponse.
func (c *APIGateway) GetIntegrationResponseRequest(input *apigateway.GetIntegrationResponseInput) (req *request.Request, output *apigateway.IntegrationResponse) {
	c.inc("GetIntegrationResponse")
	return c.svc.GetIntegrationResponseRequest(input)
}

// GetIntegrationResponse is a passthrough to the underlying GetIntegrationResponse method.
// It will increment the count of requests made to GetIntegrationResponse.
func (c *APIGateway) GetIntegrationResponse(input *apigateway.GetIntegrationResponseInput) (*apigateway.IntegrationResponse, error) {
	c.inc("GetIntegrationResponse")
	return c.svc.GetIntegrationResponse(input)
}

// GetIntegrationResponseWithContext is a passthrough to the underlying GetIntegrationResponseWithContext method.
// It will increment the count of requests made to GetIntegrationResponse.
func (c *APIGateway) GetIntegrationResponseWithContext(ctx aws.Context, input *apigateway.GetIntegrationResponseInput, opts ...request.Option) (*apigateway.IntegrationResponse, error) {
	c.inc("GetIntegrationResponse")
	return c.svc.GetIntegrationResponseWithContext(ctx, input, opts...)
}

// GetMethodRequest is a passthrough to the underlying GetMethodRequest.
// It will increment the count of requests made to GetMethod.
func (c *APIGateway) GetMethodRequest(input *apigateway.GetMethodInput) (req *request.Request, output *apigateway.Method) {
	c.inc("GetMethod")
	return c.svc.GetMethodRequest(input)
}

// GetMethod is a passthrough to the underlying GetMethod method.
// It will increment the count of requests made to GetMethod.
func (c *APIGateway) GetMethod(input *apigateway.GetMethodInput) (*apigateway.Method, error) {
	c.inc("GetMethod")
	return c.svc.GetMethod(input)
}

// GetMethodWithContext is a passthrough to the underlying GetMethodWithContext method.
// It will increment the count of requests made to GetMethod.
func (c *APIGateway) GetMethodWithContext(ctx aws.Context, input *apigateway.GetMethodInput, opts ...request.Option) (*apigateway.Method, error) {
	c.inc("GetMethod")
	return c.svc.GetMethodWithContext(ctx, input, opts...)
}

// GetMethodResponseRequest is a passthrough to the underlying GetMethodResponseRequest.
// It will increment the count of requests made to GetMethodResponse.
func (c *APIGateway) GetMethodResponseRequest(input *apigateway.GetMethodResponseInput) (req *request.Request, output *apigateway.MethodResponse) {
	c.inc("GetMethodResponse")
	return c.svc.GetMethodResponseRequest(input)
}

// GetMethodResponse is a passthrough to the underlying GetMethodResponse method.
// It will increment the count of requests made to GetMethodResponse.
func (c *APIGateway) GetMethodResponse(input *apigateway.GetMethodResponseInput) (*apigateway.MethodResponse, error) {
	c.inc("GetMethodResponse")
	return c.svc.GetMethodResponse(input)
}

// GetMethodResponseWithContext is a passthrough to the underlying GetMethodResponseWithContext method.
// It will increment the count of requests made to GetMethodResponse.
func (c *APIGateway) GetMethodResponseWithContext(ctx aws.Context, input *apigateway.GetMethodResponseInput, opts ...request.Option) (*apigateway.MethodResponse, error) {
	c.inc("GetMethodResponse")
	return c.svc.GetMethodResponseWithContext(ctx, input, opts...)
}

// GetModelRequest is a passthrough to the underlying GetModelRequest.
// It will increment the count of requests made to GetModel.
func (c *APIGateway) GetModelRequest(input *apigateway.GetModelInput) (req *request.Request, output *apigateway.Model) {
	c.inc("GetModel")
	return c.svc.GetModelRequest(input)
}

// GetModel is a passthrough to the underlying GetModel method.
// It will increment the count of requests made to GetModel.
func (c *APIGateway) GetModel(input *apigateway.GetModelInput) (*apigateway.Model, error) {
	c.inc("GetModel")
	return c.svc.GetModel(input)
}

// GetModelWithContext is a passthrough to the underlying GetModelWithContext method.
// It will increment the count of requests made to GetModel.
func (c *APIGateway) GetModelWithContext(ctx aws.Context, input *apigateway.GetModelInput, opts ...request.Option) (*apigateway.Model, error) {
	c.inc("GetModel")
	return c.svc.GetModelWithContext(ctx, input, opts...)
}

// GetModelTemplateRequest is a passthrough to the underlying GetModelTemplateRequest.
// It will increment the count of requests made to GetModelTemplate.
func (c *APIGateway) GetModelTemplateRequest(input *apigateway.GetModelTemplateInput) (req *request.Request, output *apigateway.GetModelTemplateOutput) {
	c.inc("GetModelTemplate")
	return c.svc.GetModelTemplateRequest(input)
}

// GetModelTemplate is a passthrough to the underlying GetModelTemplate method.
// It will increment the count of requests made to GetModelTemplate.
func (c *APIGateway) GetModelTemplate(input *apigateway.GetModelTemplateInput) (*apigateway.GetModelTemplateOutput, error) {
	c.inc("GetModelTemplate")
	return c.svc.GetModelTemplate(input)
}

// GetModelTemplateWithContext is a passthrough to the underlying GetModelTemplateWithContext method.
// It will increment the count of requests made to GetModelTemplate.
func (c *APIGateway) GetModelTemplateWithContext(ctx aws.Context, input *apigateway.GetModelTemplateInput, opts ...request.Option) (*apigateway.GetModelTemplateOutput, error) {
	c.inc("GetModelTemplate")
	return c.svc.GetModelTemplateWithContext(ctx, input, opts...)
}

// GetModelsRequest is a passthrough to the underlying GetModelsRequest.
// It will increment the count of requests made to GetModels.
func (c *APIGateway) GetModelsRequest(input *apigateway.GetModelsInput) (req *request.Request, output *apigateway.GetModelsOutput) {
	c.inc("GetModels")
	return c.svc.GetModelsRequest(input)
}

// GetModels is a passthrough to the underlying GetModels method.
// It will increment the count of requests made to GetModels.
func (c *APIGateway) GetModels(input *apigateway.GetModelsInput) (*apigateway.GetModelsOutput, error) {
	c.inc("GetModels")
	return c.svc.GetModels(input)
}

// GetModelsWithContext is a passthrough to the underlying GetModelsWithContext method.
// It will increment the count of requests made to GetModels.
func (c *APIGateway) GetModelsWithContext(ctx aws.Context, input *apigateway.GetModelsInput, opts ...request.Option) (*apigateway.GetModelsOutput, error) {
	c.inc("GetModels")
	return c.svc.GetModelsWithContext(ctx, input, opts...)
}

// GetModelsPages is a passthrough to the underlying GetModelsPages method.
// It will increment the count of requests made to GetModels on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use GetModelsPagesWithContext to avoid this.
func (c *APIGateway) GetModelsPages(input *apigateway.GetModelsInput, fn func(*apigateway.GetModelsOutput, bool) bool) error {
	wrappedFn := func(page *apigateway.GetModelsOutput, lastPage bool) bool {
		c.inc("GetModels")
		return fn(page, lastPage)
	}
	return c.svc.GetModelsPages(input, wrappedFn)
}

// GetModelsPagesWithContext is a passthrough to the underlying GetModelsPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to GetModels when applied to the request.
func (c *APIGateway) GetModelsPagesWithContext(ctx aws.Context, input *apigateway.GetModelsInput, fn func(*apigateway.GetModelsOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("GetModels"))
	return c.svc.GetModelsPagesWithContext(ctx, input, fn, opts...)
}

// GetRequestValidatorRequest is a passthrough to the underlying GetRequestValidatorRequest.
// It will increment the count of requests made to GetRequestValidator.
func (c *APIGateway) GetRequestValidatorRequest(input *apigateway.GetRequestValidatorInput) (req *request.Request, output *apigateway.UpdateRequestValidatorOutput) {
	c.inc("GetRequestValidator")
	return c.svc.GetRequestValidatorRequest(input)
}

// GetRequestValidator is a passthrough to the underlying GetRequestValidator method.
// It will increment the count of requests made to GetRequestValidator.
func (c *APIGateway) GetRequestValidator(input *apigateway.GetRequestValidatorInput) (*apigateway.UpdateRequestValidatorOutput, error) {
	c.inc("GetRequestValidator")
	return c.svc.GetRequestValidator(input)
}

// GetRequestValidatorWithContext is a passthrough to the underlying GetRequestValidatorWithContext method.
// It will increment the count of requests made to GetRequestValidator.
func (c *APIGateway) GetRequestValidatorWithContext(ctx aws.Context, input *apigateway.GetRequestValidatorInput, opts ...request.Option) (*apigateway.UpdateRequestValidatorOutput, error) {
	c.inc("GetRequestValidator")
	return c.svc.GetRequestValidatorWithContext(ctx, input, opts...)
}

// GetRequestValidatorsRequest is a passthrough to the underlying GetRequestValidatorsRequest.
// It will increment the count of requests made to GetRequestValidators.
func (c *APIGateway) GetRequestValidatorsRequest(input *apigateway.GetRequestValidatorsInput) (req *request.Request, output *apigateway.GetRequestValidatorsOutput) {
	c.inc("GetRequestValidators")
	return c.svc.GetRequestValidatorsRequest(input)
}

// GetRequestValidators is a passthrough to the underlying GetRequestValidators method.
// It will increment the count of requests made to GetRequestValidators.
func (c *APIGateway) GetRequestValidators(input *apigateway.GetRequestValidatorsInput) (*apigateway.GetRequestValidatorsOutput, error) {
	c.inc("GetRequestValidators")
	return c.svc.GetRequestValidators(input)
}

// GetRequestValidatorsWithContext is a passthrough to the underlying GetRequestValidatorsWithContext method.
// It will increment the count of requests made to GetRequestValidators.
func (c *APIGateway) GetRequestValidatorsWithContext(ctx aws.Context, input *apigateway.GetRequestValidatorsInput, opts ...request.Option) (*apigateway.GetRequestValidatorsOutput, error) {
	c.inc("GetRequestValidators")
	return c.svc.GetRequestValidatorsWithContext(ctx, input, opts...)
}

// GetResourceRequest is a passthrough to the underlying GetResourceRequest.
// It will increment the count of requests made to GetResource.
func (c *APIGateway) GetResourceRequest(input *apigateway.GetResourceInput) (req *request.Request, output *apigateway.Resource) {
	c.inc("GetResource")
	return c.svc.GetResourceRequest(input)
}

// GetResource is a passthrough to the underlying GetResource method.
// It will increment the count of requests made to GetResource.
func (c *APIGateway) GetResource(input *apigateway.GetResourceInput) (*apigateway.Resource, error) {
	c.inc("GetResource")
	return c.svc.GetResource(input)
}

// GetResourceWithContext is a passthrough to the underlying GetResourceWithContext method.
// It will increment the count of requests made to GetResource.
func (c *APIGateway) GetResourceWithContext(ctx aws.Context, input *apigateway.GetResourceInput, opts ...request.Option) (*apigateway.Resource, error) {
	c.inc("GetResource")
	return c.svc.GetResourceWithContext(ctx, input, opts...)
}

// GetResourcesRequest is a passthrough to the underlying GetResourcesRequest.
// It will increment the count of requests made to GetResources.
func (c *APIGateway) GetResourcesRequest(input *apigateway.GetResourcesInput) (req *request.Request, output *apigateway.GetResourcesOutput) {
	c.inc("GetResources")
	return c.svc.GetResourcesRequest(input)
}

// GetResources is a passthrough to the underlying GetResources method.
// It will increment the count of requests made to GetResources.
func (c *APIGateway) GetResources(input *apigateway.GetResourcesInput) (*apigateway.GetResourcesOutput, error) {
	c.inc("GetResources")
	return c.svc.GetResources(input)
}

// GetResourcesWithContext is a passthrough to the underlying GetResourcesWithContext method.
// It will increment the count of requests made to GetResources.
func (c *APIGateway) GetResourcesWithContext(ctx aws.Context, input *apigateway.GetResourcesInput, opts ...request.Option) (*apigateway.GetResourcesOutput, error) {
	c.inc("GetResources")
	return c.svc.GetResourcesWithContext(ctx, input, opts...)
}

// GetResourcesPages is a passthrough to the underlying GetResourcesPages method.
// It will increment the count of requests made to GetResources on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use GetResourcesPagesWithContext to avoid this.
func (c *APIGateway) GetResourcesPages(input *apigateway.GetResourcesInput, fn func(*apigateway.GetResourcesOutput, bool) bool) error {
	wrappedFn := func(page *apigateway.GetResourcesOutput, lastPage bool) bool {
		c.inc("GetResources")
		return fn(page, lastPage)
	}
	return c.svc.GetResourcesPages(input, wrappedFn)
}

// GetResourcesPagesWithContext is a passthrough to the underlying GetResourcesPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to GetResources when applied to the request.
func (c *APIGateway) GetResourcesPagesWithContext(ctx aws.Context, input *apigateway.GetResourcesInput, fn func(*apigateway.GetResourcesOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("GetResources"))
	return c.svc.GetResourcesPagesWithContext(ctx, input, fn, opts...)
}

// GetRestApiRequest is a passthrough to the underlying GetRestApiRequest.
// It will increment the count of requests made to GetRestApi.
func (c *APIGateway) GetRestApiRequest(input *apigateway.GetRestApiInput) (req *request.Request, output *apigateway.RestApi) {
	c.inc("GetRestApi")
	return c.svc.GetRestApiRequest(input)
}

// GetRestApi is a passthrough to the underlying GetRestApi method.
// It will increment the count of requests made to GetRestApi.
func (c *APIGateway) GetRestApi(input *apigateway.GetRestApiInput) (*apigateway.RestApi, error) {
	c.inc("GetRestApi")
	return c.svc.GetRestApi(input)
}

// GetRestApiWithContext is a passthrough to the underlying GetRestApiWithContext method.
// It will increment the count of requests made to GetRestApi.
func (c *APIGateway) GetRestApiWithContext(ctx aws.Context, input *apigateway.GetRestApiInput, opts ...request.Option) (*apigateway.RestApi, error) {
	c.inc("GetRestApi")
	return c.svc.GetRestApiWithContext(ctx, input, opts...)
}

// GetRestApisRequest is a passthrough to the underlying GetRestApisRequest.
// It will increment the count of requests made to GetRestApis.
func (c *APIGateway) GetRestApisRequest(input *apigateway.GetRestApisInput) (req *request.Request, output *apigateway.GetRestApisOutput) {
	c.inc("GetRestApis")
	return c.svc.GetRestApisRequest(input)
}

// GetRestApis is a passthrough to the underlying GetRestApis method.
// It will increment the count of requests made to GetRestApis.
func (c *APIGateway) GetRestApis(input *apigateway.GetRestApisInput) (*apigateway.GetRestApisOutput, error) {
	c.inc("GetRestApis")
	return c.svc.GetRestApis(input)
}

// GetRestApisWithContext is a passthrough to the underlying GetRestApisWithContext method.
// It will increment the count of requests made to GetRestApis.
func (c *APIGateway) GetRestApisWithContext(ctx aws.Context, input *apigateway.GetRestApisInput, opts ...request.Option) (*apigateway.GetRestApisOutput, error) {
	c.inc("GetRestApis")
	return c.svc.GetRestApisWithContext(ctx, input, opts...)
}

// GetRestApisPages is a passthrough to the underlying GetRestApisPages method.
// It will increment the count of requests made to GetRestApis on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use GetRestApisPagesWithContext to avoid this.
func (c *APIGateway) GetRestApisPages(input *apigateway.GetRestApisInput, fn func(*apigateway.GetRestApisOutput, bool) bool) error {
	wrappedFn := func(page *apigateway.GetRestApisOutput, lastPage bool) bool {
		c.inc("GetRestApis")
		return fn(page, lastPage)
	}
	return c.svc.GetRestApisPages(input, wrappedFn)
}

// GetRestApisPagesWithContext is a passthrough to the underlying GetRestApisPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to GetRestApis when applied to the request.
func (c *APIGateway) GetRestApisPagesWithContext(ctx aws.Context, input *apigateway.GetRestApisInput, fn func(*apigateway.GetRestApisOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("GetRestApis"))
	return c.svc.GetRestApisPagesWithContext(ctx, input, fn, opts...)
}

// GetSdkRequest is a passthrough to the underlying GetSdkRequest.
// It will increment the count of requests made to GetSdk.
func (c *APIGateway) GetSdkRequest(input *apigateway.GetSdkInput) (req *request.Request, output *apigateway.GetSdkOutput) {
	c.inc("GetSdk")
	return c.svc.GetSdkRequest(input)
}

// GetSdk is a passthrough to the underlying GetSdk method.
// It will increment the count of requests made to GetSdk.
func (c *APIGateway) GetSdk(input *apigateway.GetSdkInput) (*apigateway.GetSdkOutput, error) {
	c.inc("GetSdk")
	return c.svc.GetSdk(input)
}

// GetSdkWithContext is a passthrough to the underlying GetSdkWithContext method.
// It will increment the count of requests made to GetSdk.
func (c *APIGateway) GetSdkWithContext(ctx aws.Context, input *apigateway.GetSdkInput, opts ...request.Option) (*apigateway.GetSdkOutput, error) {
	c.inc("GetSdk")
	return c.svc.GetSdkWithContext(ctx, input, opts...)
}

// GetSdkTypeRequest is a passthrough to the underlying GetSdkTypeRequest.
// It will increment the count of requests made to GetSdkType.
func (c *APIGateway) GetSdkTypeRequest(input *apigateway.GetSdkTypeInput) (req *request.Request, output *apigateway.SdkType) {
	c.inc("GetSdkType")
	return c.svc.GetSdkTypeRequest(input)
}

// GetSdkType is a passthrough to the underlying GetSdkType method.
// It will increment the count of requests made to GetSdkType.
func (c *APIGateway) GetSdkType(input *apigateway.GetSdkTypeInput) (*apigateway.SdkType, error) {
	c.inc("GetSdkType")
	return c.svc.GetSdkType(input)
}

// GetSdkTypeWithContext is a passthrough to the underlying GetSdkTypeWithContext method.
// It will increment the count of requests made to GetSdkType.
func (c *APIGateway) GetSdkTypeWithContext(ctx aws.Context, input *apigateway.GetSdkTypeInput, opts ...request.Option) (*apigateway.SdkType, error) {
	c.inc("GetSdkType")
	return c.svc.GetSdkTypeWithContext(ctx, input, opts...)
}

// GetSdkTypesRequest is a passthrough to the underlying GetSdkTypesRequest.
// It will increment the count of requests made to GetSdkTypes.
func (c *APIGateway) GetSdkTypesRequest(input *apigateway.GetSdkTypesInput) (req *request.Request, output *apigateway.GetSdkTypesOutput) {
	c.inc("GetSdkTypes")
	return c.svc.GetSdkTypesRequest(input)
}

// GetSdkTypes is a passthrough to the underlying GetSdkTypes method.
// It will increment the count of requests made to GetSdkTypes.
func (c *APIGateway) GetSdkTypes(input *apigateway.GetSdkTypesInput) (*apigateway.GetSdkTypesOutput, error) {
	c.inc("GetSdkTypes")
	return c.svc.GetSdkTypes(input)
}

// GetSdkTypesWithContext is a passthrough to the underlying GetSdkTypesWithContext method.
// It will increment the count of requests made to GetSdkTypes.
func (c *APIGateway) GetSdkTypesWithContext(ctx aws.Context, input *apigateway.GetSdkTypesInput, opts ...request.Option) (*apigateway.GetSdkTypesOutput, error) {
	c.inc("GetSdkTypes")
	return c.svc.GetSdkTypesWithContext(ctx, input, opts...)
}

// GetStageRequest is a passthrough to the underlying GetStageRequest.
// It will increment the count of requests made to GetStage.
func (c *APIGateway) GetStageRequest(input *apigateway.GetStageInput) (req *request.Request, output *apigateway.Stage) {
	c.inc("GetStage")
	return c.svc.GetStageRequest(input)
}

// GetStage is a passthrough to the underlying GetStage method.
// It will increment the count of requests made to GetStage.
func (c *APIGateway) GetStage(input *apigateway.GetStageInput) (*apigateway.Stage, error) {
	c.inc("GetStage")
	return c.svc.GetStage(input)
}

// GetStageWithContext is a passthrough to the underlying GetStageWithContext method.
// It will increment the count of requests made to GetStage.
func (c *APIGateway) GetStageWithContext(ctx aws.Context, input *apigateway.GetStageInput, opts ...request.Option) (*apigateway.Stage, error) {
	c.inc("GetStage")
	return c.svc.GetStageWithContext(ctx, input, opts...)
}

// GetStagesRequest is a passthrough to the underlying GetStagesRequest.
// It will increment the count of requests made to GetStages.
func (c *APIGateway) GetStagesRequest(input *apigateway.GetStagesInput) (req *request.Request, output *apigateway.GetStagesOutput) {
	c.inc("GetStages")
	return c.svc.GetStagesRequest(input)
}

// GetStages is a passthrough to the underlying GetStages method.
// It will increment the count of requests made to GetStages.
func (c *APIGateway) GetStages(input *apigateway.GetStagesInput) (*apigateway.GetStagesOutput, error) {
	c.inc("GetStages")
	return c.svc.GetStages(input)
}

// GetStagesWithContext is a passthrough to the underlying GetStagesWithContext method.
// It will increment the count of requests made to GetStages.
func (c *APIGateway) GetStagesWithContext(ctx aws.Context, input *apigateway.GetStagesInput, opts ...request.Option) (*apigateway.GetStagesOutput, error) {
	c.inc("GetStages")
	return c.svc.GetStagesWithContext(ctx, input, opts...)
}

// GetUsageRequest is a passthrough to the underlying GetUsageRequest.
// It will increment the count of requests made to GetUsage.
func (c *APIGateway) GetUsageRequest(input *apigateway.GetUsageInput) (req *request.Request, output *apigateway.Usage) {
	c.inc("GetUsage")
	return c.svc.GetUsageRequest(input)
}

// GetUsage is a passthrough to the underlying GetUsage method.
// It will increment the count of requests made to GetUsage.
func (c *APIGateway) GetUsage(input *apigateway.GetUsageInput) (*apigateway.Usage, error) {
	c.inc("GetUsage")
	return c.svc.GetUsage(input)
}

// GetUsageWithContext is a passthrough to the underlying GetUsageWithContext method.
// It will increment the count of requests made to GetUsage.
func (c *APIGateway) GetUsageWithContext(ctx aws.Context, input *apigateway.GetUsageInput, opts ...request.Option) (*apigateway.Usage, error) {
	c.inc("GetUsage")
	return c.svc.GetUsageWithContext(ctx, input, opts...)
}

// GetUsagePages is a passthrough to the underlying GetUsagePages method.
// It will increment the count of requests made to GetUsage on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use GetUsagePagesWithContext to avoid this.
func (c *APIGateway) GetUsagePages(input *apigateway.GetUsageInput, fn func(*apigateway.Usage, bool) bool) error {
	wrappedFn := func(page *apigateway.Usage, lastPage bool) bool {
		c.inc("GetUsage")
		return fn(page, lastPage)
	}
	return c.svc.GetUsagePages(input, wrappedFn)
}

// GetUsagePagesWithContext is a passthrough to the underlying GetUsagePagesWithContext method.
// It will add a request.Option that will increment the count of requests made to GetUsage when applied to the request.
func (c *APIGateway) GetUsagePagesWithContext(ctx aws.Context, input *apigateway.GetUsageInput, fn func(*apigateway.Usage, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("GetUsage"))
	return c.svc.GetUsagePagesWithContext(ctx, input, fn, opts...)
}

// GetUsagePlanRequest is a passthrough to the underlying GetUsagePlanRequest.
// It will increment the count of requests made to GetUsagePlan.
func (c *APIGateway) GetUsagePlanRequest(input *apigateway.GetUsagePlanInput) (req *request.Request, output *apigateway.UsagePlan) {
	c.inc("GetUsagePlan")
	return c.svc.GetUsagePlanRequest(input)
}

// GetUsagePlan is a passthrough to the underlying GetUsagePlan method.
// It will increment the count of requests made to GetUsagePlan.
func (c *APIGateway) GetUsagePlan(input *apigateway.GetUsagePlanInput) (*apigateway.UsagePlan, error) {
	c.inc("GetUsagePlan")
	return c.svc.GetUsagePlan(input)
}

// GetUsagePlanWithContext is a passthrough to the underlying GetUsagePlanWithContext method.
// It will increment the count of requests made to GetUsagePlan.
func (c *APIGateway) GetUsagePlanWithContext(ctx aws.Context, input *apigateway.GetUsagePlanInput, opts ...request.Option) (*apigateway.UsagePlan, error) {
	c.inc("GetUsagePlan")
	return c.svc.GetUsagePlanWithContext(ctx, input, opts...)
}

// GetUsagePlanKeyRequest is a passthrough to the underlying GetUsagePlanKeyRequest.
// It will increment the count of requests made to GetUsagePlanKey.
func (c *APIGateway) GetUsagePlanKeyRequest(input *apigateway.GetUsagePlanKeyInput) (req *request.Request, output *apigateway.UsagePlanKey) {
	c.inc("GetUsagePlanKey")
	return c.svc.GetUsagePlanKeyRequest(input)
}

// GetUsagePlanKey is a passthrough to the underlying GetUsagePlanKey method.
// It will increment the count of requests made to GetUsagePlanKey.
func (c *APIGateway) GetUsagePlanKey(input *apigateway.GetUsagePlanKeyInput) (*apigateway.UsagePlanKey, error) {
	c.inc("GetUsagePlanKey")
	return c.svc.GetUsagePlanKey(input)
}

// GetUsagePlanKeyWithContext is a passthrough to the underlying GetUsagePlanKeyWithContext method.
// It will increment the count of requests made to GetUsagePlanKey.
func (c *APIGateway) GetUsagePlanKeyWithContext(ctx aws.Context, input *apigateway.GetUsagePlanKeyInput, opts ...request.Option) (*apigateway.UsagePlanKey, error) {
	c.inc("GetUsagePlanKey")
	return c.svc.GetUsagePlanKeyWithContext(ctx, input, opts...)
}

// GetUsagePlanKeysRequest is a passthrough to the underlying GetUsagePlanKeysRequest.
// It will increment the count of requests made to GetUsagePlanKeys.
func (c *APIGateway) GetUsagePlanKeysRequest(input *apigateway.GetUsagePlanKeysInput) (req *request.Request, output *apigateway.GetUsagePlanKeysOutput) {
	c.inc("GetUsagePlanKeys")
	return c.svc.GetUsagePlanKeysRequest(input)
}

// GetUsagePlanKeys is a passthrough to the underlying GetUsagePlanKeys method.
// It will increment the count of requests made to GetUsagePlanKeys.
func (c *APIGateway) GetUsagePlanKeys(input *apigateway.GetUsagePlanKeysInput) (*apigateway.GetUsagePlanKeysOutput, error) {
	c.inc("GetUsagePlanKeys")
	return c.svc.GetUsagePlanKeys(input)
}

// GetUsagePlanKeysWithContext is a passthrough to the underlying GetUsagePlanKeysWithContext method.
// It will increment the count of requests made to GetUsagePlanKeys.
func (c *APIGateway) GetUsagePlanKeysWithContext(ctx aws.Context, input *apigateway.GetUsagePlanKeysInput, opts ...request.Option) (*apigateway.GetUsagePlanKeysOutput, error) {
	c.inc("GetUsagePlanKeys")
	return c.svc.GetUsagePlanKeysWithContext(ctx, input, opts...)
}

// GetUsagePlanKeysPages is a passthrough to the underlying GetUsagePlanKeysPages method.
// It will increment the count of requests made to GetUsagePlanKeys on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use GetUsagePlanKeysPagesWithContext to avoid this.
func (c *APIGateway) GetUsagePlanKeysPages(input *apigateway.GetUsagePlanKeysInput, fn func(*apigateway.GetUsagePlanKeysOutput, bool) bool) error {
	wrappedFn := func(page *apigateway.GetUsagePlanKeysOutput, lastPage bool) bool {
		c.inc("GetUsagePlanKeys")
		return fn(page, lastPage)
	}
	return c.svc.GetUsagePlanKeysPages(input, wrappedFn)
}

// GetUsagePlanKeysPagesWithContext is a passthrough to the underlying GetUsagePlanKeysPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to GetUsagePlanKeys when applied to the request.
func (c *APIGateway) GetUsagePlanKeysPagesWithContext(ctx aws.Context, input *apigateway.GetUsagePlanKeysInput, fn func(*apigateway.GetUsagePlanKeysOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("GetUsagePlanKeys"))
	return c.svc.GetUsagePlanKeysPagesWithContext(ctx, input, fn, opts...)
}

// GetUsagePlansRequest is a passthrough to the underlying GetUsagePlansRequest.
// It will increment the count of requests made to GetUsagePlans.
func (c *APIGateway) GetUsagePlansRequest(input *apigateway.GetUsagePlansInput) (req *request.Request, output *apigateway.GetUsagePlansOutput) {
	c.inc("GetUsagePlans")
	return c.svc.GetUsagePlansRequest(input)
}

// GetUsagePlans is a passthrough to the underlying GetUsagePlans method.
// It will increment the count of requests made to GetUsagePlans.
func (c *APIGateway) GetUsagePlans(input *apigateway.GetUsagePlansInput) (*apigateway.GetUsagePlansOutput, error) {
	c.inc("GetUsagePlans")
	return c.svc.GetUsagePlans(input)
}

// GetUsagePlansWithContext is a passthrough to the underlying GetUsagePlansWithContext method.
// It will increment the count of requests made to GetUsagePlans.
func (c *APIGateway) GetUsagePlansWithContext(ctx aws.Context, input *apigateway.GetUsagePlansInput, opts ...request.Option) (*apigateway.GetUsagePlansOutput, error) {
	c.inc("GetUsagePlans")
	return c.svc.GetUsagePlansWithContext(ctx, input, opts...)
}

// GetUsagePlansPages is a passthrough to the underlying GetUsagePlansPages method.
// It will increment the count of requests made to GetUsagePlans on each page.
// NOTE: this is slightly inaccurate in the case of errors, since the function will not be called.
// Use GetUsagePlansPagesWithContext to avoid this.
func (c *APIGateway) GetUsagePlansPages(input *apigateway.GetUsagePlansInput, fn func(*apigateway.GetUsagePlansOutput, bool) bool) error {
	wrappedFn := func(page *apigateway.GetUsagePlansOutput, lastPage bool) bool {
		c.inc("GetUsagePlans")
		return fn(page, lastPage)
	}
	return c.svc.GetUsagePlansPages(input, wrappedFn)
}

// GetUsagePlansPagesWithContext is a passthrough to the underlying GetUsagePlansPagesWithContext method.
// It will add a request.Option that will increment the count of requests made to GetUsagePlans when applied to the request.
func (c *APIGateway) GetUsagePlansPagesWithContext(ctx aws.Context, input *apigateway.GetUsagePlansInput, fn func(*apigateway.GetUsagePlansOutput, bool) bool, opts ...request.Option) error {
	opts = append(opts, c.incViaRequestOption("GetUsagePlans"))
	return c.svc.GetUsagePlansPagesWithContext(ctx, input, fn, opts...)
}

// ImportApiKeysRequest is a passthrough to the underlying ImportApiKeysRequest.
// It will increment the count of requests made to ImportApiKeys.
func (c *APIGateway) ImportApiKeysRequest(input *apigateway.ImportApiKeysInput) (req *request.Request, output *apigateway.ImportApiKeysOutput) {
	c.inc("ImportApiKeys")
	return c.svc.ImportApiKeysRequest(input)
}

// ImportApiKeys is a passthrough to the underlying ImportApiKeys method.
// It will increment the count of requests made to ImportApiKeys.
func (c *APIGateway) ImportApiKeys(input *apigateway.ImportApiKeysInput) (*apigateway.ImportApiKeysOutput, error) {
	c.inc("ImportApiKeys")
	return c.svc.ImportApiKeys(input)
}

// ImportApiKeysWithContext is a passthrough to the underlying ImportApiKeysWithContext method.
// It will increment the count of requests made to ImportApiKeys.
func (c *APIGateway) ImportApiKeysWithContext(ctx aws.Context, input *apigateway.ImportApiKeysInput, opts ...request.Option) (*apigateway.ImportApiKeysOutput, error) {
	c.inc("ImportApiKeys")
	return c.svc.ImportApiKeysWithContext(ctx, input, opts...)
}

// ImportDocumentationPartsRequest is a passthrough to the underlying ImportDocumentationPartsRequest.
// It will increment the count of requests made to ImportDocumentationParts.
func (c *APIGateway) ImportDocumentationPartsRequest(input *apigateway.ImportDocumentationPartsInput) (req *request.Request, output *apigateway.ImportDocumentationPartsOutput) {
	c.inc("ImportDocumentationParts")
	return c.svc.ImportDocumentationPartsRequest(input)
}

// ImportDocumentationParts is a passthrough to the underlying ImportDocumentationParts method.
// It will increment the count of requests made to ImportDocumentationParts.
func (c *APIGateway) ImportDocumentationParts(input *apigateway.ImportDocumentationPartsInput) (*apigateway.ImportDocumentationPartsOutput, error) {
	c.inc("ImportDocumentationParts")
	return c.svc.ImportDocumentationParts(input)
}

// ImportDocumentationPartsWithContext is a passthrough to the underlying ImportDocumentationPartsWithContext method.
// It will increment the count of requests made to ImportDocumentationParts.
func (c *APIGateway) ImportDocumentationPartsWithContext(ctx aws.Context, input *apigateway.ImportDocumentationPartsInput, opts ...request.Option) (*apigateway.ImportDocumentationPartsOutput, error) {
	c.inc("ImportDocumentationParts")
	return c.svc.ImportDocumentationPartsWithContext(ctx, input, opts...)
}

// ImportRestApiRequest is a passthrough to the underlying ImportRestApiRequest.
// It will increment the count of requests made to ImportRestApi.
func (c *APIGateway) ImportRestApiRequest(input *apigateway.ImportRestApiInput) (req *request.Request, output *apigateway.RestApi) {
	c.inc("ImportRestApi")
	return c.svc.ImportRestApiRequest(input)
}

// ImportRestApi is a passthrough to the underlying ImportRestApi method.
// It will increment the count of requests made to ImportRestApi.
func (c *APIGateway) ImportRestApi(input *apigateway.ImportRestApiInput) (*apigateway.RestApi, error) {
	c.inc("ImportRestApi")
	return c.svc.ImportRestApi(input)
}

// ImportRestApiWithContext is a passthrough to the underlying ImportRestApiWithContext method.
// It will increment the count of requests made to ImportRestApi.
func (c *APIGateway) ImportRestApiWithContext(ctx aws.Context, input *apigateway.ImportRestApiInput, opts ...request.Option) (*apigateway.RestApi, error) {
	c.inc("ImportRestApi")
	return c.svc.ImportRestApiWithContext(ctx, input, opts...)
}

// PutGatewayResponseRequest is a passthrough to the underlying PutGatewayResponseRequest.
// It will increment the count of requests made to PutGatewayResponse.
func (c *APIGateway) PutGatewayResponseRequest(input *apigateway.PutGatewayResponseInput) (req *request.Request, output *apigateway.UpdateGatewayResponseOutput) {
	c.inc("PutGatewayResponse")
	return c.svc.PutGatewayResponseRequest(input)
}

// PutGatewayResponse is a passthrough to the underlying PutGatewayResponse method.
// It will increment the count of requests made to PutGatewayResponse.
func (c *APIGateway) PutGatewayResponse(input *apigateway.PutGatewayResponseInput) (*apigateway.UpdateGatewayResponseOutput, error) {
	c.inc("PutGatewayResponse")
	return c.svc.PutGatewayResponse(input)
}

// PutGatewayResponseWithContext is a passthrough to the underlying PutGatewayResponseWithContext method.
// It will increment the count of requests made to PutGatewayResponse.
func (c *APIGateway) PutGatewayResponseWithContext(ctx aws.Context, input *apigateway.PutGatewayResponseInput, opts ...request.Option) (*apigateway.UpdateGatewayResponseOutput, error) {
	c.inc("PutGatewayResponse")
	return c.svc.PutGatewayResponseWithContext(ctx, input, opts...)
}

// PutIntegrationRequest is a passthrough to the underlying PutIntegrationRequest.
// It will increment the count of requests made to PutIntegration.
func (c *APIGateway) PutIntegrationRequest(input *apigateway.PutIntegrationInput) (req *request.Request, output *apigateway.Integration) {
	c.inc("PutIntegration")
	return c.svc.PutIntegrationRequest(input)
}

// PutIntegration is a passthrough to the underlying PutIntegration method.
// It will increment the count of requests made to PutIntegration.
func (c *APIGateway) PutIntegration(input *apigateway.PutIntegrationInput) (*apigateway.Integration, error) {
	c.inc("PutIntegration")
	return c.svc.PutIntegration(input)
}

// PutIntegrationWithContext is a passthrough to the underlying PutIntegrationWithContext method.
// It will increment the count of requests made to PutIntegration.
func (c *APIGateway) PutIntegrationWithContext(ctx aws.Context, input *apigateway.PutIntegrationInput, opts ...request.Option) (*apigateway.Integration, error) {
	c.inc("PutIntegration")
	return c.svc.PutIntegrationWithContext(ctx, input, opts...)
}

// PutIntegrationResponseRequest is a passthrough to the underlying PutIntegrationResponseRequest.
// It will increment the count of requests made to PutIntegrationResponse.
func (c *APIGateway) PutIntegrationResponseRequest(input *apigateway.PutIntegrationResponseInput) (req *request.Request, output *apigateway.IntegrationResponse) {
	c.inc("PutIntegrationResponse")
	return c.svc.PutIntegrationResponseRequest(input)
}

// PutIntegrationResponse is a passthrough to the underlying PutIntegrationResponse method.
// It will increment the count of requests made to PutIntegrationResponse.
func (c *APIGateway) PutIntegrationResponse(input *apigateway.PutIntegrationResponseInput) (*apigateway.IntegrationResponse, error) {
	c.inc("PutIntegrationResponse")
	return c.svc.PutIntegrationResponse(input)
}

// PutIntegrationResponseWithContext is a passthrough to the underlying PutIntegrationResponseWithContext method.
// It will increment the count of requests made to PutIntegrationResponse.
func (c *APIGateway) PutIntegrationResponseWithContext(ctx aws.Context, input *apigateway.PutIntegrationResponseInput, opts ...request.Option) (*apigateway.IntegrationResponse, error) {
	c.inc("PutIntegrationResponse")
	return c.svc.PutIntegrationResponseWithContext(ctx, input, opts...)
}

// PutMethodRequest is a passthrough to the underlying PutMethodRequest.
// It will increment the count of requests made to PutMethod.
func (c *APIGateway) PutMethodRequest(input *apigateway.PutMethodInput) (req *request.Request, output *apigateway.Method) {
	c.inc("PutMethod")
	return c.svc.PutMethodRequest(input)
}

// PutMethod is a passthrough to the underlying PutMethod method.
// It will increment the count of requests made to PutMethod.
func (c *APIGateway) PutMethod(input *apigateway.PutMethodInput) (*apigateway.Method, error) {
	c.inc("PutMethod")
	return c.svc.PutMethod(input)
}

// PutMethodWithContext is a passthrough to the underlying PutMethodWithContext method.
// It will increment the count of requests made to PutMethod.
func (c *APIGateway) PutMethodWithContext(ctx aws.Context, input *apigateway.PutMethodInput, opts ...request.Option) (*apigateway.Method, error) {
	c.inc("PutMethod")
	return c.svc.PutMethodWithContext(ctx, input, opts...)
}

// PutMethodResponseRequest is a passthrough to the underlying PutMethodResponseRequest.
// It will increment the count of requests made to PutMethodResponse.
func (c *APIGateway) PutMethodResponseRequest(input *apigateway.PutMethodResponseInput) (req *request.Request, output *apigateway.MethodResponse) {
	c.inc("PutMethodResponse")
	return c.svc.PutMethodResponseRequest(input)
}

// PutMethodResponse is a passthrough to the underlying PutMethodResponse method.
// It will increment the count of requests made to PutMethodResponse.
func (c *APIGateway) PutMethodResponse(input *apigateway.PutMethodResponseInput) (*apigateway.MethodResponse, error) {
	c.inc("PutMethodResponse")
	return c.svc.PutMethodResponse(input)
}

// PutMethodResponseWithContext is a passthrough to the underlying PutMethodResponseWithContext method.
// It will increment the count of requests made to PutMethodResponse.
func (c *APIGateway) PutMethodResponseWithContext(ctx aws.Context, input *apigateway.PutMethodResponseInput, opts ...request.Option) (*apigateway.MethodResponse, error) {
	c.inc("PutMethodResponse")
	return c.svc.PutMethodResponseWithContext(ctx, input, opts...)
}

// PutRestApiRequest is a passthrough to the underlying PutRestApiRequest.
// It will increment the count of requests made to PutRestApi.
func (c *APIGateway) PutRestApiRequest(input *apigateway.PutRestApiInput) (req *request.Request, output *apigateway.RestApi) {
	c.inc("PutRestApi")
	return c.svc.PutRestApiRequest(input)
}

// PutRestApi is a passthrough to the underlying PutRestApi method.
// It will increment the count of requests made to PutRestApi.
func (c *APIGateway) PutRestApi(input *apigateway.PutRestApiInput) (*apigateway.RestApi, error) {
	c.inc("PutRestApi")
	return c.svc.PutRestApi(input)
}

// PutRestApiWithContext is a passthrough to the underlying PutRestApiWithContext method.
// It will increment the count of requests made to PutRestApi.
func (c *APIGateway) PutRestApiWithContext(ctx aws.Context, input *apigateway.PutRestApiInput, opts ...request.Option) (*apigateway.RestApi, error) {
	c.inc("PutRestApi")
	return c.svc.PutRestApiWithContext(ctx, input, opts...)
}

// TestInvokeAuthorizerRequest is a passthrough to the underlying TestInvokeAuthorizerRequest.
// It will increment the count of requests made to TestInvokeAuthorizer.
func (c *APIGateway) TestInvokeAuthorizerRequest(input *apigateway.TestInvokeAuthorizerInput) (req *request.Request, output *apigateway.TestInvokeAuthorizerOutput) {
	c.inc("TestInvokeAuthorizer")
	return c.svc.TestInvokeAuthorizerRequest(input)
}

// TestInvokeAuthorizer is a passthrough to the underlying TestInvokeAuthorizer method.
// It will increment the count of requests made to TestInvokeAuthorizer.
func (c *APIGateway) TestInvokeAuthorizer(input *apigateway.TestInvokeAuthorizerInput) (*apigateway.TestInvokeAuthorizerOutput, error) {
	c.inc("TestInvokeAuthorizer")
	return c.svc.TestInvokeAuthorizer(input)
}

// TestInvokeAuthorizerWithContext is a passthrough to the underlying TestInvokeAuthorizerWithContext method.
// It will increment the count of requests made to TestInvokeAuthorizer.
func (c *APIGateway) TestInvokeAuthorizerWithContext(ctx aws.Context, input *apigateway.TestInvokeAuthorizerInput, opts ...request.Option) (*apigateway.TestInvokeAuthorizerOutput, error) {
	c.inc("TestInvokeAuthorizer")
	return c.svc.TestInvokeAuthorizerWithContext(ctx, input, opts...)
}

// TestInvokeMethodRequest is a passthrough to the underlying TestInvokeMethodRequest.
// It will increment the count of requests made to TestInvokeMethod.
func (c *APIGateway) TestInvokeMethodRequest(input *apigateway.TestInvokeMethodInput) (req *request.Request, output *apigateway.TestInvokeMethodOutput) {
	c.inc("TestInvokeMethod")
	return c.svc.TestInvokeMethodRequest(input)
}

// TestInvokeMethod is a passthrough to the underlying TestInvokeMethod method.
// It will increment the count of requests made to TestInvokeMethod.
func (c *APIGateway) TestInvokeMethod(input *apigateway.TestInvokeMethodInput) (*apigateway.TestInvokeMethodOutput, error) {
	c.inc("TestInvokeMethod")
	return c.svc.TestInvokeMethod(input)
}

// TestInvokeMethodWithContext is a passthrough to the underlying TestInvokeMethodWithContext method.
// It will increment the count of requests made to TestInvokeMethod.
func (c *APIGateway) TestInvokeMethodWithContext(ctx aws.Context, input *apigateway.TestInvokeMethodInput, opts ...request.Option) (*apigateway.TestInvokeMethodOutput, error) {
	c.inc("TestInvokeMethod")
	return c.svc.TestInvokeMethodWithContext(ctx, input, opts...)
}

// UpdateAccountRequest is a passthrough to the underlying UpdateAccountRequest.
// It will increment the count of requests made to UpdateAccount.
func (c *APIGateway) UpdateAccountRequest(input *apigateway.UpdateAccountInput) (req *request.Request, output *apigateway.Account) {
	c.inc("UpdateAccount")
	return c.svc.UpdateAccountRequest(input)
}

// UpdateAccount is a passthrough to the underlying UpdateAccount method.
// It will increment the count of requests made to UpdateAccount.
func (c *APIGateway) UpdateAccount(input *apigateway.UpdateAccountInput) (*apigateway.Account, error) {
	c.inc("UpdateAccount")
	return c.svc.UpdateAccount(input)
}

// UpdateAccountWithContext is a passthrough to the underlying UpdateAccountWithContext method.
// It will increment the count of requests made to UpdateAccount.
func (c *APIGateway) UpdateAccountWithContext(ctx aws.Context, input *apigateway.UpdateAccountInput, opts ...request.Option) (*apigateway.Account, error) {
	c.inc("UpdateAccount")
	return c.svc.UpdateAccountWithContext(ctx, input, opts...)
}

// UpdateApiKeyRequest is a passthrough to the underlying UpdateApiKeyRequest.
// It will increment the count of requests made to UpdateApiKey.
func (c *APIGateway) UpdateApiKeyRequest(input *apigateway.UpdateApiKeyInput) (req *request.Request, output *apigateway.ApiKey) {
	c.inc("UpdateApiKey")
	return c.svc.UpdateApiKeyRequest(input)
}

// UpdateApiKey is a passthrough to the underlying UpdateApiKey method.
// It will increment the count of requests made to UpdateApiKey.
func (c *APIGateway) UpdateApiKey(input *apigateway.UpdateApiKeyInput) (*apigateway.ApiKey, error) {
	c.inc("UpdateApiKey")
	return c.svc.UpdateApiKey(input)
}

// UpdateApiKeyWithContext is a passthrough to the underlying UpdateApiKeyWithContext method.
// It will increment the count of requests made to UpdateApiKey.
func (c *APIGateway) UpdateApiKeyWithContext(ctx aws.Context, input *apigateway.UpdateApiKeyInput, opts ...request.Option) (*apigateway.ApiKey, error) {
	c.inc("UpdateApiKey")
	return c.svc.UpdateApiKeyWithContext(ctx, input, opts...)
}

// UpdateAuthorizerRequest is a passthrough to the underlying UpdateAuthorizerRequest.
// It will increment the count of requests made to UpdateAuthorizer.
func (c *APIGateway) UpdateAuthorizerRequest(input *apigateway.UpdateAuthorizerInput) (req *request.Request, output *apigateway.Authorizer) {
	c.inc("UpdateAuthorizer")
	return c.svc.UpdateAuthorizerRequest(input)
}

// UpdateAuthorizer is a passthrough to the underlying UpdateAuthorizer method.
// It will increment the count of requests made to UpdateAuthorizer.
func (c *APIGateway) UpdateAuthorizer(input *apigateway.UpdateAuthorizerInput) (*apigateway.Authorizer, error) {
	c.inc("UpdateAuthorizer")
	return c.svc.UpdateAuthorizer(input)
}

// UpdateAuthorizerWithContext is a passthrough to the underlying UpdateAuthorizerWithContext method.
// It will increment the count of requests made to UpdateAuthorizer.
func (c *APIGateway) UpdateAuthorizerWithContext(ctx aws.Context, input *apigateway.UpdateAuthorizerInput, opts ...request.Option) (*apigateway.Authorizer, error) {
	c.inc("UpdateAuthorizer")
	return c.svc.UpdateAuthorizerWithContext(ctx, input, opts...)
}

// UpdateBasePathMappingRequest is a passthrough to the underlying UpdateBasePathMappingRequest.
// It will increment the count of requests made to UpdateBasePathMapping.
func (c *APIGateway) UpdateBasePathMappingRequest(input *apigateway.UpdateBasePathMappingInput) (req *request.Request, output *apigateway.BasePathMapping) {
	c.inc("UpdateBasePathMapping")
	return c.svc.UpdateBasePathMappingRequest(input)
}

// UpdateBasePathMapping is a passthrough to the underlying UpdateBasePathMapping method.
// It will increment the count of requests made to UpdateBasePathMapping.
func (c *APIGateway) UpdateBasePathMapping(input *apigateway.UpdateBasePathMappingInput) (*apigateway.BasePathMapping, error) {
	c.inc("UpdateBasePathMapping")
	return c.svc.UpdateBasePathMapping(input)
}

// UpdateBasePathMappingWithContext is a passthrough to the underlying UpdateBasePathMappingWithContext method.
// It will increment the count of requests made to UpdateBasePathMapping.
func (c *APIGateway) UpdateBasePathMappingWithContext(ctx aws.Context, input *apigateway.UpdateBasePathMappingInput, opts ...request.Option) (*apigateway.BasePathMapping, error) {
	c.inc("UpdateBasePathMapping")
	return c.svc.UpdateBasePathMappingWithContext(ctx, input, opts...)
}

// UpdateClientCertificateRequest is a passthrough to the underlying UpdateClientCertificateRequest.
// It will increment the count of requests made to UpdateClientCertificate.
func (c *APIGateway) UpdateClientCertificateRequest(input *apigateway.UpdateClientCertificateInput) (req *request.Request, output *apigateway.ClientCertificate) {
	c.inc("UpdateClientCertificate")
	return c.svc.UpdateClientCertificateRequest(input)
}

// UpdateClientCertificate is a passthrough to the underlying UpdateClientCertificate method.
// It will increment the count of requests made to UpdateClientCertificate.
func (c *APIGateway) UpdateClientCertificate(input *apigateway.UpdateClientCertificateInput) (*apigateway.ClientCertificate, error) {
	c.inc("UpdateClientCertificate")
	return c.svc.UpdateClientCertificate(input)
}

// UpdateClientCertificateWithContext is a passthrough to the underlying UpdateClientCertificateWithContext method.
// It will increment the count of requests made to UpdateClientCertificate.
func (c *APIGateway) UpdateClientCertificateWithContext(ctx aws.Context, input *apigateway.UpdateClientCertificateInput, opts ...request.Option) (*apigateway.ClientCertificate, error) {
	c.inc("UpdateClientCertificate")
	return c.svc.UpdateClientCertificateWithContext(ctx, input, opts...)
}

// UpdateDeploymentRequest is a passthrough to the underlying UpdateDeploymentRequest.
// It will increment the count of requests made to UpdateDeployment.
func (c *APIGateway) UpdateDeploymentRequest(input *apigateway.UpdateDeploymentInput) (req *request.Request, output *apigateway.Deployment) {
	c.inc("UpdateDeployment")
	return c.svc.UpdateDeploymentRequest(input)
}

// UpdateDeployment is a passthrough to the underlying UpdateDeployment method.
// It will increment the count of requests made to UpdateDeployment.
func (c *APIGateway) UpdateDeployment(input *apigateway.UpdateDeploymentInput) (*apigateway.Deployment, error) {
	c.inc("UpdateDeployment")
	return c.svc.UpdateDeployment(input)
}

// UpdateDeploymentWithContext is a passthrough to the underlying UpdateDeploymentWithContext method.
// It will increment the count of requests made to UpdateDeployment.
func (c *APIGateway) UpdateDeploymentWithContext(ctx aws.Context, input *apigateway.UpdateDeploymentInput, opts ...request.Option) (*apigateway.Deployment, error) {
	c.inc("UpdateDeployment")
	return c.svc.UpdateDeploymentWithContext(ctx, input, opts...)
}

// UpdateDocumentationPartRequest is a passthrough to the underlying UpdateDocumentationPartRequest.
// It will increment the count of requests made to UpdateDocumentationPart.
func (c *APIGateway) UpdateDocumentationPartRequest(input *apigateway.UpdateDocumentationPartInput) (req *request.Request, output *apigateway.DocumentationPart) {
	c.inc("UpdateDocumentationPart")
	return c.svc.UpdateDocumentationPartRequest(input)
}

// UpdateDocumentationPart is a passthrough to the underlying UpdateDocumentationPart method.
// It will increment the count of requests made to UpdateDocumentationPart.
func (c *APIGateway) UpdateDocumentationPart(input *apigateway.UpdateDocumentationPartInput) (*apigateway.DocumentationPart, error) {
	c.inc("UpdateDocumentationPart")
	return c.svc.UpdateDocumentationPart(input)
}

// UpdateDocumentationPartWithContext is a passthrough to the underlying UpdateDocumentationPartWithContext method.
// It will increment the count of requests made to UpdateDocumentationPart.
func (c *APIGateway) UpdateDocumentationPartWithContext(ctx aws.Context, input *apigateway.UpdateDocumentationPartInput, opts ...request.Option) (*apigateway.DocumentationPart, error) {
	c.inc("UpdateDocumentationPart")
	return c.svc.UpdateDocumentationPartWithContext(ctx, input, opts...)
}

// UpdateDocumentationVersionRequest is a passthrough to the underlying UpdateDocumentationVersionRequest.
// It will increment the count of requests made to UpdateDocumentationVersion.
func (c *APIGateway) UpdateDocumentationVersionRequest(input *apigateway.UpdateDocumentationVersionInput) (req *request.Request, output *apigateway.DocumentationVersion) {
	c.inc("UpdateDocumentationVersion")
	return c.svc.UpdateDocumentationVersionRequest(input)
}

// UpdateDocumentationVersion is a passthrough to the underlying UpdateDocumentationVersion method.
// It will increment the count of requests made to UpdateDocumentationVersion.
func (c *APIGateway) UpdateDocumentationVersion(input *apigateway.UpdateDocumentationVersionInput) (*apigateway.DocumentationVersion, error) {
	c.inc("UpdateDocumentationVersion")
	return c.svc.UpdateDocumentationVersion(input)
}

// UpdateDocumentationVersionWithContext is a passthrough to the underlying UpdateDocumentationVersionWithContext method.
// It will increment the count of requests made to UpdateDocumentationVersion.
func (c *APIGateway) UpdateDocumentationVersionWithContext(ctx aws.Context, input *apigateway.UpdateDocumentationVersionInput, opts ...request.Option) (*apigateway.DocumentationVersion, error) {
	c.inc("UpdateDocumentationVersion")
	return c.svc.UpdateDocumentationVersionWithContext(ctx, input, opts...)
}

// UpdateDomainNameRequest is a passthrough to the underlying UpdateDomainNameRequest.
// It will increment the count of requests made to UpdateDomainName.
func (c *APIGateway) UpdateDomainNameRequest(input *apigateway.UpdateDomainNameInput) (req *request.Request, output *apigateway.DomainName) {
	c.inc("UpdateDomainName")
	return c.svc.UpdateDomainNameRequest(input)
}

// UpdateDomainName is a passthrough to the underlying UpdateDomainName method.
// It will increment the count of requests made to UpdateDomainName.
func (c *APIGateway) UpdateDomainName(input *apigateway.UpdateDomainNameInput) (*apigateway.DomainName, error) {
	c.inc("UpdateDomainName")
	return c.svc.UpdateDomainName(input)
}

// UpdateDomainNameWithContext is a passthrough to the underlying UpdateDomainNameWithContext method.
// It will increment the count of requests made to UpdateDomainName.
func (c *APIGateway) UpdateDomainNameWithContext(ctx aws.Context, input *apigateway.UpdateDomainNameInput, opts ...request.Option) (*apigateway.DomainName, error) {
	c.inc("UpdateDomainName")
	return c.svc.UpdateDomainNameWithContext(ctx, input, opts...)
}

// UpdateGatewayResponseRequest is a passthrough to the underlying UpdateGatewayResponseRequest.
// It will increment the count of requests made to UpdateGatewayResponse.
func (c *APIGateway) UpdateGatewayResponseRequest(input *apigateway.UpdateGatewayResponseInput) (req *request.Request, output *apigateway.UpdateGatewayResponseOutput) {
	c.inc("UpdateGatewayResponse")
	return c.svc.UpdateGatewayResponseRequest(input)
}

// UpdateGatewayResponse is a passthrough to the underlying UpdateGatewayResponse method.
// It will increment the count of requests made to UpdateGatewayResponse.
func (c *APIGateway) UpdateGatewayResponse(input *apigateway.UpdateGatewayResponseInput) (*apigateway.UpdateGatewayResponseOutput, error) {
	c.inc("UpdateGatewayResponse")
	return c.svc.UpdateGatewayResponse(input)
}

// UpdateGatewayResponseWithContext is a passthrough to the underlying UpdateGatewayResponseWithContext method.
// It will increment the count of requests made to UpdateGatewayResponse.
func (c *APIGateway) UpdateGatewayResponseWithContext(ctx aws.Context, input *apigateway.UpdateGatewayResponseInput, opts ...request.Option) (*apigateway.UpdateGatewayResponseOutput, error) {
	c.inc("UpdateGatewayResponse")
	return c.svc.UpdateGatewayResponseWithContext(ctx, input, opts...)
}

// UpdateIntegrationRequest is a passthrough to the underlying UpdateIntegrationRequest.
// It will increment the count of requests made to UpdateIntegration.
func (c *APIGateway) UpdateIntegrationRequest(input *apigateway.UpdateIntegrationInput) (req *request.Request, output *apigateway.Integration) {
	c.inc("UpdateIntegration")
	return c.svc.UpdateIntegrationRequest(input)
}

// UpdateIntegration is a passthrough to the underlying UpdateIntegration method.
// It will increment the count of requests made to UpdateIntegration.
func (c *APIGateway) UpdateIntegration(input *apigateway.UpdateIntegrationInput) (*apigateway.Integration, error) {
	c.inc("UpdateIntegration")
	return c.svc.UpdateIntegration(input)
}

// UpdateIntegrationWithContext is a passthrough to the underlying UpdateIntegrationWithContext method.
// It will increment the count of requests made to UpdateIntegration.
func (c *APIGateway) UpdateIntegrationWithContext(ctx aws.Context, input *apigateway.UpdateIntegrationInput, opts ...request.Option) (*apigateway.Integration, error) {
	c.inc("UpdateIntegration")
	return c.svc.UpdateIntegrationWithContext(ctx, input, opts...)
}

// UpdateIntegrationResponseRequest is a passthrough to the underlying UpdateIntegrationResponseRequest.
// It will increment the count of requests made to UpdateIntegrationResponse.
func (c *APIGateway) UpdateIntegrationResponseRequest(input *apigateway.UpdateIntegrationResponseInput) (req *request.Request, output *apigateway.IntegrationResponse) {
	c.inc("UpdateIntegrationResponse")
	return c.svc.UpdateIntegrationResponseRequest(input)
}

// UpdateIntegrationResponse is a passthrough to the underlying UpdateIntegrationResponse method.
// It will increment the count of requests made to UpdateIntegrationResponse.
func (c *APIGateway) UpdateIntegrationResponse(input *apigateway.UpdateIntegrationResponseInput) (*apigateway.IntegrationResponse, error) {
	c.inc("UpdateIntegrationResponse")
	return c.svc.UpdateIntegrationResponse(input)
}

// UpdateIntegrationResponseWithContext is a passthrough to the underlying UpdateIntegrationResponseWithContext method.
// It will increment the count of requests made to UpdateIntegrationResponse.
func (c *APIGateway) UpdateIntegrationResponseWithContext(ctx aws.Context, input *apigateway.UpdateIntegrationResponseInput, opts ...request.Option) (*apigateway.IntegrationResponse, error) {
	c.inc("UpdateIntegrationResponse")
	return c.svc.UpdateIntegrationResponseWithContext(ctx, input, opts...)
}

// UpdateMethodRequest is a passthrough to the underlying UpdateMethodRequest.
// It will increment the count of requests made to UpdateMethod.
func (c *APIGateway) UpdateMethodRequest(input *apigateway.UpdateMethodInput) (req *request.Request, output *apigateway.Method) {
	c.inc("UpdateMethod")
	return c.svc.UpdateMethodRequest(input)
}

// UpdateMethod is a passthrough to the underlying UpdateMethod method.
// It will increment the count of requests made to UpdateMethod.
func (c *APIGateway) UpdateMethod(input *apigateway.UpdateMethodInput) (*apigateway.Method, error) {
	c.inc("UpdateMethod")
	return c.svc.UpdateMethod(input)
}

// UpdateMethodWithContext is a passthrough to the underlying UpdateMethodWithContext method.
// It will increment the count of requests made to UpdateMethod.
func (c *APIGateway) UpdateMethodWithContext(ctx aws.Context, input *apigateway.UpdateMethodInput, opts ...request.Option) (*apigateway.Method, error) {
	c.inc("UpdateMethod")
	return c.svc.UpdateMethodWithContext(ctx, input, opts...)
}

// UpdateMethodResponseRequest is a passthrough to the underlying UpdateMethodResponseRequest.
// It will increment the count of requests made to UpdateMethodResponse.
func (c *APIGateway) UpdateMethodResponseRequest(input *apigateway.UpdateMethodResponseInput) (req *request.Request, output *apigateway.MethodResponse) {
	c.inc("UpdateMethodResponse")
	return c.svc.UpdateMethodResponseRequest(input)
}

// UpdateMethodResponse is a passthrough to the underlying UpdateMethodResponse method.
// It will increment the count of requests made to UpdateMethodResponse.
func (c *APIGateway) UpdateMethodResponse(input *apigateway.UpdateMethodResponseInput) (*apigateway.MethodResponse, error) {
	c.inc("UpdateMethodResponse")
	return c.svc.UpdateMethodResponse(input)
}

// UpdateMethodResponseWithContext is a passthrough to the underlying UpdateMethodResponseWithContext method.
// It will increment the count of requests made to UpdateMethodResponse.
func (c *APIGateway) UpdateMethodResponseWithContext(ctx aws.Context, input *apigateway.UpdateMethodResponseInput, opts ...request.Option) (*apigateway.MethodResponse, error) {
	c.inc("UpdateMethodResponse")
	return c.svc.UpdateMethodResponseWithContext(ctx, input, opts...)
}

// UpdateModelRequest is a passthrough to the underlying UpdateModelRequest.
// It will increment the count of requests made to UpdateModel.
func (c *APIGateway) UpdateModelRequest(input *apigateway.UpdateModelInput) (req *request.Request, output *apigateway.Model) {
	c.inc("UpdateModel")
	return c.svc.UpdateModelRequest(input)
}

// UpdateModel is a passthrough to the underlying UpdateModel method.
// It will increment the count of requests made to UpdateModel.
func (c *APIGateway) UpdateModel(input *apigateway.UpdateModelInput) (*apigateway.Model, error) {
	c.inc("UpdateModel")
	return c.svc.UpdateModel(input)
}

// UpdateModelWithContext is a passthrough to the underlying UpdateModelWithContext method.
// It will increment the count of requests made to UpdateModel.
func (c *APIGateway) UpdateModelWithContext(ctx aws.Context, input *apigateway.UpdateModelInput, opts ...request.Option) (*apigateway.Model, error) {
	c.inc("UpdateModel")
	return c.svc.UpdateModelWithContext(ctx, input, opts...)
}

// UpdateRequestValidatorRequest is a passthrough to the underlying UpdateRequestValidatorRequest.
// It will increment the count of requests made to UpdateRequestValidator.
func (c *APIGateway) UpdateRequestValidatorRequest(input *apigateway.UpdateRequestValidatorInput) (req *request.Request, output *apigateway.UpdateRequestValidatorOutput) {
	c.inc("UpdateRequestValidator")
	return c.svc.UpdateRequestValidatorRequest(input)
}

// UpdateRequestValidator is a passthrough to the underlying UpdateRequestValidator method.
// It will increment the count of requests made to UpdateRequestValidator.
func (c *APIGateway) UpdateRequestValidator(input *apigateway.UpdateRequestValidatorInput) (*apigateway.UpdateRequestValidatorOutput, error) {
	c.inc("UpdateRequestValidator")
	return c.svc.UpdateRequestValidator(input)
}

// UpdateRequestValidatorWithContext is a passthrough to the underlying UpdateRequestValidatorWithContext method.
// It will increment the count of requests made to UpdateRequestValidator.
func (c *APIGateway) UpdateRequestValidatorWithContext(ctx aws.Context, input *apigateway.UpdateRequestValidatorInput, opts ...request.Option) (*apigateway.UpdateRequestValidatorOutput, error) {
	c.inc("UpdateRequestValidator")
	return c.svc.UpdateRequestValidatorWithContext(ctx, input, opts...)
}

// UpdateResourceRequest is a passthrough to the underlying UpdateResourceRequest.
// It will increment the count of requests made to UpdateResource.
func (c *APIGateway) UpdateResourceRequest(input *apigateway.UpdateResourceInput) (req *request.Request, output *apigateway.Resource) {
	c.inc("UpdateResource")
	return c.svc.UpdateResourceRequest(input)
}

// UpdateResource is a passthrough to the underlying UpdateResource method.
// It will increment the count of requests made to UpdateResource.
func (c *APIGateway) UpdateResource(input *apigateway.UpdateResourceInput) (*apigateway.Resource, error) {
	c.inc("UpdateResource")
	return c.svc.UpdateResource(input)
}

// UpdateResourceWithContext is a passthrough to the underlying UpdateResourceWithContext method.
// It will increment the count of requests made to UpdateResource.
func (c *APIGateway) UpdateResourceWithContext(ctx aws.Context, input *apigateway.UpdateResourceInput, opts ...request.Option) (*apigateway.Resource, error) {
	c.inc("UpdateResource")
	return c.svc.UpdateResourceWithContext(ctx, input, opts...)
}

// UpdateRestApiRequest is a passthrough to the underlying UpdateRestApiRequest.
// It will increment the count of requests made to UpdateRestApi.
func (c *APIGateway) UpdateRestApiRequest(input *apigateway.UpdateRestApiInput) (req *request.Request, output *apigateway.RestApi) {
	c.inc("UpdateRestApi")
	return c.svc.UpdateRestApiRequest(input)
}

// UpdateRestApi is a passthrough to the underlying UpdateRestApi method.
// It will increment the count of requests made to UpdateRestApi.
func (c *APIGateway) UpdateRestApi(input *apigateway.UpdateRestApiInput) (*apigateway.RestApi, error) {
	c.inc("UpdateRestApi")
	return c.svc.UpdateRestApi(input)
}

// UpdateRestApiWithContext is a passthrough to the underlying UpdateRestApiWithContext method.
// It will increment the count of requests made to UpdateRestApi.
func (c *APIGateway) UpdateRestApiWithContext(ctx aws.Context, input *apigateway.UpdateRestApiInput, opts ...request.Option) (*apigateway.RestApi, error) {
	c.inc("UpdateRestApi")
	return c.svc.UpdateRestApiWithContext(ctx, input, opts...)
}

// UpdateStageRequest is a passthrough to the underlying UpdateStageRequest.
// It will increment the count of requests made to UpdateStage.
func (c *APIGateway) UpdateStageRequest(input *apigateway.UpdateStageInput) (req *request.Request, output *apigateway.Stage) {
	c.inc("UpdateStage")
	return c.svc.UpdateStageRequest(input)
}

// UpdateStage is a passthrough to the underlying UpdateStage method.
// It will increment the count of requests made to UpdateStage.
func (c *APIGateway) UpdateStage(input *apigateway.UpdateStageInput) (*apigateway.Stage, error) {
	c.inc("UpdateStage")
	return c.svc.UpdateStage(input)
}

// UpdateStageWithContext is a passthrough to the underlying UpdateStageWithContext method.
// It will increment the count of requests made to UpdateStage.
func (c *APIGateway) UpdateStageWithContext(ctx aws.Context, input *apigateway.UpdateStageInput, opts ...request.Option) (*apigateway.Stage, error) {
	c.inc("UpdateStage")
	return c.svc.UpdateStageWithContext(ctx, input, opts...)
}

// UpdateUsageRequest is a passthrough to the underlying UpdateUsageRequest.
// It will increment the count of requests made to UpdateUsage.
func (c *APIGateway) UpdateUsageRequest(input *apigateway.UpdateUsageInput) (req *request.Request, output *apigateway.Usage) {
	c.inc("UpdateUsage")
	return c.svc.UpdateUsageRequest(input)
}

// UpdateUsage is a passthrough to the underlying UpdateUsage method.
// It will increment the count of requests made to UpdateUsage.
func (c *APIGateway) UpdateUsage(input *apigateway.UpdateUsageInput) (*apigateway.Usage, error) {
	c.inc("UpdateUsage")
	return c.svc.UpdateUsage(input)
}

// UpdateUsageWithContext is a passthrough to the underlying UpdateUsageWithContext method.
// It will increment the count of requests made to UpdateUsage.
func (c *APIGateway) UpdateUsageWithContext(ctx aws.Context, input *apigateway.UpdateUsageInput, opts ...request.Option) (*apigateway.Usage, error) {
	c.inc("UpdateUsage")
	return c.svc.UpdateUsageWithContext(ctx, input, opts...)
}

// UpdateUsagePlanRequest is a passthrough to the underlying UpdateUsagePlanRequest.
// It will increment the count of requests made to UpdateUsagePlan.
func (c *APIGateway) UpdateUsagePlanRequest(input *apigateway.UpdateUsagePlanInput) (req *request.Request, output *apigateway.UsagePlan) {
	c.inc("UpdateUsagePlan")
	return c.svc.UpdateUsagePlanRequest(input)
}

// UpdateUsagePlan is a passthrough to the underlying UpdateUsagePlan method.
// It will increment the count of requests made to UpdateUsagePlan.
func (c *APIGateway) UpdateUsagePlan(input *apigateway.UpdateUsagePlanInput) (*apigateway.UsagePlan, error) {
	c.inc("UpdateUsagePlan")
	return c.svc.UpdateUsagePlan(input)
}

// UpdateUsagePlanWithContext is a passthrough to the underlying UpdateUsagePlanWithContext method.
// It will increment the count of requests made to UpdateUsagePlan.
func (c *APIGateway) UpdateUsagePlanWithContext(ctx aws.Context, input *apigateway.UpdateUsagePlanInput, opts ...request.Option) (*apigateway.UsagePlan, error) {
	c.inc("UpdateUsagePlan")
	return c.svc.UpdateUsagePlanWithContext(ctx, input, opts...)
}
